[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( 2 ) ( 3 )') == '5'\nassert solution('6\\n( ( 2 3 ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\", \"Test case 1 failed.\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\", \"Test case 2 failed.\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\", \"Test case 3 failed.\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\", \"Test case 4 failed.\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\", \"Test case 5 failed.\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(int(input())), \"Test failed\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5'\nassert solution('8 ( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4 ( 12 3 )') == '36'\nassert solution('6 ( 2 ) ( 3 )') == '5'\nassert solution('6 ( ( 2 3 ) )') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()} and output: {output}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Your output goes here', 'The code you provided is incorrect.'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3\") == 5\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == 9\nassert solution(\"4\\n( 12 3 )\") == 36\nassert solution(\"6\\n( 2 ) ( 3 )\") == 5"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"The output is incorrect.\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"The output is incorrect.\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"The output is incorrect.\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"The output is incorrect.\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\", \"Solution should return 0 for input '0'.\"\nassert solution(\"009990001\") == \"3\", \"Solution should return 3 for input '009990001'.\"\nassert solution(\"29998\") == \"5\", \"Solution should return 5 for input '29998'.\"\nassert solution(\"610\") == \"4\", \"Solution should return 4 for input '610'.\"\nassert solution(\"981\") == \"2\", \"Solution should return 2 for input '981'.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Solution 1 failed\"\nassert solution(\"009990001\") == \"3\\n\", \"Solution 2 failed\"\nassert solution(\"29998\") == \"5\\n\", \"Solution 3 failed\"\nassert solution(\"610\") == \"4\\n\", \"Solution 4 failed\"\nassert solution(\"981\") == \"2\\n\", \"Solution 5 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == 0, \"The function should return 0\"\nassert solution(\"009990001\") == 3, \"The function should return 3\"\nassert solution(\"29998\") == 5, \"The function should return 5\"\nassert solution(\"610\") == 4, \"The function should return 4\"\nassert solution(\"981\") == 2, \"The function should return 2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution '{solution(input())}' should be '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"seems legit\", \"Solution should return'seems legit'\"\nassert solution() == \"insufficient service\", \"Solution should return 'insufficient service'\"\nassert solution() == \"tampered odometer\", \"Solution should return 'tampered odometer'\"\n\nfrom typing import List"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: '{expected}', Received: '{solution(input())}'\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"seems legit\"\nassert solution(sample_input2) == \"insufficient service\"\nassert solution(sample_input3) == \"tampered odometer\"\nassert solution(sample_input4) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() =='seems legit'\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tampered odometer\", \"Test failed\"\nassert solution() == \"seems legit\", \"Test failed\"\nassert solution() == \"insufficient service\", \"Test failed\"\nassert solution() == \"tamper"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit\\n'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service\\n'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'tampered odometer\\n'\nassert solution('2\\n2013 1 0\\n2013 2 0') =='seems legit\\n'\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"2\"\nassert solution(sample_input_3) == \"2\"\nassert solution(sample_input_4) == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3\\n'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2\\n'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2\\n'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n') == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"output.txt\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n\"\"\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\") == \"3\"\nassert solution(\"Sample Input 2\") == \"2\"\nassert solution(\"Sample Input 3\") == \"2\"\nassert solution(\"Sample Input 4\") == \"4\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\n    \"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\n    \"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"IMPOSSIBLE\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == solution()"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nIMPOSSIBLE\") == \"IMPOSSIBLE\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nIMPOSSIBLE\") == \"IMPOSSIBLE\"\nassert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1: 2\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2: 3\") == \"3\"\nassert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 3: IMPOSSIBLE\") == \"IMPOSSIBLE\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 4: IMPOSSIBLE\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '2\\n'\nassert solution(sample_input_2) == '3\\n'\nassert solution(sample_input_3) == 'IMPOSSIBLE\\n'\nassert solution(sample_input_4) == 'IMPOSSIBLE\\n'\n\nfrom typing import List"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nIMPOSSIBLE\\n') == '3'"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1: Incorrect solution for sample input 1.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2: Incorrect solution for sample input 2.\"\nassert solution(\"PRIME\") == \"5\", \"Test 3: Incorrect solution for sample input 3.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4: Incorrect solution for sample input 4.\"\n\nfrom typing import List"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected output: 6, actual output: \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected output: 1, actual output: \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Expected output: 5, actual output: \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected output: 6, actual output: \" + solution(\"BABBABABBABBA\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Error: Test 1 failed\"\nassert solution(\"GGGGGGGGG\") == 1, \"Error: Test 2 failed\"\nassert solution(\"PRIME\") == 5, \"Error: Test 3 failed\"\nassert solution(\"BABBABABBABBA\") == 6, \"Error: Test 4 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Output: \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Output: \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Output: \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Output: \" + solution(\"BABBABABBABBA\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Solution 1\"\nassert solution(\"GGGGGGGGG\") == 1, \"Solution 2\"\nassert solution(\"PRIME\") == 5, \"Solution 3\"\nassert solution(\"BABBABABBABBA\") == 6, \"Solution 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Error: Weight should be 6, but is \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Error: Weight should be 1, but is \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Error: Weight should be 5, but is \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Error: Weight should be 6, but is \" + solution(\"BABBABABBABBA\")\n\nfrom typing import List"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test case 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test case 2\"\nassert solution(\"PRIME\") == \"5\", \"Test case 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test case 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\", \"Test case 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\", \"Test case 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\", \"Test case 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"Test case 4\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"The solution should output 0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"The solution should output 1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"The solution should output 0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"The solution should output 0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == 0\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == 1\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == 0\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == 0"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == 0, \"Incorrect output\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == 1, \"Incorrect output\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == 0, \"Incorrect output\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == 0, \"Incorrect output\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Input 1 incorrect.\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Input 2 incorrect.\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Input 3 incorrect.\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Input 4 incorrect.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE') == '0', \"Solution 1 does not work as expected.\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1', \"Solution 2 does not work as expected.\"\nassert solution('I 1 X\\nD 1\\nE\\nE') == '0', \"Solution 3 does not work as expected.\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0', \"Solution 4 does not work as expected.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test case failed. Please check the input and output.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\\nSample Input 1\\n\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\\nSample Input 2\\n\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\\nSample Input 3\\n\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\\nSample Input 4\\n\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == expected_output, f\"Test case failed. Expected output: {expected_output}, got {solution(solution_input)}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"4 0 1 0 0 0\"\"\") == \"300\"\nassert solution( \"\"\"5 0 1 0 1 0\"\"\") == \"1900\"\nassert solution( \"\"\"6 0 1 1 0 0\"\"\") == \"2300\"\nassert solution( \"\"\"10 399 0 0 0 0\"\"\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"The maximum number of distinct ranks is not 2.\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\"\nassert solution(input_3) == output_3, \"Test 3 failed\"\nassert solution(input_4) == output_4, \"Test 4 failed\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 10\n1 12\n1 13\"\"\") == \"2\"\nassert solution(\"\"\"2 10\n1 5\n1 12\"\"\") == \"2\"\nassert solution(\"\"\"2 10\n1 5\n1 4\"\"\") == \"2\"\n\nsolution = lambda stdin: input()"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"28\"\nassert solution(str(input())) == \"36.2842712475\"\nassert solution(str(input())) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == 28.0\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == 36.2842712475\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == 28.970562748\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == 32.0\nassert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == 28.0\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == 36.2842712475\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == 28.970562748\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == 32.0\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '32', 'Test failed'\nassert solution(6) == '28.970562748', 'Test failed'\nassert solution(8) == '32', 'Test failed'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == 28\n\nassert solution(\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == 36.2842712475\n\nassert solution(\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == 28.970562748\n\nassert solution(\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(r\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(r\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(r\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == \"28\"\nassert solution(input2) == \"36.2842712475\"\nassert solution(input3) == \"28.970562748\"\nassert solution(input4) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) == solution(solution) =="
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    1 3 9 5\n    2 2 6 8\n    4 8 9 3\n    ''') == '3'\n\nassert solution('''\n    3\n    5 2 7 10\n    7 4 4 10\n    2 4 10 8\n    ''') == '1'\n\nassert solution('''\n    3\n    2 1 6 5\n    2 5 5 4\n    5 1 7 7\n    ''') == '1'\n\nassert solution('''\n    2\n        -1 -2 -1 -1\n        -1 2 -1 -1\n    ''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\nfor _ in range(test_cases):\n    x0, y0, x1, y1 = list(map(int, input().split()))\n    n = 1\n    points = [x0, y0, x1, y1]\n    while n < len(points):\n        if points[n] == points[(n + 1) % len(points)]:\n            n += 1\n        else:\n            break\n    if n < len(points):\n        print(n)\n    else:\n        print(-1)"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\") == \"3\\n\"\nassert solution(\"Sample Input 2\") == \"1\\n\"\nassert solution(\"Sample Input 3\") == \"1\\n\"\nassert solution(\"Sample Input 4\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1\\n1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output: 1\\n'\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10, \"Expected Output 1: 10, Actual Output: \" + solution(10)\nassert solution(55) == 55, \"Expected Output 2: 55, Actual Output: \" + solution(55)\nassert solution(101) == -1, \"Expected Output 3: -1, Actual Output: \" + solution(101)\nassert solution(1234321) == 94708, \"Expected Output 4: 94708, Actual Output: \" + solution(1234321)"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0 0 3\\n1 2 0 0 5\\n1 2 0 0 4\\n1 2 0 0 6\\n\") == \"6\\n2\\n4\\n0\"\nassert solution(\"1 2 0 0 5\\n1 2 0 0 4\\n\") == \"2\\n\"\nassert solution(\"1 2 0 0 4\\n\") == \"4\\n\"\nassert solution(\"1 2 0 0 6\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1000000007\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\", \"Output should be 0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output: The number of length-N sequences of moves modulo 1000000007 is 2.\\n', \"The solution is incorrect.\"\nprint('The solution is correct.')"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 0 0 0 3') == 6\nassert solution('1 2 0 0 5') == 2\nassert solution('1 2 0 0 4') == 4\nassert solution('1 2 0 0 6') == 0\n\nfrom typing import List"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"0.35219323 -3.87233553\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0.5 -5.301 3.098') == '(-1.26167861, 3.88425357)'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\\n\") == \"0.00000000 0.00000000\\n\"\nassert solution(\"0.5 8 8\\n\") == \"4.00000000 -4.00000000\\n\"\nassert solution(\"1 8 8\\n\") == \"5.00000000 -5.00000000\\n\"\nassert solution(\"0.5 -8 8\\n\") == \"2.00000000 7.00000000\\n\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''0.5 -5.301 3.098''') == '''-1.26167861 3.88425357'''\nassert solution('''0.5 8 8''') == '''9.21068947 2.56226688'''\nassert solution('''1 8 8''') == '''6.22375968 -0.31921472'''\nassert solution('''0.5 -8 8''') == '''-4.36385220 9.46891588'''"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"The given output is incorrect. Please check the given inputs and the implementation.\" for stdin, output in test_data:\n    pass"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == (\"-1.26167861\", \"3.88425357\")\nassert solution(\"0.5 8 8\") == (\"9.21068947\", \"2.56226688\")\nassert solution(\"1 8 8\") == (\"6.22375968\", \"-0.31921472\")\nassert solution(\"0.5 -8 8\") == (\"-4.36385220\", \"9.46891588\")\n\nimport math"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2\\n'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1\\n'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2\\n'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1\\n'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1\\n2 2\\n1 2\\nSample Output 1\\n1\\n2\\n\") == \"1\\n2\\n\"\nassert solution(\"Sample Input 2\\n3 3\\n1 2\\n2 3\\n3 1\\nSample Output 2\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"Sample Input 3\\n4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\nSample Output 3\\n0\\n\") == \"0\\n\"\nassert solution(\"Sample Input 4\\n4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\nSample Output 4\\n2\\n4\\n5\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n1\n2\n\"\"\"\n\nassert solution() == \"\"\"\n1\n1\n\"\"\"\n\nassert solution() == \"\"\"\n0\n\"\"\"\n\nassert solution() == \"\"\"\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nfor input, output in test_cases:\n    assert solution(input) == output"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == \"2\\n4\\n5\\n\"\nassert solution(\"5 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"11\\n\"\n\nassert solution(\"\"\"\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 2\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n\"\"\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"11\"\nassert solution(sample_input_2) == \"infinity\"\nassert solution(sample_input_3) == \"2\"\nassert solution(sample_input_4) == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11\\n'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity\\n'\nassert solution('2 1 0 1\\n0 1 2') == '2\\n'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1') == 'infinity\\n'\nassert solution('1 1 0 1\\n0 1 1\\n0 1 1\\n1 1 1') == '3\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\nassert solution(\"4 3 1 1\\n1 2 2\\n2 3 2\\n2 3 2\\n1 2 2\\n\") == \"infinity\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 1 2 1\") == \"6\\n\"\nassert solution(\"3 3 1 1\") == \"0\\n\"\nassert solution(\"3 2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\", \"Test case 1 not passing\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\", \"Test case 2 not passing\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\", \"Test case 3 not passing\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\", \"Test case 4 not passing\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\\n\"\nassert solution(\"1000000 5\") == \"49401\\n\"\nassert solution(\"1000000 16\") == \"20\\n\"\nassert solution(\"9000000000000000000 62\") == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '468559'\nassert solution(open('input.txt', 'r').read()) == '49401'\nassert solution(open('input.txt', 'r').read()) == '20'\nassert solution(open('input.txt', 'r').read()) == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"49401\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\") == \"468559\\n\"\nassert solution(\"1000000 5\") == \"49401\\n\"\nassert solution(\"1000000 16\") == \"20\\n\"\nassert solution(\"9000000000000000000 62\") == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\\n\") == \"468559\\n\"\nassert solution(\"1000000 5\\n\") == \"49401\\n\"\nassert solution(\"1000000 16\\n\") == \"20\\n\"\nassert solution(\"9000000000000000000 62\\n\") == \"1\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 9\n5 4 1\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"\n4 13\n2 2 2 2\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n\"\"\"\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '1\\n'\nassert solution(sample_input2) == '3\\n'\nassert solution(sample_input3) == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1', \"Incorrect solution\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed. Expected: {output_str}, got: {solution(input_str)}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n', \"Test case 1 failed\"\nassert solution() == '3\\n', \"Test case 2 failed\"\nassert solution() == '12\\n', \"Test case 3 failed\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nGot: {}\".format(solution())  # expected output: 1\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 failed: {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Test 2 failed: {solution(input_2)}\"\nassert solution(input_3) == output_3, f\"Test 3 failed: {solution(input_3)}\"\n\ninput_1 = \"\"\"3 9\n5 4 1\"\"\"\ninput_2 = \"\"\"4 13\n2 2 2 2\"\"\"\ninput_3 = \"\"\"18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\"\"\"\n\noutput_1 = \"\"\"1\"\"\"\noutput_2 = \"\"\"3\"\"\"\noutput_3 = \"\"\"12\"\"\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returned {solution(input())}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"0\"\nassert solution(5) == \"5\"\n\nfrom math import sqrt"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '0\\n'\nassert solution('3\\n4 7 8\\n') == '3\\n'\nassert solution('5\\n2 3 4 5 8\\n') == '5\\n'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} failed: Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3, \"Output should be 3\"\nassert solution(6) == 5, \"Output should be 5\"\nassert solution(9) == 5, \"Output should be 5\"\nassert solution(10) == 10, \"Output should be 10\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected {expected_output1}, but got {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Expected {expected_output2}, but got {solution(sample_input2)}\"\nassert solution(sample_input3) == expected_output3, f\"Expected {expected_output3}, but got {solution(sample_input3)}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\nSample Output 1:\\n0\\n\\nSample Input 2:\\n3\\n4 7 8\\nSample Output 2:\\n3\\n\\nSample Input 3:\\n5\\n2 3 4 5 8\\nSample Output 3:\\n5\") == \"0\"\nassert solution(\"3\\n4 7 8\\nSample Output 2:\\n3\\n\\nSample Input 1:\\n1\\nSample Output 1:\\n0\\n\\nSample Input 2:\\n3\\n4 7 8\\nSample Output 2:\\n3\\n\\nSample Input 3:\\n5\\n2 3 4 5 8\\nSample Output 3:\\n5\") == \"3\"\nassert solution(\"5\\n2 3 4 5 8\\nSample Output 3:\\n5\") == \"5\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6') == '4\\n'\nassert solution('149') == '17\\n'\nassert solution('123476544') == '11112\\n'"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 4, \"The output is incorrect\"\nassert solution(149) == 17, \"The output is incorrect\"\nassert solution(123476544) == 11112, \"The output is incorrect\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\nfrom typing import List"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"4\", \"Invalid output\"\nassert solution(149) == \"17\", \"Invalid output\"\nassert solution(123476544) == \"11112\", \"Invalid output\"\nassert solution(256) == \"-1\", \"Invalid output\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"IMPOSSIBLE\"\nassert solution(open('input2.txt').read()) == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"adcb\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"adcb\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"IMPOSSIBLE\"\nassert solution(open(\"sample_input3.txt\", \"r\")) == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\nf 2\\ndea\\ncfb\\n') == 'adcb\\ndef\\n'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\nf 2\\ndea\\ncfb\\n') == 'IMPOSSIBLE\\nAMBIGUOUS\\n'\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\\n\") == \"9\\n\"\nassert solution(\"10 20 0 0\\n\") == \"10\\n\"\nassert solution(\"100 20 543 12\\n\") == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nassert solution('2 0 0 0') == '0'\nassert solution('2 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"164\", \"Testcase 1 Failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 3\") == 9, \"Output should be 9\"\nassert solution(\"10 20 0 0\") == 10, \"Output should be 10\"\nassert solution(\"100 20 543 12\") == 164, \"Output should be 164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\\n164\\n\"\nassert solution(\"2 2 2 2\\n10 20 0 0\\n100 20 543 12\\n\") == \"8\\n163\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"164\", \"Test case failed\"\nassert solution() == \"9\", \"Test case failed\"\nassert solution() == \"10\", \"Test case failed\"\nassert solution() == \"164\", \"Test case failed\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\", \"Test 1\"\nassert solution(\"2 5 10 20\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\") == \"30\", \"Test 2\"\nassert solution(\"100 20 543 12\") == \"164\", \"Test 3\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == 9, \"The correct output is: 9\"\nassert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n50 40 30 20\") == 10, \"The correct output is: 10\"\nassert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n50 40 30 20\\n60 50 40 30\") == 164, \"The correct output is: 164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output a single integer - the number of cookies Alf and Beata are able to distribute.\\n', 'The solution is incorrect.'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case {t+1} failed\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Test case 1 failed.\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Test case 2 failed.\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Test case 3 failed.\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    4 2 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 0\n    2 1 0\n''') == 'yes'\nassert solution('''\n    4 3 3\n    0 1\n    1 2\n    -1 2\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n''') == 'no'\nassert solution('''\n    3 2 3\n    2 1\n    0 0\n    -1 -2\n    1 1 -2\n    3 6 12\n''') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n') == 'yes\\n'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n') == 'no\\n'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n') == 'yes\\n'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1: 652526\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2: 12121131221\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3: 123456789\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('652526') == 4, \"The solution should return 4 for the given sample input 1.\"\nassert solution('12121131221') == 7, \"The solution should return 7 for the given sample input 2.\"\nassert solution('123456789') == 1, \"The solution should return 1 for the given sample input 3.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\", \"Expected output: 4\\nGot: \" + solution(\"652526\")\nassert solution(\"12121131221\") == \"7\", \"Expected output: 7\\nGot: \" + solution(\"12121131221\")\nassert solution(\"123456789\") == \"1\", \"Expected output: 1\\nGot: \" + solution(\"123456789\")"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\", \"Output: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_sample1) == output_sample1, f\"Error 1: expected {output_sample1}, got {solution(input_sample1)}\"\nassert solution(input_sample2) == output_sample2, f\"Error 2: expected {output_sample2}, got {solution(input_sample2)}\"\nassert solution(input_sample3) == output_sample3, f\"Error 3: expected {output_sample3}, got {solution(input_sample3)}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n2 8\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 5\\n3 6\\n3 7\\n3 8\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n3 11\\n3 12\\n3 13\\n3 14\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n3 11\\n3 12\\n3 13\\n3 14\\n3 15\\n3 16\\n3 17\\n3 18\\n3 19\\n3 20\\n3 21\\n3 22\\n3 23\\n3 24\\n3 25\\n3 26\\n3 27\\n3 28\\n3 29\\n3 30\\n3 31\\n3 32\\n3 33\\n3 34\\n3 35\\n3 36\\n\") == \"Error: Invalid input. Please provide valid input.\"\nassert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n3 11\\n3 12\\n3 13\\n3 14\\n3 15\\n3 16\\n3 17\\n3 18\\n3 19\\n3 20\\n3 21\\n3 22\\n3 23\\n3 24\\n3 25\\n3 26\\n3 27\\n3 28\\n3 29\\n3 30\\n3 31\\n3 32\\n3 33\\n3 34\\n3 35\\n3 36\\n3 37\\n3 38\\n3 39\\n3 40\\n3 41\\n3 42\\n3 43\\n3 44\\n3 45\\n3 46\\n3 47\\n3 48"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i+1} failed.\" for i, (input_data, expected_output) in enumerate(zip(test_cases, test_outputs)):\n    pass\n\ntest_cases = [\n    ([3, 3], 0),\n    ([4, 4], 24),\n    ([6, 8], 800),\n]\n\ntest_outputs = [\n    (0, \"Sample Output 1\"),\n    (24, \"Sample Output 2\"),\n    (800, \"Sample Output 3\"),\n]"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == 0\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == 24\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 4'\nassert solution(input()) == '1 2 3 4 5'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='4\\n1 3 2 4\\nSample Output 1:\\n1 4\\n') == '1 4\\n'\nassert solution(stdin='5\\n1 2 3 4 5\\nSample Output 2:\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution(stdin='4\\n2 1 4 3\\nSample Output 3:\\n-1\\n') == '-1\\n'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"1 4\\n1 4\\n1 4\\n1 4\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('..#..#..') == 8\nassert solution('..#..') == 6\nassert solution('..') == 1"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"8\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1\", \"Test case 2 failed\"\nassert solution(sample_input3) == \"5\", \"Test case 3 failed\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 8\nprint(8)"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"8\", \"Test case 1 failed.\"\nassert solution(sample_input_2) == \"1\", \"Test case 2 failed.\"\nassert solution(sample_input_3) == \"5\", \"Test case 3 failed.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 8, \"Test 1 failed\"\nassert solution(stdin) == 1, \"Test 2 failed\"\nassert solution(stdin) == 5, \"Test 3 failed\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n') == '8'\nassert solution('3 3\\n...\\n.#.\\n...\\n') == '1'\nassert solution('2 6\\n.#####\\n#####.\\n') == '5'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Error: Expected '{output_str}', got '{solution(input_str)}' instead.\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\nprint(\"PASSED\")"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\"))\\nprint(solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\"))\\nprint(solution(\"3 2 2\\n1 2\\n2 1\\n1 2\"))\\n\\nprint(solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\"))\\nprint(solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\"))\\nprint(solution(\"3 2 2\\n1 2\\n2 1\\n1 2\"))\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n19 12 2 18 5 5\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\\n\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == 19\nassert solution() == 4\nassert solution() == 13\nassert solution() == -1\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n2"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n') == '5 1\\n'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n') == '1 5\\n'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n') == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output 1\\n5 1\\n'\nassert solution(open('input2.txt', 'r')) == 'Output 2\\n1 5\\n'\nassert solution(open('input3.txt', 'r')) == 'Output 3\\n3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\"\n\nfrom math import isqrt"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"5 1\"\nassert solution(4) == \"1 5\"\nassert solution(5) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    3\n    3\n    3\n    3\n    3\n    1\n    2\n    3\n    4\n    4\n    ''') == '''\n    5 1\n    1 5\n    '''\n\nassert solution('''\n    5\n    4\n    3\n    2\n    1\n    0\n    1\n    2\n    3\n    4\n    5\n    ''') == '''\n    3 2\n    '''\n\nassert solution('''\n    4\n    1\n    5\n    3\n    6\n    1\n    2\n    3\n    4\n    ''') == '''\n    3 2\n    '''"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"The maximum number of nodes in the largest subset satisfying the Heap Property is 5.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"Tests passed!\")"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"5\"\nassert solution(sample_input_3) == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"The given solution is {solution}, but it should be {expected_output}. Please check the code and try again.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed.\" for i, sample_input, sample_output in enumerate(tests)"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(int(input()))) == str(int(input())), \"Test case failed\"\nassert solution(str(int(input()))) == str(int(input())), \"Test case failed\"\nassert solution(str(int(input()))) == str(int(input())), \"Test case failed\"\nassert solution(str(int(input()))) == str(int(input())), \"Test case failed\"\nassert solution(str(int(input()))) == str(int(input())), \"Test case failed\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n0\"\nassert solution() == \"4\\n3\\n4\\n5\\n6\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n0\\n', \"Sample Output 3: Expected 0, got '{}'\".format(solution())"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Sample Output 1: 4\\nSample Output 2: 0\\nSample Output 3: 5\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n0\\n0\\n0\\n0\\n0\\n\", \"Expected 0, got {}\".format(solution())"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(''), 'Test Input 1'\nassert solution('8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n'), 'Test Input 2'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n'), 'Test Input 3'\n\nn = int(input())\ntree = []\nfor _ in range(n-1):\n    a, b, c = map(int, input().split())\n    tree.append((a-1, b-1, c-1))\n\ngood_nodes = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        good_nodes.add((i, j))\n\ngood_nodes_list = list(good_nodes)\ngood_nodes_list.sort()\nfor i in good_nodes_list:\n    print(i)"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(input()) == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n4\n3\n4\n5\n6\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\"\nassert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"5\"\nassert solution() == \"6\"\nassert solution() == \"7\"\nassert solution() == \"8\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output goes here\", \"Your code is incorrect.\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5\\n'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6\\n'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nimport re"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"5\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 5\nassert solution(open('sample_input2.txt', 'r')) == 6\nassert solution(open('sample_input3.txt', 'r')) == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\", \"Incorrect solution for 10 24\"\nassert solution(\"10 11\") == \"impossible\", \"Incorrect solution for 10 11\"\nassert solution(\"9 216\") == \"546\", \"Incorrect solution for 9 216\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 24\") == \"38\\n\", \"Sample Input 1\"\nassert solution(\"10 11\") == \"impossible\\n\", \"Sample Input 2\"\nassert solution(\"9 216\") == \"546\\n\", \"Sample Input 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\", \"Sample Input 1\"\nassert solution(\"10 11\") == \"impossible\", \"Sample Input 2\"\nassert solution(\"9 216\") == \"546\", \"Sample Input 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '38'\nassert solution(sample_input2) == 'impossible'\nassert solution(sample_input3) == '546'\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"10 24\\n10 11\\n9 216\\n\") == \"38\\n\"\nassert solution(stdin=\"10 31\\n10 11\\n9 216\\n\") == \"impossible\\n\"\nassert solution(stdin=\"10 4321\\n10 11\\n9 216\\n\") == \"546\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f\"10 24\") == \"38\"\nassert solution(f\"10 11\") == \"impossible\"\nassert solution(f\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"38\", \"Your implementation for the reverse problem is not correct\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 24') == '38', \"Expected output: 38, but got: \" + solution('10 24')\nassert solution('10 11') == 'impossible', \"Expected output: impossible, but got: \" + solution('10 11')\nassert solution('9 216') == '546', \"Expected output: 546, but got: \" + solution('9 216')"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\\n\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\\n\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for {input_str}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '466.662', 'Your code is incorrect. Please see the examples provided and complete the function solution.'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"466.662\\n\"\nassert solution(stdin) == \"10.00005\\n\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"466.662\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"10.00005\\n\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"2.0\\n\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == 466.662\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == 10.00005\nassert solution('3 4 1 0\\n0 2 0.25 8') == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.5000000000000000\"\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.5'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '1.500000000000000'\nassert solution(sample_input2) == '0.000000000000000'\nassert solution(sample_input3) == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.5'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.5'\nassert solution('orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == 1.5\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == 0\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == 10"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.5'\nassert solution('orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1.0\\nblue pink 2.0\\nblue pink 1"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"1.500000000000000\"\"\"\nassert solution == \"\"\"0.000000000000000\"\"\"\nassert solution == \"\"\"10.000000000000000\"\"\"\n\nsolution = \"\"\"1.500000000000000\"\"\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"1.500000000000000\\n\"\n\nassert solution(\"\"\"\n2\nblue red 1.0\nred pink 1.5\n\"\"\") == \"0.000000000000000\\n\"\n\nassert solution(\"\"\"\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input()) == \"too many\" # No solution\nassert solution(input"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Input 1\\n6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Output 1\\n180\\n\\n\\nSample Input 2\\n3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Output 2\\n22\\n\\n\\nSample Input 3\\n3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3\\n0\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Input 2\\n3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Output 2\\n22\\n\\n\\nSample Input 3\\n3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3\\n0\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Input 3\\n3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3\\n0\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"180\"\nassert solution(open(\"input2.txt\").read()) == \"22\"\nassert solution(open(\"input3.txt\").read()) == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\nassert solution() == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"180\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Input 1\\n6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Output 1\\n180\\n\\n\\nSample Input 2\\n3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\nSample Output 2\\n22\\n\\n\\nSample Input 3\\n3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\nSample Output 3\\n0\") == \"180\\n\\n22\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == '20 20\\n17 17\\n-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\\n### Solution ###\\n\\nWe can solve this problem by first iterating through the plan and updating the marker\u2019s position each time. We can use the `math` module to calculate the distance between two points on the line and the angle between two vectors to determine the direction of the marker. We can also use the `itertools` module to keep track of the earliest and latest time that the marker can dry out.\n\nHere's the code to solve the problem:\n\n```python\nimport math\nimport itertools"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8 5\\n......\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n### Output:\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Test Cases:\\n\\ndef test_case_1():\\n    assert solution('6 8 5\\n......\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\ndef test_case_2():\\n    assert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\ndef test_case_3():\\n    assert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n### Output:\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Test Cases:\\n\\ndef test_case_1():\\n    assert solution('6 8 5\\n......\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\ndef test_case_2():\\n    assert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\ndef test_case_3():\\n    assert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n### Output:\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Test Cases:\\n\\ndef test_case_1():\\n    assert solution('6 8 5\\n......\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\ndef test_case_2():\\n    assert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\ndef test_case_3():\\n    assert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1'\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Output:\\ndef solution"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == expected1, f\"Test Input 1 failed: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Test Input 2 failed: {solution(input2)}\"\nassert solution(input3) == expected3, f\"Test Input 3 failed: {solution(input3)}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"20 20\"\nassert solution(sample_input2) == \"17 17\"\nassert solution(sample_input3) == \"-1 -1\"\n\nfrom typing import List"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible', 'Sample Output 1'\n\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == '300', 'Sample Output 2'\n\nassert solution('90\\n2\\n2 20 35\\n2 88 200') == '88', 'Sample Output 3'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(371) == 'impossible', \"Expected 'impossible' but got '{}'.\".format(solution(371))\nassert solution(310) == '300', \"Expected '300' but got '{}'.\".format(solution(310))\nassert solution(90) == '88', \"Expected '88' but got '{}'.\".format(solution(90))"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\\n\"\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\\n\"\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('..##..') == 'cannot fold'\nassert solution('...#..') == 'cannot fold'\nassert solution('..##..') == 'cannot fold'\nassert solution('...#..') == 'cannot fold'\nassert solution('..##..') == 'cannot fold'\nassert solution('...#..') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'cannot fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n....\n....\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc', \"Test 1 failed\"\nassert solution('abcbabcba') == 'abcba', \"Test 2 failed\"\nassert solution('aaaa') == 'aaa', \"Test 3 failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4\\n'\nassert solution('2\\n1 4\\n2 10005\\n') == '6\\n'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4\\n'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"4\\n6\"\n\nimport sys"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4'\nassert solution('2\\n1 4\\n2 10005\\n') == '6'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == 4\nassert solution('2\\n1 4\\n2 10005\\n') == 6\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == 4\nassert solution('3\\n1 4\\n2 10\\n0 5\\n') == 4\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4\nassert solution(4) == 4\nassert solution(5) == 6\nassert solution(6) == 6"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 4\n\nSolution:\nWe can solve this problem using the following steps:\n\n1. Initialize a variable `valid_count` to keep track of the number of valid tickets.\n2. Initialize a list `trip_times` to store the times of each trip.\n3. Initialize a dictionary `trip_zones` to store the zones of each trip.\n4. Loop through the input, adding the trip to the `trip_times` and `trip_zones` lists.\n5. Initialize `trip_start_time` and `trip_end_time` to the start and end time of the current trip, respectively.\n6. Loop through all the zones in the interval $[0, T]$, adding the time difference between the current trip start and end time to `trip_start_time` and `trip_end_time`, respectively.\n7. Loop through all the zones in the interval $[0, T]$, and for each zone, check if the current trip start time is before the end time of that zone. If it is, increment `valid_count`.\n8. Return the `valid_count`.\n\nHere's the Python code:\n\n```python\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4, \"The output is incorrect.\"\nassert solution() == 6, \"The output is incorrect.\"\nassert solution() == 4, \"The output is incorrect.\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\\n\"\nassert solution(\"3\\n7 7 7\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Expected output 2, got {}\".format(solution())\nassert solution() == \"3\", \"Expected output 3, got {}\".format(solution())\nassert solution() == \"0\", \"Expected output 0, got {}\".format(solution())"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', 'Your solution is not correct.'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7, \"2 3 4 4 8 12 24\") == \"2\\n\"\nassert solution(3, \"7 7 7\") == \"3\\n\"\nassert solution(5, \"1 2 3 2 1\") == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Expected output 2, got: \" + solution(stdin)"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"2\", \"Sample Input 1\"\nassert solution(sample_input2) == \"3\", \"Sample Input 2\"\nassert solution(sample_input3) == \"0\", \"Sample Input 3\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Testcase failed.\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\"\nassert solution(5) == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == expected1, f\"Expected {expected1}, but got {solution(example1)}\"\nassert solution(example2) == expected2, f\"Expected {expected2}, but got {solution(example2)}\"\nassert solution(example3) == expected3, f\"Expected {expected3}, but got {solution(example3)}\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == 3\nassert solution('1 2 1\\nGS') == 1\nassert solution('2 2 10\\nS#') == -1\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n'\nassert solution(stdin) == '1\\n'\nassert solution(stdin) == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '3'\nassert solution(open('input2.txt').read()) == '1'\nassert solution(open('input3.txt').read()) == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Solution 1 failed\"\nassert solution(input()) == \"2\", \"Solution 2 failed\"\nassert solution(input()) == \"2\", \"Solution 3 failed\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Incorrect output for sample 1\"\n\nassert solution(input_1) == 1, \"Incorrect output for sample 2\"\n\nassert solution(input_2) == 1, \"Incorrect output for sample 3\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\", \"Solution should return 1\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the height of the grid and width of the grid: \")) == 1\n\nheight, width = map(int, input(\"Enter the height of the grid and width of the grid: \").split())"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution for the problem {input()} is incorrect. Expected output: {expected_output}, received output: {solution(input())}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1000200 799'''\nassert solution() == '''uncertain'''\nassert solution() == '''impossible'''"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    999999 0 1000\n    999900 950 451\n    987654 123 13222\n    \"\"\"\n) == \"\"\"\n    1000200 799\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    100 0 101\n    0 200 199\n    \"\"\"\n) == \"\"\"\n    uncertain\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    100 0 100\n    0 200 199\n    \"\"\"\n) == \"\"\"\n    impossible\n    \"\"\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test {test_case} failed. Expected: '{output}', Actual: '{solution(stdin)}'\" for test_case, stdin, output in [(1, \"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\", \"1000200 799\"), (2, \"2\\n100 0 101\\n0 200 199\", \"uncertain\"), (3, \"2\\n100 0 100\\n0 200 199\", \"impossible\")]:\n    print(f\"Test {test_case} passed\")"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\") == \"1000200 799\\n\"\nassert solution(\"Sample Input 2\") == \"uncertain\\n\"\nassert solution(\"Sample Input 3\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == ['2', '1']\nassert solution(open('input2.txt', 'r')) == ['1', '2']\nassert solution(open('input3.txt', 'r')) == ['syntax error', 'def solution(stdin: str) -> str:\\n    pass']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == 2\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == 1\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Expected output {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output {output2}, but got {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected output {output3}, but got {solution(input3)}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"def solution(stdin: str) -> str:\\n\\tpass\\n\") == \"1\\n1\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\n\\tpass\\n\") == \"syntax error\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\timport sys\\n\\tpass\\n\") == \"1\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\timport sys\\n\\tif __name__ == '__main__':\\n\\tpass\\n\") == \"1\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == ['2', '1']\nassert solution(stdin) == ['1', '2']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\n4 7\n9 8\n14 17\n19 18\"\"\") == \"2\\n1\\n\"\nassert solution(\"\"\"2\n4 7\n14 17\n9 8\n19 18\"\"\") == \"1\\n2\\n\"\nassert solution(\"\"\"2\n4 8\n9 7\n14 18\n19 17\"\"\") == \"syntax error\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {case + 1} failed: Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\\n\") == [\"syntax error\"]"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1:\") == \"1\\n\"\nassert solution(\"Sample Input 2:\") == \"1\\n\"\nassert solution(\"Sample Input 3:\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    _ 90 22 _ 6 _ _ _ _ 81\n    _ 40 _ _ _ 12 60 _ 90 _\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ 60 _ _ _ _ _\n    _ _ _ _ _ _ _ 81 _ _ _ _\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ 150 _ _ _ _\n    _ _ _ _ _ _ _ 81 _ _ _ _\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    _ _ _ _ _ _ _ 72 _ _ _ _\n    _ _ _ _ _ _ _ 150 _ _ _ _\n    \"\"\"\n) == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640\\n'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1:\") == \"1\\n\"\nassert solution(\"Sample Input 2:\") == \"1\\n\"\nassert solution(\"Sample Input 3:\") == \"8640\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"The correct solution for the first sample input is not provided.\"\nassert solution(sample_input_2) == sample_output_2, \"The correct solution for the second sample input is not provided.\"\nassert solution(sample_input_3) == sample_output_3, \"The correct solution for the third sample input is not provided.\"\n\nsample_input_1 = \"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\"\n\nsample_input_2 = \"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\"\n\nsample_input_3 = \"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\"\n\nsample_output_1 = \"1\"\nsample_output_2 = \"1\"\nsample_output_3 = \"8640\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Sample Output 2\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(Sample Input 1) == Solution 1\nassert solution(Sample Input 2) == Solution 2\nassert solution(Sample Input 3) == Solution 3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2, \"The solution is incorrect\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n', 'The number of optimal paths of length 2 is incorrect'\nassert solution() == '2\\n', 'The number of optimal paths of length 2 is incorrect'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nassert solution() == 8\nassert solution() == 24\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\", \"Test 2\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\", \"Test 3\"\n\nfrom typing import List"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == 2\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == 8\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == 24"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The number of optimal paths of length 2 is incorrect.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"secretmessage should decrypt to essa\"\nassert solution(\"treetreetreetree\") == \"3\", \"treetreetreetree should decrypt to 3\"\nassert solution(\"oranges\") == \"0\", \"oranges should decrypt to 0\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(open('solution.py').read())\n"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Sample Input 1: secretmessage\"\nassert solution(\"treetreetreetree\") == \"3\", \"Sample Input 2: treetreetreetree\"\nassert solution(\"oranges\") == \"0\", \"Sample Input 3: oranges\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\nsecretmessage\nboot\n\"\"\"\n) == \"essa\"\n\nassert solution(\n    \"\"\"\ntreetreetreetree\nwood\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\noranges\napples\n\"\"\"\n) == \"0\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(Solution().solution) == \"1\\n\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n4\\n\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n4\\n\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '4'\nassert solution(stdin) == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    6\n    >^<^\n    ######\n    #.#..#\n    #....#\n    #..R.#\n    #....#\n    ######\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    4\n    v<^>\n    ####\n    #.R#\n    #..#\n    ####\n    \"\"\"\n) == 4\n\nassert solution(\n    \"\"\"\n    4\n    <<<\n    ####\n    #.R#\n    #..#\n    ####\n    \"\"\"\n) == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\nassert solution(sample_input3) == expected_output3\n\nsample_input1 = '''\n6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n<^>\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == 2\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == 4\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == 1\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Incorrect output\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"6\"\nassert solution() == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Please provide the expected output: {expected}\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7') == '11\\n'\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\\n\", \"Expected: 168.7916512460\\nGot: \" + solution(\"60.0 0.0 50.0 170.0\")\n\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\\n\", \"Expected: 163.5274740179\\nGot: \" + solution(\"60.0 0.0 50.0 170.0\")\n\nassert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\\n\", \"Expected: 3.7320508076\\nGot: \" + solution(\"0.0 1.0 4.0 1.0\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n') == '3.7320508076'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"163.5274740179\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '168.7916512460', \"Test 1 failed\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"rarity\"\nassert solution(stdin=\"6 5 3\") == \"rarity\"\nassert solution(stdin=\"9 8 1\") == \"canterlot\"\nassert solution(stdin=\"5 3 5\") == \"madam\"\nassert solution(stdin=\"6 5 3\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"rarity\", \"Your solution is incorrect\"\n\nfrom typing import List\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"rarity\"\nassert solution(sample_input_2) == \"canterlot\"\nassert solution(sample_input_3) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, 5, 3) == 'rarity'\nassert solution(9, 8, 1) == 'canterlot'\nassert solution(5, 3, 5) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"rarity\"\nassert solution(input()) == \"canterlot\"\nassert solution(input()) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5 3\") == \"rarity\\n\"\nassert solution(\"9 8 1\") == \"canterlot\\n\"\nassert solution(\"5 3 5\") == \"madam\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"madam\"\nassert solution(5) == \"rarity\"\nassert solution(7) == \"canterlot\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input(1)) == \"rarity\"\nassert solution(sample_input(2)) == \"canterlot\"\nassert solution(sample_input(3)) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"madam\"\nassert solution(4) == \"def\"\nassert solution(5) == \"canterlot\"\nassert solution(6) == \"rarity\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!') == 'International contest- motivation high Programmers have fun!'\nassert solution('English code- busy day- no one around.') == 'English code- busy day- no one around.'\nassert solution('Though you can\\'t believe me, I love Python.') == 'Though you can\\'t believe me, I love Python.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\" + \\\n                                                                               \" Leaves, glowing in autumn sun, fall in Virginia.\" + \\\n                                                                               \" \"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- motivation high Programmers have fun!. \""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. Who would know if we had too few syllables?') == 'Blue Ridge mountain road. Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:') == 'International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- motivation high Programmers have fun!. \"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Thore is awesome\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"Thore is awesome\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"3\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'ThoreH'\nassert solution(open('input.txt', 'r')) == 'Thore is awesome'\nassert solution(open('input.txt', 'r')) == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"ThoreH\"\nassert solution(\"2\") == \"Thore is awesome\"\nassert solution(\"3\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\\n\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6, \"The given set should have a value of 6.\"\nassert solution(\"L*R\") == 25, \"The given set should have a value of 25.\"\nassert solution(\"**\") == 33, \"The given set should have a value of 33.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('P*P') == 6, \"The value of the given set of walks is not 6.\"\nassert solution('L*R') == 25, \"The value of the given set of walks is not 25.\"\nassert solution('**') == 33, \"The value of the given set of walks is not 33.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"L*R\") == \"25\\n\", \"Test 2 failed\"\nassert solution(\"**\") == \"33\\n\", \"Test 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == 6, \"Expected output: 6, but got: {}\".format(solution(\"P*P\"))\nassert solution(\"L*R\") == 25, \"Expected output: 25, but got: {}\".format(solution(\"L*R\"))\nassert solution(\"**\") == 33, \"Expected output: 33, but got: {}\".format(solution(\"**\"))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == 6, \"The value of the given set of walks is incorrect.\"\nassert solution(\"L*R\") == 25, \"The value of the given set of walks is incorrect.\"\nassert solution(\"**\") == 33, \"The value of the given set of walks is incorrect.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == \"6\", \"P*P is incorrect.\"\nassert solution(\"L*R\") == \"25\", \"L*R is incorrect.\"\nassert solution(\"**\") == \"33\", \"** is incorrect.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test 1\"\nassert solution(\"L*R\") == \"25\", \"Test 2\"\nassert solution(\"**\") == \"33\", \"Test 3\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'yes'\nassert solution(2) == 'wait what?'\nassert solution(3) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2) == \"wait what?\"\nassert solution(3) == \"yes\"\nassert solution(4) == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"yes\"\nassert solution(5) == \"wait what?\"\nassert solution(4) == \"yes\"\nassert solution(6) == \"wait what?\"\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"\n\nsolution = '''\nimport re"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nderp is herp\\nderp is derp\") == \"yes\\n\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\\n\"\nassert solution(\"moo not foo\") == \"yes\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\", \"M\u00e5rten's Theorem not satisfied\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\", \"M\u00e5rten's Theorem not satisfied\"\nassert solution(\"moo not foo\") == \"yes\", \"M\u00e5rten's Theorem not satisfied\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes\\n'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\nosskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Example {i + 1} failed: got '{solution(stdin)}', expected '{output}'\" for i, (stdin, output) in enumerate(zip(inputs, outputs))"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    AACCMMAA\n    ACA\n    MM\n    ACMAA\n    AA\n    A\n''') == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution('''\n    3\n    ACMA\n    ACM\n    ACA\n    AMA\n''') == '''\nimpossible\n'''\n\nassert solution('''\n    1\n    AM\n    MA\n''') == '''\nimpossible\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''1 4\nMM\nA\nAA\nACA\nACMAA'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Output:\\n{output}\\nExpected output:\\n{output}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nAACCCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\\n\") == [\"1 4\", \"MM\", \"A\", \"AA\", \"ACA\", \"ACMAA\"]"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Incorrect Output\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nAACC\\nC\\nMM\\nACMAA\\nAA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\nACM\\nACA\\nAMA\\n\") == \"impossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed: {solution(input_data)!= expected_output}!= {expected_output}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Incorrect output for sample input {solution_input}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\"\n) == \"124\"\n\nassert solution(\n    \"2 4 1\\n1 0.5 5\\n\"\n) == \"3\"\n\nassert solution(\n    \"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n\"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"\n2 4 1\n1 0.5 5\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n\"\"\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2') == '124'\nassert solution('2 4 1\\n1 0.5 5') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n') == '124'\nassert solution('2 4 1\\n1 0.5 5\\n') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == '124'\nassert solution(solution1) == '3'\nassert solution(solution2) == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2') == '124'\nassert solution('2 4 1\\n1 0.5 5') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '18.9029850746'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    2 1\n    \"\"\"\n) == \"2 1 2\"\n\nassert solution(\n    \"\"\"\n    2 1\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5 22\n    4 3 4 2\n    \"\"\"\n) == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2 1 2', \"Expected output: '2 1 2', but got: {}\".format(solution('4 3'))\nassert solution('2 1') == '1', \"Expected output: '1', but got: {}\".format(solution('2 1'))\nassert solution('5 22') == '4 3 4 2', \"Expected output: '4 3 4 2', but got: {}\".format(solution('5 22'))"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output(), f\"Output is {output()}, but should be {output()}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == '2 1 2', \"Incorrect output for sample input 1\"\nassert solution(input2) == '1', \"Incorrect output for sample input 2\"\nassert solution(input3) == '4 3 4 2', \"Incorrect output for sample input 3\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 3\\n2 1\\n\") == \"2 1 2\\n\"\n\nassert solution(\n    \"2 1\\n\") == \"1\\n\"\n\nassert solution(\n    \"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '2 1 2'\nassert solution(open('sample_input2.txt', 'r')) == '1'\nassert solution(open('sample_input3.txt', 'r')) == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\", \"Sample Input 1\"\nassert solution(\"2 1\") == \"1\\n\", \"Sample Input 2\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\", \"Sample Input 3\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n2 1\\n') == '2 1 2\\n'\nassert solution('2 1\\n') == '1\\n'\nassert solution('5 22\\n') == '4 3 4 2\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4') == 2\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4') == 2\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7') == 0"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"The solution is not correct\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"The correct output should be '2'.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(''), 'No input'\nassert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n'), 'Invalid input'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n'), 'Invalid input'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n'), 'Invalid input'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Test failed. Expected {expected_output}, got {solution(input)}\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, but got: {solution}\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.00000000\nassert solution(\"-10 10\\n10.00 1.00\\n\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\\n\") == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\", \"Test 1\"\nassert solution(\"30 15\\n5.00 0.50\\n\") == \"3.14159265\", \"Test 2\"\nassert solution(\"-20 -10\\n0.10 0.00\\n\") == \"28.26445910\", \"Test 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"0 -10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.00000000\nassert solution(\"0 -10\\n10.00 1.00\\n\") == 3.14159265\n\nfrom math import radians, sin, cos, pi, sqrt"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.14159265\"\nassert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.00000000\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910\nassert solution(\"20 0\\n0.10 0.01\\n0.10 0.01\") == 0.00000000\nassert solution(\"0 0\") == 0.00000000\nassert solution(\"0 20\\n0.10 0.01\\n0.10 0.01\") == 0.00000000"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == 20.00000000\nassert solution('-10 10\\n10.00 1.00\\n') == 3.14159265\nassert solution('0 20\\n1.00 0.10\\n') == 28.26445910"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '170\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"170\", \"The given solution is incorrect.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == 170\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Solution {solution} does not match expected output {expected_output}\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your solution is {solution(input())}, but it should be {output}.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\\n\") == \"\"\nassert solution(b\"\\n\\n\") == \"\"\nassert solution(b\"\\n1\\n\") == \"0\"\nassert solution(b\"\\n1\\n1\\n\") == \"1\"\nassert solution(b\"\\n1\\n2\\n\") == \"2\"\nassert solution(b\"\\n1\\n2\\n3\\n\") == \"3\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n\") == \"4\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"6\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"7\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"8\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"9\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == \"11\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"12\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"13\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"14\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"15\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == \"16\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == \"17\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == \"18\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"19\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"20\"\nassert solution(b\"\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Sample Output 1: Expected 2, but got: \" + str(solution())"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input2.txt', 'r')) == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == 2\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output the length of the longest race path on a single line.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Solution: {solution}, Expected: {expected}\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output is incorrect\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"2\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"5\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0.5\", \"Incorrect output\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.0446429, \"The function should return 0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, \"Your solution is incorrect.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0.5\"\nassert solution(8) == \"0.0446429\"\n\nfrom typing import List"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 1 2\\n1 0\\n1 0\\n1\\n1\\n1\\n1\\n1\") == \"0.5\"\n\nassert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n1 0\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0.5\"\n\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str=\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(input_str=\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\n\nassert solution(\n    \"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4\\n1 2 1 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(stdin=\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin.read()) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(stdin.read()) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\nSample Input 1:\\n6\\n1 2 3 3 2 1\\nSample Output 1:\\n3\\n1 6 1\\n2 5 2\\n3 4 3\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\\nSample Input 2:\\n4\\n1 2 1 2\\nSample Output 2:\\nIMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\" == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\")"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2 100\\n1 100 1\\n1 1 1\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1, \"Your solution is incorrect. Please check the given code.\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 2 100\"\nassert solution(input()) == \"10 20 28 27 30 40 50\"\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 2 100\\n1 100 1'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 2 100\", \"Test Case 1 failed\"\nassert solution() == \"10 20 28 27 30 40 50\", \"Test Case 2 failed\"\nassert solution() == \"1 2 100\", \"Test Case 3 failed\"\nassert solution() == \"10 20 28 27 30 40 50\", \"Test Case 4 failed\"\nassert solution() == \"1 2 100\", \"Test Case 5 failed\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example1.txt', 'r')) == '1 2 100', \"Incorrect solution for example1.txt\"\nassert solution(open('example2.txt', 'r')) == '10 20 28 27 30 40 50', \"Incorrect solution for example2.txt\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2, 1, 100, 1, 1, 2, 28, 27]) == \"1 2 100\"\nassert solution([2, 5, 10, 20, 30, 40, 50, 2, 28, 27]) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\n\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"2600\"\nassert solution(2) == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"506\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"506\", \"Please implement the solution\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2600\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"506\"\nassert solution(4) == \"42\"\nassert solution(5) == \"12\"\nassert solution(6) == \"110\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 506\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '2600'\nassert solution(sample_input_2) == '506'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"()(())\") == \"impossible\"\nassert solution(\"()()(\") == \"possible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"())()\") == \"impossible\"\nassert solution(\"()()(\") == \"possible\"\nassert solution(\"())()(\") == \"possible\"\nassert solution(\"(((\") == \"possible\"\nassert solution(\"(()()(\") == \"possible\"\nassert solution(\"()))())\") == \"possible\"\nassert solution(\"())())\") == \"impossible\"\nassert solution(\"()))(())\") == \"impossible\"\nassert solution(\"((())())\") == \"impossible\"\nassert solution(\"(()())())\") == \"possible\"\nassert solution(\"(())())()\") == \"impossible\"\nassert solution(\"(()())(())\") == \"impossible\"\nassert solution(\"()(()())\") == \"possible\"\nassert solution(\"(()()))()\") == \"possible\"\nassert solution(\"()))()(()\")) == \"possible\"\nassert solution(\"(()())()))\") == \"impossible\"\nassert solution(\"())(())()\") == \"possible\"\nassert solution(\"()))()(()))\") == \"possible\"\nassert solution(\"(()())()))()\") == \"possible\"\nassert solution(\"())(())())\") == \"impossible\"\nassert solution(\"()))()(()))()\") == \"possible\"\nassert solution(\"(()())()))(()))\") == \"impossible\"\nassert solution(\"())(())())(())\") == \"impossible\"\nassert solution(\"()))()(()))(()))\") == \"possible\"\nassert solution(\"(()())()))(()))(()))\") == \"impossible\"\nassert solution(\"())(())())(())(())\") == \"impossible\"\nassert solution(\"()))()(()))(()))(()))()\") == \"possible\"\nassert solution(\"(()())()))(()))(()))(()))\") == \"impossible\"\nassert solution(\"())(())())(())(())(())()\") == \"impossible\"\nassert solution(\"()))()(()))(()))(()))(()))(())\") == \"possible\"\nassert solution(\"(()())()))(()))(()))(()))(())\") == \"impossible\"\nassert solution(\"())(())())(())(())(())(())()\") == \"impossible\"\nassert solution(\"()))()(()))(()))(()))(()))(())(()))\") == \"possible\"\nassert solution(\"(()())()))(()))(()))(()))(())(()))(())\") == \"impossible\"\nassert solution(\"())(())())(())(())(())(())(()())(())()\") == \"possible\"\nassert solution(\"()))()(()))(()))(()))(())(()))(())(()))(())\") == \"possible\"\nassert solution(\"(()())()))(()))(()))(())(()))(())(()))(()))(())()\") == \"possible\"\nassert solution(\"())(())())(())(())(())(()())(())(()()))(())()\") == \"impossible\"\nassert solution(\"()))()(()))(())(()))(())(()))(())(()()))(())())\") == \"possible\"\nassert solution(\"(()())()))(())(()))(())(()))(())(()()))(())(()()))(())()\") == \"impossible\"\nassert solution(\"())(())())(())(())(())(()())(())(()()))(())())(())()(()()))(())()\") == \"possible\"\nassert solution(\"()))()(()))(())(()))(())(()))(())(()()))(())())(())())(()()))(())()()\") == \"possible\"\nassert solution(\"(()())()))(())(()))(())(()))(())(()()))(())())(())())(()()))(())()(()()))(())()()(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(())(()())(())(()()))(())())(())())(())())(())()))(())()(()()))(())()()(()()))(())()()(()()))(())()()()()\") == \"possible\"\nassert solution(\"()))()(()))(())(()))(())(()))(())(()()))(())())(())())(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()()(()()))(())()()(()()))(())()()()) == \"possible\"\nassert solution(\"(()())()))(())(()))(())(()))(())(()()))(())())(())())(()()))(())())(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()(()()))(())()()) == \"possible\"\nassert solution(\"())(())())(())(()())(())(()()))"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"()))()())\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())))\") == \"possible\"\nassert solution(\"(()(()))\") == \"impossible\"\nassert solution(\"(()))\")) == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"(())())\") == \"possible\"\nassert solution(\"(()))\") == \"impossible\"\nassert solution(\"(()))()))\") == \"impossible\"\nassert solution(\"(()))(())\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"(()))(()))\") == \"impossible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"(())(())()\")) == \"possible\"\nassert solution(\"(()))(())())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"()))\") == \"possible\", \"Sample Input 1: (())\"\nassert solution(\"()(())\") == \"possible\", \"Sample Input 2: (()())\"\nassert solution(\"(()))\") == \"impossible\", \"Sample Input 3: (()())\"\nassert solution(\"(()())\") == \"impossible\", \"Sample Input 4: (()())\"\nassert solution(\"()()))\") == \"impossible\", \"Sample Input 5: (()())\"\nassert solution(\"(()())(())\") == \"impossible\", \"Sample Input 6: (()())\"\nassert solution(\"(())()\") == \"possible\", \"Sample Input 7: ()()\"\nassert solution(\"()()())\") == \"possible\", \"Sample Input 8: ()()()\"\nassert solution(\"(()()()())\") == \"impossible\", \"Sample Input 9: ()()()\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(())()\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"(())())\") == \"possible\"\nassert solution(\"()(())\") == \"possible\"\nassert solution(\"())()())\") == \"impossible\"\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"(())()())(())\") == \"impossible\"\nassert solution(\"((())())\") == \"impossible\"\nassert solution(\"()(()())\") == \"impossible\"\nassert solution(\"()()))())\") == \"impossible\"\nassert solution(\"(())(()()))\") == \"impossible\"\nassert solution(\"()(()()))()\") == \"impossible\"\nassert solution(\"()))))\"))"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"(())()\") == \"possible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"((()))(())\") == \"impossible\"\nassert solution(\"((()))(())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(()))\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"(())()\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"()()())\") == \"possible\"\nassert solution(\"(()())(())\") == \"possible\"\nassert solution(\"(()())\") == \"possible\"\nassert solution(\"()()()\") == \"possible\"\nassert solution(\"()()(()))\") == \"possible\"\nassert solution(\"()()())\") == \"possible\"\nassert solution(\"()()()())\") == \"possible\"\nassert solution(\"(()))(())())\") == \"possible\"\nassert solution(\"())(())()\") == \"possible\"\nassert solution(\"())()())\") == \"possible\"\nassert solution(\"()(()))\") == \"possible\"\nassert solution(\"()())(())\") == \"possible\"\nassert solution(\"()(()))(())\") == \"possible\"\nassert solution(\"()(()))\") == \"possible\"\nassert solution(\"()(()))(())\") == \"possible\"\nassert solution(\"())())(())\") == \"possible\"\nassert solution(\"())()()())\") == \"possible\"\nassert solution(\"()()()())\") == \"possible\"\nassert solution(\"()()()())(())\") == \"possible\"\nassert solution(\"()()(())())\") == \"possible\"\nassert solution(\"()()())()(()))\") == \"possible\"\nassert solution(\"()()())()(()))(())\") == \"possible\"\nassert solution(\"()()())()()(()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()())(())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\nassert solution(\"()()())()()()(()())())\") == \"possible\"\nassert solution(\"()()())()()()(()()))(())\") == \"possible\"\nassert solution(\"()()())()()()(()()))())\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"1800\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test {test_num}: Expected output: {expected}, got {solution(input)}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '1800', 'Expected output: 1800\\nActual output:'+ solution(sample_input_1)\nassert solution(sample_input_2) == 'impossible', 'Expected output: impossible\\nActual output:'+ solution(sample_input_2)"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800\\n'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed: {solution(sample_input)}!= {sample_output}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '1800'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == 1800\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed. Got {solution(input)} expected {expected}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"1800\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"\"\"A1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\"\n\nassert solution(\"2 3\\n\") == \"\"\"A1-C1 A2-B1 B2-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-B1 A2-C2 B2-C1\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '''\nA1-B1\nA2-C2\nA1-C1\nA2-B1\nA1-B2\nA2-C1\nA1-C2\nA2-B2\n'''\n\nassert solution(2) == '''\nA1-B1\nA2-B2\nA1-B2\nA2-B1\nA1-C1\nA2-C2\nA1-C2\nA2-C1\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case_number} failed.\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2') == '''A1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n'''\n\nassert solution('2 3') == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\n\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7\\n\"\nassert solution(open(\"test_input.txt\", \"r\")) == \"7\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '7', \"Output is incorrect\"\nassert solution(sample_input2) == '9', \"Output is incorrect\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == 7\nassert solution(open('sample_input_2.txt', 'r')) == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\n9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"2 2\\n..\\n..\") == \"7\"\nassert solution(r\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == 9"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Solution doesn't match the expected output. Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output a single integer, which is the minimum cost for the knight to reach the goal at (0,0).\\n-1\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\"\nassert solution(\"2\\n3 2 0 1 100\\n10 8 6 4 20\\n\") == \"-1\\n\"\nassert solution(\"3\\n3 3 3 2 100\\n2 2 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 2 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"500\\n\"\nassert solution(\"3\\n1 2 2 2 100\\n1 1 1 1 500\\n\") == \"-1\\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"600\"\n\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\"\n\nassert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"-1\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600\\n'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100\\n'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '600\\n'\nassert solution(open('sample_input2.txt', 'r')) == '100\\n'\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(stdin=\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100\nassert solution(stdin=\"3\\n4 4 4 4 4\\n4 0 0 0 4\\n4 0 0 0 4\\n4 0 0 0 4\\n4 0 0 0 4\\n\") == -1"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, \"361\") == 3\nassert solution(2, \"11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution() == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 361) == 3\nassert solution(2, 11) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n361\") == 3\nassert solution(\"2\\n11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"0\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\"\n\nsolution(input())"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '10'\nassert solution(sample_input2) == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\nassert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nassert solution() == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(samples, expected_outputs)\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 8 9 9 100 101 108 109 109', 'Test case 1 failed'\nassert solution() == '0 7 8 11 15 16 19', 'Test case 2 failed'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 9 10 11 12 13 14 15 16 18 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\", \"Incorrect solution\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 8 9 9 100 101 108 109 109\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == [], \"Test case 1\"\nassert solution(\"4 9\") == [1], \"Test case 2\"\nassert solution(\"2 8\") == [1, 8], \"Test case 3\"\nassert solution(\"1 1\") == [1], \"Test case 4\"\nassert solution(\"3 4\") == [1, 1, 4], \"Test case 5\"\nassert solution(\"5 100\") == [1, 1, 1, 1, 100], \"Test case 6\"\nassert solution(\"2 2\") == [0, 7], \"Test case 7\"\nassert solution(\"3 8\") == [0, 7, 8], \"Test case 8\"\nassert solution(\"2 7\") == [0, 7, 8], \"Test case 9\"\nassert solution(\"2 4\") == [0, 7, 8], \"Test case 10\"\nassert solution(\"3 8\") == [0, 7, 8], \"Test case 11\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\", \"Your solution is not correct.\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\", \"Your solution is not correct.\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [\n    \"1 8 9 9 100 101 108 109 109\",\n    \"0 7 8 11 15 16 19\",\n]\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\", \"Incorrect output 1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\", \"Incorrect output 2\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"The maximum number of enemy minions that Liam can destroy with a single attack is 1.\"\n\nfrom typing import List"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Test case 1 failed\"\nassert solution() == 3, \"Test case 2 failed\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '1'\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '1\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == '3\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n2 4\\n-4 4\\n') == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3'\n) == '1\\n'\n\nassert solution(\nr'1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3'\n) == '3\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution(b'5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}, Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\nSample Output 1:\\n4\\n4\\n2\\n2\\n0\\n\\nSample Input 2:\\n5 9\\n1\\n1\\n10\\n1\\n9\\nSample Output 2:\\n2\\n0\\n0\\n2\\n0\\n\") == \"4\\n4\\n2\\n2\\n0\\n\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. \\nExpected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\n\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\"4\n4\n2\n2\n0\"\"\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\ne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"NE\"\nassert solution() == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'NE'\nprint('n')\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'NE'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"NE\", \"Error: Your solution is incorrect.\"\nassert solution(5) == \"DA\", \"Error: Your solution is incorrect.\"\nassert solution(6) == \"NE\", \"Error: Your solution is incorrect.\"\nassert solution(7) == \"NE\", \"Error: Your solution is incorrect.\"\nassert solution(8) == \"NE\", \"Error: Your solution is incorrect.\"\nassert solution(9) == \"NE\", \"Error: Your solution is incorrect.\"\nassert solution(10) == \"NE\", \"Error: Your solution is incorrect.\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n0\\n2\\n1\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1\\n'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n\"\"\"\n) == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Please check your code and try again.\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\") == 2\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == 1\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == 2\n\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3') == '2'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == 2\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n1 4 2\") == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == '2\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == solution"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"40.500000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"40.500000000\", \"Your code is not correct. Please fix it and resubmit.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"40.500000000\\n\", \"Output 1 is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000\\n'\nassert solution('4 10\\nD 1 1\\nD 2 1\\nD 3 1\\nD 4 1\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"40.500000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '40.500000000', 'Your solution is incorrect.'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == '5 4 9 3 1 10 7 6 2\\n'\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == 'fail\\n'\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5 4 9 3 1 10 7 6 2'\nprint('ok')"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == '5 4 9 3 1 10 7 6 2\\n'\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == 'fail\\n'\nassert solution('10\\na 2 10 3\\na 1 6\\na 2 1 5\\nc 2 1 9\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == 'fail\\n'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(open(\"input2.txt\", \"r\")) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(f\"{len(set(input()))} different times seen\")\nfor time in input():\n    hour, minute = map(int, time.split(':'))\n    if hour < 0 or hour > 23 or minute < 0 or minute > 59:\n        print(\"Invalid time\")\n        continue\n    minute = min(59, max(0, minute))\n    new_hour = min(hour + minute / 60, 23)\n    new_minute = minute % 60\n    new_time = f\"{new_hour:02d}:{new_minute:02d}\"\n    print(new_time)"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\\n01:00\") == \"3\\n00:00\\n01:00\\n01:01\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('00:00') == '00:00'\nassert solution('01:01') == '01:01'\nassert solution('00:08') == '00:08'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(1)2\") == \"4,4:4,4:\"\nassert solution(\"(1)2()3\") == \"4,8:8,8:4,4:4,4:\"\nassert solution(\"(()))\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"((()))()\") == \"4,8:8,8:4,4:4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(()) == \"4,8:8,8:\"\nassert solution(() == \"4,4:\")\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(()) == \"4,8:8,8:\"\nassert solution(()) == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == 5"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 3\\n\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 04 1\\n\") == \"185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 2\\n\") == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5\\n'\nassert solution(stdin) == '185\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1 1\n    26 02 03 03 1\n    27 02 03 03 2\n    28 02 03 03 3\n    29 02 03 03 4\n    30 02 03 03 5\n    31 02 03 03 6\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    1 1\n    26 02 03 03 1\n    27 02 03 03 2\n    28 02 03 03 3\n    29 02 03 03 4\n    30 02 03 03 5\n    31 02 03 03 6\n    \"\"\"\n) == 185\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == -1"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"5\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"185\", \"Test 2 failed\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''1 1\n26 02 03 03 1''') == '5\\n'\nassert solution('''1 1\n26 02 03 03 2''') == '185\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '5'\nassert solution(sample_input_2) == '185'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''5 6 1 2 3 4'''"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n5 6 1 2 3 4\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"5 6 1 2 3 4 \"\"\"\n\nassert solution(\"\"\"4 2\n3 4 1 2\n\"\"\") == \"\"\"2 3 4 1 \"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\nSample Output 1:\\n5 6 1 2 3 4 \") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\nSample Output 2:\\n2 3 4 1\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n5 6 1 2 3 4 \n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\nSample Output 1: 5 6 1 2 3 4\\n\\nSample Input 2: 4 2\\n3 4 1 2\\nSample Output 2: 2 3 4 1\") == \"5 6 1 2 3 4\\n\\n2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Impossible\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1374 2') == '7413', 'Test 1 Failed'\nassert solution('210 1') == '201', 'Test 2 Failed'"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7413\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1374 2\\n\") == \"7413\"\nassert solution(stdin=\"210 1\\n\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}\\nExpected output: {output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0.666666666666667\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.666666666666667\"\nassert solution(stdin) == \"0.733333333333333\"\n\nstdin = \"\"\"4\n0 0\n0 1\n1 1\n1 0\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"0.666666666666667\"\nassert solution(sample_input_2) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Expected output: {output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0.666666666666667\nassert solution(open(\"input2.txt\", \"r\")) == 0.733333333333333\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1\nprint(\"Sample Input 1 passed\")\n\nassert solution(sample_input2) == expected_output2\nprint(\"Sample Input 2 passed\")"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin.read()) == '9\\n'\nassert solution(stdin.read()) == '21\\n'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '9\\n'\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\nassert solution() == 21"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.strip()) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\"\nassert solution(stdin.strip()) == \"9\"\nassert solution(stdin.strip()) == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == 9\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == 21"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\\n\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {i+1} failed.\" for i, (input_data, output_data) in enumerate([\n    (\n        \"2 3 4\\n10 1 3\\n0 1 20\",\n        9\n    ),\n    (\n        \"2 3 100\\n10 1 10\\n10 1 10\",\n        21\n    )\n])"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\", \"Incorrect output\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3\\n4\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 3\n1 2 5\n2 3 5\n3 4 5\n\"\"\") == \"3\\n4\\n3\\n\"\nassert solution(\"\"\"4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n3\n4\n3\n2\n1\n'''"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"The solution is not correct. Expected: {expected_output}, Received: {solution}\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['3\\n4\\n3\\n2\\n1\\n']"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\", \"Test case 1 failed\"\nassert solution() == \"2\\n3\\n2\\n1\", \"Test case 2 failed\"\nassert solution() == \"2\\n3\\n2\\n1\", \"Test case 3 failed\"\nassert solution() == \"2\\n3\\n2\\n1\", \"Test case 4 failed\"\nassert solution() == \"2\\n3\\n2\\n1\", \"Test case 5 failed\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 6\nassert solution(5) == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case+1} failed\"\nfor case in range(1, 11):\n    expected_output = output[case-1]\n    stdin = input()\n    output = solution(stdin)\n    assert output == expected_output, f\"Test case {case+1} failed\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"24\", \"The output should be 24, but it is {}.\".format(solution())"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Testcase failed: {output}\\nOutput: {solution(stdin)}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '6'\nassert solution(sample_input_2) == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\"\nprint(\"OK\")"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n') == 2\nassert solution('5\\n3 4 5 1 2\\n') == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"1\", \"Testcase 2 failed\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 2\nassert solution(2) == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == 2\nassert solution(\"5\\n3 4 5 1 2\\n\") == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed\" for i, (input, expected) in enumerate(test_cases)"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == 9\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n') == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == 9\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == '9\\n'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '9'\nassert solution(sample_input_2) == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution: {solution(stdin)}\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(str(input()))}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    stdin=\n    \"4\\n\"\n    \"2 1 3 4\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"3 4\\n\"\n    ) == \"6\\n\"\n\nassert solution(\n    stdin=\n    \"4\\n\"\n    \"3 4 5 6\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    ) == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\", \"Solution should return the correct output.\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\", \"Solution is incorrect\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6\nassert solution() == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin.read()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin.read())}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_list, stdout_list)\n\nfrom typing import List"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5 lines of code to test the correctness of solution"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output} \\nActual output: {solution(input())}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n2\n1 10\n5 8\n\"\"\"\n\nsample_output_1 = \"\"\"\n18\n8\n\"\"\"\n\nsample_input_2 = \"\"\"\n3\n17 144\n121 121\n89 98\n\"\"\"\n\nsample_output_2 = \"\"\"\n265\n25\n10\n\"\"\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '18\\n8\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\\n\"\n\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.5\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.5\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.50000000\nassert solution() == 12.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == 0.5, \"Test case 1 failed.\"\nassert solution(sample_input2) == 12.5, \"Test case 2 failed.\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n') == '2\\n'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 2, \"Output should be 2\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"2\", \"Output: 2\"\n\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\", \"Output: 1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"6\"\nassert solution(sample_input2) == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '6', 'Expected output: 6, but got:'+ solution(sample_input_1)\nassert solution(sample_input_2) == '30', 'Expected output: 30, but got:'+ solution(sample_input_2)"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"6\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == 6\nassert solution('2 2 2') == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2020, 2020, 2020) == 2021, \"Incorrect output\"\nassert solution(2, 1, 9999999) == \"impossible\", \"Incorrect output\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2020 2020 2020') == '2021 2020 2020'\nassert solution('2\\n1 9999999') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed for {stdin}\\nExpected output: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected output: '{output()}'\\nGot: '{solution(input())}'\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Sample Input 1\\n3\\n2020 2020 2020\\nSample Output 1\\n2021 2020 2020\\nSample Input 2\\n2\\n1 9999999\\nSample Output 2\\nimpossible') == '2021 2020 2020'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2020 2020 2020\\n') == '2021 2020 2020\\n'\nassert solution('2\\n1 9999999\\n') == 'impossible\\n'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed. Input: {stdin}, Output: {output}\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#\\n>>>>~\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"2\\n\" # Output: \"2\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Sample Input 1') == 'Sample Output 1'\nassert solution('Sample Input 2') == 'Sample Output 2'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2 2 0\\n>@\\n>~') == '2\\n'\nassert solution(stdin='3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2\"\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution.input()) == solution.output()\n\nclass Solution:\n    def solution(self, rows: int, cols: int, x_init: int) -> str:\n        MOD = 1000003\n        directions = {'north': (1, 0), 'east': (0, 1),'south': (-1, 0), 'west': (0, -1)}\n\n        def dfs(x: int, y: int, visited: set) -> int:\n            if not (0 <= x < cols and 0 <= y < rows):\n                return 0\n\n            if x == x_init and y == rows - 1:\n                return 1\n\n            if (x, y) in visited:\n                return 0\n\n            visited.add((x, y))\n            next_moves = []\n\n            for dx, dy in directions.values():\n                nx, ny = x + dx, y + dy\n                if 0 <= nx < cols and 0 <= ny < rows:\n                    if C[nx][ny] == '>':\n                        next_moves.append(('east', nx, ny))\n                    elif C[nx][ny] == '<':\n                        next_moves.append(('west', nx, ny))\n\n            return sum(dfs(nx, ny, visited) for nx, ny, _ in next_moves) % MOD\n\n        rows, cols, x_init = map(int, input().split())\n        C = [[input() for _ in range(cols)] for _ in range(rows)]\n\n        return str(dfs(x_init, rows - 1, set()))\n\nsolution = Solution()\nsolution.input = '''\n2 2 0\n>@\n>~\n'''\nsolution.output = '''\n2\n'''"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\\n5025=30\\n\") == \"14+31+75=120\\n5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter equation: \")) == \"14+31+75=120\"\nassert solution(input(\"Enter equation: \")) == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\nfrom typing import List"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120\\n'\nassert solution('5025=30') == '5+025=30\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\") == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2\\n\"\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n1 2\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1 2\n\"\"\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\n'\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\n'\nassert solution('6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '-1\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == output_1\nassert solution(sample_input_2) == output_2"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\\n\", \"Test case 1 failed\"\nassert solution() == \"-1\\n\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 2\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\", \"Test 1 failed\"\nassert solution(\"1\") == \"0\", \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1101') == '1\\n'\nassert solution('1') == '0\\n'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1101') == '1\\n', \"Test 1 failed\"\nassert solution('1') == '0\\n', \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == 1, \"Test 1 failed\"\nassert solution(\"1\") == 0, \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == 1, \"Expected output: 1, got: \" + solution(\"1101\")\nassert solution(\"1\") == 0, \"Expected output: 0, got: \" + solution(\"1\")"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n0\\n2\\n\\n3\\n2\\n3\\n'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\\n1\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1') == '1\\n0\\n2'\n\nfrom typing import List"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected_output, f\"Solution for the problem {problem_num} is incorrect. Expected output:\\n{expected_output}\\n\\nGot output:\\n{solution(open('input.txt', 'r'))}\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output 1:\\n1\\n0\\n2\\n\\nOutput 2:\\n3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\") == \"3\\n1\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n3 3\\n1 3\") == \"1\\n2\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case {index + 1} failed\"\nfor i, expected in enumerate(expected):\n    assert solution(stdin) == expected, f\"Test case {index + 1} failed\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\\n3\\n3\\n\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output 1:\\n1\\n0\\n2\\n\\nOutput 2:\\n3\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed for function `solution(stdin: str) -> str:\\n    assert solution(input()) == output(),\\n    f'Solution output does not match expected output for function `solution(stdin: str) -> str:\\n        assert solution(input()) == output(),\\n        f'Solution output does not match expected output. Input: {input()},\\n        Solution output: {solution(input())},\\n        Expected output: {output()}'\\n        \""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([4, 1], [1, 2, 3, 4]) == \"4.000000\"\nassert solution([4, 2], [2, 4, 3, 4]) == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    1 2 3 4\n    \"\"\"\n) == \"4.000000\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    2 4 3 4\n    \"\"\"\n) == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Expected output is different from the solution\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n3 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 3 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n3 3 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n2 3 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n2 3 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n2 3 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n2 3 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 2 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\nassert solution('''\n2 3 5 7\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n\nassert solution('''\n2 "
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    ''') == '0.0'\n\nassert solution(\n    '''\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.0 0.0\n    0.0 2.0\n    ''') == '0.750'\n\nassert solution(\n    '''\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    ''') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected1, \"Expected: {}, Got: {}\".format(expected1, solution(sample_input1))\nassert solution(sample_input2) == expected2, \"Expected: {}, Got: {}\".format(expected2, solution(sample_input2))\n\nsample_input1 = \"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\"\n\nsample_input2 = \"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\"\n\nexpected1 = 0.75\nexpected2 = 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.750, \"Sample Input 1\\n2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\"\n\nassert solution() == 0.625, \"Sample Input 2\\n2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.750, \"The output is incorrect.\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625, \"The output is incorrect.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75, \"Test 1 failed.\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625, \"Test 2 failed.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == '0.750'\n\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.75\nassert solution() == 0.625"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"2\", \"The solution for sample input 1 is incorrect\"\nassert solution(sample_input2) == \"37\", \"The solution for sample input 2 is incorrect\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2\\n'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37\\n'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37\n\nfrom typing import List"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '2\\n'\nassert solution(open('sample_input2.txt', 'r')) == '37\\n'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == ['10', '14', '18']\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == ['1', '4', '9', '16']"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\n\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\")) == \"10\\n14\\n18\\n\"\nassert solution(input(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\")) == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output\nprint(\"Test Passed\")"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 2 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 2 4\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n4 5\\n\") == \"2\"\n\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'TODO: solution'\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2\\n'\n\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(Input()) + '\\n' + str(Input()) + '\\n' + str(Input())) == str(Output()) + '\\n' + str(Output()) + '\\n' + str(Output())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"no\", \"Expected no, but got: \" + solution(stdin)"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"yes\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n2 1\\n3 2\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution(4, 3) == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\\n1 3\\n2 1\\n3 2\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'YES\\n1 3\\n2 1\\n3 2'\n\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"The function should return {sample_output}, but it returns {solution(sample_input)}\"\n\nsample_input = \"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\"\n\nsample_output = \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(sample_input) == sample_output, f\"The function should return {sample_output}, but it returns {solution(sample_input)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\n\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(read_input()) == \"consistent\"\n\nfrom typing import List"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"inconsistent\"\nassert solution(open(\"example.txt\", \"r\")) == \"consistent\"\n\nfrom typing import List"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\"\n\nfrom typing import List"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.57079633\", \"Your solution is incorrect. Please see the examples for input and output.\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0''') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633, \"Sample Output 1\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885, \"Sample Output 2\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1.57079633', 'The output should be 1.57079633'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1.57079633\"\n\nfrom typing import List"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed: got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\", \"The solution should be 0\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\", \"Incorrect output\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == '4'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\\n\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11\\nsabcabcfabc') == 3, \"The solution should return 3 for the given example 1\"\nassert solution('18\\ntrutrutiktiktappop') == 4, \"The solution should return 4 for the given example 2\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\nsabcabcfabc\\n\") == \"3\\n\"\nassert solution(\"18\\ntrutrutiktiktappop\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11\\nsabcabcfabc') == 3\nassert solution('18\\ntrutrutiktiktappop') == 4\n\nfrom typing import List"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n9 8 7 6 5 4 3 2 1\\n') == '10\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n') == '10\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 4 3 2 1\\n10 9 8 7 6 5 "
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n2 3 1\\n3 1 2\"\n) == \"2\"\n\nassert solution(\n    \"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\"\n) == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 1\n0 10 20\n0 10''') == '4'\nassert solution('''6 1\n0 10 20 26 40 50\n0 40''') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"output\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\", \"The output is not correct\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40\\n') == '9\\n'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}:\\nGot: {solution(stdin)}\\nExpected: {expected}\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4\\n'\n\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\" +\n                 \"shuffle([1,2,1,2])\") == \"not equal\\n\"\n\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n\" +\n                 \"[1,2,3,4,5,6]\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\\nSample Output 1: not equal') == 'not equal'\nassert solution('concat(sorted([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\\nSample Output 2: equal') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\"\n\nassert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\") == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n\\n[1,2,3,4,5,6]\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"not equal\"\nassert solution(input()) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\", \"Solution 1\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\", \"Solution 2\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Oh no\", \"Test failed\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Oh no\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\n\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == 'Oh no'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"Oh no\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"Oh no\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Oh no', \"Test 1 failed\"\n\nassert solution(stdin) == '1', \"Test 2 failed\"\n\nassert solution(stdin) == '1', \"Test 3 failed\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\\n\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3\\n'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n1 1 0\\n2 1 0\\n3 1 0\\n4 1 0\\n5 1 0\\n6 1 0\\n7 1 0\\n8 1 0\\n9 1 0\\n10 1 0\\n11 1 0\\n12 1 0\\n13 1 0\\n14 1 0\\n15 1 0\\n16 1 0\\n17 1 0\\n18 1 0\\n19 1 0\\n20 1 0\\n21 1 0\\n22 1 0\\n23 1 0\\n24 1 0\\n25 1 0\\n26 1 0\\n27 1 0\\n28 1 0\\n29 1 0\\n30 1 0\\n31 1 0\\n32 1 0\\n33 1 0\\n34 1 0\\n35 1 0\\n36 1 0\\n37 1 0\\n38 1 0\\n39 1 0\\n40 1 0\\n41 1 0\\n42 1 0\\n43 1 0\\n44 1 0\\n45 1 0\\n46 1 0\\n47 1 0\\n48 1 0\\n49 1 0\\n50 1 0\\n51 1 0\\n52 1 0\\n53 1 0\\n54 1 0\\n55 1 0\\n56 1 0\\n57 1 0\\n58 1 0\\n59 1 0\\n60 1 0\\n61 1 0\\n62 1 0\\n63 1 0\\n64 1 0\\n65 1 0\\n66 1 0\\n67 1 0\\n68 1 0\\n69 1 0\\n70 1 0\\n71 1 0\\n72 1 0\\n73 1 0\\n74 1 0\\n75 1 0\\n76 1 0\\n77 1 0\\n78 1 0\\n79 1 0\\n80 1 0\\n81 1 0\\n82 1 0\\n83 1 0\\n84 1 0\\n85 1 0\\n86 1 0\\n87 1 0\\n88 1 0\\n89 1 0\\n90 1 0\\n91 1 0\\n92 1 0\\n93 1 0\\n94 1 0\\n95 1 0\\n96 1 0\\n97 1 0\\n98 1 0\\n99 1 0\\n100 1 0\\n101 1 0\\n102 1 0\\n103 1 0\\n104 1 0\\n105 1 0\\n106 1 0\\n107 1 0\\n108 1 0\\n109 1 0\\n110 1 0\\n111 1 0\\n112 1 0\\n113 1 0\\n114 1 0\\n115 1 0\\n116 1 0\\n117 1 0\\n118 1 0\\n119 1 0\\n120 1 0\\n121 1 0\\n122 1 0\\n123 1"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"3\"\"\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 1\n    3 4 1\n    4 1 2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    1 2 1\n    2 3 1\n    2 4 1\n    2 5 1\n    4 5 1\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == expected_1\nassert solution(input_2) == expected_2\n\nfrom typing import List"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"The output should be 3\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\\n5\\n2 1 1 1 3\\nSample Output 1\\n2\\n\\nSample Input 2\\n1\\n22\\nSample Output 2\\n4\") == \"2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 1 1 3\\n1\\n22') == '2'\nassert solution('1\\n22\\n') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Sample Input 1') == '2\\n'\nassert solution('Sample Input 2') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == 2\nassert solution(\"1\\n22\\n\") == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\", \"Sample Input 1: 5\\n2 1 1 1 3\\nExpected Output: 2\"\nassert solution(\"1\\n22\\n\") == \"4\", \"Sample Input 2: 1\\n22\\nExpected Output: 4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\\n\"\nassert solution(\"1\\n22\") == \"4\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5\") == 3, \"Incorrect solution 1\"\nassert solution(\"4 1 2 3 4\") == 2, \"Incorrect solution 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\", \"Input not correct.\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Input not correct.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin), \"Test case not passed.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5\") == \"3\\n\"\nassert solution(\"4 1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n3 1 5\\n2\\n1 2 3 4\\n\"\n\nimport math"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5\\n') == '3\\n'\nassert solution('4\\n1 2 3 4\\n') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == [\"- +d-\", \"def\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"output.txt\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d- \\n\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"def <any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-', '<any>', '<empty>']\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == ['<any>', '<empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"a+b-c\\na-b+d-c\\n\"\n) == [\"- +d-\", \"- +d-\", \"- +d-\", \"- +d-\", \"- +d-\"]\n\nassert solution(\n    \"knuth-morris-pratt\\nknuthmorrispratt\\n\"\n) == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"def\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a+b-c') == '- - - -'\nassert solution('a-b+d-c') =='- + - -'\nassert solution('knuth-morris-pratt') == 'def'\nassert solution('knuthmorrispratt') == '<any>'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n\nprint(solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\"))"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'\nassert solution('5 1\\n4 1 1\\n6\\n+\\n2\\n\\n\\n') == '4\\n2\\n5\\n3\\n2\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\n\\n\\n') == '3\\n0\\n1\\n1\\n1\\n'\nassert solution('1 1\\n+\\n0\\n\\n-\\n1\\"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"The solution should return 0\\n1\\n3\\n2\\n3\\n5\\n3\\n.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\n\nassert solution(\"\"\"3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input_1.txt')) == \"\"\"2\n4 6\"\"\"\n\nassert solution(open('sample_input_2.txt')) == \"\"\"0\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Sample Input {input()} output:\\n{output()}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\"\n) == \"2\\n4 6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2\\n4 6\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == [\"2\", \"4 6\"]"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution '{solution(input())}' is not correct. Expected: '{expected}'.\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Test Failed\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\n\nassert solution(stdin=\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for the input {input()}\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Actual output: {solution(input())}\"\nfor q in range(1, 4):\n    for x in range(1, 11):\n        if q == 1:\n            assert solution(f\"{q} {x}\") == f\"{x}\", f\"Expected output: {x}, Actual output: {solution(f\"{q} {x}\")}\"\n        else:\n            assert solution(f\"{q} {x}\") == f\"{x}\", f\"Expected output: {x}, Actual output: {solution(f\"{q} {x}\")}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '4\\n5\\n6\\n1\\n2\\n3\\n'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '4\\n5\\n6\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed. Input: {input()}, Output: {output}, Test case: solution\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Test 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Test 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Sample Input 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Sample Input 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\\n\"\nassert solution(\"PPPPCCCC\") == \"8\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\\n\"\nassert solution(\"PPPPCCCC\") == \"8\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Incorrect solution. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"1 2 3\"], \"Expected Output: ['1 2 3']\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\\n\") == \"1 2 3\\n\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == \"3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == ['1', '2', '3']\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == ['3']\nassert solution(\"3 2 1\\n1 2\\n2 3\\n1\\n\") == ['1']\nassert solution(\"3 2 1\\n1 3\\n2 3\\n4\\n\") == []"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1 2 3\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sherlock_holmes.txt', 'r')) == ['3']\n\nfrom collections import defaultdict"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 2 1\n    1 2\n    2 3\n    2\n    \"\"\"\n) == \"1 2 3\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 3\n    2 3\n    3\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 3\n    2 4\n    4\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == ['3']"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\") == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\") == 4\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"39\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\", \"Test failed\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\", \"Test failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\n\nassert solution('''5 1\n1 0 1 1 1''') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '''\n1 1 2\n2 3 1\n'''\n\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '''\n1 1 2\n2 4 3\n'''"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"def solution(stdin: str) -> str:\\n\\tpass\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"1 1 2\\n2 4 3\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"1 1 2\\n2 4 3\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"\"\"\\\n1 1 2\\\n2 3 1\n\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''1 1 2\n2 3 1'''"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(input()) == \"\"\"1 1 2\n2 4 3\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\"\nprint(\"Test passed\")"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'indistinguishable', \"Solution should return 'indistinguishable'\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\n\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\n\nassert solution('''\n2 0 1\n1 1 1\n0 0 0\n''') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 1 2\n    1 2 1\n    0 2 0\n    0 1 0\n    \"\"\"\n) == \"indistinguishable\"\n\nassert solution(\n    \"\"\"\n    2 0 1\n    1 1 1\n    0 0 0\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nprint(\"Test Passed\")"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10000) == '+0000', \"10000\"\nassert solution(1111) == '+000-', \"1111\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"Pass\" if \"Pass\" in output else \"Fail\")"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10000) == \"+0000\"\nassert solution(1111) == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n\"\"\"\n) == \"9\"\n\nassert solution(\n\"\"\"\n2 1 1 1\n2 2\n1\n1\n1 2 1\n\"\"\"\n) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\n\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"9\"\"\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nprint(\"All tests passed.\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nassert solution() == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\\n\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2\\n'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7\\n'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n\"\"\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n8\\n1 2 4 1 1 2 5 1\") == \"2\\n\"\nassert solution(\"10\\n1 2 2 3 5 1 3 4 6 2\\n10 20\\n10 30\\n10 40\") == \"4\\n\"\nassert solution(\"10\\n5 5 5 5 5 5 5 5 5\\n10 10 10 10 10 10 10 10 10\\n10 20 20 20 20 20 20 20 20\") == \"100\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(1000000) == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"5\n2 2 1 2 3\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"8\n1 2 4 1 1 2 5 1\n\"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Input is not valid\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"NE\", \"Your implementation is wrong.\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'NE'\nassert solution(stdin) == 'NE'\nassert solution(stdin) == 'NE'\nassert solution(stdin) == '3'\nassert solution(stdin) == '1'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=stdin) == expected_output, f\"Test case {case_num} failed.\"\nfor case_num, test_case in enumerate(tests, start=1):\n    stdin, expected_output = test_case\n    print(f\"Test case {case_num}:\")\n    result = solution(stdin)\n    print(f\"Output: {result}\")"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 'NE'\nassert solution(1) == 'NE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"5\", \"Test case 2 failed\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Sample Output 1: 2\"\nassert solution() == \"5\", \"Sample Output 2: 5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Output the maximum number of points you could catch fish from.\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.0000000000\", \"Your solution is incorrect. It should return '2.0000000000', but it returned '{}'.\".format(solution())"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"Test failed\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution is not correct. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n4\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n\nfrom typing import List"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\n\nassert solution('''\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"The output is incorrect. Expected: '{expected}', but got: '{solution(stdin)}'.\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\"\nassert solution(\"1\\n0.0 0.0 0.0\") == \"1.0000000000\\n\"\nassert solution(\"10\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\") == \"1.0000000000\\n\"\nassert solution(\"10000\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 "
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n\") == \"2.0000000000\"\nassert solution(\"1\\n1.0 1.0 1.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n\") == \"1.0000000000\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == \"1\\n5\\n\", \"Incorrect solution\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\n\nfrom typing import List"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n5\\n'\nassert solution(input()) == '9\\n19\\n'"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'\n\nfrom typing import List"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(1) +'' + str(1)) == \"1\\n1\"\nassert solution(str(4) +'' + str(5)) == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1 \\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"1\\n1 \"\nassert solution(sample_input_2) == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\n\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(stdin=\"2 10 3 2\\n10 10 5 0\\n30 100 5 0\") == \"10\\n\"\nassert solution(stdin=\"2 10 3 2\\n10 10 5 0\\n10 10 5 0\") == \"4\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3, 1, 2) == 4\nassert solution(10, 10, 5, 0) == 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 10 3 2') == '4\\n', \"Test 1\"\nassert solution('10 10 5 0') == '10\\n', \"Test 2\"\nassert solution('1 2 3 4') == '1\\n', \"Test 3\"\nassert solution('5 6 7 8 9') == '1\\n', \"Test 4\"\nassert solution('10 10 10 10 10') == '10\\n', \"Test 5\"\nassert solution('10 0 0 0 0') == '10\\n', \"Test 6\"\nassert solution('1000 1000 1000 1000 1000') == '1000\\n', \"Test 7\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"2 10 3 2\"\"\"\n) == \"\"\"4\"\"\"\n\nassert solution(\n    \"\"\"10 10 5 0\"\"\"\n) == \"\"\"10\"\"\"\n\nassert solution(\n    \"\"\"3 3 3 0\"\"\"\n) == \"\"\"6\"\"\"\n\nassert solution(\n    \"\"\"0 1 0 0\"\"\"\n) == \"\"\"0\"\"\"\n\nassert solution(\n    \"\"\"50 1000000000 20 3\"\"\"\n) == \"\"\"1000000000\"\"\"\n\nassert solution(\n    \"\"\"10 10000000 50 3\"\"\"\n) == \"\"\"20000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 0\"\"\"\n) == \"\"\"3000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"6000000000\"\"\"\n\nassert solution(\n    \"\"\"1000000000 1000000000 3 3\"\"\"\n) == \"\"\"600000000"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output not provided\", \"Output not provided\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"10 10 5 0\") == \"10\\n\", \"Sample Input 2\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected output: 4\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"The output is '{solution(stdin)}', but the expected output is '{expected}'.\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10, \"Expected Output: 10\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\"\n\nfrom typing import List"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Sample Input 1:\\n\")) == \"10\\n\"\nassert solution(input(\"Sample Input 2:\\n\")) == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10\\n'\nassert solution('6 100 9294\\n23689\\n') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\") == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 20\\n0123456789') == '10'\nassert solution('6 100 9294\\n23689') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10\\n'\nassert solution('6 100 9294\\n23689\\n') == '111\\n'"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 3.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"\"\"\n1.500000 2.666667\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"\"\"\n1.500000 3.666667\n\"\"\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.000000 0.000000\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.5 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.5 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_num} failed: expected output is {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\", \"The solution is incorrect.\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\", \"The solution is incorrect.\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == '3\\n'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n101010\n111001\n101001\n''') == '3'\n\nassert solution('''\n4 5\n10010\n01010\n10101\n01001\n''') == '3'\n\nassert solution('''\n3 6\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n''') == '3'\n\nassert solution('''\n3 6\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n101010\n111001\n101001\n1"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nprint(\"Output 1:\")\nprint(solution(open(\"input.txt\", \"r\")))\nprint(\"Output 2:\")\nprint(solution(open(\"input.txt\", \"r\")))"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 3\\n11 0\\n101 0\\n1001 1\\n101010\\n111001\\n101001\\n10010\\n') == 3\nassert solution('1 3\\n10 1\\n110 1\\n1001 0\\n101010\\n111001\\n101001\\n') == 3\nassert solution('1 4\\n100 1\\n0101 1\\n10101 0\\n01001 0\\n10010\\n101010\\n111001\\n') == 3\nassert solution('1 2\\n101010\\n111001\\n101001\\n') == -1"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == '3\\n'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == '3\\n'\nassert solution('5 6\\n00000\\n11111\\n00000\\n11111') == '-1\\n'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == 3\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but it is {solution(input())}\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''3 4\n3 -1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''-3 -1\n3 1'''\n\nassert solution()"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n') == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == [\"-3 -1\", \"3 1\"]\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\"\n\nsample_output1 = \"\"\"\n-3 -1\n3 1\n\"\"\"\n\nsample_input2 = \"\"\"\n4\n2 4\n6 -1\n3 5\n-1 -1\n\"\"\"\n\nsample_output2 = \"\"\"\n3 4\n3 -1\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution('Sample Input 1'))\\nprint(solution('Sample Input 2'))\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"2 5.086781\"\n\nassert solution(\n    \"\"\"\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '''2 5.086781'''\n\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '''1 12.715255'''"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2 5.086781', 'Incorrect output'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\\n\", \"Incorrect output: \" + solution(stdin)"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == 8\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    6\n    0 0 1 0\n    0 0 0 1\n    1 0 1 1\n    0 1 1 1\n    0 0 1 1\n    1 0 0 1\n    \"\"\") == \"8\"\n\nassert solution(\"\"\"\n    4\n    5 1 7 1\n    1 1 5 1\n    4 0 4 4\n    7 0 3 4\n    \"\"\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == 8\n\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\", \"Solution does not satisfy the expected output\"\nprint(\"Test passed\")"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\\n\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '8'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n\"\"\") == 8\n\nassert solution(\"\"\"\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n\"\"\") == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\\n\", \"Test 1 failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"4 3\"\nassert solution(2) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == (4, 3)\nassert solution(2) == (\"impossible\",)\n\nfrom typing import Tuple"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"4 3\\n\"\nassert solution(\"10\") == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"4 3\"\nassert solution(4) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 3\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''4 3\nimpossible\n'''"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(1)) == \"impossible\"\nassert solution(str(2)) == \"impossible\"\nassert solution(str(5)) == \"impossible\"\nassert solution(str(10)) == \"impossible\"\nassert solution(str(100)) == \"impossible\"\nassert solution(str(1000)) == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected output: {expected}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 16, \"Error: 16!= 16\"\nassert solution(2) == 109, \"Error: 109!= 109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected output: '{output}', got: '{solution(input)}'\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"16\", \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()} and expected {output()}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected output: {expected_output_1}, Got: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected output: {expected_output_2}, Got: {solution(sample_input_2)}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '16', 'Test Case 1 failed'\nassert solution == '109', 'Test Case 2 failed'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"The given sample input and output does not match.\\nInput1: {input1}\\nOutput1: {output1}\\n\"\n\nassert solution(input2) == output2, f\"The given sample input and output does not match.\\nInput2: {input2}\\nOutput2: {output2}\\n\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected: '{expected_output}', Received: '{solution(stdin)}'\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\" for input, output in zip(stdin_data, expected_output)"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input 1') == 'Output 1'\nassert solution('Input 2') == 'Output 2'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nfrom typing import List"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == [\"1 2\"]\n\nassert solution(r\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n\"\"\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"  # expected output: \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == [\"impossible\"]\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = '''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n'''\n\nsample_input_2 = '''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n'''\n\nexpected_output_1 = '''1 2\n'''\n\nexpected_output_2 = '''impossible\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2'\nassert solution() == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    \"\"\"\n) == \"1 2\"\n\nassert solution(\n    \"\"\"\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n        2 3\n        6 7\n        0 1 1\n        0 2 2\n        1 1 3\n        2 1 2\n        2 2 1\n        3 2 3\n        4 2 1\n        ''') == '1 2\\n'\n\nassert solution('''\n        2 1\n        20 3\n        0 1 1\n        10 1 0\n        10 2 1\n        ''') == 'impossible\\n'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == (5, 2)\nassert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\"\nassert solution() == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"unique\"\nassert solution() == \"ambiguous\"\nassert solution() == \"unique\"\nassert solution() == \"unique\"\nassert solution() == \"unique\"\nassert solution() == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n    3\n    chocolate\n    cookies\n    icecream\n    ''') == 'impossible'\n\nassert solution('''\n    3\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n    3\n    chocolate\n    icecream\n    ''') == 'unique'\n\nassert solution('''\n    3\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n    3\n    chocolate\n    icecream\n    ''') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n    3\n    chocolate\n    cookies\n    icecream\n    ''') == 'impossible'\n\nassert solution('''\n    3\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n    3\n    chocolate\n    icecream\n    cookies\n    ''') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n0 chocolate 1 icecream 2 cookies 3\\nchocolate cookies icecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate 1 icecream 2 cookies 2 chocolate 3\\nchocolate icecream cookies\") == \"unique\"\nassert solution(\"3\\n4\\n0 chocolate 1 icecream 2 cookies 2 chocolate 3\\nchocolate cookies 3 icecream\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique\") == \"unique\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution '{solution(input())}' does not match the expected output '{expected_output}'.\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0\"\nassert solution(open(\"sample_input_1.txt\").read()) == \"0\"\nassert solution(open(\"sample_input_2.txt\").read()) == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\", \"The output should be 0.\"\nassert solution(\"1 2 10\") == \"1\", \"The output should be 1.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Your code is wrong. Please check the function and try again.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\"1 pan\"\"\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('..........XXX.......................XX..............................') == 3, \"Expected 3, got {}\".format(solution('..........XXX.......................XX..............................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\nassert solution('............................................................') == 0, \"Expected 0, got {}\".format(solution('............................................................'))\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"\n\ninput_1 = '''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n'''\n\ninput_2 = '''\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n'''\n\noutput_1 = '''\n1 pan\n'''\n\noutput_2 = '''\n3 zoom out\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 pan\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n16 17 18 "
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('............................................................\\n'\n                   '............................................................\\n'\n                   '....XXXX....................................................\\n'\n                   '....XXXX..................................XXXX..............\\n'\n                   '....XXXX...................................XXX..............\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n') == '3 pan', \"The correct number of pan gestures is 3, but got {}\".format(solution(''))\n\nassert solution('............................................................\\n'\n                   '............................................................\\n'\n                   '...............................................XX...........\\n'\n                   '.....................................XXX......XXXX..........\\n'\n                   '....................................XXXX........X...........\\n'\n                   '........XXX....XXX....................X.....................\\n'\n                   '.........XXX...XX...........................................\\n'\n                   '............................................................\\n'\n                   '............XX..............................................\\n'\n                   '...........XXX..............................................\\n'\n                   '............................................................\\n'\n                   '............................................XX..............\\n'\n                   '...........................................XXXX.............\\n'\n                   '.............................................XX.............\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n') == '3 zoom out', \"The correct number of zoom gestures is 3, but got {}\".format(solution(''))\n\nassert solution('............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 pan\\n2 zoom out\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"..............XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX.........XXX"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 pan\\n'\nassert solution(open('example1.txt', 'r').read()) == '3 zoom out\\n'\nassert solution(open('example2.txt', 'r').read()) == '1 rotate clockwise\\n'\nassert solution(open('example3.txt', 'r').read()) == '2 rotate counter-clockwise\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == solution_1(open('input.txt', 'r').read())\nassert solution(open('input_2.txt', 'r').read()) == solution_2(open('input_2.txt', 'r').read())"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 20\\napplces are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n') == 'apples are great!\\n check out our fresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 10\\n!@#$%^&*()_+-=[]{};:,.<>/?\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\n++++++++++\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"   + \\n+++++\\n+++++\\n+++++\\n+++++\\n\"\nassert solution(\"8 10\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n    \\n    \\n    \\n    \\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n  +++ +\\n  + + +\\n  +++ +\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apples are great!\") == \"apples are great!\"\nassert solution(\"oranges are better!\") == \"oranges are better!\"\nassert solution(\"#oranges>apples\") == \"#oranges>apples\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n') =='apples are great!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected output: {expected_output1}, Received output: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Expected output: {expected_output2}, Received output: {solution(sample_input2)}\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++++++++++\\n+++++++++++++++\\n+++++++++++++++\\n+++++++++++++++\\n+++++++++++++++\\n+++++++++++++++\\n+++++++++++++++\\n\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"HH\") == \"2.0\"\nassert solution(stdin=\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HH') == 2.0, \"Expected 2.0, got {}\".format(solution('HH'))\nassert solution('H?') == 1.5, \"Expected 1.5, got {}\".format(solution('H?'))"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The correct answer is '2.0'.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'HH') == '2.0', 'The solution is not correct.'\nassert solution(b'H?') == '1.5', 'The solution is not correct.'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == 2.0, \"The solution should be 2.0\"\nassert solution(\"H?\") == 1.5, \"The solution should be 1.5\"\n\nimport math"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\", \"Test 1 failed\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\", \"Test 2 failed\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n0001\\n0001\\n0011\\n1111\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output 2\", \"Test case 2 is incorrect\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(sample_input2) == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\n\nimport re"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"2\"\nassert solution(input2) == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"Please implement the solution\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt', 'r')) == '2\\n'\nassert solution(open('test_input2.txt', 'r')) == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2', 'Incorrect output'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', \"Test failed\"\nassert solution() == '4', \"Test failed\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"2\\n\", \"Output should be 2\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"2\\n\", \"Test failed\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"1 0\\n2 0\\n0 2\") == \"-1\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4\\n'  # expected output: 4\n\nfrom typing import List"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == expected_output_2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\"\nassert solution(open('input.txt', 'r')) == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed. Expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n3\\n4\\n2\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n3\\n4\\n5\\n6\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed with input {stdin}, expected output {expected_output}\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Expected Output: 2\\nActual Output: \" + str(solution())\nassert solution() == 4, \"Expected Output: 4\\nActual Output: \" + str(solution())"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 3 4 2\") == \"2\"\nassert solution(\"1 2 1 3 1 3 1 2\") == \"4\"\nassert solution(\"6 1 2 3 3 4 2\") == \"2\"\nassert solution(\"8 1 2 1 3 1 3 1 2\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\\n\") == 2\nassert solution(stdin=\"3\\n1\\n2\\n4\\n6\\n8\\n\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"The output {solution(stdin)} is different from the expected output {expected}.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == 4\n\nassert solution('''2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2''') == 4"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\n\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Solution is incorrect for input {input}, expected {expected_output}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0\\n\\n4\\n2\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"\nfor i in range(1, 21):\n    assert solution(input()) == output(), f\"Test case {i} failed.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution() == '2'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"The given solution {solution} does not match the expected output {expected_output}.\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Expected {solution_output}, got {solution(solution_input)}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO: Implement the solution\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"1\\n\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"35\\n18\\n3\\n8\\n2\\n1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n8\\n2\\n1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1, 2, 1) == 35\nassert solution(1, 1, 2, 3) == 18\nassert solution(1, 1, 2, 7) == 8\nassert solution(1, 1, 2, 10) == 2"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35\\n18\\n3\\n8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35\\n18\\n3\\n\\n8\\n2\\n1'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\n\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n35\n18\n3\n\"\"\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Output mismatch\\nExpected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n4\n1\n2\n3\n4\n\"\"\"\n) == \"0\\n1\\n3\\n6\\n\"\n\nassert solution(\n    \"\"\"\n5\n3\n2\n4\n1\n5\n\"\"\"\n) == \"0\\n1\\n2\\n4\\n6\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0\\n1\\n3\\n6\"\nassert solution(5) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(4) == \"0\\n1\\n3\\n6\"\nassert solution(1) == \"0\\n1\\n3\\n6\"\nassert solution(2) == \"0\\n1\\n3\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n1\\n3\\n6'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: Expected: '{expected}', Received: '{solution(input())}'\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Example 1\"\n\nassert solution(stdin=\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Example 2\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(r\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n0\n1\n3\n6\n\"\"\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    1 3 2 2\n    1 1 3 2\n    2 4 7 3\n    3 3 5 3\n    ''') == '2 4 1 3'\nassert solution('''\n    4\n    0 0 1 1\n    1 2 0 3\n    2 2 3 3\n    4 0 3 1\n    ''') == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '2 4 1 3'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 4 1 3\\n4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([\n'1 3 2 2',\n'1 1 3 2',\n'2 4 7 3',\n'3 3 5 3'\n]) == ['2 4 1 3']\n\nassert solution([\n'0 0 1 1',\n'1 2 0 3',\n'2 2 3 3',\n'4 0 3 1'\n]) == ['4 3 1 2']"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3\\n4 3 1 2'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\\n\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"The solution is incorrect\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"The solution is incorrect\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Incorrect output\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Incorrect output\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890\") == \"Theta loses\"\nassert solution(\"T23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"T89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"TT23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"TT89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"TT23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ59\") == \"Theta loses\"\nassert solution(\"TT89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK499\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    1 charlatan 1\n    1 not charlatan 1\n    \"\"\"\n) == \"charlatan\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    1 and fabulist 1 fabulist 2\n    \"\"\"\n) == \"fabulist\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    1 xor truther 2\n    2 xor charlatan 3\n    3 xor truther 4\n    4 xor charlatan 1\n    \"\"\"\n) == \"truther\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\n\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\", \"truther\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"The output of the solution should be {}\".format(expected_output_1)\nassert solution(sample_input_2) == expected_output_2, \"The output of the solution should be {}\".format(expected_output_2)"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == expected1, f\"Test case 1 failed.\\nExpected: {expected1}\\nActual: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Test case 2 failed.\\nExpected: {expected2}\\nActual: {solution(input2)}\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\"\n\ninput_1 = '''\n1 2\n1 charlatan 1\n1 not charlatan 1\n'''\n\noutput_1 = 'charlatan\\n'\n\ninput_2 = '''\n2 1\n1 and fabulist 1 fabulist 2\n'''\n\noutput_2 = 'fabulist\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\", \"truther\", \"def solution(stdin: str) -> str:\\n    pass\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\"]\nassert solution(\"1 2\\n1 truther 1\\n1 not truther 1\") == [\"truther\"]\nassert solution(\"1 2\\n1 defender 1\\n1 not defender 1\") == [\"defender\"]"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input {input()} failed. Output {output} is incorrect.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == 4\n\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == 3"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Solution does not match the expected output for input 1. Received: {solution(input_1)}, Expected: {output_1}\"\nassert solution(input_2) == output_2, f\"Solution does not match the expected output for input 2. Received: {solution(input_2)}, Expected: {output_2}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The function should return '{output}', but instead returned '{solution(input())}'\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '4', 'Incorrect output for sample input 1'\nassert solution(sample_input_2) == '3', 'Incorrect output for sample input 2'\n\nsample_input_1 = '''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n'''\n\nsample_input_2 = '''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n'''"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\\n\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"16\", \"Sample Input 1: R..?..X... 100 100 7 100 8\"\n\nassert solution() == \"10\", \"Sample Input 2: X...?. 10 1000 1\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 16\nassert solution() == 10"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"16\", \"The correct output should be 16, but it is \" + str(solution())\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16\\n'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10\\n'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.414\"\nassert solution(stdin) == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"1.414\", \"Test 1 failed\"\nassert solution(sample_input2) == \"5.657\", \"Test 2 failed\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.414\", \"Invalid output\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == 1.414\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == 5.657"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, f\"Expected '{output1}', got '{solution(input1)}'.\"\nassert solution(input2) == output2, f\"Expected '{output2}', got '{solution(input2)}'.\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n') == '1.414\\n'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n') == '5.657\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 1 1 1 1\"\"\") == \"1.0\"\nassert solution(\"\"\"3 1 1 1\"\"\") == \"0.433\"\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\", \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\", \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.433\", \"Please solve the problem using the provided code.\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1.0\", \"Sample Output 1\"\nassert solution() == \"0.433\", \"Sample Output 2\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    6 5\n    1 1 5\n    2 1 5\n    1 2 4\n    2 3 5\n    3 2 30\n    3 3 5\n    '''\n) == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\n\nassert solution(\n    '''\n    8 10\n    1 1 15\n    2 2 30\n    1 2 8\n    2 1 7\n    3 2 8\n    2 3 7\n    4 2 100\n    3 3 15\n    '''\n) == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\nassert solution(\"3 4 3 1 1\\n2 1 2\\n1 1 1\\n3 3 3\\n1 2 1\\n2 3 2\\n4 2 1\\n2 1 1\\n3 2 3\\n\") == \"6\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Test Failed\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Test failed: {solution} should be {expected}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"barica_unusual\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 1"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1\n2 1\n2 1\n1 2\n3 2\n2 1 3\n1 3\n2 3\"\"\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n2 1\\n1 2\\n\\n2 1\\n1 2\\n2 3\\n\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n2 1 3\\n1 3\\n2 3\\n\\n1 3\\n2 3\\n') == '3'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\nArrange is a planet's popular Flash game. In Arrange, the player is given a permutation of numbers 1 to N and a list of allowed swaps. He then has to perform a sequence of swaps that transforms the initial permutation back to the ordered sequence 1, 2, 3, 4, 5,..., N.\n\nTo break the high score list, you need to perform the minimum amount of swaps possible. You can't do that, but you can write a program that does it for you!\n\n-----Input-----\nThe first line of input contains two integers, N ($2 \\le N \\le 11$), the length of the initial sequence and M ($1 \\le M \\le N(N \u2013 1) / 2$), the number of allowed swaps.\n\nThe second line of input contains a permutation of the numbers 1 to N.\n\nThe next M lines contain descriptions of allowed swaps. Each such line contains two distinct numbers A < B < N, indicating that you are allowed to swap the A-th number in the sequence with the B-th number. The input never contains two identical swaps.\n\nYou may assume that the input is such that a solution exists.\n\n-----Output-----\nOutput the minimum possible number of swaps to transform the permutation to 1, 2,..., N.\n\n-----Examples-----\nSample Input 1:\n2 1\n2 1\n1 2\nSample Output 1:\n1\n\nSample Input 2:\n3 2\n2 1 3\n1 3\n2 3\nSample Output 2:\n3\n'''"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Arrange\\n2 1\\n2 1\\n1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"1\\n\", \"The minimum number of swaps should be 1\"\nassert solution(sample_input2) == \"3\\n\", \"The minimum number of swaps should be 3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test case failed: {stdin}\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == [\"-1\"]"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1 1\\n1 1\\n2 2\\n1 2\\n1 2\\n\") == \"5\"\nassert solution(\"6 5\\n1 1\\n1 2\\n1 3\\n2 3\\n2 4\\n\") == \"-1\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\", \"The solution should return 4.00.\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\", \"The solution should return 9.00.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\", \"Expected output: '4.00', actual output: '{}'\".format(solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\"))\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\", \"Expected output: '9.00', actual output: '{}'\".format(solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\"))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"4.00\", \"The function is incorrect.\"\nassert solution(sample_input2) == \"9.00\", \"The function is incorrect.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"4.00\"\nassert solution(sample_input_2) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == 4.0, \"Expected output: 4.00, but got: {}\".format(solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n'))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00', 'Input 1'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00', 'Input 2'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == \"4.00\"\nassert solution(solution) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4.00'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\n\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for sample input {input()}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str=\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(input_str=\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\nfor _ in range(M):\n    command = input()\n    if command == \"PAINT\":\n        x1, y1, x2, y2, c = map(int, input().split())\n        x1, y1, x2, y2 = max(0, min(N-1, x1)), max(0, min(N-1, y1)), max(0, min(N-1, x2)), max(0, min(N-1, y2))\n        for i in range(y1, y2+1):\n            for j in range(x1, x2+1):\n                if i == y1 and j == x1:\n                    canvas[i][j] = c\n                else:\n                    canvas[i][j] = 1\nprint(*canvas)"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\nassert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPLOAD\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nPLOAD\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\nassert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPLOAD\\nPAINT 3 0 3 3 3\\nPLOAD\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nPLOAD\\nPAINT 2 1 1 2 2\\nLOAD 1\\nPLOAD\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\nassert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPLOAD\\nPAINT 3 0 3 3 3\\nPLOAD\\nPLOAD\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nPLOAD\\nPAINT 2 1 1 2 2\\nLOAD 1\\nPLOAD\\nPLOAD\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nLOAD\\nPAINT 2 1 1 2 2\\n') == '3 1 1\\n1 3 1\\n1 1 1'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"\"\"\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\"\"\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4, 3]) == \"1 4 2 3\"\nassert solution([5, 1]) == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output for sample input 1.\"\n\nassert solution(sample_input) == sample_output, \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == solution, \"Your solution is not correct\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1 4 2 3\"\nassert solution(4) == \"1 4 3 2\"\nassert solution(5) == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\"\nassert solution(\"5 1\\n4 3\\n\") == \"-1\"\nassert solution(\"4 2\\n3 4\\n\") == \"1 2 4\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(solution(input()))"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == '1 4 2 3'\nassert solution(6, 2) == '1 5'\nassert solution(4, 3) == '1 4'\nassert solution(6, 1) == '-1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\", \"Expected output: 1, received output: {}\".format(solution(stdin))"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 1\n\nassert solution(input()) == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"The number of right triangles can be formed by 3 points is not 1.\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Expected output: {}, Received output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nprint(\"All tests passed successfully\")\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution, \"No solution is provided\"\n\nN = int(input())\n\npoints = []\nfor _ in range(N):\n    x, y = map(int, input().split())\n    points.append((x, y))\n\nresult = 0\nfor i in range(len(points)):\n    for j in range(i+1, len(points)):\n        if points[i][0] * points[j][1] < points[j][0] * points[i][1]:\n            for k in range(i+1, j):\n                if points[i][0] * points[k][1] > points[k][0] * points[i][1]:\n                    result += 1\n\nprint(result)\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10''') == '4 140'\n\nassert solution('''2 1 0 1\n0 1 1000 100''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 140\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10''') == '4 140'\n\nassert solution('''2 1 0 1\n0 1 1000 100''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"4 140\"\nassert solution(sample_input_2) == \"1000 100000\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\n\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\\n\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '3', 'Incorrect output for sample input 1'\nassert solution(sample_input2) == 'impossible', 'Incorrect output for sample input 2'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}, expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Please check the given examples and the test case provided.\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected Output: 3\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected: '{output}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(20) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5, \"120 should be 5\"\nassert solution(51090942171709440000) == 21, \"51090942171709440000 should be 21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\", \"Sample Input 1\"\nassert solution(\"51090942171709440000\") == \"21\", \"Sample Input 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120) == 5, \"Sample Output 1: The factorial of 120 is incorrect.\"\nassert solution(51090942171709440000) == 21, \"Sample Output 2: The factorial of 51090942171709440000 is incorrect.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == 5, \"The given output is incorrect. Expected 5, but got {}.\".format(solution(\"120\"))\nassert solution(\"51090942171709440000\") == 21, \"The given output is incorrect. Expected 21, but got {}.\".format(solution(\"51090942171709440000\"))\n"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"120\") == 5, \"Incorrect output for sample input 1\"\nassert solution(\"51090942171709440000\") == 21, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nprint(\"PASSED\")"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '45'\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 10 # Correct\nassert solution == 45 # Correct\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3, 3) == 10, \"Expected: 10, actual: {}.\".format(solution(3, 3, 3))\nassert solution(10, 1, 2) == 45, \"Expected: 45, actual: {}.\".format(solution(10, 1, 2))\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the number of ways.\\n\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 45"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10, 1, 2) == 45\nassert solution(3, 3, 3) == 10"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    2\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    3\n    1\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    2\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    4\n    3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    4\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    5\n    3 1\n    4 "
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"20\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n5\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\"\n\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n3 1\n3\n\"\"\") == \"impossible\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    \"\"\"\n) == \"20\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    10\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\\n') == 'impossible' # solution does not meet the given constraints"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    \"\"\"\n) == \"18\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '18'\nassert solution(sample_input2) == '20'\n\nfrom typing import List"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"TODO\" # Please fill in the solution here."
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example1) == expected1\nassert solution(example2) == expected2"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_id} failed: {solution(stdin)}!= {expected_output}\"\n\nfor test_case_id, (stdin, expected_output) in enumerate(test_cases):\n    print(f\"Test case {test_case_id}:\")\n    assert solution(stdin) == expected_output, f\"Test case {test_case_id} failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Please provide the solution to the problem\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '3\\n'\n\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test Case {t+1} Failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n-1 -1 -1\\n5 5 5\\n') == '11'\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n2\n0\n'''"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(solution(input()))"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'3 1\\n110\\n011\\n') == '2'\nassert solution(b'4 2\\n1000\\n1000\\n0000\\n0010\\n') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n110\\n011') == '2'\nassert solution('4 2\\n1000\\n1000\\n0000\\n0010') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2', 'Your solution is not correct.'\nassert solution() == '0', 'Your solution is not correct.'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the given example and the problem statement for the correct format.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n2\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n2\\n\") == \"5\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '0'\n\nimport time\nimport sys"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"def\") == \"def\"\nassert solution(\"ghi\") == \"ghi\"\nassert solution(\"jkl\") == \"jkl\"\nassert solution(\"mno\") == \"mno\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\", \"Output the worst-case time to find the crashing line when using an optimal strategy.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '0'\n\nimport sys\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open('input.txt').read()) == 'The crashing line is at line 3'\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 100 20\") == 0"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"0\"\n\nfor i in range(int(input()), 10000000):\n    time_cost = p * i\n    print(i, time_cost)"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"def solution(stdin: str) -> str: pass\\n\") == 19"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\n\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == 'c\\n'\nassert solution(open('sample_input_2.txt', 'r')) == 'SHIP IT\\n'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: \\nExpected output: {expected_output}\\nActual output: {solution(input_data)}\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"c\", \"Solution 1 should return 'c'.\"\nassert solution(sample_input_2) == \"SHIP IT\", \"Solution 2 should return 'SHIP IT'.\"\n\nfrom typing import List"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\\n4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\nSample Output 1\\nc\\n\") == \"SHIP IT\"\nassert solution(\"Sample Input 2\\n5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\nSample Output 2\\nSHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a b c d') == 'c'\nassert solution('a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n') == 'c'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input_1.txt\").read()) == \"c\"\nassert solution(open(\"sample_input_2.txt\").read()) == \"SHIP IT\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5+3+x\") == \"1\", \"Expected 1 but got: \" + solution(\"5+3+x\")\nassert solution(\"9 10\") == \"1\", \"Expected 1 but got: \" + solution(\"9 10\")\nassert solution(\"20+3+x\") == \"2\", \"Expected 2 but got: \" + solution(\"20+3+x\")"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5+3+x\\n9 10') == '1'\nassert solution('20+3+x\\n0 5') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(str(input()))}\"\nprint(solution(str(input())))"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\n\nassert solution(\"5+x*3\\n9 10\") == \"Error: Invalid expression.\\n\"\nassert solution(\"5+x*x\\n9 10\") == \"Error: Invalid expression.\\n\"\n\nassert solution(\"20+x*x\\n0 5\") == \"Error: Invalid expression.\\n\"\nassert solution(\"20+x*3\\n0 5\") == \"Error: Invalid expression.\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"First Test\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Second Test\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"9 10\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5*2+5\") == \"2\"\nassert solution(\"x^4-10x^3+100x^2-10x+5\") == \"1\"\nassert solution(\"2+5x^2-4x+3\") == \"1\"\nassert solution(\"x^2-4x+3\") == \"1\"\nassert solution(\"3*x^2-1*x+6\") == \"1\"\nassert solution(\"1/x^2-1/x+1\") == \"1\"\nassert solution(\"3*x+2*x^2-4*x^3+2*x^4\") == \"1\"\nassert solution(\"3*x^2-1*x+6\") == \"1\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\\n9 10\\n\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\\n\") == \"2\\n\"\nassert solution(\"5\\n\\n\") == \"0\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'yes'\nprint('yes')"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input} -> {solution_output}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == 0.25"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.25\", \"Test case 1 failed\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case {input()} failed\"\n\ninput_data = [int(x) for x in input().split()]\nT_g, T_y, T_r = input_data\nn = int(input())\n\ndata = [list(map(int, input().split())) for _ in range(n)]\n\nt_q = int(input())\nc_q = input()"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\\n\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    6 7\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    ''') == '3'\nassert solution('''\n    6 8\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    4 3\n    ''') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Incorrect solution. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\"  # expected output"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 2\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"inf\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 3\nprint(\"3\")"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Expected: {}, Got: {}\".format(sample_output_1, solution(sample_input_1))\nassert solution(sample_input_2) == sample_output_2, \"Expected: {}, Got: {}\".format(sample_output_2, solution(sample_input_2))"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\n\nsolution(stdin)"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()} and expected output {expected_output}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output one integer: the maximum number of participants that can join the excursion, so that all the participants\u2019 preferences are obeyed and the capacity of the bus is not exceeded.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1: 4\\nSample Input 2: 12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2: 2\\n\") == \"4\\n2\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 4\\n1 2 3 4\\n') == '4\\n'\nassert solution(stdin='12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\noise\\n') == 'hoose\\nnoises\\noise\\n'\nassert solution('4\\nhose\\nhoose\\oose\\moose\\n') == 'hoose\\moose\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'hoose\\nnoises\\nnoise\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\") == \"hoose\\nnoises\\nnoise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\") == \"hoose\\moose\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([5, \"hoose\", \"hose\", \"nose\", \"noises\", \"noise\"]) == [\"hoose\", \"noises\", \"noise\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'hoose\\nnoises\\nnoise'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hoose\\nhose\\nose\\noises\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"hose\\hoose\\oose\\moose\") == \"hoose\\moose\"\nassert solution(\"hoose\\nhose\\nose\\noises\\noise\") == \"hose\\noises\\noise\"\nassert solution(\"hoose\\nhose\\nose\\noises\\noise\\moose\") == \"hose\\noises\\noise\\moose\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == ['hoose', 'noises', 'noise']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hoose\") == \"hoose\"\nassert solution(\"hose\") == \"hose\"\nassert solution(\"nose\") == \"noises\"\nassert solution(\"noises\") == \"noises\"\nassert solution(\"noise\") == \"noises\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n        hoose\n        hose\n        nose\n        noises\n        noise\n    ''') == ['hoose', 'noises', 'noise']\n\nassert solution('''\n    4\n        hose\n        hoose\n        oose\n        moose\n    ''') == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == \"hoose\\noises\\noise\\n\"\n\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hoose\\moose\\n\"\n\nassert solution(\"1\\nhorse\\n\") == \"NO TYPOS\\n\"\n\nassert solution(\"1\\nhorse\\n\") == \"NO TYPOS\\n\"\n\nassert solution(\"1\\nhorse\\n\") == \"NO TYPOS\\n\"\n\nassert solution(\"1\\nhorse\\n\") == \"NO TYPOS\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\nSample Input 1\\n1 1\\n3\\nSample Output 1\\n2\\n2\\n5\\nSample Input 2\\n2 3\\n4\\nSample Output 2\\n0\\n16\\n8\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\nSample Input 2\\n2 3\\n4\\nSample Output 2\\n0\\n16\\n8\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"1\\n2\\n3\\n4\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n2\\n5\"\nassert solution() == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\", \"Test 1\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\", \"Test 2\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Test 1\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Test 2\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"To reach the end of the road, you need to pass all the traffic lights exactly once.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"Output the minimum time required to reach the end of the road.\\n\", \"Testcase 1 failed\"\nassert solution(stdin=\"2\\n50 45 45\") == \"68.52419365\\n\", \"Testcase 2 failed\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output the minimum time required to reach the end of the road.\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nSample Input 1:\\n2\\n50 45 45\\nSample Output 2:\\n68.52419365\\n\") == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"44.72135955\", \"The output should be the expected value.\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"68.52419365\", \"The output should be the expected value.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '44.72135955'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSample Input 1: 1\\nSample Output 1: 44.72135955\\n\\n2\\n50 45 45\\nSample Input 2: 2\\nSample Output 2: 68.52419365\\n\") == 68.52419365, \"Test Failed\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is incorrect. Please check the sample test cases and the explanation provided in the prompt.\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case_id} failed: expected output '{expected}', got '{solution(stdin)}'\"\n\ntest_case_id = 1\nstdin = \"1\\n50 45 45\\n\"\nexpected = 68.52419365\n\ntest_case_id = 2\nstdin = \"2\\n50 45 45\\n\"\nexpected = 68.52419365"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n\"\n    \"30 50 40\\n\"\n    \"45 40 50\\n\"\n    \"60 45 30\\n\"\n    \"45 60 55\\n\"\n) == \"44.72135955\"\n\nassert solution(\n    \"2\\n\"\n    \"50 45 45\\n\"\n    \"45 60 55\\n\"\n) == \"68.52419365\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n1\\n0\\n2\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n3\\n2\\n'\nassert solution() == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nprint(\"All test cases passed\")\n\ninput1 = \"\"\"\n2 3 1 5\n1 2\n\"\"\"\n\noutput1 = \"\"\"\n1\n3\n2\n\"\"\"\n\ninput2 = \"\"\"\n3 4 2 3\n1 3 1\n\"\"\"\n\noutput2 = \"\"\"\n1\n1\n0\n2\n\"\"\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n3\\n2\\n\"\nassert solution(stdin) == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0 # Add your solution here\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == ['1', '3', '2']\nassert solution('3 4 2 3\\n1 3 1\\n') == ['1', '1', '0', '2']"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n3\\n2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3, \"Expected Output: 3, Actual Output: {}\".format(solution(3))\nassert solution(2) == 2, \"Expected Output: 2, Actual Output: {}\".format(solution(2))\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5\\n1 1\\n') == '3\\n'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 1\\n') == '3\\n'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == '3'\nassert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\\n2 2 3 2 2\\n\") == \"3\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '50', \"Expected output 50, got {}\".format(solution(stdin))"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"50\", \"Expected output: 50, got: \" + solution(sample_input_1)\nassert solution(sample_input_2) == \"25\", \"Expected output: 25, got: \" + solution(sample_input_2)"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == 50, \"The output is incorrect.\"\nassert solution(\"2\\n0 50\\n50 0\") == 25, \"The output is incorrect.\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"50\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"50\", \"Incorrect output\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 50"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '50'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n2\\n0 50\\n50 0\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"50\", \"Your solution is incorrect.\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"160\"\nassert solution(sample_input_2) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"160\"\nassert solution(\"6\") == \"175\"\nassert solution(\"7\") == \"190\"\nassert solution(\"8\") == \"205\"\nassert solution(\"9\") == \"220\"\nassert solution(\"10\") == \"235\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '160'\nassert solution() == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is {solution(stdin)}, but expected {expected_output}.\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"\"\"\n    2\n    100\n    200\n\"\"\") == \"160\"\n\nassert solution(stdin=\"\"\"\n    3\n    100\n    200\n\"\"\") == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100\\n200\\n2010\") == \"160\"\nassert solution(\"2\\n100\\n200\") == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100\\n200\\n2010\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"4\\n100\\n200\\n2010\") == \"160\\n250\\n\"\nassert solution(\"1\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"5\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"6\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"7\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"8\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"9\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"10\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"11\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"12\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"13\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"14\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"15\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"16\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"17\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"18\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"19\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"20\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"21\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"22\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"23\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"24\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"25\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"26\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"27\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"28\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"29\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"30\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"31\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"32\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"33\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"34\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\"35\\n100\\n200\\n2010\") == \"0\\n\"\nassert solution(\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2\\n'\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 2\\n0 1 1\\n2 3 1\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\"\n) == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2\", \"Sample Output 1\"\nassert solution(sample_input2) == \"0\", \"Sample Output 2\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n''') == '''2'''\n\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '''0'''"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(stdin=\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Please implement the solution\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == 1\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == -1\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '''\n1 1\n1 2\n2 3 4\n'''\n\nassert solution('''\n4 2\n3 3 2 2\n6 3\n''') == '''\n-1\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == [\"1 1\", \"1 2\", \"2 3 4\"]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == [-1]\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == ['1 1', '1 2', '2 3 4']\nassert solution(open('input2.txt', 'r')) == [-1]\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case_number} failed: expected output {expected_output}, got {solution(input)}\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1 1\\n1 2\\n2 3 4\\n', \"Test Case 1 Failed\"\n\nassert solution(stdin) == '1 1\\n1 2\\n2 3 4\\n', \"Test Case 2 Failed\"\n\nassert solution(stdin) == '-1\\n-1\\n', \"Test Case 3 Failed\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == \"-1\"\nassert solution(\"4 1\\n1 1 1 1\") == \"-1\"\nassert solution(\"5 3\\n1 2 3\\n2 3 1\\n3 1 2\\n1 2 3\") == \"2 1\\n1 2\\n1 2\\n1 3\\n1 3\"\nassert solution(\"5 3\\n1 2 3\\n2 3 1\\n3 1 2\\n4 2 3\") == \"2 1\\n2 1\\n2 2\\n2 3\\n2 3\"\nassert solution(\"5 4\\n1 2 3\\n2 3 1\\n3 1 2\\n4 2 3\\n5 3 2\\n3 2 1\") == \"2 1\\n2 1\\n2 1\\n2 2\\n2 3\\n2 3\\n2 3\\n3 2\\n3 2\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    input(\"\"\"\n    4 3\n    3 3 2 1\n    3 3 3\n    4 2\n    3 3 2 2\n    6 3\n    \"\"\"),\n) == \"\"\"\n    1 1\n    1 2\n    2 3 4\n\"\"\"\n\nassert solution(\n    input(\"\"\"\n    4 2\n    3 3 2 2\n    6 3\n    \"\"\"),\n) == \"\"\"\n-1\n\"\"\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0\\n'\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 3 10\n0 0 D\n10 1 L\n\"\"\") == \"\"\"\n10.0\n10.0\n0.0\n\"\"\"\n\nassert solution(\"\"\"\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n\"\"\") == \"\"\"\n10.0\n4.0\n1.0\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\nSample Output 1:\\n10.0\\n10.0\\n0.0\\n\\nSample Input 2:\\n4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\nSample Output 2:\\n10.0\\n4.0\\n1.0\") == \"10.0\\n10.0\\n0.0\\n\\n4.0\\n1.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 3 10\n    0 0 D\n    10 1 L\n    ''') == '10.0\\n10.0\\n0.0\\n'\n\nassert solution('''\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    ''') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 D\\n10 1 L\\nSample Input 1\\n2 3 10\\n0 0 D\\n10 1 L\\nSample Output 1\\n10.0\\n10.0\\n0.0\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"0 0 D\\n10 1 L\\nSample Input 2\\n4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\nSample Output 2\\n10.0\\n4.0\\n1.0\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == ['10.0', '10.0', '0.0']\nassert solution(sample_input2) == ['10.0', '4.0', '1.0']"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution(stdin='wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Hamburg Bremen') == 68.3\nassert solution('Amsterdam Rotterdam') == 22.0"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == \"68.3\\n\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"68.3\", \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\", \"Hamburg Bremen 46 55 50 60\", \"Bremen Frankfurt\", 14, 226, 10, 120) == 68.3, \"Sample Output 1 incorrect\"\n\nassert solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\", \"\") == \"IMPOSSIBLE\", \"Sample Output 2 incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3, \"Expected 68.3, got {}\".format(solution(\"Hamburg Bremen\"))\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\", \"Expected IMPOSSIBLE, got {}\".format(solution(\"Amsterdam Rotterdam\"))"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 68.3, \"Invalid solution\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\", 15, 68, 10, 5, 5, 120) == 68.3\nassert solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\\n\", 10, 22, 5, 10) == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\", \"The expected output is not correct\"\nassert solution(2) == \"4\", \"The expected output is not correct\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*''') == '3'\nassert solution('''2\n*.*\n...\n*.*''') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\", \"Expected: 3, Actual: {}\".format(solution())"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test cases do not match.\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1:\\n8\\n12210020\\nSample Output 1:\\n4\\n\") == \"4\\n\"\nassert solution(\"Sample Input 2:\\n4\\n1111\\nSample Output 2:\\nimpossible\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\", \"The solution is incorrect\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\nSample Input 1:\\n8\\n12210020\\nSample Output 1:\\n4\\n\\nSample Input 2:\\n4\\n1111\\nSample Output 2:\\nimpossible\") == \"4\\n\"\nassert solution(\"4\\n1111\\nSample Input 2:\\n4\\n1111\\nSample Output 2:\\nimpossible\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n12210020\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020') == 4\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '4', \"Expected 4, got: {}\".format(solution(sample_input1))\nassert solution(sample_input2) == 'impossible', \"Expected impossible, got: {}\".format(solution(sample_input2))"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\", \"Sample Input 2\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n') == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n500 500 499\n0 0 999\n1000 1000 200\n\"\"\"\n) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\n\"\"\"\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n\"\"\"\n) == \"Bill will be bitten.\\n\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Bill will be bitten.\"\nassert solution(\"0\\n\") == \"Bill will be bitten.\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"3\\n1000 1000 200\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == '''Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'''\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == '''Bill will be bitten.'''\n\nfrom typing import List"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution(input()) == \"Bill will be bitten.\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++\\n') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx\\n') == 'xxoooooo'\nassert solution('') == ''"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"8 3\\n++xx+x++\\n\") == \"++xx+o++\\n\"\nassert solution(stdin=\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"8 3\\n++xx+x++\\n\") == \\\n    \"++xx+o++\\n\"\n\nassert solution(\n    \"8 3\\nxxxxxxxx\\n\") == \\\n    \"xxoooooo\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"xxoooooo\", \"Expected 'xxoooooo', got '{}'\".format(solution())  # expected output: \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The provided code and solution are not correct.\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n8 3\n++xx+x++\n''') == '''\n++xx+o++\n'''\n\nassert solution('''\n8 3\nxxxxxxxx\n''') == '''\nxxoooooo\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. \\nExpected output: \\n{output}\\nGot: \\n{solution(input())}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '''\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\nassert solution(open('sample_input2.txt', 'r').read()) == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\\n\"\n                 \"Not till 12 o'clock, replied the hen.\\n\\n\"\n                 \"That clock is stopped, it will never strike.\\n\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                 \"next generation of word processors,\\n\"\n                 \"he said.\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\\n\"\n                 \"Not till 12 o'clock, replied the hen.\\n\\n\"\n                 \"That clock is stopped, it will never strike.\\n\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                 \"next generation of word processors,\\n\"\n                 \"he said.\") == \"clock: oclock\\nhe: hen the\\nen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\\n\"\n\nassert solution(\"When the cat is hungry, the dog is sleeping.\\n\\n\"\n                 \"It is raining outside, the cat is sleeping.\\n\\n\"\n                 \"It is raining outside, the dog is hungry.\\n\\n\"\n                 \"When the cat is hungry, the dog is sleeping.\\n\\n\") == \"hungry: the\\nhungry: the\\nhungry: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen: the\\nwhen"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"Lost is Close to Lose\\n\"\n    \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n    \"next generation of word processors,\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n    \"Sample Output 1: close: lose\\n\"\n    \"he: the\\n\"\n    \"inc: inc is\\n\"\n    \"is: in\\n\"\n    \"lose: close lost\\n\"\n    \"lost: lose\\n\"\n    \"the: he\\n\"\n) == \"close: lose\\nhe: the\\ninc: inc is\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\n    \"The fox said, \\\"When?\\\"\\n\"\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n    \"\\\"That clock is stopped, it will never strike.\\\", he said.\\n\"\n    \"***\\n\"\n    \"clock: oclock\\n\"\n    \"he: hen the\\n\"\n    \"hen: he when\\n\"\n    \"is: it\\n\"\n    \"it: is\\n\"\n    \"oclock: clock\\n\"\n    \"the: he\\n\"\n    \"till: will\\n\"\n    \"when: hen\\n\"\n    \"will: till\\n\"\n    \"def solution(stdin: str) -> str:\\n\"\n    \"    pass\\n\"\n) == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\"\n\nassert solution(\n    \"The quick brown fox jumps over the lazy dog.\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\"\n    \"The fox barks and the dog says, \\\"Woof!\\\"\\n\"\n    \"The dog barks and the fox says, \\\"Woof!\\\"\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Lost is Close to Lose\\n\\n\\n\\n***') == 'close: lose\\nhe: the\\ninc is: inc\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\\n'\nassert solution('The fox said, \"When?\"\\n\\n\\n***') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('Sample Input 1:\\nLost is Close to Lose\\n***\\nSample Output 1:\\nclose: lose\\nhe: the\\ninc is: inc\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\\n') == 'close: lose\\nhe: the\\ninc is: inc\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\\n'\nassert solution('Sample Input 2:\\nThe fox said, \"When?\"\\n***\\nSample Output 2:\\nclock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\"\n\nimport re\nfrom collections import defaultdict"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n              \"Better Documents Inc. wants to add Typo Checking in to the next generation of word processors, he said.\\n\"\n              \"The fox said, \\\"When?\\\"\\n\"\n              \"Not till 12 o'clock, replied the hen.\\n\"\n              \"That clock is stopped, it will never strike.\\n\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"First test case\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Second test case\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1', 'Solution must return 1'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Expected output 1 but got {}\".format(solution())\nprint(\"Test Passed\")"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == \"1\\n\", \"Incorrect Output\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"Test 1 failed\"\nassert solution() == \"2\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"The output is not correct for sample input 1.\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"The output is not correct for sample input 2.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {expected}!= {solution(stdin)}\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == 1/7\nassert solution(\"1.6 1\") == 5/3"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n\") == \"6\\n\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"6\"\nassert solution(sample_input_2) == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n', \"Incorrect output. Please check the solution.\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 6\nassert solution(open('example1.txt').read()) == 10\nassert solution(open('example2.txt').read()) == 10\n\nfrom typing import List"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1\n    0 0 0\n    0 0 1\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 0\n    0 0 1\n    \"\"\"\n) == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == 6\nassert solution('2') == 10\n\nfrom typing import List"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Sample Input 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Sample Input 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '6\\n'\nassert solution(open('input2.txt', 'r')) == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt')) == \"6\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1\nassert solution(7) == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n-1 2 -1\\n2 2\\n1 -1 1\\n') == '1\\n'\nassert solution(stdin='7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '1\\n'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == 1\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Incorrect output\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"Output: 3\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1001') == '3', \"Output should be 3\"\nassert solution('1111') == '1', \"Output should be 1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\\n\"\nassert solution(\"1111\") == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\", \"Sample Input 1: 1001\"\nassert solution(\"1111\") == \"1\", \"Sample Input 2: 1111\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1001') == 3, \"The solution should return 3.\"\nassert solution('1111') == 1, \"The solution should return 1.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"LLL\\n\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL\\n'\n\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR\\n'\n\nassert solution('''\n10\n1 1 1 2 2 2 3 3 3 4 4\n''') == 'RRRRRRRRR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"RRRR\\n\"\nassert solution(\"4\\n1 2 1 1\\n\") == \"LLRR\\n\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"RRRLL\\n\"\nassert solution(\"1\\n1\\n\") == \"L\\n\"\nassert solution(\"1\\n1 2\\n\") == \"R\\n\"\nassert solution(\"2\\n1 2\\n\") == \"RR\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"RRRR\\n\"\nassert solution(\"3\\n1 2 2 1\\n\") == \"RLLR\\n\"\nassert solution(\"5\\n1 2 3 4 1\\n\") == \"RLRRRR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"LLL\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\"\nassert solution(\"1\\n1 2\\n\") == \"RRRL\"\nassert solution(\"2\\n1 3\\n\") == \"RRRR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\n1 1 1\\n5\\n1 2 2 1 2\\n\") == \"LLL\"\nassert solution(stdin=\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"49000000000070\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\\n\", \"Test 1 failed\"\n\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\", \"Test 2 failed\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 49000000000070\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '49000000000070', 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 25000000000021 # your solution here\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n\"\"\") == 49000000000070\n\nassert solution(\"\"\"6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n\"\"\") == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == ['2\\n2\\n0\\n1\\n2\\n2\\n3\\n2\\n3\\n3\\n']\nassert solution(sample_input_2) == ['Yeah!\\n']"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Expected: \\n{}\\nGot: \\n{}\\n\".format(output, solution(input))\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n') == 'Yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yeah!\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\") == \"POSSIBLE\\n1 3\\n2 3\"\n\nimport heapq"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'POSSIBLE\\n1 3\\n2 3'\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(2) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and expected output {expected_output}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"POSSIBLE\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.5 0.5 0.5\", \"Test 1 failed\"\nassert solution() == \"0.0 0.0 -0.0\", \"Test 2 failed\"\nassert solution() == \"0.5 0.5 0.5\", \"Test 3 failed\"\nassert solution() == \"0.0 0.0 -0.0\", \"Test 4 failed\"\nassert solution() == \"0.5 0.5 0.5\", \"Test 5 failed\"\nassert solution() == \"0.0 0.0 -0.0\", \"Test 6 failed\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.5 0.5 0.5\\n\"\n\nassert solution() == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\"\nassert solution(stdin) == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5\\n'\n\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''0 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.5 0.5 0.5'\n\nassert solution('''-1 0 0\n1 0 0\n0 1 0\n0 0 1''') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\\n\"\nassert solution(stdin) == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.5 0.5 0.5\\n0.0 0.0 -0.0'\nassert solution() == '0.5 -0.5 -0.5\\n0.0 0.0 -0.0'\nassert solution() == '0.5 -0.5 -0.5\\n0.0 0.0 -0.0'\nassert solution() == '0.5 -0.5 -0.5\\n0.0 0.0 -0.0'\nassert solution() == '0.5 -0.5 -0.5\\n0.0 0.0 -0.0'\nassert solution() == '0.5 -0.5 -0.5\\n0.0 0.0 -0.0'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"2\n3 2 2 1 5\n3 2 2\n6 6\"\"\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: '{expected_output}'.\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '0'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('3\\n17 17 17') == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('tests/sample_input_1.txt', 'r')) == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution(open('tests/sample_input_2.txt', 'r')) == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\" # Replace this with your solution code\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example1.txt', 'r')) == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution(open('example2.txt', 'r')) == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str), \"Test failed\"\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {case} failed: Expected output {expected}, got {solution(input())}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\n\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\n\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"IMPOSSIBLE\"\nassert solution(sample_input_2) == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\"\n\nSolution:\n\nTo solve this problem, we need to find the shortest possible time to escape from one intersection to another intersection without exceeding the speed limit. We can do this by using dynamic programming. We will create a list dp[i][j] of size n, where dp[i][j] represents the minimum time required to escape from intersection i to intersection j. We can initialize the first entry dp[i][i] as 0 as it is always possible to escape from any intersection to any other intersection.\n\nThe problem statement requires us to find the minimum time required to escape from one intersection to another intersection without exceeding the speed limit. We can solve this by solving the problem recursively. We can use the same approach as for finding the minimal speed in km/h required to escape, but instead of comparing absolute error, we will compare the difference between the time required to escape and the difference between the time required to escape in km/h required to escape.\n\nThe time complexity of this approach is O(n^2), where n is the number of intersections. This is because we need to consider all possible paths from one intersection to another intersection in order to escape.\n\nLet's see the implementation of the above approach.<|im_sep|>"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Sample Input 1\"\nassert solution() == \"1\\n2\\n1\\n2\\n2\\n1\\n\", \"Sample Output 1\"\n\nassert solution() == \"0\", \"Sample Input 2\"\nassert solution() == \"0\\n1\\n2\\n1\\n2\\n2\\n1\\n\", \"Sample Output 2\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\ndef solution(stdin: str) -> str: pass\\n\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0, \"Replace this line with the correct solution\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == [\"1\", \"2\"]\nassert solution(sample_input_2) == [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\"]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution() == '0\\n0\\n0\\n0\\n0\\n'\nassert solution() == '1\\n0\\n0\\n0\\n0\\n'\nassert solution() == '0\\n0\\n0\\n0\\n0\\n'\nassert solution() == '0\\n0\\n0\\n0\\n0\\n'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Your solution is incorrect. Please check the function signature and the examples.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\", \"Your solution is incorrect. Please update the code to match the expected output.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"10\\n\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10', 'Incorrect output'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45\\n') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45\\n') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Unexpected output: {solution(stdin)}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10\\n'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5\\n'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"10\\n\"\nassert solution(open('test_case.txt', 'r')) == \"10\\n\"\nassert solution(\"4\\n10\\n2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(stdin=\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Solution for sample input 1 is incorrect. Expected {sample_output_1}, got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == sample_output_2, f\"Solution for sample input 2 is incorrect. Expected {sample_output_2}, got {solution(sample_input_2)}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', 'Incorrect output'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2\\n'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\", \"Test 1 failed\"\nassert solution() == \"2\", \"Test 2 failed\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\", \"Output: {}\".format(solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\"))\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\", \"Output: {}\".format(solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\"))"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\" # Test Case 1"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1\\n'\n\nassert solution(r'''\n4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"home\" or solution() == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"detention\"\nassert solution(open('input2.txt', 'r')) == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"home\"\nassert solution() == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '4 2 1\\n'\n    '1 1\\n'\n    '2 0 2\\n'\n    '2 1 3\\n'\n    '1 2\\n'\n) == 'home'\n\nassert solution(\n    '5 2 1\\n'\n    '1 1\\n'\n    '2 0 2\\n'\n    '2 1 3\\n'\n    '2 2 4\\n'\n    '1 3\\n'\n) == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"detention\"\n\nassert solution(\"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:home\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"detention\"\nassert solution(str(input())) == \"home\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"tralalal\") == \"allatral\"\n\nassert solution(stdin=\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {index+1} failed.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 5, \"Test 1\"\nassert solution(6) == 8, \"Test 2\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 5 5') == '10'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == '30'\nassert solution('3 4 5') == '0'\nassert solution('1') == '0'\nassert solution('1 2 3 4 5 6') == '1'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Error: The solution is incorrect. Please check the provided code and ensure that the given input matches the expected output.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3, 4, 5]) == \"5\"\nassert solution([3, 2, 1, 6, 4, 5]) == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 4\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('47') == 1\nassert solution('523') == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed\"\nfor i, (stdin, expected) in enumerate(test_cases):\n    print(f\"Test case {i+1}:\")\n    print(f\"Input: {stdin}\")\n    print(f\"Output: {expected}\")"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"47\") == \"1\\n\"\nassert solution(\"523\") == \"2\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(523) == 2\nassert solution(47) == 1"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"47\") == \"1\\n\"\nassert solution(stdin=\"523\") == \"2\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\n\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15'\n\nassert solution('''\n4 6\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1\\n'\n\nassert solution('''\n2 3\n0 1 20\n1 0 5\n''') == '1\\n0 1 15'\n\nassert solution('''\n5 10\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n1 3 15\n''') == '1\\n'\n\nassert solution('''\n3 4\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n10 15\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n1 3 15\n1 4 10\n''') == '1\\n'\n\nassert solution('''\n7 8\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n7 10\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n1 3 15\n''') == '0\\n'\n\nassert solution('''\n3 5\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n5 6\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n6 8\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n1 3 15\n''') == '0\\n'\n\nassert solution('''\n3 4\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n5 6\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n7 9\n0 1 20\n1 0 5\n''') == '0\\n'\n\nassert solution('''\n5 6\n0 1 20\n1 0 5\n''') == '0\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n0 1 15\\n\", \"Test 1 Failed\"\n\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\", \"Sample Input 2\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\\n\", \"Sample Input 1\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0'\n\nsolution()"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"5\\n\", \"Your solution should return the correct output.\"\nassert solution(input2) == \"1\\n\", \"Your solution should return the correct output.\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\"\"\") == \"5\"\n\nassert solution(\"\"\"4 3\n4 4 8 12\n1 2\n2 3\n3 4\"\"\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\n\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n\nsolution.test()"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\", \"Invalid solution\"\nassert solution(\"1311\") == \"24\", \"Invalid solution\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output: {solution(input())}!= {output}\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\", \"Test 1\"\nassert solution(\"1311\") == \"24\", \"Test 2\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\"\n\nfrom typing import List"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n########## \\n########## \") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\"\n3 1 3 10\n1 15 5 15\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n########## \\n########## \") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(50.000000000) == 16.339203308"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(25000.00000) == 16.34, \"Test 1\"\nassert solution(10000.00000) == 5.00, \"Test 2\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution error: {solution(stdin)} should be {expected_output}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"16.34\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(50, 0.125) == 16.339203308\nassert solution(201, 1.000) == 5.000000000"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 0.125\") == 16.339203308\nassert solution(\"201 1.000\") == 5.000000000\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"50 0.125\") == \"16.34\"\nassert solution(stdin=\"201 1.000\") == \"5.00\"\n\nfrom typing import List\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\" for i, (N, P) in enumerate(test_cases) for expected in expected_results"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16.339203308\", \"Expected: 16.339203308, Got: \" + solution(stdin)"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output.\\nInput: {stdin}\\nExpected output: {expected}\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"2\\n\"\nassert solution(sample_input2) == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output on a single line the number of ballots 0 \\leq b_ v \\leq 2^k - 1 you should cast to maximize the expected number of positions held by Yraglac. The answer is guaranteed to be unique.\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {test_case_num} failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10.5\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1\nassert solution(\"3\\n2 2\\n4 0\\n0 3\") == -1\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\\n\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\\n\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"1\"\"\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '1\\n', 'Expected output: 1\\nActual output: {}'.format(solution(sample_input1))\nassert solution(sample_input2) == '2\\n', 'Expected output: 2\\nActual output: {}'.format(solution(sample_input2))"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\nfrom typing import List"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(data1) == \"yes\"\nassert solution(data2) == \"yes\"\nassert solution(data3) == \"no\"\nassert solution(data4) == \"no\"\nassert solution(data5) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed. Input: {input()}, Output: {output}, Diff: {output!= expected}\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'yes'\n\nsample_input1 = \"\"\"4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\"\"\"\n\nsample_input2 = \"\"\"5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\"\"\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\"\nassert solution(\"1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'yes'\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2\\n1\\n2\"\nassert solution(4) == \"5\\n8\\n2\\n7\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\\n5\\n8\\n2\\n7\\n\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\\n\"\nassert solution(\"3\\n10\\n20\\n30\\n40\\n\") == \"15\\n30\\n45\\n60\\n75\\n\"\nassert solution(\"10\\n5\\n10\\n5\\n10\\n\") == \"5\\n5\\n5\\n5\\n5\\n\"\nassert solution(\"10\\n5\\n5\\n5\\n5\\n\") == \"5\\n5\\n5\\n5\\n5\\n\"\nassert solution(\"3\\n10\\n5\\n5\\n5\\n\") == \"5\\n5\\n5\\n5\\n5\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"\"\"2\n1\n2\n\n\"\"\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\\n\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\\n1\\n2\"\nassert solution(4) == \"5\\n8\\n2\\n7\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n3\n5\n5\n5\n\"\"\") == \"2\\n1\\n2\\n\"\n\nassert solution(r\"\"\"\n4\n20\n15\n17\n14\n\"\"\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    N = int(input())\n    r = list(map(int, input().split()))\n    r.sort()\n    r.append(r[0] + r[1] + r[2])\n    r.pop(0)\n    print(*r)"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"^\") == \"\"\nassert solution(\"python -n 10\") == \"python main.py -n 10\"\nassert solution(\"java\") == \"java\"\nassert solution(\"^\") == \"\"\nassert solution(\"java -n 10\") == \"java\"\nassert solution(\"python java -n 10\") == \"python java\"\nassert solution(\"python -n 10\") == \"python main.py -n 10\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution(\"^\") == \"\"\nassert solution"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\npass'\nassert solution(input()) == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\nprint(\"hello world\")'\nassert solution(input()) == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\nprint(\"hello world\")'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python python python python python python python python\") == \"python\\npython main.py\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -n 10\\npython main.py -"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"python\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\\np^\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n^java\\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}.\"\n\nfor i, input_ in enumerate(input_list):\n    expected_output = output_list[i]\n    result = solution(input_)\n    if expected_output!= result:\n        print(f\"Test failed for {input_} and expected output: {expected_output}. Result: {result}\")"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"python\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"python\\njava\\np^\\n^^^\\n^^^\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\n'\nassert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\n'\nassert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\n'\nassert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\n'\nassert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\n'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == 'python'\nassert solution(open('sample_input.txt').read()) == 'python main.py'\nassert solution(open('sample_input.txt').read()) == 'python main.py -n 10'\nassert solution(open('sample_input.txt').read()) == 'java'\nassert solution(open('sample_input.txt').read()) == 'python'\nassert solution(open('sample_input.txt').read()) == 'java'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python -n 10\") == \"python -n 10\"\nassert solution(\"def solution(stdin: str) -> str: pass\") == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Sample Input 1 Failed\"\nassert solution(\"hitehre\") == \"impossible\", \"Sample Input 2 Failed\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"The solution is incorrect\"\nassert solution(\"hitehre\") == \"impossible\", \"The solution is incorrect\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2) == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Output: the correct output for 'tihssnetnceemkaesprfecetsesne' is 'this sentence makes perfect sense'.\"\nassert solution(\"hitehre\") == \"impossible\", \"Output: the correct output for 'hitehre' is 'impossible'.\"\n\nimport random"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\\n2\\nthere\\nhello\\n\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"this sentence makes perfect sense\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 2\\n') == '4\\n'\nassert solution('2 2\\n2 2\\n') == '16\\n'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output the number of possible arrangements for the given problem statement\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2') == 4\nassert solution('2 2') == 16\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"4\\n\", \"Incorrect output\"\nassert solution(\"2 2\") == \"16\\n\", \"Incorrect output\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == 4\nassert solution(\"2 2\") == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 2\") == \"4\\n\"\nassert solution(\"2 2\\n2 2\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\", \"Please fill the code\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of tiles: \")) == 3, \"Solution should return 3\"\nassert solution(input(\"Enter the number of tiles: \")) == 2, \"Solution should return 2\"\nassert solution(input(\"Enter the number of tiles: \")) == 4, \"Solution should return 4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcbab\") == \"2\", \"Sample Input 1 incorrect\"\nassert solution(\"abab\") == \"4\", \"Sample Input 2 incorrect\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Error: {output}!= {solution(input())}\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nabab\") == \"2\"\nassert solution(\"20\\nabbbaa\\nbac\") == \"2\"\nassert solution(\"20\\nabab\") == \"2\"\nassert solution(\"1000000\\nabcdefghijk\") == \"1368000\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\", \"Sample Input 1\"\nassert solution(sample_input_2) == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab') == 2\nassert solution('4\\nabab\\n2\\nbac\\nbaba') == 4"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\nassert solution(6) == \"6\"\nassert solution(1000) == \"6\"\nassert solution(10) == \"10\"\nassert solution(0) == \"0\"\nassert solution(5) == \"5\"\nassert solution(1) == \"1\"\nassert solution(1001) == \"1000\"\nassert solution(100) == \"100\"\nassert solution(101) == \"100\"\nassert solution(1000000) == \"1000000\"\nassert solution(1000001) == \"1000000\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\"\n\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\", \"Your solution should return 'yes'.\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"yes\", \"Please implement the solution function.\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\" # correct\nassert solution(stdin) == \"no\" # incorrect"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'yes' or solution(stdin) == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40\\n'\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40\\n'\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\nassert solution(\"5\\n300 400\\n200 300\\n100 500\\n200 100\\n200 200\\n\") == \"3\\n200 500\\n200 400\\n200 300\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Please provide the correct output. For sample inputs, check the problem statement.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40\\n'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\", \"Solution does not work.\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\", \"Solution does not work.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '5836\\n'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '1828\\n'\nassert solution('5 3\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '14832\\n'\nassert solution('5 4\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '13272\\n'\nassert solution('5 5\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '1099511627776\\n'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(5) +'' + str(1) + '\\n' + '10 10 5\\n' + '9 8 10\\n' + '4 12 20\\n' + '12 4 8\\n' + '2 3 16\\n') == '5836', 'The correct output should be 5836.'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"5836\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Expected Output\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"50\"\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50\\n'\n\nassert solution('''\n3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n''') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"50\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 50\nassert solution(1) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '50'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '50'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Incorrect output for sample input {stdin}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\", \"Test 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\", \"Test 2\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\", \"Test 1\"\nassert solution(4.5) == \"0 0 0 1 1\", \"Test 2\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5.0) == '0 0 0 0 1'\nassert solution(4.5) == '0 0 0 1 1'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"8\\n\"\nassert solution(sample_input2) == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3\\n'\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4') == '3'\nassert solution('4 1\\n1 2 3 4\\n3 4 5 6') == '1'\nassert solution('3 2\\n1 2 3\\n2 3 4 5') == '2'\nassert solution('1 3\\n2 4 5\\n3 6 7') == '0'\nassert solution('5 3\\n1 2\\n2 3 4 5\\n6 7\\n8 9') == '2'\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\nassert solution(\"5 2\\n1 2 2 2 4 5\\n3 2 2 2 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '3'\nassert solution(5) == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 1.732050808, \"Solution is incorrect.\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.732050808\", \"1.732050808\"\nassert solution(stdin) == \"-1\", \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1 1 1.732050\\n1 1 3.0\\n\") == \"1.732050808\\n\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(float(input())) +'' + str(float(input())) +'' + str(float(input())) + '\\n') == str(1.732050808) + '\\n'\n\nassert solution(str(float(input())) +'' + str(float(input())) +'' + str(float(input())) + '\\n') == '-1\\n'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1, 1.732050) == 1.732050808\nassert solution(1, 1, 3.0) == -1\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/input1.txt\", \"r\")) == \"2.4999999987500003\"\nassert solution(open(\"tests/input2.txt\", \"r\")) == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.4999999987500003\\n9.999999999000002\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nprint(\"Correct\")"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.4999999987500003\\n\", \"Incorrect Answer\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n3 4 2\n.75\n\"\"\") == \"2.4999999987500003\\n\"\n\nassert solution(\"\"\"\n2\n0 100 10\n0 -100 100\n.80\n\"\"\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n3\\n\", \"Your code is incorrect.\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Answer\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n1 1 5 1 "
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"0\\n3\\n2\\n1\\n0\\n\"\nassert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"0\\n3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 6') == '0\\n3'\nassert solution('2 1 6') == '0\\n3'\nassert solution('1 1 5 1 2') == '3\\n3'\nassert solution('2 1 6') == '0\\n3'\nassert solution('4 5') == '3\\n2'\nassert solution('1 1 4 3 4') == '2\\n2'\nassert solution('2 2 2') == '2\\n1'\nassert solution('2 3 3') == '1\\n0'\nassert solution('2 4 4') == '0\\n0'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 'No solution exists for the given inputs.'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\\n\") == \"0\\n3\\n\"\nassert solution(\"2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"1 1 5 1 2\\n\") == \"3\\n\"\nassert solution(\"2 1 6\\n\") == \"3\\n\"\nassert solution(\"1 1 4 3 4\\n\") == \"2\\n1\\n0\\n\"\nassert solution(\"2 1 1\\n\") == \"1\\n0\\n\"\nassert solution(\"2 2 2\\n\") == \"2\\n0\\n\"\nassert solution(\"2 3 3\\n\") == \"3\\n0\\n\"\nassert solution(\"2 4 4\\n\") == \"4\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"The output of the given code is not the expected value: {expected}, but {solution(stdin)}\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"code here\", \"You have to implement the solution function\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 7 1000000007') == 1\nassert solution('3 2 1000000007') == 4"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"The output is incorrect. Expected: {expected}, but got: {solution}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"1\"\n\nassert solution(stdin) == \"4\\n\", \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nassert solution() == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"The function should return {expected}, but it returned {solution(stdin)}\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\"\nassert solution(\"5 7\\n2 3\\n8 1 5 4\") == \"9\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n8\") == \"8\\n\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n8\") == \"8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\", \"Test failed\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\\n3 5\\n11\\n\") == \"5\\n\"\nassert solution(\"3 5\\n11\\n\") == \"8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n8\") == \"5\\n8\"  # Correct output"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6\\n') == '5\\n'\nassert solution('3 5\\n11\\n') == '8\\n'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\\n6\\n3 5\\n11\") == \"5\\n8\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output a single integer that is the minimum number of vehicles required to ensure each client i is visited at time T_ i by some vehicle.\\n\", \"Incorrect output\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input error\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {index+1} failed\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\") == \"2\"\n\nassert solution(r\"4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"code here\", \"Test cases should be separated by newline character.\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Expected output: 2, but got: {}.\".format(solution())"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '2', 'Expected Output 1 to be 2, but got {}'.format(solution(sample_input1))\nassert solution(sample_input2) == '3', 'Expected Output 2 to be 3, but got {}'.format(solution(sample_input2))"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n3 1\n10\n10\n1 10\n1 10\n1 10\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"TODO\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3, \"Your solution is incorrect\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3', 'Expected output 3, but got {}'.format(solution())"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\", \"Test Case 1\"\nassert solution(input()) == \"5\\n\", \"Test Case 2\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"1\"\nassert solution(5) == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '5', \"Sample Output 2: should be 5\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"5\"\nassert solution(5) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '5'\nassert solution(10) == '1'\nassert solution(20) == '5'\nassert solution(2000000000) == '1'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == '1', \"Mirko wins if Slavko can't find a partition for his set.\"\nassert solution(3) == '5', \"Mirko wins if Slavko can't find a partition for his set.\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input_2.txt', 'r')) == '2'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1\n0 11 9\n1 0 10\n0 0 0\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n\"\"\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\ninput_1 = '''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n'''\noutput_1 = '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\ninput_2 = '''\n2 1 0 1\n0 1 100000\n'''\noutput_2 = '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\"\"\") == \"\"\"4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\"\"\"\n\nassert solution(\"\"\"2 1 0 1\n0 1 100000\"\"\") == \"\"\"2 100000 1\n0 1 100000\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\", \"First example\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\", \"Second example\"\n\nfrom typing import List"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..') == '3 5\\n', 'Sample Input 1'\nassert solution('2 3\\nS.M\\nM..\\n2 3\\nSMS\\n') == '2 0\\n', 'Sample Input 2'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\", \"Mirko's and Slavko's spreads should be printed.\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\", \"Mirko's and Slavko's spreads should be printed.\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Test 1 failed\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == ['3 5', '2 0']"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 3\\n.MS\\n....') == '0 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c\\n'\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n''') == '1\\n6 b\\n'\n\nassert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"2\\n3 c\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"1\\n6 b\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"0\"\nassert solution(open(\"sample_input_4.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2\\n3 c\\n6 c\\n'\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b\\n'\n\nassert solution('''\n1\n1 B\n1 S\n''') == '1\\n1 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('solution.in', 'r')) == '''2\n3 c\n6 c\n'''"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    ''') == ['2', '3 c', '6 c']\n\nassert solution('''\n    6\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    ''') == ['1', '6 b']\n\nassert solution('''\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    ''') == ['2', '3 c', '6 c']\n\nassert solution('''\n    6\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    ''') == ['1', '6 b']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == ['2', '3 c', '6 c']\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == ['1', '6 b']\n\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == ['2', '3 c', '6 c']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2:1\\n6 b\\n'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2:1\\n6 b\\n'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor _ in range(test_cases):\n    A, B = map(int, input().split())\n    print(sum(1 + abs(A - B // 10) + abs(B % 10) for A, B in combinations(range(A, B + 1), 2)))"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"40\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"40\", \"Solution should return '40' for the given example input 1\"\nassert solution() == \"76\", \"Solution should return '76' for the given example input 2\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"40\\n\", \"Test 1 failed\"\nassert solution(\"288 291\") == \"76\\n\", \"Test 2 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output here'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\") == \"0\"\nassert solution(\"3\\nCAT\\nDOG\\nCOT\\nBAZ\") == \"0\"\nassert solution(\"1\\nDOG\") == \"0\"\nassert solution(\"3\\nDOG\\nCAT\") == \"0\"\nassert solution(\"1\\nCAT\") == \"0\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"2\\nDOG\\nCAT\\n\") == \"0\"\n\nfrom collections import Counter"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3\\nCAT\\nDOG\\nCOT') == 'COG\\n3\\n'\nassert solution(stdin='2\\nCAT\\nDOG') == '0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n\"\n    \"CAT\\n\"\n    \"DOG\\n\"\n) == \"COG\\n3\\n\"\n\nassert solution(\n    \"2\\n\"\n    \"CAT\\n\"\n    \"DOG\\n\"\n) == \"0\\n-1\\n\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"3\nCAT\nDOG\nCOT\n\"\"\"\n) == \"COG\"\n\nassert solution(\n    \"\"\"2\nCAT\nDOG\n\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"1\n\"\"\"\n) == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == (0, -1)"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\"\nassert solution(\"1\\n\\n\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'COG', \"The solution should be 'COG'.\"\nassert solution('3') == 'COG', \"The solution should be 'COG'.\"\nassert solution('2') == '0', \"The solution should be '0'.\"\nassert solution('3 2') == '0 -1', \"The solution should be '0 -1'.\"\nassert solution('4') == '0 -1', \"The solution should be '0 -1'.\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == 'COG'\nassert solution(stdin=input()) == '0'\nassert solution(stdin=input()) == -1"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\"\nassert solution(\"foo\") == 0\nassert solution(\"C\") == 0\nassert solution(\"CET\") == 0"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9\"\nassert solution(\"Sample Input 1\\n10 1\\nSample Output 1\\n9\") == \"9\"\nassert solution(\"Sample Input 2\\n4 3\\nSample Output 2\\n6\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    10 1\n    4 3\n    '''\n) == '9\\n'\n\nassert solution(\n    '''\n    6 0\n    6 5\n    1 2\n    '''\n) == '6\\n'\n\nassert solution(\n    '''\n    10 10\n    2 3\n    5 6\n    '''\n) == '40\\n'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(10) + \" \" + str(1)) == \"9\"\nassert solution(str(4) + \" \" + str(3)) == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"10\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"4\\n\"\nassert solution(\"10 1\\n10 1\\n10 1\\n\") == \"10\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output the number of sequences modulo 1000000007.\", \"Incorrect output\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\\n6\\n\"\nassert solution(\"10 2\\n3 3\\n4 4\\n\") == \"8\\n5\\n\"\nassert solution(\"10 3\\n1 2\\n2 3\\n4 4\\n5 5\\n\") == \"7\\n6\\n\"\nassert solution(\"10 4\\n1 3\\n1 4\\n4 5\\n\") == \"5\\n4\\n\"\nassert solution(\"10 5\\n1 4\\n2 5\\n1 6\\n\") == \"2\\n1\\n\"\n\nimport bisect"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n') == 3, \"The solution is incorrect.\"\nassert solution('2 5\\nV...\\nH...V\\n') == -1, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() =="
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"3\", \"The solution of the given puzzle is not correct.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '3\\n'\nassert solution(sys.stdin.read()) == '3\\n'\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 3\nassert solution(2) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1\n\nfrom typing import List"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected {output}, got {solution(input())}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"-1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(sample_input2) == \"AMBIGUOUS\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'The quick brown fox jumps over the lazy dog.'\nassert solution() == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(open('input2.txt', 'r')) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\ny dog.\\nrown fox\\nmps over the l\\the lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nfghijk\\nfghijx\\nabcdefg\") == \"AMBIGUOUS\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nfor input, output in zip(input_data, output_data):\n    assert solution(input) == output\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"\n\nfrom collections import deque"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0+-', 'Test case 1 failed'\nassert solution() == '0+-', 'Test case 2 failed'\nassert solution() == '0+-', 'Test case 3 failed'\nassert solution() == '0+-', 'Test case 4 failed'\nassert solution() == '0+-', 'Test case 5 failed'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"\"\"\n--+0-\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n1 2 1\n-2 0 2\n\"\"\") == \"\"\"\n0+-\n\"\"\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"\"\"\n--+0-\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n1 2 1\n-2 0 2\n\"\"\") == \"\"\"\n0+-\n\"\"\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"\"\"\n--+0-\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n1 2 1\n-2 0 2\n\"\"\") == \"\"\"\n0+-\n\"\"\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"\"\"\n--+0-\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n1 2 1\n-2 0 2\n\"\"\") == \"\"\"\n0+-\n\"\"\"\n\nassert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"\"\"\n--+0-\n\"\"\"\n\nassert solution(\n\"\"\"\n3 2\n1 2 1\n-2 0 2\n\"\"\") == \"\"\"\n0+-\n\"\"\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '''\n--+0-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"---+0-\"\nassert solution(open(\"test_input2.txt\").read()) == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '''--+0-\n\nassert solution('''3 2\n1 2 1\n-2 0 2''') == '''0+-\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test failed for solution\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2 2\n    1 1\n    1 1\n    1\n    1 1 1\n    2 2 2\n    1 2\n    2 2\n    1 2 2\n    2 2 2\n    3 2 2\n    2 3\n    2 2 2\n    2 2\n    4 2\n    2 3\n    2 2 2\n    2 2\n    5 2\n    2 2 2\n    2 2\n    6 2\n    2 2 2\n    2 2\n    7 2\n    2 2 2\n    2 2\n    8 2\n    2 2 2\n    2 2\n    9 2\n    2 2 2\n    2 2\n    10 2\n    2 2 2\n    2 2\n    11 2\n    2 2 2\n    2 2\n    12 2\n    2 2 2\n    2 2\n    13 2\n    2 2 2\n    2 2\n    14 2\n    2 2 2\n    2 2\n    15 2\n    2 2 2\n    2 2\n    16 2\n    2 2 2\n    2 2\n    17 2\n    2 2 2\n    2 2\n    18 2\n    2 2 2\n    2 2\n    19 2\n    2 2 2\n    2 2\n    20 2\n    2 2 2\n    2 2\n    21 2\n    2 2 2\n    2 2\n    22 2\n    2 2 2\n    2 2\n    23 2\n    2 2 2\n    2 2\n    24 2\n    2 2 2\n    2 2\n    25 2\n    2 2 2\n    2 2\n    26 2\n    2 2 2\n    2 2\n    27 2\n    2 2 2\n    2 2\n    28 2\n    2 2 2\n    2 2\n    29 2\n    2 2 2\n    2 2\n    30 2\n    2 2 2\n    2 2\n    31 2\n    2 2 2\n    2 2\n    32 2\n    2 2 2\n    2 2\n    33 2\n    2 2 2\n    2 2\n    34 2\n    2 2 2\n    2 2\n    35 2\n    2 2 2\n    2 2\n    36 2\n    2 2 2\n    2 2\n    37 2\n    2 2 2\n    2 2\n    38 2\n    2 2 2\n    2 2\n    39 2\n    2 2 2\n    2 2\n    40 2\n    2 2 2\n    2 2\n    41 2\n    2 2 2\n    2 2\n    42 2\n    2 2 2\n    2 2\n    43 2\n    2 2 2\n    2 2\n    44 2\n    2 2 2\n    2 2\n    45 2\n    2 2 2\n    2 2\n    46 2\n    2 2 2\n    2 2\n    47 2\n    2 2 2\n    2 2\n    48 2\n    2 2 2\n    2 2\n    49 2\n    2 2 2\n    2 2\n    50 2\n    2 2 2\n    2 2\n    51 2\n    2 2 2\n    2 2\n    52 2\n    2 2 2\n    2 2\n    53 2\n    2 2 2\n    2 2\n    54 2\n    2 2 2\n    2 2\n    55 2\n    2 2 2\n    2 2\n    56 2\n    2 2 2\n    2 2\n    57 2\n    2 2 2\n    2 2\n    58 2\n    2 2 2\n    2 2\n    59 2\n    2 2 2\n    2 2\n    60 2\n    2 2 2\n    2 2\n    61 2\n    2 2 2\n    2 2\n    62 2\n    2 2 2\n    2 2\n    63 2\n    2 2 2\n    2 2\n    64 2\n    2 2 2\n    2 2\n    65 2\n    2 2 2\n    2 2\n    66 2\n    2 2 2\n    2 2\n    67 2\n    2 2 2\n    2 "
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Young Luka is an art dealer. He has 2 clients and sells artistic paintings to each client. Each client can purchase either colored paintings or black and white paintings, but not both. The client denoted with 1 wants to purchase at most 1 colored paintings and at most 1 black and white paintings. The client will always purchase at least one paintings. Luka has an almost unlimited amount of paintings, so the number of paintings required from the clients is never a problem. Luka doesn\u2019t like selling black and white paintings and knows that if less than 2 people get colored paintings, it will make him feel sad.\n\nHis clients constantly keep changing their requests or, in other words, the number of paintings they want to purchase. Because of this, Luka is often troubled by the question: \u201cHow many different purchases are there, so that at least 2 clients get at least one colored painting?\u201d Help Luka and save him from his worries.\n\n-----Input-----\nThe first line of input contains two integers $N$, $C$ ($1 \\leq N \\leq 100\\ 000$, $1 \\leq C \\leq 20$). The second line of input contains $N$ integers $a_ i$ ($1 \\leq a_ i \\leq 1\\ 000\\ 000\\ 000$). The third line of input contains $N$ integers $b_ i$ ($1 \\leq b_ i \\leq 1\\ 000\\ 000\\ 000$).\n-----Output-----\nThe output must consist of $Q$ lines where each line contains the number of different purchases modulo $10\\ 007$."
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2 2\\n2 2 2\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '1', 'Sample Input 1'\nassert solution(sample_input2) == '4\\n4', 'Sample Input 2'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n''') == '1\\n'\n\nassert solution('''\n2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4\\n4\\n'\n\nassert solution('''\n2 1\n1 1\n2 2\n2\n1 2\n2 1\n''') == '2\\n1\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\nActual output: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES', 'Invalid solution'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\n\ninput1 = '''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB'''\n\noutput1 = '''YES'''\n\ninput2 = '''3 4\nWWRR\nWRRR\nWRRR\n'''\n\noutput2 = '''NO'''"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    1\n    2\n    3\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    6 3 5\n    1\n    2\n    3\n    3\n    2\n    1\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == 1\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3, 5) == 1\nassert solution(6, 3, 5) == 3\nassert solution(3, 5, 5) == 2\nassert solution(6, 5, 5) == 4"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\\n6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n\\n3\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\") == \"3 2\\n\", \"Expected '3 2\\n', but got '{}'.\".format(solution(\"3\\n0 2\\n1 2\\n3 3\"))\n\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\\n\", \"Expected '12 3\\n', but got '{}'.\".format(solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\"))"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Input 1 failed\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Input 2 failed\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2\\n'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"3 2\\n12 3\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\") == \"3 2\\n\", \"The expected output is not correct.\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\\n\", \"The expected output is not correct.\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '12 3\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"Test 1: Empty input should return empty string\"\n\nassert solution(\"3\\n0 2\\n1 2\\n3 3\") == \"3 2\", \"Test 2: Frog 1 should be at position 3 and size 2\"\n\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\", \"Test 3: Frog 2 should be at position 12 and size 3\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\n\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n', \"The solution should be '100\\n000\\n01\\n01\\n01\\n'\"\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n', \"The solution should be '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '100\\n000\\n01\\n01\\n01\\n'\nassert solution(input()) == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100\\n000\\n01\\n01\\n01\\n', \"Solution not correct.\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution '{solution(stdin=input())}' is not correct.\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n0"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed.\"\nassert solution(input2) == output2, \"Test case 2 failed.\"\n\ninput1 = \"\"\"\n2\n1\n0\n0\n3\n\"\"\"\noutput1 = \"10000\\n0000\"\ninput2 = \"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\noutput2 = \"00000\\n10010\\n00100\\n10100\\n01000\\n00000\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n') == '2\\n'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n'\nassert solution() == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 11"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"90.00000000\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Impossible\", \"Sample Output 1 should be Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 6 500\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\"\n) == \"90.00000000\"\n\nassert solution(\n    \"\"\"\n    5 6 450\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\"\n) == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"Impossible\"\nassert solution(input2) == \"Impossible\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\"\n\nimport math"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4\\n8 29\\n9 28\\n11 26\\n15 22\\n'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the price: \")) == \"Output the maximum number of times Quido can have a free dessert at Hugo\u2019s restaurant, provided that the price of his lunch is always 30014. Next, the possible bills which result in a free dessert are listed in ascending order with respect to the beverage price. Each bill consists of the price of the beverage followed by the price of the main dish. For simplicity, the value 30014 is not included in the bill.\n\nOutput the maximum number of times Quido can have a free dessert at Hugo\u2019s restaurant, provided that the price of his lunch is always 30014. Next, the possible bills which result in a free dessert are listed in ascending order with respect to the beverage price. Each bill consists of the price of the beverage followed by the price of the main dish. For simplicity, the value 30014 is not included in the bill."
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(37) == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution(30014) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\\n\"\nassert solution(stdin=\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nfrom itertools import combinations, permutations"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"10\") == \"Error: The value of P must be positive and less than 10^18.\"\nassert solution(\"\") == \"Error: Input string cannot be empty.\"\nassert solution(\"30015\") == \"Error: Invalid input. Please provide a positive integer value for P.\"\nassert solution(\"-10\") == \"Error: The value of P must be positive and less than 10^18.\"\nassert solution(\"10000000000\") == \"Error: The value of P must be positive and less than 10^18.\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"37\\n\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\\n\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '3.5', \"Output should be '3.5', not: {}\".format(solution('2 3 1'))\nassert solution('3 3 2') == '4.9', \"Output should be '4.9', not: {}\".format(solution('3 3 2'))\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.5\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3.5\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.5\\n\", solution(stdin)"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"3.5\\n\"\nassert solution(\"3 3 2\") == \"4.9\\n\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == '3.5', 'Your code is incorrect.'\nassert solution(stdin: str) == '4.9', 'Your code is incorrect.'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. The output is: {output}, but the expected output is: {output}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''1 5 1 5\n12 12 1 12''') == '19'\n\nassert solution('''3 6 1 5\n6 10 1 8''') == '2'\n\nassert solution('''5 10 1 5\n5 10 1 5''') == '0'\n\nassert solution('''10 20 1 5\n7 15 1 12''') == '0'\n\nassert solution('''0 10 1 5\n1 15 1 12''') == '0'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == 19, \"Test case 1 failed\"\nassert solution(\"12 12 1 12\") == 4, \"Test case 2 failed\"\nassert solution(\"\") == 0, \"Test case 3 failed\"\nassert solution(\"1 1 1 1\") == 0, \"Test case 4 failed\"\nassert solution(\"5 6 5 6\") == 0, \"Test case 5 failed\"\nassert solution(\"1000000000 1000000000\") == 0, \"Test case 6 failed\"\nassert solution(\"0 1 0 1\") == 0, \"Test case 7 failed\"\nassert solution(\"10 12 10 12\") == 0, \"Test case 8 failed\"\nassert solution(\"10 2 20 10\") == 0, \"Test case 9 failed\"\nassert solution(\"1 1 2 3\") == 0, \"Test case 10 failed\"\nassert solution(\"1 1 1 1\") == 0, \"Test case 11 failed\"\nassert solution(\"1 1 2 3\") == 0, \"Test case 12 failed\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\", \"sample input 1\"\nassert solution(\"12 12 1 12\") == \"4\\n\", \"sample input 2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 19"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 1 5\") == 19, \"Incorrect output\"\nassert solution(\"12 12 1 12\") == 4, \"Incorrect output\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"1 12\") == \"4\\n\", \"Test 2 failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"1 10\") == \"3\"\nassert solution(\"1 99\") == \"3\"\nassert solution(\"1 10000\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.txt').read()) == '4'\nassert solution(open('input.txt').read()) == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Invalid output for sample input 1.\"\nassert solution(\"1 12\") == \"4\\n\", \"Invalid output for sample input 2.\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('car') == 1, \"Input 1\"\nassert solution('cocar') == 2, \"Input 2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"car\") == \"1\"\nassert solution(stdin=\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n\nfrom functools import reduce"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"8\"\nassert solution(sample_input_2) == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\", \"Test 1 failed\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output the minimum amount of money the thieves must leave behind. Since this number may be very large, output it modulo the prime number 10^9 + 7.\\n\", \"Test the correctness of the solution\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\", \"Expected output '8', but got '{}'.\".format(solution())"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '8', \"Sample Input 1\"\nassert solution(sample_input_2) == '0', \"Sample Input 2\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 650\\n\") == \"zyz\"\nassert solution(\"2 651\\n\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Sample Input {input()}, Expected Output {output()}, Received Output {solution(input())}\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"zyz\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 650\\n2 651\\n\") == \"zyz\"\nassert solution(\"2 652\\n2 653\\n\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'2 650') == 'zyz'\nassert solution(r'2 651') == '-1'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4\\n'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\n\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1), \"Solution does not work for sample input 1.\"\nassert solution(2), \"Solution does not work for sample input 2.\"\n\nfrom typing import List"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: Expected output {expected_output}, got {solution(input())}\"\n\nt = int(input())\n\nfor _ in range(t):\n    N, E, D = map(int, input().split())\n    e = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    expected_output = 0\n\n    for i in range(N):\n        if d[i] > 0:\n            expected_output += 1\n            break\n        elif d[i] == 0 and e[i] > 0:\n            expected_output += 1\n            break\n        elif e[i] > 0:\n            expected_output += 1\n            break\n\n    actual_output = solution(input())\n\n    if actual_output == expected_output:\n        print(expected_output)\n    else:\n        print(-1)"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input1) == example_output1\nassert solution(example_input2) == example_output2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2\nassert solution(\"2 5 1\\n3 1 4 5 7\\n4 2 8 10\") == -1"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\\n3\\n-1 1\\n2 1\\n0 -2\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n3 2\\nSample Input 1:\\n1 2\\nSample Output 1:\\n1\\n-2 -1\\n\\nSample Input 2:\\n1 2\\n3 4\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2\\n\") == \"1\\n-2 -1\\n2 1\\n3 1\\n-1 1\\n\"\nassert solution(\"1 2\\n3 4\\nSample Input 1:\\n1 2\\nSample Output 1:\\n3\\n-1 1\\n\\nSample Input 2:\\n1 2\\n3 4\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''1\n-2 -1'''\n\nassert solution() == '''3\n-1 1\n2 1\n0 -2'''"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_cases/sample_input1.txt\", \"r\")) == \"1\\n-2 -1\"\nassert solution(open(\"test_cases/sample_input2.txt\", \"r\")) == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n-2 -1\"\nassert solution() == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()}, expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test failed for sample_input1\"\nassert solution(sample_input2) == sample_output2, \"Test failed for sample_input2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\nIVO\\nJASNA\\nJOSIPA\"\n) == \"4\\n\"\n\nassert solution(\n    \"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\"\n) == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Solution: {solution(stdin=input())}, Output: {output}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(stdin=\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"4\", \"Expected output: 4\"\nassert solution(input2) == \"24\", \"Expected output: 24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\", \"Incorrect solution.\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"tests/input1.txt\", \"r\")) == \"4\\n\"\nassert solution(open(\"tests/input2.txt\", \"r\")) == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA') == 4\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input()) == solution.output()"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4, \"Solution 1 not correct\"\nassert solution(5) == 24, \"Solution 2 not correct\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n1 2 3 1\n2 3 4 1\n3 4 5 1\"\"\") == 3\n\nassert solution(\"\"\"3\n2 2 3 8\n3 1 5 6\n1 9 4 7\"\"\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3 1\n    2 3 4 1\n    3 4 5 1\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 2 3 8\n    3 1 5 6\n    1 9 4 7\n    \"\"\"\n) == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 39, \"Incorrect output\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3, \"Test case 1 failed.\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39, \"Test case 2 failed.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\"\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\"\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\"\nassert solution(\"1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Expected output: 3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Expected output: 39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Sample Input 1: Solution is incorrect\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Sample Input 2: Solution is incorrect\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1') == 5.2696518641\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20') == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '5.2696518641\\n'\nassert solution(open('input1.txt', 'r')) == '9\\n'\nassert solution(open('input2.txt', 'r')) == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1''') == 5.2696518641\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20''') == 9"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1 # replace 1 with the correct solution\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n2 0 3\\n1 1 1\\n1 1 1\\n3 1 1\\n5 1 1\") == \"-1\"\nassert solution(\"1\\n3 0 5\\n4 2 7\\n5 1 7\") == \"2\"\nassert solution(\"1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 0 1\\n2 2 2\\n3 2 3\\n1 0 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('tests/sample_input_1.txt').read()) == '1\\n8\\n4\\n'\nassert solution(open('tests/sample_input_2.txt').read()) == '6\\n4\\n24\\n'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 8\nassert solution() == 4"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Test 1\"\nassert solution() == 8, \"Test 2\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '6\\n4\\n24'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 2') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '-1'\nassert solution('3\\n1 1 1\\n2 0 2\\n3"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n4 1 1\\n\") == \"-1\\n-1\\n-1\\n\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n4 1 2\\n\") == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == 1\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == 6\nassert solution(\"4\\n1 1 1\\n1 1 1\\n1 1 1\") == -1"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3 2\\n6 6\\n') == '3\\n'\nassert solution(stdin='5 2\\n11 7\\n') == '240\\n'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n6 6\") == \"3\\n\"\nassert solution(\"6 6\\n2 3\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3, \"Test 1 failed\"\nassert solution(6, 6) == 240, \"Test 2 failed\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3, \"Expected 3, got {}\".format(solution(3, 2))  # Should pass\nassert solution(6, 6) == 240, \"Expected 240, got {}\".format(solution(6, 6))  # Should pass"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(\"SEND+MORE=MONEY\"))))) == \"9567+1085=10652\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Your solution is not correct.\"\nassert solution(\"A+A=A\") == \"impossible\", \"Your solution is not correct.\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 2 3\") == 14\nassert solution(\"5\\n1 1 2 1 1\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '14'\n\nfrom collections import Counter\nfrom itertools import permutations"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(14)"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1 2 3') == '14\\n'\nassert solution('5\\n1 1 2 1 1') == '1\\n'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 2 3') == '14'\nassert solution('5\\n1 1 2 1 1') == '1'\n\nfrom itertools import permutations"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 14"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 2 3\\n\") == \"14\"\n\nassert solution(\"5\\n1 1 2 1 1\\n\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"88\\n\"\nassert solution(open(\"sample_output.txt\").read()) == \"-1\\n\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"88\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"-1\", \"Test case 2 failed\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n\"\"\") == 88\n\nassert solution(\n\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nfor i in range(n):\n    for j in range(m):\n        print(checkerboard[i][j], end=\" \")\n    print()"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == \"88\", \"Test case 1 failed\"\nassert solution(input2) == \"-1\", \"Test case 2 failed\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 1\\n1 1\\n') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999\\n') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'2\\n1 1\\n1 1\\n') == '0.000\\n'\nassert solution(r'2\\n1 99999\\n99999 99999\\n') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == 0.000\nassert solution(\"2\\n1 99999\\n99999 99999\") == 9999700002.000\n\nfrom typing import List"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    1 3 6 5 4\n    \"\"\").strip() == \"3\"\n\nassert solution(\"\"\"\n    3 4 1 2\n    1 2 6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    \"\"\").strip() == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\"\"\") == \"3\"\n\nassert solution(\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\"\"\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\", \"The output should be 3.\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\", \"The output should be Infinity.\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3\\n'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n') == 'Infinity\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output: 3\\n\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1) == \"impossible\"\nassert solution(6, 1) == \"impossible\"\nassert solution(3, 3) == \"00000\"\nassert solution(3, 4) == \"00001\"\nassert solution(3, 5) == \"00011\"\nassert solution(3, 6) == \"00111\"\nassert solution(3, 7) == \"01111\"\nassert solution(3, 8) == \"11111\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n6\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6 1\n6\n''') == 'impossible'\n\nassert solution('''3 1\n1\n''') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n6\\n1\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6 1\n6\n\"\"\") == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n\"\"\"\n3 1\n1\n\"\"\") == \"\"\"\n000\n001\n011\n010\n110\n111\n101\n100\n\"\"\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\", \"There is no $n$-bit color code with palette {1,..., n} in the given order.\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"gray_code.txt\", \"r\").read()) == \"impossible\"\n\nSolution:\n\nWe can solve this problem by iterating through all possible gray codes of size $n$ and checking if they are in the palette. We can do this by generating all possible gray codes of size $n$ and checking if each gray code is a color code of $n$ with a palette of $P$. If a gray code is a color code, we can output it.\n\nHere's the code: \n\n```python\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"000\"\nassert solution(3) == \"001\"\nassert solution(4) == \"011\"\nassert solution(5) == \"010\"\nassert solution(6) == \"110\"\nassert solution(7) == \"111\"\nassert solution(8) == \"101\"\nassert solution(9) == \"100\"\nassert solution(10) == \"000\"\nassert solution(11) == \"001\"\nassert solution(12) == \"011\"\nassert solution(13) == \"010\"\nassert solution(14) == \"110\"\nassert solution(15) == \"111\"\nassert solution(16) == \"101\"\nassert solution(17) == \"100\"\nassert solution(18) == \"000\"\nassert solution(19) == \"001\"\nassert solution(20) == \"011\"\nassert solution(21) == \"010\"\nassert solution(22) == \"110\"\nassert solution(23) == \"111\"\nassert solution(24) == \"101\"\nassert solution(25) == \"100\"\nassert solution(26) == \"000\"\nassert solution(27) == \"001\"\nassert solution(28) == \"011\"\nassert solution(29) == \"010\"\nassert solution(30) == \"110\"\nassert solution(31) == \"111\"\nassert solution(32) == \"101\"\nassert solution(33) == \"100\"\nassert solution(34) == \"000\"\nassert solution(35) == \"001\"\nassert solution(36) == \"011\"\nassert solution(37) == \"010\"\nassert solution(38) == \"110\"\nassert solution(39) == \"111\"\nassert solution(40) == \"101\"\nassert solution(41) == \"100\"\nassert solution(42) == \"000\"\nassert solution(43) == \"001\"\nassert solution(44) == \"011\"\nassert solution(45) == \"010\"\nassert solution(46) == \"110\"\nassert solution(47) == \"111\"\nassert solution(48) == \"101\"\nassert solution(49) == \"100\"\nassert solution(50) == \"000\"\nassert solution(51) == \"001\"\nassert solution(52) == \"011\"\nassert solution(53) == \"010\"\nassert solution(54) == \"110\"\nassert solution(55) == \"111\"\nassert solution(56) == \"101\"\nassert solution(57) == \"100\"\nassert solution(58) == \"000\"\nassert solution(59) == \"001\"\nassert solution(60) == \"011\"\nassert solution(61) == \"010\"\nassert solution(62) == \"110\"\nassert solution(63) == \"111\"\nassert solution(64) == \"101\"\nassert solution(65) == \"100\"\nassert solution(66) == \"000\"\nassert solution(67) == \"001\"\nassert solution(68) == \"011\"\nassert solution(69) == \"010\"\nassert solution(70) == \"110\"\nassert solution(71) == \"111\"\nassert solution(72) == \"101\"\nassert solution(73) == \"100\"\nassert solution(74) == \"000\"\nassert solution(75) == \"001\"\nassert solution(76) == \"011\"\nassert solution(77) == \"010\"\nassert solution(78) == \"110\"\nassert solution(79) == \"111\"\nassert solution(80) == \"1"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Solution 1 does not work as expected\"\nassert solution(\"90\\n10\") == \"10\", \"Solution 2 does not work as expected\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10') == 1\nassert solution('99') == 1"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\"\nassert solution(\"90\\n10\\n\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\"\nassert solution(\"90\\n10\\n\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Test case 1 failed\"\nassert solution(\"90\\n10\") == \"10\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"1\"\nassert solution(\"90\\n10\") == \"10\\n\", \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"First Input\"\nassert solution(\"90\\n10\") == \"10\", \"Second Input\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"Input:3\\n2 3 3\\n4 1 10\\n2 7 3\\nOutput:2\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\", \"Expected output: '2'\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\", \"Expected output: '1'\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == 2\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == 1"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n11\\n16\"\nassert solution(stdin) == \"7\\ndef solution(stdin: str) -> str: pass\"\n\nfrom typing import List\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"beginning\") == 5, \"Incorrect output 1\"\nassert solution(\"1 5\\n4 8\\n1 9\") == 5, \"Incorrect output 2\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 11\nassert solution(\"velvet\") == 7\nassert solution(\"1 6\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"6 1\\nvelvet\\n1 6\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 5\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"velvet\\n1 6\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 5\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n11\\n16\\n\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error: {input()}!= {output}\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()})!= output()\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"2\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"23\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2', 'Incorrect output'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('mirkos_village_test_case.txt', 'r')) == \"2\"\nassert solution(open('mirkos_village_test_case.txt', 'r')) == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0.0000000000\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr\"\"\"\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n\"\"\"\n) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1 failed\"\nassert solution(sample_input2) == expected_output2, \"Test 2 failed\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == 0.0000000000\n\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.0000000000\\n\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000\\n'\n\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([5]) == '8.0000000000'\nassert solution([5, 2, 0, 1, 0, 2, -2, 0, 0, -2]) == '8.0000000000'\nassert solution([5, 0.2, 0, -0.2, 0, 0.2, -0.2, 0, 0, 0.2]) == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8.0000000000', 'The output is incorrect.'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"8.0000000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '8.0000000000\\n'\nassert solution(open('input_2.txt', 'r')) == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The solution provided is incorrect.\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"8.0000000000\", \"Output should be 8.0000000000\"\nassert solution() == \"0.0200000000\", \"Output should be 0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output a single integer on a line by itself, the maximum number of media companies that can be sold broadcasting rights.\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"10 2 2\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == 2\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == 2\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3.666666667, \"Incorrect solution\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == 3.666666667\nassert solution(\"4 11 4\\n10 10 10 10\") == 20.000000000"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n3.666666667\n\"\"\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3.666666667'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1 42') == 2\nassert solution(stdin='5 123456789') == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 42') == 2\nassert solution('5 123456789') == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\nassert solution() == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2\"\n\nfrom functools import reduce"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(5) == 5\nassert solution(10) == 10\nassert solution(100) == 2863095592388972929\nassert solution(1000) == 10495663330644638257214089\nassert solution(1000000000) == 561177919657204488085061728292610395767875219169051185056325056178931642607177494254788156465679803224749419419909391298466408026028797884789799436089089352064916549359991531230126444164981496622621654358853379964611907621607828236477938906866827430940874370146488386340732636216881983018066966021402511915891185264955065863299532524092480684162292357937346711186589702929690469914659280050368976017357878741272928022632428168926747218984449959282165839515379841338377690732643921205091718757082695070621460534964280088943795660965227047401072687737239481831965252970689121359591973704606137759706027399216043894399969996723186193936522221284830360284454962278218962018397786708206021090570499636358808102705927281687231978314910337155455761621719999967321862658441859983800710815487207104632010465727414370268743038796577833478203138251620549926727420122631660322898710705882119862826107667422290796652825"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"16317634\", \"Test case 2 failed\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\", \"Test 1 failed\"\nassert solution() == \"0\\n\", \"Test 2 failed\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_cases/example_1.txt').read()) == '0'\nassert solution(open('test_cases/example_2.txt').read()) == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n\"\nassert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Incorrect output\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"3 1 0 0 2\n1 2 2\n1 1 1\"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_index + 1} failed. Expected Output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '3\\n'\nassert solution(sample_input2) == '3\\n'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"3\", \"Test 1\"\nassert solution(sample_input2) == \"3\", \"Test 2\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Expected Output: 3, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3', \"Test case 1 failed\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2, \"Expected output: 2, Actual output: {}\".format(solution(\"ABC\"))\nassert solution(\"ABBBAAAA\") == 3, \"Expected output: 3, Actual output: {}\".format(solution(\"ABBBAAAA\"))"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1, f\"Solution does not work for example 1. Got: {solution(input_1)}, expected: {output_1}\"\nassert solution(input_2) == output_2, f\"Solution does not work for example 2. Got: {solution(input_2)}, expected: {output_2}\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2, \"Test case 1 failed\"\nassert solution(\"ABBBAAAA\") == 3, \"Test case 2 failed\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '3', \"The number of teleportations is incorrect.\"\nassert solution(sample_input2) == '3', \"The number of teleportations is incorrect.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of strings: \")) == \"3\", \"Please enter a valid number of strings\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nAAA\\n\") == \"3\", \"Test 1\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\", \"Test 2\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"The solution is incorrect. Please check the provided input and output.\\nInput: {input_data}\\nOutput: {output_data}\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input1.txt').read()) == '3\\n', \"Incorrect output for sample input 1.\"\nassert solution(open('sample_input2.txt').read()) == '3\\n', \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\nA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\\n\") == \"3\\n\"\n\nSolution:\nWe can solve this problem using dynamic programming. We will maintain a matrix `dp` of size `(N+1) x (N+1)`, where `dp[i][j]` will represent the length of the longest described subsequence that starts with string `i` and ends with string `j`. We will use the first row and column of `dp` to fill in the rest of the matrix.\n\nHere is the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of strings: \")) == 3, \"Invalid Input\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3', 'Your solution is not correct.'\nprint('All tests passed!')"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nB\\nAAA\") == 3\nassert solution(\"5\\nA\\nABA\\nB\\nABABA\\nAAAAAB\") == 3"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.1\\n', 'Test failed' # Your implementation must return the expected output\nassert solution(stdin) == '0.1909090909\\n', 'Test failed' # Your implementation must return the expected output"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\") == \"0.1\\n0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"0.1\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"0.1909090909\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1\\n100 10 2 2\\n100 10 2 3\\n') == '0.1909090909\\n'\nassert solution('100 10 2 4\\n100 10 2 5\\n100 10 2 6\\n') == '0.1909090909\\n'\nassert solution('100 10 2 7\\n100 10 2 8\\n100 10 2 9\\n') == '0.1909090909\\n'\nassert solution('100 10 2 10\\n100 10 2 11\\n100 10 2 12\\n') == '0.1909090909\\n'\nassert solution('100 10 2 13\\n100 10 2 14\\n100 10 2 15\\n') == '0.1909090909\\n'\nassert solution('100 10 2 16\\n100 10 2 17\\n100 10 2 18\\n') == '0.1909090909\\n'\nassert solution('100 10 2 19\\n100 10 2 20\\n100 10 2 21\\n') == '0.1909090909\\n'\nassert solution('100 10 2 22\\n100 10 2 23\\n100 10 2 24\\n') == '0.1909090909\\n'\nassert solution('100 10 2 25\\n100 10 2 26\\n100 10 2 27\\n') == '0.1909090909\\n'\nassert solution('100 10 2 28\\n100 10 2 29\\n100 10 2 30\\n') == '0.1909090909\\n'\nassert solution('100 10 2 31\\n100 10 2 32\\n100 10 2 33\\n') == '0.1909090909\\n'\nassert solution('100 10 2 34\\n100 10 2 35\\n100 10 2 36\\n') == '0.1909090909\\n'\nassert solution('100 10 2 37\\n100 10 2 38\\n100 10 2 39\\n') == '0.1909090909\\n'\nassert solution('100 10 2 40\\n100 10 2 41\\n100 10 2 42\\n') == '0.1909090909\\n'\nassert solution('100 10 2 43\\n100 10 2 44\\n100 10 2 45\\n') == '0.1909090909\\n'\nassert solution('100 10 2 46\\n100 10 2 47\\n100 10 2 48\\n') == '0.1909090909\\n'\nassert solution('100 10 2 49\\n100 10 2 50\\n100 10 2 51\\n') == '0.1909090909\\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.1909090909\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 10 2 1\\n\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\\n\") == \"0.1909090909\\n\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbac\") == 0\nassert solution(\"ABABABcABABAbAbad\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 0\nassert solution('ABABABcABABAbAbab') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"abababab\") == 0\nassert solution(\"abc\") == 0\nassert solution(\"ababababa\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbac\") == 2\nassert solution(\"ABABABcABABAbAbad\") == 0\nassert solution(\"ABABABcABABAbAbae\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"Your solution is incorrect.\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 0\nassert solution('ABABABcABABAbAbab') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABABABcABABAbAbab') == 4, \"Test failed\"\nassert solution('hello') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\nassert solution('ABABABcABABAbAbab') == 0, \"Test failed\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \"4\"\nassert solution(\"ABABABcABABAbAbab\", 3) == \""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"Expected 4, got {}\".format(solution(\"ABABABcABABAbAbab\"))\nassert solution(\"ABABABcABABAbAbac\") == 2, \"Expected 2, got {}\".format(solution(\"ABABABcABABAbAbac\"))\nassert solution(\"ABABABcABABAbAbad\") == 5, \"Expected 5, got {}\".format(solution(\"ABABABcABABAbAbad\"))\nassert solution(\"ABABABcABABAbAbae\") == 3, \"Expected 3, got {}\".format(solution(\"ABABABcABABAbAbae\"))"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"4 3\n0\n0\n1\n\"\"\"\n) == \"2\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1\\n1\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1\\n2\") == \"3\\n\"\nassert solution(\"4 3\\n2\\n2\\n2\") == \"4\\n\"\nassert solution(\"4 3\\n3\\n3\\n3\") == \"5\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 3\\n0\\n0\\n1\\n\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"4 3\\n0\\n1\\n2\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n0\\n2\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1\\n2\") == \"3\\n\"\nassert solution(\"4 3\\n2\\n0\\n3\") == \"3\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"4 3\\n0\\n1\\n0\\n\") == \"1\"\nassert solution(\"4 3\\n0\\n1\\n2\\n\") == \"3\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\", f\"Expected output: 2, actual output: {solution(input())}\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"5 5\\n0\\n0\\n1\\n0\\n1\\n0\\n1\\n0\\n1\") == \"5\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Your solution does not pass the given test cases. Expected output: {output_str}, received: {solution(input_str)}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: '{expected_output}', Actual output: '{solution(input_data)}'\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n') == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 10 10 10\\n100 50 100 100') == '2\\nP0: 10000000 5000 10000 5000\\nP1: 10000000 2500 10000 2500\\nP2: 10000000 1250 10000 1250\\n'\nassert solution('1 1000 1000 1000\\n500 2000 500 2000\\n1000 5000 1000 5000\\n') == '3\\nP0: 10000000 5000 10000 5000\\nP1: 10000000 2500 10000 2500\\nP2: 10000000 1250 10000 1250\\nP3: 10000000 5000 10000 5000'\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n5\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}!= {output()}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n\n'''"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\n5\\n\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n2 5 8 9 1 4 7 6 3\\n3 6 9 1 4 7 2 5 8\\n4 7 1 4 9 2 8 5 6\\n5 8 4 9 2 6 1 7 3\\n6 9 7 1 8 5 3 2 4\\n7 1 3 6 9 8 4 5 2\\n8 4 2 5 1 9 6 7 3\\n9 6 5 3 7 1 2 8 4\\n\") == \"10\\n1 2 3 4 5 6 7 8 9\\n2 5 8 9 1 4 7 6 3\\n3 6 9 1 4 7 2 5 8\\n4 7 1 4 9 2 8 5 6\\n5 8 4 9 2 6 1 7 3\\n6 9 7 1 8 5 3 2 4\\n7 1 3 6 9 8 4 5 2\\n8 4 2 5 1 9 6 7 3\\n9 6 5 3 7 1 2 8 4\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n3\\n1\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed.\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n1 2 5 4 3 6'\nprint('All tests passed.')"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str: pass\\n\"\n\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str: pass\\n\"\n\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n3\\n1\\n2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n') == '2\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n') == '4\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n') == '8\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n') == '12\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n') == '16\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n') == '20\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n') == '24\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n') == '28\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n') == '32\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n') == '36\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n') == '40\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n') == '44\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n') == '48\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n') == '52\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '56\\n'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n7"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == ['def solution(stdin: str) -> str:','   pass']"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n4 4 4 4') == '-1\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"60\\n\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"60\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output: {solution(sample_input)}, expected {sample_output}\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '60\\n', 'Expected output is 60, got {}'.format(solution(stdin))"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60\nassert solution(\"3 3 4\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == -1"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == # Solution function to be tested"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n\"\"\") == \"60\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '''\nCase #1: 1\nCase #2: 2\n'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Case #1: 1\\nCase #2: 2\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 H 2 O 1\\n1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nassert solution(\"1 2 H 2 O 1\\n1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n1 2 C 1 O 2\\n-1 1 O 2\\n0 0\") == \"6 6 6 1\"\nassert solution(\"1 2 H 2 O 1\\n1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n1 2 C 1 O 2\\n-1 1 O 2\\n0 0\\n0 0\\n0 0\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+1 2 H 2 O 1\" + \"\\n\" + \"+1 2 C 1 O 2\" + \"\\n\" + \"-1 1 O 2\" + \"\\n\" + \"-1 3 C 6 H 12 O 6\" + \"\\n\" + \"0 0\") == [6, 6, 6, 1]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n        +1 2 H 2 O 1\n        +1 2 C 1 O 2\n        -1 1 O 2\n        -1 3 C 6 H 12 O 6\n    0 0\n    ''') == ['6', '6', '6', '1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"6 6 6 1\"\nassert solution(\"0 0\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution(input()) == \"6 6 6 1\"\nassert solution"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example_input) == expected_output, f\"Wrong answer for the example input: {example_input} {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nassert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"The input consists of a single test case.\\n4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"The input consists of a single test case.\\n4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\\n\", \"Test Failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == 20.83, \"Your solution is incorrect.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\"\n) == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"The input consists of a single test case.\\n\") == 20.83, \"The correct output is 20.83, but got: {}.\".format(solution(\"The input consists of a single test case.\\n\"))"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'\n\nThe given problem statement is quite easy to understand and implement. We just need to implement the given solution. \n\nWe can solve this problem using a simple approach. We can first define a polygon with two vertices (the origin and the maximum), and then we can calculate the area of the polygon and check if it is greater than or equal to the capacity of the tank. If the area is greater than or equal to the capacity, we can find the height of the water by taking the distance between the vertex with maximum $y$-coordinate and the vertex with minimum $y$-coordinate, and multiplying it by the depth of the tank.\n\nLet's see the code implementation: \n\n```python\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 49, \"Please implement the solution function\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"4 3\\n5 2 1\\n3 1 4\\n7 6 5\") == \"4\"\nassert solution(\"1 2\\n3 4 5\") == \"0\"\nassert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"4 3\\n5 2 1\\n3 1 4\\n7 6 5\") == \"4\"\nassert solution(\"1 2\\n3 4 5\") == \"0\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49\\n'\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"2 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"26\"\nassert solution(\"3 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"46\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"55\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 49"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''#\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '''\n##CROSSWORD####\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"\\n##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#..#....\\n#.."
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\nassert solution(\"1 15\\n##.........####\\n1\\n.A..A..A.B\\n\") == \".A..A..A.B\\n\"\nassert solution(\"1 15\\n##.........####\\n1\\n..C...D.E.F\\n\") == \"..C...D.E.F\\n\"\nassert solution(\"1 15\\n##.........####\\n1\\n..AB....B..C\\n\") == \"..AB....B..C\\n\"\nassert solution(\"1 15\\n##.........####\\n1\\n.....D...E..F\\n\") == \".....D...E..F\\n\"\nassert solution(\"1 15\\n##.........####\\n1\\n..E...F...G..H\\n\") == \"..E...F...G..H\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"\\nCROSSWORD\\n\"\nprint(\"All tests passed successfully!\")\n\nfrom typing import List"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '31'\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == 31\n\nsolution('3 1\\n2 7 6\\n9 5 1\\n4 3 8')"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == 31\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 31, \"The test case 1 failed\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"31\", \"Expected output: 31, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('tests/test_cases/sample_input.txt').read()) == '31'\nassert solution(open('tests/test_cases/sample_output.txt').read()) == '31'\nassert solution(open('tests/test_cases/test_case1.txt').read()) == '57'\nassert solution(open('tests/test_cases/test_case2.txt').read()) == '59'\nassert solution(open('tests/test_cases/test_case3.txt').read()) == '22'\nassert solution(open('tests/test_cases/test_case4.txt').read()) == '24'\nassert solution(open('tests/test_cases/test_case5.txt').read()) == '53'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\nBBW') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"4 2\\nBWBBW\") == \"3\"\nassert solution(\"5 3\\nWWWWWWWWWW\") == \"4\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\nBBW') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.556, \"The solution is incorrect.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.556\", \"Test case failed\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.556, \"Test failed\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\\n\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output should be 3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 4 3 2\n    0 4 3 2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 3 2\n    0 3 4 2\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 3 2\n    0 3 2 4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 3 2\n    0 2 3 4\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 3 2\n    0 1 2 3\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5 4 3 2\") == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2\") == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4 3 2') == '3'\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(4)) == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n4 2 7\") == \"13\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n4 2 7\\n5 5 9\") == \"13\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n4 2 7\\n5 5 9\\n6 7 10\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"2\\n2 3 5\\n2 1 8\") == \"11\\n\"\nassert solution(\"1\\n1 1 1\") == \"1\\n\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\") == \"4\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"6\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"7\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"8\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"9\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\\n\"\n\nassert solution(\"\"\"\n2\n1 100\n2 200\n\"\"\") == \"300\\n\"\n\nassert solution(\"\"\"\n1\n1 100\n2 200\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n5\n1 100\n2 100\n3 100\n4 100\n5 100\n\"\"\") == \"10000\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"13\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == 0\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == 0.000001\nassert solution(\"10.000000 20.123456\\n100000 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n100000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n100000 20.123456\\n100000 20.123456\\n\") == 0.000001\nassert solution(\"10.000000 20.123456\\n100000 20.123456\\n100001 20.123456\\n\") == 3.141593\n\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"1.000000 2.000000\\n100 50\\n400 300\\n600 200\\n\") == 500.0\nassert solution(\"1000000.000000 500000.000000\\n1\\n200000.000000 300000.000000\\n400000.000000 1000000.000000\\n600000.000000 2000000.000000\\n\") == 10000000.0\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n23.141593 20.123456\\n\") == 0.0\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 19.123456\\n\") == 1.7320508075688772\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n\") == 1.7320508075688772\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n23.141593 20.123456\\n\") == 0.0\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3.141593\nprint(\"pass\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3.141593\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456 13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456 13.141593 20.123456 13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456 13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456 13.141593 20.123456 13.141593 20.123456\") == \"0.0\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456 13.141593 20.123456 13.141593 20.123456\") == \""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3.141593, \"Solution failed\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 3.141593\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\") == 2.0\nassert solution(\"1.000000 2.000000\\n3\\n4.000000 5.000000\\n\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3.141593, \"Test case failed. Please provide the correct code.\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.13333333333333\"\nprint(\"Correct\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"2.13333333333333\\nimpossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"3\\n5 5\\n3\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 4\\n2\\n\") == \"2.13333333333333\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"impossible\"\nassert solution(\"3\\n4 4\\n1 2\\n2 1\\n3 3\\n2 1\\n\") == \"impossible\"\nassert solution(\"3\\n4 4\\n3 4\\n2 3\\n3 2\\n2 4\\n\") == \"impossible\"\nassert solution(\"2\\n2\\n2\\n2\\n\") == \"impossible\"\nassert solution(\"3\\n4 4\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"impossible\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.13333333333333\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.13333333333333\", \"The solution should be 2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\nimpossible\"\nassert solution(\"3\\n4 4\\n1 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 1\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 3\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 4\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 5\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 6\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 7\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 8\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 9\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 10\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\nimpossible\"\nassert solution(\"3\\n4 4\\n1 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 1\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 3\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 4\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 5\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 6\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 7\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 8\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 9\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 10\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\nimpossible\"\nassert solution(\"3\\n4 4\\n1 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 1\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 2\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 3\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 4\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 5\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 6\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 7\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 8\") == \"0.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 9\") == \"1.0\\nimpossible\"\nassert solution(\"3\\n4 4\\n3 10\") == \"0.0\\nimpossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"5\\n2 3\\n1\\n3\") == \"impossible\\n\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n1 1\\n1 2\\n2\\n') == 'impossible'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(12345) == 18\nassert solution(500001) == 18\nassert solution(900000) == 18\nassert solution(10000000) == 18\nassert solution(50000000) == 18\nassert solution(1000000000) == 18"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == '18'\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == '18\\n'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"18\"\nassert solution(50) == \"207\"\nassert solution(1000) == \"2727\"\nassert solution(5000) == \"34836\"\nassert solution(50000) == \"348361\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1000000) == \"18\", \"Error: Testcase 1\"\nassert solution(10000000) == \"201912\", \"Error: Testcase 2\"\nassert solution(100000000) == \"401996101\", \"Error: Testcase 3\"\nassert solution(1000000000000) == \"9999999999\", \"Error: Testcase 4\"\nassert solution(100000000000000) == \"9999999999999999\", \"Error: Testcase 5\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == 18\nprint(\"All tests passed!\")"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"5\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"6\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"2\"\nassert solution(\"7\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"1\"\nassert solution(\"8\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"0\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"def solution(stdin: str) -> str:pass\\n\"\nassert solution(1) == \"def solution(stdin: str) -> str:pass\\n\"\nassert solution(2) == \"def solution(stdin: str) -> str:pass\\n\"\nassert solution(3) == \"def solution(stdin: str) -> str:pass\\n\"\nassert solution(4) == \"def solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1 failed\"\n\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 2 failed\"\n\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 3 failed\"\n\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 4 failed\"\n\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 5 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''1\n21 A man walking\n19 A female run\n''') == '2'\nassert solution('''10\n185 M classicism programming\n215 M baroque skiing\n190 A man running\n205 A woman sporting\n225 A man jogging\n235 A woman riding\n230 F baroque soccer\n''') == '7'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    \na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\"\n) == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(\n    \"\"\"\n    5\n    \na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\"\n) == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(\n    \"\"\"\n    5\n    \na 0\na 1\nb 2\nc 2 3\nb 4\n\"\"\"\n) == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str: \\n\\t... \\n\\treturn... \\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received output: {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == ['2', '1', '2', 'def solution(stdin: str) -> str:']"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Your solution is incorrect. Please check the given code for the correctness.\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == '5\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"5\\n4\\n4\\n5\\n2\\n1\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"5\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: Input: {input()}, Output: {output}\" for t, (input, output) in enumerate(tests)"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4, \"The correct output is: 4\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == 4, \"Test failed\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") % 1000000009 == 0, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\nassert solution(\"1000000000 1000000000\\n\") == \"1000000000\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(32) == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n3 4') == '2\\n3 4'\nassert solution('5 1\\n2 3\\n3 4') == '2'\nassert solution('4 1\\n2 3\\n3 4') == '3 4'\nassert solution('4 2\\n2 3\\n3 4') == '3 4'\nassert solution('4 3\\n2 3\\n3 4') == '2'\nassert solution('4 4\\n2 3\\n3 4') == '1'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2\n3 4\n2 4'''"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n2 4\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n') == '4\\n12 13\\n10 11\\n9 14\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 5\\n6 6\\n') == '2\\n3 4\\n5 6\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 5\\n6 6\\n4 5\\n') == '4\\n3 5\\n5 6\\n'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200\\n2"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"No solution found.\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '''\n2\n3 4\n2 4\n'''\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '''\n2\n5 4\n4 2\n'''\n\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 1\n6 2\n''') == '''\n1\n2 3\n3 4\n4 5\n'''\n\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n5 1\n6 2\n7 3\n''') == '''\n1\n2 3\n3 4\n4 5\n'''\n\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n5 1\n6 2\n7 3\n8 4\n''') == '''\n1\n2 3\n3 4\n4 5\n'''"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"1 3\\n\"\n    \"2 1\\n\"\n    \"3 5\\n\"\n    \"7 2\\n\"\n) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == 0\nassert solution(\"\") == 0\n\nfor _ in range(int(input())):\n    m, n = map(int, input().split())\n    price_of_one_widget = int(input())\n    day_one_widget_is_available = int(input())\n    price_of_last_widget = int(input())\n    day_last_widget_is_delivered = int(input())\n\n    if m == 1:\n        producer_1_price = price_of_one_widget\n        producer_2_price = price_of_one_widget\n    else:\n        producer_1_price = price_of_one_widget\n        producer_2_price = price_of_one_widget\n        for _ in range(m - 1):\n            price_of_one_widget = price_of_one_widget - price_of_one_widget\n            producer_2_price = price_of_one_widget\n\n    if n == 1:\n        consumer_1_price = price_of_last_widget\n        consumer_2_price = price_of_last_widget\n    else:\n        consumer_1_price = price_of_last_widget\n        consumer_2_price = price_of_last_widget\n        for _ in range(n - 1):\n            price_of_last_widget = price_of_last_widget - price_of_last_widget\n            consumer_2_price = price_of_last_widget\n\n    if day_one_widget_is_available > day_last_widget_is_delivered:\n        max_profit = 0\n    else:\n        max_profit = (producer_1_price - consumer_2_price) + (price_of_one_widget - consumer_2_price)\n\n    print(max_profit)"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"5\\n0\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5, \"The output should be 5.\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == # Solution"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n0\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 4 4\\n0 0\\n1 1\\n1 2\\n1 3\\n2 3\\n3 3\\n2 4\\n3 4\\n4 4\\n4 3\\n5 3\\n6 4\\n7 4\\n7 5\\n8 5\\n9 5\\n10 6\\n11 6\\n12 6\\n13 6\\n13 7\\n14 7\\n15 7\\n16 7\\n17 7\\n18 7\\n19 7\\n20 7\\n21 7\\n22 7\\n23 7\\n23 8\\n24 8\\n25 8\\n26 8\\n27 8\\n27 9\\n28 9\\n29 9\\n30 9\\n31 9\\n31 10\\n32 10\\n33 10\\n34 10\\n34 11\\n35 11\\n36 11\\n37 11\\n38 11\\n39 11\\n40 11\\n41 11\\n42 11\\n43 11\\n44 11\\n44 12\\n45 12\\n46 12\\n47 12\\n48 12\\n49 12\\n50 12\\n51 12\\n51 13\\n52 13\\n53 13\\n54 13\\n55 13\\n55 14\\n56 14\\n57 14\\n58 14\\n58 15\\n59 15\\n60 15\\n61 15\\n62 15\\n63 15\\n64 15\\n64 16\\n65 16\\n66 16\\n67 16\\n68 16\\n68 17\\n69 17\\n70 17\\n71 17\\n72 17\\n73 17\\n74 17\\n74 18\\n75 18\\n76 18\\n77 18\\n78 18\\n79 18\\n80 18\\n81 18\\n82 18\\n82 19\\n83 19\\n84 19\\n85 19\\n86 19\\n87 19\\n88 19\\n89 19\\n90 19\\n91 19\\n92 19\\n93 19\\n94 19\\n95 19\\n96 19\\n97 19\\n98 19\\n99 19\\n100 19\\n100 20\\n101 20\\n102 20\\n103 20\\n104 20\\n105 20\\n105 21\\n106 21\\n107 21\\n108 21\\n109 21\\n110 21\\n111 21\\n112 21\\n113 21\\n114 21\\n115 21\\n116 21\\n116 22\\n117 22\\n118 22\\n119 22\\n120"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 3) == 'GHOST'\nassert solution(4, 2) == 'SAFE'\nassert solution(4, 1) == 'SAFE'\nassert solution(5, 5) == 'SAFE'\nassert solution(5, 4) == 'SAFE'\nassert solution(5, 3) == 'SAFE'\nassert solution(5, 2) == 'SAFE'\nassert solution(5, 1) == 'SAFE'\nassert solution(5, 0) == 'SAFE'\nassert solution(6, 6) == 'SAFE'\nassert solution(6, 5) == 'SAFE'\nassert solution(6, 4) == 'SAFE'\nassert solution(6, 3) == 'SAFE'\nassert solution(6, 2) == 'SAFE'\nassert solution(6, 1) == 'SAFE'\nassert solution(6, 0) == 'SAFE'\nassert solution(7, 7) == 'SAFE'\nassert solution(7, 6) == 'SAFE'\nassert solution(7, 5) == 'SAFE'\nassert solution(7, 4) == 'SAFE'\nassert solution(7, 3) == 'SAFE'\nassert solution(7, 2) == 'SAFE'\nassert solution(7, 1) == 'SAFE'\nassert solution(7, 0) == 'SAFE'\nassert solution(8, 8) == 'SAFE'\nassert solution(8, 7) == 'SAFE'\nassert solution(8, 6) == 'SAFE'\nassert solution(8, 5) == 'SAFE'\nassert solution(8, 4) == 'SAFE'\nassert solution(8, 3) == 'SAFE'\nassert solution(8, 2) == 'SAFE'\nassert solution(8, 1) == 'SAFE'\nassert solution(8, 0) == 'SAFE'\nassert solution(9, 9) == 'SAFE'\nassert solution(9, 8) == 'SAFE'\nassert solution(9, 7) == 'SAFE'\nassert solution(9, 6) == 'SAFE'\nassert solution(9, 5) == 'SAFE'\nassert solution(9, 4) == 'SAFE'\nassert solution(9, 3) == 'SAFE'\nassert solution(9, 2) == 'SAFE'\nassert solution(9, 1) == 'SAFE'\nassert solution(9, 0) == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Solution failed for input {stdin}\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('2 3\\n1 C\\n2 C\\n3 C\\n') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 CW\\n2 CCW\\n1 CCW\\n\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"GHOST\", \"The code does not meet the requirements specified in the prompt.\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST\\n'\nassert solution('3 1\\n3 W\\n2 W\\n1 W\\n3 C\\n2 C\\n1 C\\n3 W\\n2 W\\n1 W') == 'SAFE\\n'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('4 4\\n1 C\\n0 C\\n3 C\\n') == 'SAFE'\nassert solution('4 5\\n1 C\\n2 C\\n3 C\\n') == 'SAFE'\nassert solution('5 5\\n0 C\\n1 C\\n2 C\\n3 C\\n') == 'SAFE'\nassert solution('5 4\\n0 C\\n1 C\\n2 C\\n3 C\\n') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\", \"Solution is not correct.\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00\") == \"no fika\"\nassert solution(\"2 5\\n0.00 2.00 0.00 0.50 0.30 0.40 0.50\") == \"2\"\nassert solution(\"3 5\\n0.00 2.00 0.00 0.50 0.30 0.40 0.50\") == \"no fika\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    0.00 2.00\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 4\n    0.00 2.00\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    3 3\n    0.00 2.00 0.50 1.00 0.50\n    0.50 1.00 0.50 0.00 0.50 0.50\n    0.50 0.00 0.50 0.50 0.50 0.50\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 6\n    0.00 0.50 1.00 0.50 0.00 0.50 0.50 0.50 0.50 0.50 0.50\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    6 6\n    0.00 0.50 0.50 0.50 0.00 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    \"\"\"\n) == \"2\"\n\nassert abs(solution(\n    \"\"\"\n    7 8\n    0.00 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50\n    0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 "
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    0.00 2.00\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 4\n    0.00 2.00\n    \"\"\"\n) == \"no fika\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    0.10 0.10\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 4\n    0.10 0.10\n    \"\"\"\n) == \"no fika\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(r\"3 5\\n0.00 1.00\\n0.01 1.50\\n0.02 2.00\\n0.03 2.50\") == \"2.5\\n\"\nassert solution(r\"3 5\\n0.00 1.00\\n0.01 1.50\\n0.02 2.00\\n0.03 2.50\\n0.04 3.00\\n0.05 3.50\") == \"3.0\\n\"\nassert solution(r\"5 7\\n0.00 1.00\\n0.01 1.50\\n0.02 2.00\\n0.03 2.50\\n0.04 3.00\\n0.05 3.50\\n0.06 4.00\\n0.07 4.50\\n0.08 5.00\") == \"5.0\\n\"\nassert solution(r\"10 15\\n0.00 1.00\\n0.01 1.50\\n0.02 2.00\\n0.03 2.50\\n0.04 3.00\\n0.05 3.50\\n0.06 4.00\\n0.07 4.50\\n0.08 5.00\\n0.09 5.50\\n0.10 6.00\") == \"6.0\\n\"\nassert solution(r\"10 15\\n0.00 1.00\\n0.01 1.50\\n0.02 2.00\\n0.03 2.50\\n0.04 3.00\\n0.05 3.50\\n0.06 4.00\\n0.07 4.50\\n0.08 5.00\\n0.09 5.50\\n0.10 6.00\\n0.11 6.50\\n0.12 7.00\\n0.13 7.50\\n0.14 8.00\\n0.15 8.50\\n0.16 9.00\\n0.17 9.50\\n0.18 10.00\\n0.19 10.50\\n0.20 11.00\\n0.21 11.50\\n0.22 12.00\\n0.23 12.50\\n0.24 13.00\\n0.25 13.50\\n0.26 14.00\\n0.27 14.50\\n0.28 15.00\\n0.29 15.50\\n0.30 16.00\\n0.31 16.50\\n0.32 17.00\\n0.33 17.50\\n0.34 18.00\\n0.35 18.50\\n0.36 19.00\\n0.37 19.50\\n0.38 20.00\\n0.39 20.50\\n0.40 21.00\\n0.41 21.50\\n0.42 22.00\\n0.43 22.50\\n0.44 23.00\\n0.45 23.50\\n0.46 24.00\\n0.47 24.50\\n0.48 25.00\\n0.49 25.50\\n0"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 4\n0.00 2.00\n0.50 2.00\n1.00 2.00\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 5\n0.00 2.00\n0.50 2.00\n1.00 2.00\n0.25 3.00\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n2 4\n0.00 1.00\n0.00 2.00\n0.00 3.00\n0.00 4.00\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n2 5\n0.00 2.00\n0.00 3.00\n0.00 4.00\n0.00 5.00\n\"\"\") == \"10\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"10\", \"The solution is not correct\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\\n\", \"Please write the function solution in the solution.py file\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n1"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10\\n'\nassert solution(stdin) == '10\\n'\nassert solution(stdin) == '10\\n'\nassert solution(stdin) == '10\\n'\nassert solution(stdin) == '10\\n'\nassert solution(stdin) == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 'Not possible'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"W 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\nW 10 0\\nE 17 4\\n\") == \"3\\n\"\nassert solution(\"3 4\\nW 10 0\\nE 17 4\\n\") == \"3\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0', 'Test case 1 failed'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Per is repairing roads. The job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane.\n\nNo car drives before being given a \"go\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least $3$\u00a0seconds between each other.\n\nFor example, if cars A and B arrive at the west endpoint at second $10$, Per can let them go at earliest second $10$ and $13$ in the order they arrived. If it, in this example, takes $8$ seconds to pass and car C arrives at the east endpoint at second $17$, then car C has to wait $4$ seconds until Per lets it go at second $21$.\n\nThere is a problem of drivers getting irritated with Per; they think they have to stop for too long. Per has been logging how long they can bear to wait before they get irritated. One day, to be able to evaluate his work, Per noted down when the cars arrived at the two endpoints of the segment. Per\u2019s question is the following: what is the least number of drivers that can be irritated? We assume that a driver gets irritated if the time between the moment he arrives at the maintained segment and the moment he is actually given the \"go\" exceeds his irritation time limit.\n\n-----Input-----\nThe first line of the input contains two integers $t$ and $n$ ($4 \\leq t \\leq 180$ and $1\\leq n\\leq 250$), where $t$ is the time in seconds needed for a car to pass the segment under maintenance, and $n$ is the total number of cars arriving at the segment. The following $n$ lines describe the cars. The $i$-th line contains the description of the $i$-th car in the following format:\n - one character $d$, being W for cars arriving at the west endpoint of the segment, and E for the ones that arrive at the east endpoint; and\n - two integers $a$ and $r$ ($0 \\leq a < 86400$ and $0 \\leq r \\leq 3600$), where $a$ denotes the arrival time in seconds after midnight, and $r$ denotes the time in seconds it takes for the driver to get irritated.\n\nThe cars arrive in the order specified in the input and they cannot overtake each other. In particular, a car whose driver is already irritated has to stay in the queue until eventually receiving the \"go\" and passing the maintained segment.\n\n-----Output-----\nOutput one line with the least possible number of irritated drivers.\n\n-----Examples-----\nSample Input:\n8 3\nW 10 0\nW 10 3\nE 17 4\nSample Output:\n0\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\"\nassert solution(\"10 0\\n10 3\\n17 4\\n\") == \"2\"\nassert solution(\"2 1\\n10 3\\n10 4\\n\") == \"2\"\nassert solution(\"4 2\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"1 2\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"1 2\\n2 3\\n2 4\\n\") == \"2\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Output is incorrect.\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"3\\n3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3 3\n    2 2\n    1 1\n    3 3\n    2 2\n    1 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    3 3\n    2 2\n    1 1\n    3 3\n    2 2\n    1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3 3\n    2 2\n    1 1\n    3 3\n    2 2\n    1 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    3 3\n    2 2\n    1 1\n    3 3\n    2 2\n    1 1\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 8, 5, 6, 3, 4, 5, 13, 6, 10) == 3, \"Incorrect output\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 8) == 3\nassert solution(5, 6) == 3\nassert solution(3, 4) == 3\nassert solution(5, 13) == 3\nassert solution(6, 10) == 3"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\nprint(\"Success: test_case_4 passed\")"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nprint(\"pass\")"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n10 3 3\\n') == 'impossible'\nassert solution('2 3\\n4 5\\n') == 'definitely impossible'\nassert solution('1 2\\n2 3\\n') == 'ABCABC'\nassert solution('1 2\\n1 1\\n') == 'AB'\nassert solution('3 3\\n3 3\\n') == 'ABC'\nassert solution('3 3\\n2 2\\n') == 'AB'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"impossible\"\nassert solution(input()) == \"R\\nABCABCABCABCABCABC\"\nassert solution(input()) == \"R\\nAAAABBCACCCCCCDDDDD\"\nassert solution(input()) == \"R\\nAAAABBCACCCCCCDDDDD\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n1 3 1\") == \"B B B\\nB B B\\nB B B\\nB B B\\nB B B\\n\"\nassert solution(\"4 4\\n3 3 3\") == \"A B C\\nA B C\\nA B C\\nA B C\\nA B C\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n2 1 2\") == \"2AB2\"\nassert solution(\"4 4\\n1 1 1\") == \"2B22\"\nassert solution(\"4 4\\n3 3 3\") == \"4C3C3C3\"\nassert solution(\"4 4\\n3 3 1\") == \"4AB3B2B1\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\"\nprint(\"impossible\")"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible'\nassert solution('4 4\\n10 3 4') == 'impossible'\nassert solution('4 4\\n10 3 5') == 'impossible'\nassert solution('4 4\\n10 4 3') == 'impossible'\nassert solution('4 4\\n10 4 4') == 'impossible'\nassert solution('4 4\\n10 4 5') == 'impossible'\nassert solution('4 4\\n10 5 3') == 'impossible'\nassert solution('4 4\\n10 5 4') == 'impossible'\nassert solution('4 4\\n10 5 5') == 'impossible'\nassert solution('4 4\\n10 3 3') == 'AABC'\nassert solution('4 4\\n10 3 4') == 'ABC'\nassert solution('4 4\\n10 3 5') == 'ABC'\nassert solution('4 4\\n10 4 3') == 'ABC'\nassert solution('4 4\\n10 4 4') == 'ABC'\nassert solution('4 4\\n10 4 5') == 'ABC'\nassert solution('4 4\\n10 5 3') == 'ABC'\nassert solution('4 4\\n10 5 4') == 'ABC'\nassert solution('4 4\\n10 5 5') == 'ABC'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nA\\nB\\n\\nAND\\n\\n\\nAND\\n\\n\\nAND\\n\\n\\nAND\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nA\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Solution does not match the expected output. Given: {input_string}\\nExpected: {expected_output}\\nGot: {solution(input_string)}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\nprint(\"Passed!\") if __name__ == \"__main__\":\n    print(solution(input()))"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"No input should return an empty string\"\nassert solution(\"1\") == \"\", \"Invalid input should return an empty string\"\nassert solution(\"12\") == \"\", \"Invalid input should return an empty string\"\nassert solution(\"11111\") == \"\", \"Invalid input should return an empty string\"\nassert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\", \"The output should match the expected output\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output\\nInput: {input()}\\nExpected Output: {expected_output}\\nSolution Output: {solution(input())}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\") == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected output: 12, got: \" + str(solution(\"abrahellehhelleh\"))\nassert solution(\"rachelhellabracadabra\") == 0, \"Expected output: 0, got: \" + str(solution(\"rachelhellabracadabra\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The correct answer is 12, but got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == 12, \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output should be 12.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output is incorrect.\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Your solution is incorrect\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"70\", \"The output is not as expected.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"70\"\nassert solution(50) == \"340\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"45\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70' # correct solution"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return \\\"\\\"#\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\nOutput:\\n10\\n7\\n8\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '10\\n7\\n8\\n7\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    \"\"\"\n) == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9\n    0 1\n    0 4\n    1 4\n    0 1\n    0 4\n    \"\"\"\n) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"10 30 50\\n1 10\\n2 15\\n3 20\\n4 15\\n5 20\\n6 15\\n7 20\\n8 15\\n9 20\") == \"10\\n3\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6', 'Testcase 1 not passing'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\n\nassert solution('''1 100\n-50 100\n0 100\n50 100\n0 0''') == '1'\n\nassert solution('''1 50\n0 0\n0 50\n50 50\n0 0''') == '0'\n\nassert solution('''1 2\n1 4\n3 4\n3 2\n4 4''') == '1'\n\nassert solution('''1 5\n1 7\n2 7\n3 7\n4 7''') == '0'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 3\\n1 2\\n2 3\\n1 -1\\n0 1\\n-1 0\\n-2 1\\n3 0\\n4 -1\\n5 2\\n6 3\\n7 -1\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 2\\n2 -1\\n3 0\\n4 1\\n5 -1\\n6 2\\n7 3\") == \"1\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\nassert solution('2 3 6\\n-1 0\\n1 1\\n2 2\\n3 0\\n4 1\\n5 2') == '3'\nassert solution('2 3 5\\n-1 0\\n1 1\\n2 2\\n3 0\\n4 1\\n5 2') == '3'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"4 1 4 40\") == \"3\\n\"\nassert solution(\"6 1 4 40\") == \"3\\n\"\nassert solution(\"3 1 4 41\") == \"4\\n\"\nassert solution(\"4 1 4 41\") == \"4\\n\"\nassert solution(\"6 1 4 41\") == \"4\\n\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\\n3 1 4 40\\n3 1 4 40\\n3 1 4 40\\n3 1 4 40\\n\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output: \" + solution(stdin)\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n\"\nassert solution(\"1 5 2\\n2 6 1\\n4 5 3\\n8 7 6\\n3 5 7\\n\") == \"0\\n\"\nassert solution(\"20 10\\n10 20 30\\n5 15 40\\n20 20 60\\n10 30 70\\n80 70 50\\n\") == \"0\\n\"\nassert solution(\"100 100\\n\") == \"0\\n\"\nassert solution(\"1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n7 11\\n8 12\\n9 13\\n10 14\\n\") == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"4 300\\n100 100 -1\\n0 50 50 0 0\") == \"0\"\nassert solution(\"6 600\\n100 100 -1\\n0 50 50 0 0\") == \"0\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"99\\n3\\n\"\nassert solution() == \"99\\n3\\n\"\nassert solution() == \"0\\n3\\n\"\nassert solution() == \"99\\n3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"99\\n3\\n\"\nassert solution(stdin) == \"0\\n0\\n\"\n\nimport sys"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\\n1\\n\"\nassert solution(\"3 1\\n1 1\\n1 1\") == \"0\\n1\\n\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n1000 1000 1000\") == \"1000\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\n\nassert solution(\"1 10\\n2 5\\n3 1\\n4 3\\n5 2\\n6 4\") == \"0\"\n\nassert solution(\"3 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"0\"\n\nassert solution(\"3 50\\n10 20\\n5 30\\n15 40\\n30 50\\n45 60\\n60 70\\n75 80\\n90 100\\n105 110\\n120 130\\n135 140\\n150 160\\n165 170\\n180 190\\n195 200\\n210 220\\n225 230\\n240 250\\n255 260\\n270 280\\n285 290\\n300 310\\n315 320\\n330 340\\n345 350\\n360 370\\n375 380\\n390 400\\n405 410\\n420 430\\n435 440\\n450 460\\n465 470\\n480 490\\n495 500\\n510 520\\n525 530\\n540 550\\n555 560\\n570 580\\n585 590\\n600 610\\n615 620\\n630 640\\n645 650\\n660 670\\n675 680\\n690 700\\n705 710\\n720 730\\n735 740\\n750 760\\n765 770\\n780 790\\n795 800\\n810 820\\n825 830\\n840 850\\n855 860\\n870 880\\n885 890\\n900 910\\n915 920\\n930 940\\n945 950\\n960 970\\n975 980\\n990 1000\") == \"100\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"99\\n3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"99\\n3\\n\", \"Incorrect output\"\n\nimport sys"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.in').read()) == '2\\n3 4\\n4 2\\n'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\\n\\n-----Examples-----\\nSample Input:\\n4\\n1 2\\n2 3\\n3 4\\nSample Output:\\n2\\n3 4\\n4 2\\ndef solution(stdin: str) -> str:\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\\n\\n-----Examples-----\\nSample Input:\\n4\\n1 2\\n2 3\\n3 4\\nSample Output:\\n2\\n3 4\\n4 2\\ndef solution(stdin: str) -> str:\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n3 4\\n4 5\\n5 6\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"5\\n1 1\\n1 1\\n1 1\\n1 1\") == \"3\\n3 3\\n3 3\\n3 3\\n3 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"2\\n3 4\\n4 5\\n2 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n1 5\\n5 1\") == \"2\\n3 4\\n4 5\\n2 3\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\") == [2, 3, 4, 2]\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\") == [2, 3, 4, 2]\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\nMoles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\") == [2, 3, 4, 2]\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\nfor i in range(3):\n    assert solution(f\"Test Input {i+1}\") == expected_solution[i], f\"Test failed for {i+1}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 9.0000\nassert solution(1) == 12\nassert solution(5) == 12.00000\nassert solution(100) == 9.0"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1\\n') == '9.0000\\n12\\n12.00000\\n9.0\\n'\nassert solution('5\\n2 1 2\\n1 2\\n1 1\\n') == '5.0000\\n2\\n1.00000\\n0.0\\n'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == 9.0\nassert solution(\"10\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == 12.0\nassert solution(\"10\\n1 100\\n2 200\\n3 200\\n4 100\\n\") == 12.0\nassert solution(\"5\\n1 1\\n2 2\\n3 1\\n4 2\\n\") == 1.0"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\"\nassert solution(\"1 100\\n10 1000\") == \"12.00000\"\nassert solution(\"10 100\\n20 1000\") == \"9.0000\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '9.0000\\n12\\n12.00000\\n9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"12345\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"1\\n\") == \"ST A\\n\"\nassert solution(\"-1\\n\") == \"\"\nassert solution(\"9\\n\") == \"ST A\\nDI Y\\n\"\nassert solution(\"10\\n\") == \"ST A\\nST X\\nPL Y\\nDI Y\\n\"\nassert solution(\"100\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"101\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"1000\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"1001\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"255\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10000\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10001\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'DI Y'\nassert solution(input()) == 'ST X'\nassert solution(input()) == 'ST A'\nassert solution(input()) == 'PH X'\nassert solution(input()) == 'PH A'\nassert solution(input()) == 'AD'\nassert solution(input()) == 'PL Y'\nassert solution(input()) == 'ZE A'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\nprint(2)\\nprint(3)\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15) == \"X\\nX\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(127) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(1) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(10) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI A\\nPH A\\nST X\\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n\nassert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '3'\n\nassert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '4'\n\nassert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '5'\n\nassert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '6'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nprint(\"All test cases passed!\")\n\nsolution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nsolution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"3\"\nsolution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"4\"\nsolution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"5\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == 2\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nassert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n\nHere's the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n    \"\"\"\n) == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n\"\"\"\n) == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    a -> aa\n    b -> bb\n    c -> cc\n    d -> dd\n    e -> ee\n    a -> aa\n    b -> bb\n    c -> cc\n    d -> dd\n    e -> ee\n    a -> ab\n    b -> ab\n    c -> ac\n    d -> ad\n    e -> ae\n    a -> ab\n    b -> bc\n    c -> ac\n    d -> ad\n    e -> ae\n    \"\"\"\n) == \"aaaaabbbbc\\nNONE\\naaaaabbabbca\\nNONE\\naaaaabbabbcb\\nNONE\\naaaaabbabbcc\\nNONE\\naaaaabbabbcd\\nNONE\\naaaaabbabde\\nNONE\\naaaaabbabcf\\nNONE\\naaaaabbabdf\\nNONE\\naaaaabbabeg\\nNONE\\naaaaabbabdf\\nNONE\\naaaaabbabef\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdg\\nNONE\\naaaaabbabdh\\nNONE\\naaaaabbabdi\\nNONE\\naaaaabbabdh"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'abaaba', \"The solution should return 'abaaba'.\"\nassert solution(stdin) == 'NONE', \"The solution should return 'NONE'.\"\nassert solution(stdin) == 'abbbbbbbbbbbbbbbbba', \"The solution should return 'abbbbbbbbbbbbbbbbba'.\"\nassert solution(stdin) == 'a', \"The solution should return 'a'.\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"abaaba\\nNONE\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'abaaba'\nassert solution(open('input2.txt').read()) == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"abaaba\"\nassert solution() == \"NONE\"\nassert solution() == \"abbbbbbbbbbbbbbbbba\"\nassert solution() == \"a\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\"\"\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    main()\\n\\ndef main():\\n    n = int(stdin.strip())\\n    rules = []\\n    for _ in range(n):\\n        line = stdin.strip()\\n        rule = line.split(' -> ')[:2]\\n        rules.append((rule[0], rule[1].replace('|', '').split()))\\n    search_text = input()\\n    result = [search_text] if search_text else []\\n    for text in stdin.readlines():\\n        text = text.strip()\\n        for rule in rules:\\n            if is_match(rule, text):\\n                result.append(text)\\n\\n    max_len = max(len(r[0]) for r in rules)\\n    result = [r[0].ljust(max_len) for r in result]\\n    result = '\\n'.join(result)\\n    print(result)\\n\\ndef is_match(rule, text):\\n    if not text:\\n        return True\\n    if text[0] in rule[1]:\\n        return False\\n    return is_match(rule[0], text[1:])\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"abaaba\", \"Expected output: 'abaaba'\"\nassert solution(input()) == \"NONE\", \"Expected output: 'NONE'\"\nassert solution(input()) == \"abbbbbbbbbbbbbbbbba\", \"Expected output: 'abbbbbbbbbbbbbbbbba'\"\nassert solution(input()) == \"a\", \"Expected output: 'a'\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 0 2\\n1 3 7\\n2 0\\n4') == 4\nprint(\"All test cases pass\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with output: {solution(input())}, expected output: {expected_output}\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nassert solution(\"3\\n1 1 1 1\\n2 2\\n1 1 1 1\\n2 2\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4,5,0,2]) == 4\nassert solution([1,3,7,2]) == 4\nassert solution([2,0,4]) == 4\n\nfrom typing import List"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'GO FOR IT'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'GO FOR IT'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'GO FOR IT'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'\n\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == 'NO WAY'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"1 1\\n3 3\\nWWS\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n1 1\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"NO CHANCE\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWWS\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\"\nassert solution(\"3 3\\n2 2\\nWSW\\nWSW\\nWSW\\n\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWBBW') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWBGW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWBBW\\nWBGW') == 'NO WAY'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\") == \"GO FOR IT\"\nassert solution(\"2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 5\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\") == \"NO WAY\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Wrong output: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2243\\n\", \"Incorrect output.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2243\\n', \"Test case failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Got {solution(input())}, expected {output}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"The code is incorrect. Please check the input and output data.\" for input_data, output_data in [\n    ([], 0),\n    ([0], 0),\n    ([1], 0),\n    ([1, 2], 2),\n    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1400),\n]"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2243\"  # expected output"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nno\\n'\n\nassert solution(r'''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nno\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nnoo\\n\"\nassert solution(\"10 5\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nnoo\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str=\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\n\nassert solution(input_str=\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\n\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\nassert solution(\"10 3\\n= 1 8\\n= 3 8\\n= 5 8\\n= 7 8\\n\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nyes'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 2 3') == 'no\\nno'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 5 4') == 'no\\nno'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno'"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2\\n'\nassert solution('10 5\\n4 8\\n3') == '0\\n'\nassert solution('5 2\\n4 8\\n3') == '2\\n'"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2, \"Invalid solution\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\n\nassert solution(\"10 5 4 8 3\\n5 3\") == \"2\"\n\nassert solution(\"3 4 6 8\\n2\") == \"0\"\n\nassert solution(\"5 3\\n5 3\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 3\\n5 7 6 8 10\") == \"1\\n\"\nassert solution(\"5 3\\n10 20 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20\") == \"1\\n\"\nassert solution(\"5 3\\n10 20 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20\") == \"1\\n\"\nassert solution(\"5 3\\n10 20 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20\") == \"1\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '2'\n\nfrom typing import List"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2\nassert solution(\"1000000\\n10000000\") == 10000000000000000000000\nassert solution(\"5 3\\n
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(read_stdin()) == '2\\n'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1083, \"Solution should output 1083\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1, 127) == 1083\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 127\\n\") == \"1083\\n\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\", \"Test case 1 failed.\"\nassert solution(\"4 4\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"1.7500000000\", \"Test case 2 failed.\"\n\nfor i in range(10):\n    test_case = f\"4 {i} question1 answer1\\nWhat is the air speed velocity of an unladen swallow? African?\\n\"\n    assert solution(test_case) == f\"{(i+1)/10:.4f}\", f\"Test case {i+1} failed.\"\n\nfor i in range(100):\n    test_case = f\"4 {i} question1 answer1\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\"\n    assert solution(test_case) == f\"{(i+1)/10:.4f}\", f\"Test case {i+1} failed.\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Test case 1 incorrect\"\nassert solution(input()) == \"1.0000000000\", \"Test case 2 incorrect\"\nassert solution(input()) == \"0.0000000000\", \"Test case 3 incorrect\"\n\npoints = 0\ntotal_time = 0\nn = int(input())\nquestions = []\nfor _ in range(n):\n    q = input().split()\n    questions.append(q)\n    total_time += 1\n\nbest_point = 0\nfor question in questions:\n    if sum(1 for w in question if w.endswith('?')) % 2 == 0:\n        continue\n    if sum(1 for w in question if w.endswith('!')) % 2 == 0:\n        point = 1\n    else:\n        point = 2\n    if point > best_point:\n        best_point = point\n\nscore = best_point / total_time\nprint(round(score, 6))"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Incorrect Output\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"0.5000000000\", \"Incorrect Output\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.0000000000\", \"Incorrect Output\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African? Is there intelligent life on Earth? Probably\") == \"1.0000000000\", \"Incorrect Output\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.0000000000\", \"Incorrect Output\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"0.5000000000\", \"Incorrect Output\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"0.5000000000\", \"Incorrect Output\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Incorrect Output\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"1.0000000000\", \"Incorrect Output\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"0.5000000000\", \"Incorrect Output\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Your solution is incorrect. Please check the example cases and the problem statement.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0, \"The correct answer is 2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.0000000000, \"The solution is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"The expected output should be 2.0000000000\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"0.3333333333\", \"The expected output should be 0.3333333333\"\nassert solution(\"Is there intelligent life on Earth? Probably\") == \"0.0000000000\", \"The expected output should be 0.0000000000\"\nassert solution(\"Monstermind\") == \"0.0000000000\", \"The expected output should be 0.0000000000\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African? What is the air speed velocity of an unladen swallow? African?\") == \"0.6666666667\", \"The expected output should be 0.6666666667\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"The solution should return 2.0\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('1 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 2 monkey\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 zombie') == 'IMPOSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 cow cow\\npenguin 1 monkey') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"POSSIBLE\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('2 4\\nbat bear cat\\ncat 2 bear bat\\nbat 1 cat') == 'IMPOSSIBLE'\nassert solution('1 1\\nbat bear cat\\ncat 2 bear bat\\nbat 1 cat') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 5\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 2 lion penguin\\nmonkey 1 lion\\nmonkey 3 lion\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\nmonkey 1 lion\\nlion 2 lion\\nmonkey 1 lion\\nlion 2 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 6\\nmonkey 2 lion penguin\\n\") == \"POSSIBLE\\n\"\nassert solution(stdin=\"3 6\\nmonkey 2 lion penguin\\nmonkey\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(stdin=\"3 6\\nmonkey 2 lion penguin\\nlion\\n\") == \"FALSE ALARM\\n\"\nassert solution(stdin=\"3 6\\nmonkey 2 lion penguin\\nmonkey lion\\n\") == \"FALSE ALARM\\n\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {output}\\nExpected output: {output}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=str(input())) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(100, \"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"50\\n1 2 3 4 5\\n5 6 7 8 9\\n0 1 2 3 4 5\\n6 7 8 9 0\\n1 2 3 4 5 6\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(stdin) == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 4 8 7 9 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case_num} failed\" for test_case_num, input_data, expected_output in enumerate(tests)"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\nfor input, output in [\n    (\"3 1\\n39\\n10\\n40\", \"40.5\"),\n]:\n    assert solution(input) == output"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '40.5', \"The sample output is incorrect.\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"40.5\", \"Your implementation of the function is incorrect. It should return the final height of the house that ends up tallest.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 40.5"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n39\\n10\\n40\\n') == '40.5\\n'\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\"\nassert solution(\"5 7\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n\") == \"Impossible\"\nassert solution(\"6 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n\") == \"Impossible\"\nassert solution(\"7 9\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n\") == \"Impossible\"\nassert solution(\"8 10\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n\") == \"Impossible\"\nassert solution(\"9 11\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n\") == \"Impossible\"\nassert solution(\"10 12\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\\n\") == \"Impossible\"\nassert solution(\"11 13\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\\n11 12 1987\\n12 13 1987\\n\") == \"Impossible\"\nassert solution(\"12 14\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('3 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987') == 'Impossible'\nassert solution('5 10\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987') == 'Impossible'\nassert solution('1 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987') == 'Impossible'\nassert solution('4 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\\n11 12 1987\\n12 13 1987\\n13 14 1987\\n14 15 1987\\n15 16 1987\\n16 17 1987\\n17 18 1987\\n18 19 1987\\n19 20 1987\\n20 21 1987\\n21 22 1987\\n22 23 1987\\n23 24 1987\\n24 25 1987\\n25 26 1987\\n26 27 1987\\n27 28 1987\\n28 29 1987\\n29 30 1987\\n30 31 1987\\n31 32 1987\\n32 33 1987\\n33 34 1987\\n34 35 1987\\n35 36 1987\\n36 37 1987\\n37 38 1987\\n38 39 1987\\n39 40 1987\\n40 41 1987\\n41 42 1987\\n42 43 1987\\n43 44 1987\\n44 45 1987\\n45 46 1987\\n46 47 1987\\n47 48 1987\\n48 4"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Impossible\" # Test case 1"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'Impossible\\n'\nassert solution(open('sample_input.txt', 'r')) == '2008\\n'\nassert solution(open('sample_input.txt', 'r')) == '2008\\n'\nassert solution(open('sample_input.txt', 'r')) == '2008\\n'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987\\n1 8 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987\\n1 8 1987\\n1 9 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987\\n1 8 1987\\n1 9 1987\\n2 5 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987\\n1 8 1987\\n1 9 1987\\n2 5 1987\\n1 10 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n1 6 1987\\n1 7 1987\\n1 8 1987\\n1 9 1987\\n2 5 1987\\n1 10 1987\\n1 11 1987') == 'Impossible'\nassert solution('4 6"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\\n\") == \"1988\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\\n1 6 1989\\n\") == \"1989\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\\n1 6 1989\\n2 7 1990\\n\") == \"1990\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\\n1 6 1989\\n2 7 1990\\n3 8 1991\\n\") == \"1991\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\\n\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 0\") == \"3\\n\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\\n\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 0, 1) == \"impossible\"\nassert solution(4, 0, 2) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('impossible')\"\nassert solution(4, 0, 3) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('impossible')')\"\nassert solution(4, 0, 4) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('impossible')')\\n\\nprint('def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint('impossible')')\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\n\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 3\n''') == 3\n\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 4"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 0\") == \"3\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\", \"Solution should return 'impossible'\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Solution here"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"())\") == 10, \"Test case 1 failed.\"\nassert solution(\"((()\") == 10, \"Test case 2 failed.\"\nassert solution(\")()\") == 10, \"Test case 3 failed.\"\nassert solution(\"(())()\") == 10, \"Test case 4 failed.\"\nassert solution(\"(())(())\") == 16, \"Test case 5 failed.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\") == 9\nassert solution(\")()\") == 11\nassert solution(\"()())\") == 22"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"())\") == 10, \"Incorrect result for sample input: ()\"\nassert solution(\"((()\") == 14, \"Incorrect result for sample input: ((()\"\nassert solution(\")()\") == 10, \"Incorrect result for sample input: )()\"\nassert solution(\"(())()()\") == 15, \"Incorrect result for sample input: (())()()\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n()()\\n(())\") == 10\nassert solution(\"4\\n(())()\\n((()\\n(()))\") == 13\nassert solution(\"5\\n(())()\\n((()\\n(()))\\n(())\") == 16\nassert solution(\"6\\n(())()\\n((()\\n(()))\\n(())\\n(())\") == 19\nassert solution(\"7\\n(())()\\n((()\\n(()))\\n(())\\n(())\\n(())\") == 22\nassert solution(\"8\\n(())()\\n((()\\n(()))\\n(())\\n(())\\n(())\\n(())\") == 25\nassert solution(\"9\\n(())()\\n((()\\n(()))\\n(())\\n(())\\n(())\\n(())\\n(())\") == 28"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n())\\n((()()\\n)(()\\n)\\n(())') == 10\nassert solution('3\\n(())\\n(())\\n(())') == 10\nassert solution('3\\n(())\\n((()\\n((()\\n()))\\n)') == 12\nassert solution('3\\n(())\\n((()\\n(()))\\n(()))\\n(())') == 12\nassert solution('3\\n(())\\n((()\\n((()))\\n))\\n((()))\\n((()))\\n((()))\\n(())') == 12"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\") == 10\nassert solution(\")()\") == 10\nassert solution(\"(()))\") == 10\nassert solution(\"()())\") == 10\n\nfrom typing import List"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"())\\n((()\\n)()\") == \"10\"\nassert solution(\"(()()\\n)\\n(()())\\n\") == \"5\"\nassert solution(\"(())\\n(())\\n(())\\n\") == \"0\"\nassert solution(\"(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n\") == \"7\"\nassert solution(\"(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n())\\n((()()\\n)()') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n())\\n((()()\\n)()\") == \"10\", \"Test 1 failed.\"\nassert solution(stdin=\"3\\n((()())\\n())\\n((()()\\n())\\n(()\") == \"10\", \"Test 2 failed.\"\nassert solution(stdin=\"3\\n((()())\\n())\\n((()()\\n())\\n(()\")) == \"10\", \"Test 3 failed.\"\nassert solution(stdin=\"3\\n(())\\n((()())\\n())\\n((()()\\n())\\n(()\")) == \"10\", \"Test 4 failed.\"\nassert solution(stdin=\"3\\n(()()\\n())\\n((()())\\n())\\n((()()\\n())\\n(())\") == \"10\", \"Test 5 failed.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"85293\\n\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\\n\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Incorrect output.\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\nassert solution(\"5 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\\n\"\nassert solution(\"6 9\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 5\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Incorrect solution\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('5 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '12'\nassert solution('3 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 5\\n2 5') == '8'\nassert solution('3 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 5\\n2 5\\n1 6\\n2 6\\n1 7\\n2 7\\n1 8\\n2 8') == '16'\nassert solution('10 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 5\\n2 5\\n1 6\\n2 6\\n1 7\\n2 7\\n1 8\\n2 8\\n1 9\\n2 9\\n1 10\\n2 10') == '21'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\"\"\") == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\\n\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100\\n'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == 5100, \"The output is incorrect.\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    1\n    ''') == '''\n    1\n    2\n    3\n    1\n    4\n    5\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    1\n    1\n    ''') == '''\n    1\n    2\n    3\n    1\n    4\n    5\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    1\n    1\n    2\n    ''') == '''\n    2\n    3\n    1\n    4\n    5\n    2\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n    1\n    1\n    2\n    1\n    ''') == '''\n    2\n    3\n    1\n    4\n    5\n    2\n    '''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(fiona_input) == fiona_output, f\"Test failed: {solution(fiona_input)}!= {fiona_output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"-1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n0') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '-1\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Expected: {output_data}, Received: {solution(input_data)}\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"1 2 1\\n2 1 2\\n3 2 3\\n4 3 4\\n5 4 5\") == \"2\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\") == \"6\\n\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"1\\n\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"1\\n\"\nassert solution(\"1 2 1\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\"2 6\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"6\"\nassert solution(\"1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"2\"\nassert solution(\"2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"0\"\nassert solution(\"1 3 10\\n1 4 2\\n4\\n1 2 R 6\\n1 3 O 1\\n2 1 O 3\\n1 2 R 5\\n\") == \"16\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n5 6 O 4\\n\") == \"15\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"1 2\\n0 1\\n2 3\\n3 0\\n\") == \"1\\n\"\nassert solution(\"4 3\\n3 0\\n0 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 3\\n3 0\\n0 1\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\") == \"5\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4 3\n    0 1\n    1 2\n    2 3\n    ''') == '1'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 1\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 2\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1' # correct output\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"6 7\\n0 1\\n1 2\\n2 3\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"6 5\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"6 7\\n0 1\\n1 2\\n2 3\\n4 5\\n5 6\\n\") == \"2\\n\"\nassert solution(\"8 5\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"8 7\\n0 1\\n1 2\\n2 3\\n4 5\\n5 6\\n\") == \"2\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Topologically sorting the nodes of a directed graph (digraph) G means putting the nodes in linear order v_0, v_1, v_2, v_3, \\ldots \\n\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"0.963\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\", \"Please write the correct code\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.962962962963\\n\", \"Enter valid input.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0.962962962963', 'Your solution is incorrect.'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 0.962962962963, \"Incorrect answer for the problem statement.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Test Case {test_case_number} failed. Expected Output: {expected_output}, Received Output: {solution(sample_input)}\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Your code does not match the expected output.\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n40000000 10000000\\n80000000 0\\n80000000 10000000\\n120000000 0\\n120000000 10000000\\n160000000 0\\n160000000 10000000\"\nassert solution(20) == \"0 0\\n40000000 0\\n80000000 0\\n120000000 0\\n160000000 0\\n200000000 0\\n240000000 0\\n280000000 0\\n320000000 0\\n360000000 0\\n400000000 0\\n440000000 0\\n480000000 0\\n520000000 0\\n560000000 0\\n600000000 0\\n640000000 0\\n680000000 0\\n720000000 0\\n760000000 0\\n800000000 0\\n840000000 0\\n880000000 0\\n920000000 0\\n960000000 0\\n1000000000 0\\n1040000000 0\\n1080000000 0\\n1120000000 0\\n1160000000 0\\n1200000000 0\\n1240000000 0\\n1280000000 0\\n1320000000 0\\n1360000000 0\\n1400000000 0\\n1440000000 0\\n1480000000 0\\n1520000000 0\\n1560000000 0\\n1600000000 0\\n1640000000 0\\n1680000000 0\\n1720000000 0\\n1760000000 0\\n1800000000 0\\n1840000000 0\\n1880000000 0\\n1920000000 0\\n1960000000 0\\n2000000000 0\\n2040000000 0\\n2080000000 0\\n2120000000 0\\n2160000000 0\\n2200000000 0\\n2240000000 0\\n2280000000 0\\n2320000000 0\\n2360000000 0\\n2400000000 0\\n2440000000 0\\n24800000"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"\"\"0 0\n40000000 0\n0 40000000\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '0 0\\n40000000 0\\n0 40000000\\n', \"Test 1\"\nassert solution('4\\n') == '40000000 0\\n0 0\\n40000000 40000000\\n', \"Test 2\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"The output {solution(input())} is incorrect, expected {expected}\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Test case 1\"\nassert solution(\"4\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Test case 2\"\nassert solution(\"5\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Test case 3\"\nassert solution(\"6\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Test case 4\"\nassert solution(\"7\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Test case 5\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"\\n\"\nassert solution(\"4\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\"\n\nfrom typing import List"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == 1\nassert solution('2 3 4 9') == 0\nassert solution('10 50 25 75') == 0\nassert solution('1 2 3 4') == 0"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"The provided code is incorrect.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3 5 5 2) == \"1\"\nassert solution(2 3 4 9) == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == 1, \"Your code is incorrect. The function should return 1, but it returns {}\".format(solution(\"3 5 5 2\"))"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() # Test case"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\"\"\") == \"2\"\nassert solution(\"\"\"20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\"\"\") == \"0\"\nassert solution(\"\"\"20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\"\"\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 1 5 5\\n0 0 0\\n0 10 0\\n30 0 0\\n0 0 0\") == \"1\"\nassert solution(\"20 2 5 5\\n0 0 0\\n0 10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 1 5 5\\n0 0 0\\n0 10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 2 5 5\\n0 0 0\\n0 10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n200\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\\n0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(2) == \"2\"\nassert solution(1) == \"0\"\nassert solution(20) == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"21 2 10 10\\n10 10 0\\n0 0 0\\n0 0 0\") == \"1\"\nassert solution(\"22 2 10 10\\n10 10 0\\n0 0 0\\n0 0 0\") == \"0\"\nassert solution(\"23 2 10 10\\n10 10 0\\n0 0 0\\n0 0 0\") == \"0\"\nassert solution(\"24 2 10 10\\n10 10 0\\n0 0 0\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'Your answer will be accepted if it is within a relative or absolute error of at most 10^{-6} of the correct answer.'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\", \"Test case 1 failed\"\nassert solution(1000) == \"1234567890\", \"Test case 2 failed\"\nassert solution(1234567891) == \"9876543210\", \"Test case 3 failed\"\nassert solution(1234567890) == \"1234567890\", \"Test case 4 failed\"\nassert solution(123456789) == \"1234567890\", \"Test case 5 failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12 14\\n\", \"Test failed\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == \"12 14\", \"Please fix the test case\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == '12 14', \"Your solution is incorrect\" # Corrected output"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"12 14\", \"Test failed for input 13\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"12 14\", \"The expected output is not correct.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == \"12 14\", \"Test 1\"\nassert solution(11111111111111111111111111111111) == \"100000000000000000000000000000000\", \"Test 2\"\nassert solution(123456789) == \"123456789 123456789\", \"Test 3\"\nassert solution(100000000000000000000000000000000) == \"100000000000000000000000000000000\", \"Test 4\"\nassert solution(1234567890) == \"1234567890 1234567890\", \"Test 5\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Expected output: {}\\nGot output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n0\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2\") == 2\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n3\") == 3\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4\") == 4\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5\") == 5\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n6\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n7\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n8\") == 2\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n9\") == 3\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n10\") == 4\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n11\") == 5\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n12\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n13\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n14\") == 2\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n15\") == 3\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n16\") == 4\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n17\") == 5\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n18\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n19\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\", \"Sample Output: 0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 0, \"The expected output is 0, but it is {}\".format(solution(open('input.txt').read()))"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"5\\n2 0 1\\n1 0 0\\n3 0 1\\n2 0 0\\n3 0 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 0 1\\n3 0 1\\n3 0 1\\n\") == \"1\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"5\\n1 1 1\\n1 1 1\\n3 0 1\\n3 0 1\\n3 0 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 0\\n1 1 1\\n3 0 1\\n3 0 1\\n3 0 1\\n\") == \"0\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", \"Please fix the solution.\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == 0 # expected output: 0\nassert solution('3 4') == 0 # expected output: 0\nassert solution('4 5') == -1 # expected output: -1\nassert solution('5 6') == 0 # expected output: 0\nassert solution('7 8') == 0 # expected output: 0\nassert solution('8 9') == 0 # expected output: 0\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed. Got {solution(input())}, expected {expected}\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"2 4\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n\") == \"1 1\\n2 2\\n1 2\\n2 1\\n1 3\\n3 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"5 6\") == \"-1\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('4 4') == '-1\\n'\nassert solution('1 1') == '1 1\\n'\nassert solution('5 5') == '-1\\n'\nassert solution('5 5') == '1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n\nassert solution(\n\"\"\"\n1 100\n100 0 1\n0 100 1\n0 100 1\n\"\"\") == \"1.00000000\\n1.00000000\\n1.00000000\\n\"\n\nassert solution(\n\"\"\"\n3 10\n0 10 1\n0 10 1\n1 10 1\n\"\"\") == \"0.66666667\\n0.66666667\\n0.66666667\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"3.33333333\\n3.33333333\\n3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Please, fix the code to get the correct output.\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == [\"3.33333333\", \"3.33333333\", \"3.33333333\"]"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3.33333333\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, [3, 3, 2]) == 1"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, [3, 3, 2]) == \"1\\n\"\nassert solution(5, [2, 2, 3, 2, 3]) == \"2\\n\"\nassert solution(10, [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\"\nassert solution(6) == \"0\"\nassert solution(10) == \"3\"\nassert solution(12) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == '1\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, [3, 3, 2]) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(3, [3, 2, 3]) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(3, [2, 3, 3]) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(3, [2, 3, 2]) == \"0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"1\\n1\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"5 3\\ncccd\\neeee\\nbbbb\\n\") == \"3\"\nassert solution(\"3 2\\nabc\\ndef\\nghi\\n\") == \"1\"\nassert solution(\"4 1\\naa\\nbbb\\ncc\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"The expected output is not as expected.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 2\\naba\") == \"0\"\nassert solution(\"4 2\\nabab\") == \"2\"\nassert solution(\"4 2\\nabbaa\") == \"1\"\nassert solution(\"4 2\\nababababa\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\n\"\nassert solution(\"4 2\\ncat\\ncat\\nbouldering\") == \"2\\n\"\nassert solution(\"4 3\\ncat\\ncat\\nbouldering\") == \"3\\n\"\nassert solution(\"4 4\\ncat\\ncat\\nbouldering\\ncat\\nbouldering\\ncat\\nbouldering\\ncat\\nbouldering\") == \"4\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 2\\naaa\") == \"3\"\nassert solution(\"4 2\\nbbbb\") == \"6\"\nassert solution(\"4 2\\naaa\\nbbbb\") == \"3\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nabba') == 2"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n', \"Incorrect output\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3\nassert solution('5 6\\n1 2\\n1 3\\n2 4\\n2 5') == 6\nassert solution('1 10\\n1 2\\n1 3\\n1 4\\n1 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 11\\n3 12\\n4 13\\n4 14\\n4 15\\n5 16\\n5 17\\n5 18\\n5 19\\n5 20\\n6 21\\n6 22\\n6 23\\n6 24\\n7 25\\n7 26\\n7 27\\n7 28\\n7 29\\n8 30\\n8 31\\n9 32\\n9 33\\n10 34\\n10 35\\n11 36\\n11 37\\n12 38\\n12 39\\n13 40\\n13 41\\n14 42\\n14 43\\n15 44\\n15 45\\n16 46\\n16 47\\n17 48\\n17 49\\n18 50\\n18 51\\n19 52\\n19 53\\n20 54\\n20 55\\n21 56\\n21 57\\n22 58\\n22 59\\n23 60\\n23 61\\n24 62\\n24 63\\n25 64\\n25 65\\n26 66\\n26 67\\n27 68\\n27 69\\n28 70\\n28 71\\n29 72\\n29 73\\n30 74\\n30 75\\n31 76\\n31 77\\n32 78\\n32 79\\n33 80\\n33 81\\n34 82\\n34 83\\n35 84\\n35 85\\n36 86\\n36 87\\n37 88\\n37 89\\n38 90\\n38 91\\n39 92\\n39 93\\n40 94\\n40 95\\n41 96\\n41 97\\n42 98\\n42 99\\n43 100\\n43 101\\n44 102\\n44 103\\n45 104\\n45 105\\n46 106\\n46 107\\n47 108\\n47 109\\n48 110\\n48 111\\n49 112\\n49 113\\n50 114\\n50 115\\n51 116\\n51 117\\n52 118\\n52 119\\n53 120\\n53 121\\n54 122\\n54 123\\n55 124\\n55 125\\n56 126\\n56 127\\n57 128\\n57 129\\n58 130\\n58 131\\n59 132\\n59 133\\n60 134\\n60 135\\n61 136\\n61 137\\n62 138\\n62"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"6 4\\n1 2\\n2 3\\n3 4\\n3 5\\n4 6\") == 5\nassert solution(\"5 3\\n1 2\\n2 3\\n2 4\\n3 5\\n4 6\\n5 6\") == 6\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == 10\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == 11"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for {input} and {output}\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 4\n1 2\n2 3\n3 4\n4 5\n5 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 2\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n7 6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n8 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 4\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n9 8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 5\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n10 9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 6\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n11 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 7\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n12 11\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 8\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n13 12\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 9\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n14 13\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 10\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n15 14\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 11\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n16 15\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 12\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n17 16\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 13\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n18 17\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 14\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n19 18\n1 2\n2 3\n3 4\n4 5"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"tests/sample_input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n0\\n\"\nassert solution() == \"1\\n0\\n\"\nassert solution() == \"1\\n0\\n\"\nassert solution() == \"1\\n0\\n\"\nassert solution() == \"1\\n0\\n\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\" # Test case 1\nassert solution(\"3 2\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 0\\n1 0\\n0 1\\n1000 1\\n0 "
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n\") == \"1\\n0\\n\"\nassert solution(\"3 3\\n2 2\\n1 1\\n1 2\\n3 4\\n\") == \"1\\n0\\n\"\nassert solution(\"4 4\\n2 2\\n1 1\\n1 2\\n2 3\\n\") == \"2\\n0\\n\"\nassert solution(\"3 2\\n2 2\\n1 1\\n1 2\\n3 4\\n\") == \"1\\n0\\n\"\nassert solution(\"5 5\\n2 2\\n1 1\\n1 2\\n2 3\\n\") == \"2\\n0\\n\"\nassert solution(\"3 2\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n2 2\\n1 1\\n1 2\\n3 4\\n\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n2 2\\n1 1\\n1 2\\n3 4\\n\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed for input {input_str}\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n1\n0\n'''\n\nassert solution == '''\n0\n1\n'''\n\nassert solution == '''\n1\n1\n'''\n\nassert solution == '''\n1\n0\n'''\n\nassert solution == '''\n0\n1\n'''"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\"\n\nassert solution(\n\"\"\"\n2 2\n1 0\n1 1\n1 2\n2 2\n\"\"\") == \"2\\n0\\n\"\n\nassert solution(\n\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\"\n\nassert solution(\n\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\"\n\nassert solution(\n\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output. \\nInput: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\\n\\n\\n\"\nassert solution(\"4 3\\n1 2\\n3 4\\n5 6\\n7 8\") == \"1\\n0\\n1\\n0\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"The solution is {solution}, but the expected output is {expected}\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 7"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 7, \"The solution is incorrect.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\nprint('All tests passed')"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '20\\n'\nprint('Correct')"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"20\"\nassert solution(\"1000000000\") == \"1000000000\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 20, \"The solution is incorrect.\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"2 0\\n1 2 1\\n1 3 2\\n2 3 4\\n3 4 2\\n4 5 3\\n5 6 5\\n6 7 3\\n7 8 4\\n8 9 4\\n9 10 3\\n10 11 4\\n11 12 5\\n12 13 4\\n13 14 4\\n14 15 4\\n15 16 4\\n16 17 4\\n17 18 5\\n18 19 5\\n19 20 5\\n20 21 4\\n21 22 4\\n22 23 4\\n23 24 5\\n24 25 5\\n25 26 6\\n26 27 6\\n27 28 6\\n28 29 6\\n29 30 6\\n30 31 7\\n31 32 7\\n32 33 7\\n33 34 7\\n34 35 7\\n35 36 7\\n36 37 7\\n37 38 8\\n38 39 8\\n39 40 8\\n40 41 8\\n41 42 8\\n42 43 8\\n43 44 9\\n44 45 9\\n45 46 9\\n46 47 9\\n47 48 9\\n48 49 9\\n49 50 10\\n50 51 10\\n51 52 10\\n52 53 10\\n53 54 10\\n54 55 10\\n55 56 10\\n56 57 11\\n57 58 11\\n58 59 11\\n59 60 11\\n60 61 11\\n61 62 12\\n62 63 12\\n63 64 12\\n64 65 12\\n65 66 12\\n66 67 12\\n67 68 13\\n68 69 13\\n69 70 13\\n70 71 13\\n71 72 13\\n72 73 13\\n73 74 14\\n74 75 14\\n75 76 14\\n76 77 14\\n77 78 14\\n78 79 15\\n79 80 15\\n80 81 15\\n81 82 16\\n82 83 16\\n83 84 16\\n84 85 16\\n85 86 17\\n86 87 17\\n87 88 17\\n88 89 17\\n89 90 18\\n90 91 18\\n91 92 18\\n92 93 18\\n93 94 19\\n94 95 19\\n95 96 19\\n96 97 19\\n97 98 20\\n98 99 20\\n99 100 20\\n100 101 21\\n101 102 2"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Your solution is incorrect. Please check the example cases and the function signature.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '6', 'Test Case 1 Failed'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"The solution is incorrect.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output: 6\\n\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"6\\n\"\nassert solution(sample_input2) == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\nimpossible\"\nassert solution(\"1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\nimpossible\"\nassert solution(\"3 10 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\nimpossible\"\nassert solution(\"3 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\nimpossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\" # Correct\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\" # Correct\nassert solution(\"3 1 1\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\" # Correct\nassert solution(\"3 2 1\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\" # Correct\nassert solution(\"3 2 1\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\" # Correct\nassert solution(\"3 2 1\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\" # Correct\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n4 1 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"3 1 0\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    250 250\n    250 750\n    250 1250\n    250 1750\n    250 2250\n    250 2750\n    250 3250\n    250 3750\n    250 4250\n    250 4750\n    250 5250\n    250 5750\n    250 6250\n    250 6750\n    250 7250\n    250 7750\n    250 8250\n    250 8750\n    250 9250\n    250 9750\n    250 10250\n    250 10750\n    250 11250\n    250 11750\n    250 12250\n    250 12750\n    250 13250\n    250 13750\n    250 14250\n    250 14750\n    250 15250\n    250 15750\n    250 16250\n    250 16750\n    250 17250\n    250 17750\n    250 18250\n    250 18750\n    250 19250\n    250 19750\n    250 20250\n    250 20750\n    250 21250\n    250 21750\n    250 22250\n    250 22750\n    250 23250\n    250 23750\n    250 24250\n    250 24750\n    250 25250\n    250 25750\n    250 26250\n    250 26750\n    250 27250\n    250 27750\n    250 28250\n    250 28750\n    250 29250\n    250 29750\n    250 30250\n    250 30750\n    250 31250\n    250 31750\n    250 32250\n    250 32750\n    250 33250\n    250 33750\n    250 34250\n    250 34750\n    250 35250\n    250 35750\n    250 36250\n    250 36750\n    250 37250\n    250 37750\n    250 38250\n    250 38750\n    250 39250\n    250 39750\n    250 40250\n    250 40750\n    250 41250\n    250 41750\n    250 42250\n    250 42750\n    250 43250\n    250 43750\n    250 44250\n    250 44750\n    250 45250\n    250 45750\n    250 46250\n    250 46750\n    250 47250\n    250 47750\n    250 48250\n    250 48750\n    250 49250\n    250 49750\n    250 50250\n    250 50750\n    250 51250\n    250 51750\n    25"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"500.00\\n\", solution(stdin)\nassert solution(stdin) == \"500.00\\n\", solution(stdin)\nassert solution(stdin) == \"500.00\\n\", solution(stdin)\nassert solution(stdin) == \"500.00\\n\", solution(stdin)\nassert solution(stdin) == \"500.00\\n\", solution(stdin)"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.00, \"Incorrect output.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\", \"Test case failed\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"500.00\", \"The output should be 500.00, but it is {}\".format(solution(input()))"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\"\nassert solution(\"3\\n0 0\\n100 0\\n0 500\") == \"1500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 500.00, \"Incorrect solution!\"\nprint(\"Correct solution!\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '500.00'\nprint('All tests passed')\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n250 250\\n250 750\") == 500.00, \"Incorrect output. Expected 500.00, but got {}\".format(solution(stdin=\"2\\n250 250\\n250 750\"))"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\n\nassert solution('''\n3 4\n3 50 5\n50 2 10\n''') == '10'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0\\n'\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test Case {t} failed: {expected}!= {solution(input())}\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"The given solution is incorrect. Please check the function and the input.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input {sample_input}\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0\\n'\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\\n2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == solution(sample_output), \"Expected %r, got %r\" % (solution(sample_output), solution(sample_input))"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}'\\nGot: '{solution(stdin)}'\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\") == \"3\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35\\n50 5 25 35"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Output is incorrect.\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\" # expected output: \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output: 2\\n'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected output {output_str}, got {solution(input_str)}\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))\\n\\nprint(solution(stdin))'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"AAAA\" + \"\\n\" + \"...A\" + \"\\n\" + \"....\\n\" + \"\\n\" + \"BB..\\n\" + \"BBBB\\n\" + \"...B\\n\" + \"\\n\" + \"...C\\n\" + \"CCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n\nn = int(input())\nm = int(input())\n\nlanguages = []\n\nfor _ in range(n):\n    line = input()\n    languages.append(line)\n\nlanguages = [int(x) for x in languages]\n\nregions = []\n\nfor i in range(m):\n    for j in range(i, m):\n        if languages[i] == 1 and languages[j] == 1:\n            regions.append(\"..\")\n        elif languages[i] == 1 and languages[j] == 2:\n            regions.append(\"A.\")\n        elif languages[i] == 2 and languages[j] == 1:\n            regions.append(\".B\")\n        elif languages[i] == 2 and languages[j] == 2:\n            regions.append(\".C\")\n\nresult = \"\"\n\nfor i, region in enumerate(regions):\n    result += region\n    if i!= len(regions) - 1:\n        result += \"\\n\"\n\nprint(result)\n\nexpected = \"AAAA\\n..A\\n....\\n...B\\nBBBB\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112') == 'AAAABBBBCCCCC\\n...A\\n...B\\n...C\\n....\\n....\\n....\\n....\\n....\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n1112\\n1112') == 'BBBCCCDEFGHIJ\\n...B\\n...C\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"AAAA\\n....A\\n....\\n....\\n...C\\nCCCC\\n\"\nassert solution(open('sample_input.txt', 'r')) == \"BB..\\n...B\\nCCCC\\n\"\nassert solution(open('sample_input.txt', 'r')) == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n..A\\n..B\\n....\\n..C\\ndef solution(stdin: str) -> str:\n    n, m = map(int, stdin.split())\n    grid = []\n    for _ in range(n):\n        line = input()\n        grid.append(line)\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == \"1\":\n                grid[i][j] = \"A\"\n            else:\n                grid[i][j] = \"B\"\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == \"2\":\n                grid[i][j] = \"B\"\n            elif grid[i][j] == \"1\" or grid[i][j] == \"2\":\n                grid[i][j] = \"C\"\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == \"1\" or grid[i][j] == \"2\":\n                grid[i][j] = \"A\"\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == \"1\":\n                grid[i][j] = \"A\"\n            elif grid[i][j] == \"2\":\n                grid[i][j] = \"B\"\n            elif grid[i][j] == \"C\":\n                grid[i][j] = \"C\"\n    result = \"\"\n    for line in grid:\n        result += line\n    return result"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9, \"The output is incorrect. It should be 9.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 9, \"Test case failed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\nprint(\"All test cases pass\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, \"Test case 1 failed.\"\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n') == 10, \"Test case 2 failed.\"\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n5 5 5 5 5 5') == 0, \"Test case 3 failed.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, 'Expected output: 9, but got:'+ str(solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3'))"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Expected output: 9, got: \" + str(solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\"))"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 9, \"Expected output: 9, actual output: {}\".format(solution())"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"The shortest real time it takes for Alice to get home is incorrect.\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 20.396078\nassert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 20.396078\nassert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 20.396078\nassert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 20.396078\nassert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == 20.396078"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 20.396078, \"The solution is incorrect.\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    \"\"\"\n) == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n') == '20.396078'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"b\\n\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'c'\nassert solution('abca') == 'b'\nassert solution('bc cd da dd ee"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'\nassert solution('1') == 'b'\nassert solution('2') == 'c'\nassert solution('1 8') == 'def'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == 'b\\ncdef'\nassert solution('abcd\\n\\n\\n') == 'abcd'\nassert solution('abcd\\n\\n\\n\\n') == 'abcd'\nassert solution('abcd\\n\\n\\n\\n\\n') == 'abcd'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == [\"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'\nassert solution('1') == 'b'\nassert solution('2') == 'c'\nassert solution('1 8') == 'b'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"hob\"\nassert solution(4) == \"robi\"\nassert solution(1) == \"hob\"\nassert solution(3) == \"hob\"\nassert solution(10) == \"hob\"\nassert solution(7) == \"hob\"\nassert solution(9) == \"hob\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"12\"\nassert solution() == \"10\"\nassert solution() == \"16\"\nassert solution() == \"7\"\nassert solution() == \"def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    hobotnica\n    robot\n    hobi\n    hobit\n    robi\n    \"\"\"\n) == \"\"\"\n12\n10\n16\n7\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\") == \"ide\"\nassert solution(\"hobit\\nhobi\\nrobi\\nrakija\") == \"hobi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\") == \"ide\"\nassert solution(\"robi\\nhobi\\nrobi\\nrakija\") == \"robi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\") == \"ide\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"14 4\\nAB CD EFG\") == \"TEST\"\nassert solution(\"14 4\\nTEST\") == \"TEST\"\nassert solution(\"14 4\\n\") == \"\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == [\"135\", \"270\"]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == '135\\n270\\n135135\\n270270\\n'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(4.7) == \"No solution\"\nassert solution(0.01) == \"1\\n2\"\nassert solution(0.001) == \"1\\n2\"\nassert solution(0.0001) == \"1\\n2\"\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2.6\") == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(2.001) == \"No solution\"\nassert solution(1.1) == \"No solution\"\nassert solution(1.01) == \"No solution\"\nassert solution(1.00000001) == \"No solution\"\nassert solution(1000000000) == \"No solution\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got {solution(input())}\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\n# 3 6\\n# 4 8\\n# 5 4\\n# 6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('0 1\\n# 3 7\\n# 4 5\\n# 6 5\\n# 9\\n# 1 4\\n# 1 6\\n# 2 3\\n# 2 5\\n# 3 5\\"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nprint(\"All tests pass.\")"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\n\nimport math"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n1 5\\n') == ['0.0000000 0.0000000', '1.0000000 0.0000000', '-1.0000000 0.0000000', '0.0000000 1.0000000', '0.0000000 -1.0000000']\nprint('All test cases pass.')\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"1.0000000 1.0000000\\n-1.0000000 1.0000000\\n0.0000000 2.0000000\\n-1.0000000 2.0000000\\n0.0000000 3.0000000\\n-2.0000000 3.0000000\\n0.0000000 4.0000000\\n-3.0000000 4.0000000\\n0.0000000 5.0000000\\n-4.0000000 5.0000000\\n0.0000000 6.0000000\\n-5.0000000 6.0000000\\n0.0000000 7.0000000\\n-6.0000000 7.0000000\\n0.0000000 8.0000000\\n-7.0000000 8.0000000\\n0.0000000 9.0000000\\n-8.0000000 9.0000000\\n0.0000000 10.0000000\\n-9.0000000 10.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 1 2\\n1 3 2\\n1 3 4\\n1 5 4\\n1 5 6\") == \"0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n\"\nassert solution(\"5\\n1 2 1000\\n1 3 1000\\n1 4 1000\\n1 5 1000\\n1 6 1000\") == \"0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n0.0000000 0.0000000\\n\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution, \"No solution provided\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n\nimport math"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(2) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 0.0000000\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\"\nfor i in range(Q):\n    input()\n    assert solution(input()) == output(i), \"The output for the {}-th test case does not match the expected output.\".format(i+1)"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"No solution\\n\"\nassert solution(\"abc\") == \"abc\\n\"\nassert solution(\"aaa\") == \"aaa\\n\"\nassert solution(\"aaa*\") == \"aaa\\n\"\nassert solution(\"aaa*aaa\") == \"aaa\\n\"\nassert solution(\"a*a\") == \"a*\\n\"\nassert solution(\"kul*to\") == \"kul*to\\n\"\nassert solution(\"ana*\") == \"ana*\\n\"\nassert solution(\"abcdefg\") == \"No solution\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=__import__('sys').stdin.readline) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution('4 2\\nXX\\nXX\\nXX\\nXX\\nXX\\nOO\\nXX\\nOO\\n') == 0\nassert solution('4 3\\nXO\\nXX\\nXX\\nXX\\nXO\\nOO\\nXO\\n') == 0\nassert solution('4 3\\nXX\\nXX\\nXX\\nXX\\nXX\\nOO\\nXX\\nOO\\n') == 1\nassert solution('4 4\\nXX\\nXX\\nXX\\nXX\\nXX\\nOO\\nXX\\nOO\\n') == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\n\nassert solution('''\n4 2\nXO\nOX\nXO\nXO\nOX\nOO\nXO\nOO\nXO\nOX\nXO\nXO\nXO\nXO\nXO\nOO\nXO\nOO\nXO\nXO\nXO\nOX\nOX\nXO\nXO\nOO\nXO\nOO\nXO\nXO\nXO\nXO\nOX\nXO\nOX\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nOO\\nXO\\nOO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\nprint(\"pass\")"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOO\\nXO\\nOO\\n\\n\") == 0\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0 # empty input\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0 # no pegs to hammer"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n') == '16\\n'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16\\n'\nassert solution('4\\n3 3\\n3 1\\n3 4\\n3 2\\n3 5\\n3 0\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10') == '16\\n'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n4 4\\n4 3\\n4 2\\n4 1\\n4 0') == '16\\n'\nassert solution('4\\n5 5\\n5 4\\n5 3\\n5 2\\n5 1\\n5 0\\n5 9\\n5 8\\n5 7\\n5 6') == '16\\n'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n-4 0\\n-4 1\\n-4 2\\n-4 3') == '16\\n'\nassert solution('4\\n5 5\\n5 4\\n5 3\\n5 2\\n5 1\\n5 0\\n5 9\\n5 8\\n5 7\\n5 6') == '16\\n'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n0 4\\n0 3\\n0 2\\n0 1\\n0 0') == '16\\n'\nassert solution('4\\n5 5\\n5 4\\n5 3\\n5 2\\n5 1\\n5 0\\n5 9\\n5 8\\n5 7\\n5 6') == '16\\n'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n-4 0\\n-4 1\\n-4 2\\n-4 3') == '16\\n'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 16"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 3\") == \"46\\n\"\nassert solution(\"4\\n4 3\\n3 2\\n2 1\") == \"4\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n0 0\") == \"0\\n\"\nassert solution(\"3\\n-1 0\\n0 1\\n1 0\\n0 0\") == \"3\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"16\"\nassert solution(sample_input2) == \"1125\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"16\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 16\nprint(\"Test Passed\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 16, \"Your solution is incorrect.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 16, \"Your implementation of solution is incorrect.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"80\", \"Sample Output not correct.\"\nprint(\"Sample Output: 80\")"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80\\n'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"solution.in\", \"r\").read()) == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'\n\nassert solution('''\n4 10 50\n8 -8 2 -2\n''') == '100'\n\nassert solution('''\n4 10 50\n8 8 2 0\n''') == '20'\n\nassert solution('''\n4 10 50\n8 8 0 2\n''') == '20'\n\nassert solution('''\n4 10 50\n8 8 -2 2\n''') == '20'\n\nassert solution('''\n4 10 50\n8 8 -2 0\n''') == '100'\n\nassert solution('''\n4 10 50\n8 8 -2 -2\n''') == '20'\n\nassert solution('''\n4 10 50\n8 8 -2 10\n''') == '50'\n\nassert solution('''\n4 10 50\n8 8 -2 -10\n''') == '100'\n\nassert solution('''\n4 10 50\n8 8 -2 100\n''') == '100'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"80\", \"The correct answer is 80, but you provided a different output: {}\".format(solution(stdin))"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"80\", \"Incorrect output. Please check your code.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\\n\"\nassert solution(\"2 2\\n1 1\\n-100 -100\\n-100 100\\n100 100\\n\") == \"0.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed: got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3.000000000\\n\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '3.000000000'\nassert solution('1 8\\n10 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '6.000000000'\nassert solution('1 1\\n10 0\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '6.000000000'\nassert solution('1 8\\n-1000 0\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '6.000000000'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test Case 1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == '1'\nprint('Test Passed!')"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"6 4\\n1 0 0 0\\n1 1 0 0\\n1 0 1 0\\n1 0 0 1\\n1 1 1 0\\n2 2 0 0\\n2 2 1 0\\n2 2 0 1\\n2 2 1 1\\n3 3 0 0\\n3 3 1 0\\n3 3 0 1\\n3 3 1 1\") == \"3\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"3 2\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"0\\n\"\nassert solution(\"4 5\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"0\\n\"\nassert solution(\"5 6\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"0\\n\"\nassert solution(\"7 8\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 1\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"2\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution: {solution(stdin=input())}, Expected: {expected}\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"5 4\\n0 0 0 0\\n0 0 0 1\\n1 1 1 1\\n1 1 1 2\\n\") == \"1\"\nassert solution(\"5 3\\n0 0 0\\n0 0 1\\n0 1 0\\n0 1 1\\n1 1 0\\n1 1 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n\") == \"1\"\nassert solution(\"10 5\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n\") == \"3\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6.283185\nassert round(solution(), 6) == 6.283185\nassert round(solution(), 10) == 6.283185"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nprint(solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2'))\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == 6.283185\nassert solution('3 4\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0') == 2.841471\nassert solution('3 5\\n0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0') == 2.264159\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6.283185\", \"The output must be '6.283185'.\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == 6.283185"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6.283185\", \"Incorrect output.\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6.283185\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2 3\", \"Test Case 1 Failed\"\nassert solution(\"3\") == \"1 2 3\", \"Test Case 2 Failed\"\nassert solution(\"4\") == \"1 2 3\", \"Test Case 3 Failed\"\nassert solution(\"5\") == \"1 2 3\", \"Test Case 4 Failed\"\nassert solution(\"6\") == \"1 2 3\", \"Test Case 5 Failed\"\nassert solution(\"7\") == \"1 2 3 4 5 6\", \"Test Case 6 Failed\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7 8\", \"Test Case 7 Failed\"\nassert solution(\"9\") == \"1 2 3 4 5 6 7 8 9\", \"Test Case 8 Failed\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\", \"Test Case 9 Failed\"\nassert solution(\"11\") == \"1 2 3 4 5 6 7 8 9 10 11\", \"Test Case 10 Failed\"\nassert solution(\"12\") == \"1 2 3 4 5 6 7 8 9 10 11 12\", \"Test Case 11 Failed\"\nassert solution(\"13\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13\", \"Test Case 12 Failed\"\nassert solution(\"14\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\", \"Test Case 13 Failed\"\nassert solution(\"15\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\", \"Test Case 14 Failed\"\nassert solution(\"16\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\", \"Test Case 15 Failed\"\nassert solution(\"17\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\", \"Test Case 16 Failed\"\nassert solution(\"18\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\", \"Test Case 17 Failed\"\nassert solution(\"19\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\", \"Test Case 18 Failed\"\nassert solution(\"20\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\", \"Test Case 19 Failed\"\nassert solution(\"21\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\", \"Test Case 20 Failed\"\nassert solution(\"22\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\", \"Test Case 21 Failed\"\nassert solution(\"23\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\", \"Test Case 22 Failed\"\nassert solution(\"24\") == \"1 2 3 4 5 6 7 8 9 "
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 3 2\"\nassert solution(\"4\") == \"1 2 4 3\"\nassert solution(\"5\") == \"1 2 4 3 5\"\nassert solution(\"6\") == \"1 2 4 3 5 6 7\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3\"\nassert solution(\"6\") == \"1 2 3\"\nassert solution(\"7\") == \"1 2 3\"\nassert solution(\"8\") == \"1 2 3\"\nassert solution(\"9\") == \"1 2 3\"\nassert solution(\"10\") == \"1 2 3\"\nassert solution(\"11\") == \"1 2 3\"\nassert solution(\"12\") == \"1 2 3\"\nassert solution(\"13\") == \"1 2 3\"\nassert solution(\"14\") == \"1 2 3\"\nassert solution(\"15\") == \"1 2 3\"\nassert solution(\"16\") == \"1 2 3\"\nassert solution(\"17\") == \"1 2 3\"\nassert solution(\"18\") == \"1 2 3\"\nassert solution(\"19\") == \"1 2 3\"\nassert solution(\"20\") == \"1 2 3\"\nassert solution(\"21\") == \"1 2 3\"\nassert solution(\"22\") == \"1 2 3\"\nassert solution(\"23\") == \"1 2 3\"\nassert solution(\"24\") == \"1 2 3\"\nassert solution(\"25\") == \"1 2 3\"\nassert solution(\"26\") == \"1 2 3\"\nassert solution(\"27\") == \"1 2 3\"\nassert solution(\"28\") == \"1 2 3\"\nassert solution(\"29\") == \"1 2 3\"\nassert solution(\"30\") == \"1 2 3\"\nassert solution(\"31\") == \"1 2 3\"\nassert solution(\"32\") == \"1 2 3\"\nassert solution(\"33\") == \"1 2 3\"\nassert solution(\"34\") == \"1 2 3\"\nassert solution(\"35\") == \"1 2 3\"\nassert solution(\"36\") == \"1 2 3\"\nassert solution(\"37\") == \"1 2 3\"\nassert solution(\"38\") == \"1 2 3\"\nassert solution(\"39\") == \"1 2 3\"\nassert solution(\"40\") == \"1 2 3\"\nassert solution(\"41\") == \"1 2 3\"\nassert solution(\"42\") == \"1 2 3\"\nassert solution(\"43\") == \"1 2 3\"\nassert solution(\"44\") == \"1 2 3\"\nassert solution(\"45\") == \"1 2 3\"\nassert solution(\"46\") == \"1 2 3\"\nassert solution(\"47\") == \"1 2 3\"\nassert solution(\"48\") == \"1 2 3\"\nassert solution(\"49\") == \"1 2 3\"\nassert solution(\"50\") == \"1 2 3\"\nassert solution(\"51\") == \"1 2 3\"\nassert solution(\"52\") == \"1 2 3\"\nassert solution(\"53\") == \"1 2 3\"\nassert solution(\"54\") == \"1 2 3\"\nassert solution(\"55\") == \"1 2 3\"\nassert solution(\"56\") == \"1 2 3\"\nassert solution(\"57\") == \"1 2 3\"\nassert solution(\"58\") == \"1 2 3\"\nassert solution(\"59\") == \"1 2 3\"\nassert solution(\"60\") == \"1 2 3\"\nassert solution(\"61\") == \"1 2 3\"\nassert solution(\"62\") == \"1 2 3\"\nassert solution(\"63\") == \"1 2 3\"\nassert solution(\"64\") == \"1 2 3\"\nassert solution(\"65\") == \"1 2 3\"\nassert solution(\"66\") == \"1 2 3\"\nassert solution(\"67\") == \"1 2 3\"\nassert solution(\"68\") == \"1 2 3\"\nassert solution(\"69\") == \"1 2 3\"\nassert solution(\"70\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"1 2 3\", \"The solution is incorrect.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"2 3\"\nassert solution(\"4\") == \"3 1 2\"\nassert solution(\"5\") == \"4 3 2 1\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '1 2 3', \"Test case 1\"\nassert solution('3\\n') == '1 2 3', \"Test case 2\"\nassert solution('5\\n') == '1 2 3 4 5', \"Test case 3\"\nassert solution('6\\n') == '1 2 3 4 5', \"Test case 4\"\nassert solution('7\\n') == '1 2 3 4 5 6', \"Test case 5\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"1 2 3\"\nassert solution(3) == \"1 3 2\"\nassert solution(4) == \"2 1 3\"\nassert solution(5) == \"3 2 1\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1 2 3'\nassert solution(4) == '4 1 2 3'\nassert solution(5) == '4 2 1 3 5'\nassert solution(6) == '4 2 1 5 3 4'\nassert solution(7) == '4 2 3 1 5 4 5'\nassert solution(8) == '4 2 3 5 1 4 5'\nassert solution(9) == '4 2 3 5 4 1 5'\nassert solution(10) == '4 2 3 5 4 5 1'\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 2 3\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\n\nfrom typing import List"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1\\n1 2 3 4\\n'\n\nassert solution('''\n4 1\n1 2\n1 3\n2 4\n3 4\n''') == '2\\n2 4\\n'\n\nassert solution('''\n5 6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 3\n2 4\n3 5\n4 6\n''') == '1\\n3 5 6\\n'\n\nassert solution('''\n5 6\n1 2\n2 3\n3 4\n4 5\n5 6\n1 3\n2 4\n3 5\n4 6\n6 5\n''') == '2\\n4 6\\n'\n\nassert solution('''\n7 8\n1 2\n1 3\n1 4\n1 5\n2 6\n3 7\n4 8\n5 1\n6 2\n7 3\n8 4\n1 6\n2 7\n3 8\n4 1\n5 2\n6 3\n7 4\n8 5\n''') == '1\\n4 8 1\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"5 6\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5\\n5 6\") == \"1\\n1 2 3 4 5\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin_data, expected_output)"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n5 5\\n2 4\\n1 3\\n5 1\\n4 3\\n4 1\") == \"1\\n1 2 3 4\\n2 4\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1 2 3 4\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n'\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 1\n1 2\n''') == '''\n1\n'''"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"No output required\"\n\nfor i in range(int(input())):\n    n, m = map(int, input().split())\n    edges = []\n    for _ in range(m):\n        a, b = map(int, input().split())\n        edges.append((a, b))\n    size = size_of_max_independent_set(n, edges)\n    print(size)"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"Solution should return 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 45, \"The solution should return 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45, \"Solution is not correct for sample input 2.\"\nassert solution(3) == 105, \"Solution is not correct for sample input 3.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45, \"The output should be 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45, \"Expected 45, but got {solution(2)}\"\n\nassert solution(3) == 34, \"Expected 34, but got {solution(3)}\"\n\nassert solution(4) == 27, \"Expected 27, but got {solution(4)}\"\n\nassert solution(5) == 18, \"Expected 18, but got {solution(5)}\"\n\nassert solution(6) == 9, \"Expected 9, but got {solution(6)}\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45, \"Solution should return the supply for n digit lucky numbers\"\nassert solution(3) == 45, \"Solution should return the supply for n digit lucky numbers\"\nassert solution(4) == 45, \"Solution should return the supply for n digit lucky numbers\"\nassert solution(5) == 45, \"Solution should return the supply for n digit lucky numbers\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45, \"Output should be 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"45\" # Solution 1"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 1\") == \"2\"\nassert solution(\"5 20 20\\n7 11 9 12 3\") == \"1\"\nassert solution(\"5 20 20\\n7 11 9 12 4\") == \"3\"\nassert solution(\"5 20 20\\n7 11 9 12 5\") == \"1\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the maximum number of customers that can be served today.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4\\n'\nassert solution('10 10 20\\n5 5 20') == '3\\n'\nassert solution('20 20 20') == '3\\n'\nassert solution('10 20 20\\n10 5 20') == '2\\n'\nassert solution('1000 1000 1000') == '1000\\n'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\" # Here's the correct solution\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 30 10\\n3 10 20\") == \"1\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"10 100 100\\n10 50 50\") == \"6\\n\"\nassert solution(\"100 100 100\\n20 20 20\") == \"10\\n\"\nassert solution(\"1000 1000 1000\\n1000 5000 5000\") == \"200\\n\"\nassert solution(\"5000 5000 5000\\n10000 10000 10000\") == \"1000\\n\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 12 9 2\") == \"5\"\nassert solution(\"5 20 20\\n7 11 12 10 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 12 11 2\") == \"5\"\nassert solution(\"5 20 20\\n7 11 12 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 12 13 2\") == \"4\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == 2\nassert solution(\"2 3\\nbob 1 book1\\nbob 2 book2\\nbob 3 book3\\n\") == 2\nassert solution(\"1 2\\njohn 1 book1\\njohn 2 book2\\n\") == 1\nassert solution(\"1 1\\njohn 1 book1\\n\") == 1\nassert solution(\"5 2\\nkaren 1 book1\\nkenneth 2 book2\\n\") == 1\nassert solution(\"5 3\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\n\") == 1\nassert solution(\"5 1\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\n\") == 1\nassert solution(\"5 1\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\nkaren 6 book6\\nkaren 7 book7\\nkaren 8 book8\\nkaren 9 book9\\nkaren 10 book10\\n\") == 1\nassert solution(\"5 5\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\n\") == 0\nassert solution(\"1 1\\n\") == 1\nassert solution(\"1 5\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\n\") == 1\nassert solution(\"1 5\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\nkaren 6 book6\\nkaren 7 book7\\nkaren 8 book8\\nkaren 9 book9\\nkaren 10 book10\\n\") == 1\nassert solution(\"1 5\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\nkaren 6 book6\\nkaren 7 book7\\nkaren 8 book8\\nkaren 9 book9\\nkaren 10 book10\\nkaren 11 book11\\nkaren 12 book12\\nkaren 13 book13\\nkaren 14 book14\\nkaren 15 book15\\nkaren 16 book16\\nkaren 17 book17\\nkaren 18 book18\\nkaren 19 book19\\nkaren 20 book20\\nkaren 21 book21\\nkaren 22 book22\\nkaren 23 book23\\nkaren 24 book24\\nkaren 25 book25\\nkaren 26 book26\\nkaren 27 book27\\nkaren 28 book28\\nkaren 29 book29\\nkaren 30 book30\\n\") == 1\nassert solution(\"5 5\\nkaren 1 book1\\nkaren 2 book2\\nkaren 3 book3\\nkaren 4 book4\\nkaren 5 book5\\nkaren 6 book6\\nkaren 7 book7\\nkaren 8 book8\\nkaren 9 book9\\nkaren 10 book10\\nkaren 11 book11\\nkaren 12 book12\\nkaren 13 book13\\nkaren 14 book14\\nkaren 15 book15\\nkaren 16 book16\\nkaren 17 book17\\nkaren 18 book18\\nkaren 19 book19\\nkaren 20 book20\\nkaren 21 book21\\nkaren 22 book22\\nkaren 23 book23\\nkaren 24 book24\\nkaren 25 book25\\nkaren 26 book26\\nkaren 27 book27\\nk"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 2 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 3 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 4 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 5 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 6 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 7 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 8 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 9 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 10 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 11 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 12 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 13 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 14 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 15 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 16 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 17 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == 2\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2\\n'\nassert solution('2 3\\njohn 1 louise\\nmary 1 mary\\ncharlie 1 lordoftherings') == '1\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2\\n'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"1\\n00\") == \"0 1\"\nassert solution(\"1\\n011\") == \"1 1\"\nassert solution(\"1\\n010\") == \"2 1\"\nassert solution(\"1\\n0101\") == \"4 1\"\nassert solution(\"1\\n0100\") == \"0 1\"\nassert solution(\"1\\n0111\") == \"1 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\n\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\\n\"\nassert solution(\"2\\n101\\n11111\\n\") == \"4 2\\n\"\nassert solution(\"3\\n010\\n0000\\n\") == \"3 2\\n\"\nassert solution(\"4\\n1110\\n1010\\n\") == \"4 2\\n\"\nassert solution(\"5\\n11111\\n00110\\n\") == \"4 2\\n\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('2\\n10') == '3 1'\nassert solution('2\\n11') == '2 2'\nassert solution('3\\n101') == '4 2'\nassert solution('3\\n111') == '2 2'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The output and expected output are not equal\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n-----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"4\\n1\\n1234\\n1\\n1\\n1\") == \"5 1\\n1234\\n1111\\n1234\\n\"\nassert solution(\"3\\n4 1\\n2123\\n1 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"4\\n1\\n1234\\n1\\n1\\n1\") == \"5 1\\n1234\\n1111\\n1234\\n\"\nassert solution(\"3\\n4 1\\n2123\\n1 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"4\\n1\\n1234\\n1\\n1\\n1\") == \"5 1\\n1234\\n1111\\n1234\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"4\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"2\\n1 1\\n1\\n1\\n\") == \"2 2\\n111\\n111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11'], \"Solution is incorrect\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == expected_output"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == expected_output"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"32 20\") == \"16\\n\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"150 10\") == \"16\"\nassert solution(\"10 20\") == \"10\"\nassert solution(\"300 200\") == \"10\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(32, 20) == 16, \"Your output is incorrect. Expected: 16, Actual: {}\".format(solution(32, 20))\nprint(\"All tests passed.\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Input and Output don't match\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"1000000000 500000000\") == \"16\"\nassert solution(\"1000000001 1000000000\") == \"16\"\nassert solution(\"1000000002 500000000\") == \"16\"\nassert solution(\"1000000003 250000000\") == \"16\"\nassert solution(\"1000000004 125000000\") == \"16\"\nassert solution(\"1000000005 62500000\") == \"16\"\nassert solution(\"1000000006 31250000\") == \"16\"\nassert solution(\"1000000007 15625000\") == \"16\"\nassert solution(\"1000000008 7812500\") == \"16\"\nassert solution(\"1000000009 3906250\") == \"16\"\nassert solution(\"1000000010 1953125\") == \"16\"\nassert solution(\"1000000011 9765625\") == \"16\"\nassert solution(\"1000000012 4832813\") == \"16\"\nassert solution(\"1000000013 2416406\") == \"16\"\nassert solution(\"1000000014 1208205\") == \"16\"\nassert solution(\"1000000015 604102\") == \"16\"\nassert solution(\"1000000016 302051\") == \"16\"\nassert solution(\"1000000017 151025\") == \"16\"\nassert solution(\"1000000018 755125\") == \"16\"\nassert solution(\"1000000019 377562\") == \"16\"\nassert solution(\"1000000020 188781\") == \"16\"\nassert solution(\"1000000021 94382\") == \"16\"\nassert solution(\"1000000022 47191\") == \"16\"\nassert solution(\"1000000023 23596\") == \"16\"\nassert solution(\"1000000024 11798\") == \"16\"\nassert solution(\"1000000025 58993\") == \"16\"\nassert solution(\"1000000026 29496\") == \"16\"\nassert solution(\"1000000027 14748\") == \"16\"\nassert solution(\"1000000028 78743\") == \"16\"\nassert solution(\"1000000029 39371\") == \"16\"\nassert solution(\"1000000030 19685\") == \"16\"\nassert solution(\"1000000031 98423\") == \"16\"\nassert solution(\"1000000032 49216\") == \"16\"\nassert solution(\"1000000033 24609\") == \"16\"\nassert solution(\"1000000034 128046\") == \"16\"\nassert solution(\"1000000035 69023\") == \"16\"\nassert solution(\"1000000036 34512\") == \"16"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 20\") == \"16\", \"Expected output: 16, received: {}\".format(solution(\"32 20\"))"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"32 20\") == \"16\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Solution does not match the expected output. Input: {input_str}, Output: {output_str}\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'\nassert solution('3 4\\n.#\\n.#\\n...\\n..#\\n..#') == '6 18'\nassert solution('3 4\\n....\\n.#\\n...\\n..#\\n.#\\n....') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0 0\\n\", \"Test 1\"\nassert solution(\"....\\n....\\n....\\n....\\n\") == \"5 13\\n\", \"Test 2\"\nassert solution(\"....\\n....\\n.#.#\\n....\\n\") == \"4 13\\n\", \"Test 3\"\nassert solution(\"....\\n....\\n.##.\\n....\\n\") == \"5 13\\n\", \"Test 4\"\nassert solution(\"....\\n....\\n.#..\\n....\\n\") == \"5 13\\n\", \"Test 5\"\nassert solution(\"....\\n....\\n#...\\n....\\n\") == \"5 13\\n\", \"Test 6\"\nassert solution(\"....\\n....\\n#....\\n....\\n\") == \"5 13\\n\", \"Test 7\"\nassert solution(\"....\\n....\\n#..#\\n....\\n\") == \"5 13\\n\", \"Test 8\"\nassert solution(\"....\\n....\\n#..#\\n....\\n\") == \"5 13\\n\", \"Test 9\"\nassert solution(\"....\\n....\\n##.#\\n....\\n\") == \"5 13\\n\", \"Test 10\"\nassert solution(\"....\\n....\\n##..\\n....\\n\") == \"5 13\\n\", \"Test 11\"\nassert solution(\"....\\n....\\n##..\\n....\\n\") == \"5 13\\n\", \"Test 12\"\nassert solution(\"....\\n....\\n#...#\\n....\\n\") == \"5 13\\n\", \"Test 13\"\nassert solution(\"....\\n....\\n#....#\\n....\\n\") == \"5 13\\n\", \"Test 14\"\nassert solution(\"....\\n....\\n#.##.\\n....\\n\") == \"5 13\\n\", \"Test 15\"\nassert solution(\"....\\n....\\n#..##\\n....\\n\") == \"5 13\\n\", \"Test 16\"\nassert solution(\"....\\n....\\n#.###\\n....\\n\") == \"5 13\\n\", \"Test 17\"\nassert solution(\"....\\n....\\n#.#..\\n....\\n\") == \"5 13\\n\", \"Test 18\"\nassert solution(\"....\\n....\\n#.##..\\n....\\n\") == \"5 13\\n\", \"Test 19\"\nassert solution(\"....\\n....\\n#...##\\n....\\n\") == \"5 13\\n\", \"Test 20\"\nassert solution(\"....\\n....\\n#.#.#\\n....\\n\") == \"5 13\\n\", \"Test 21\"\nassert solution(\"....\\n....\\n#.###.\\n....\\n\") == \"5 13\\n\", \"Test 22\"\nassert solution(\"....\\n....\\n#..#.#\\n....\\n\") == \"5 13\\n\", \"Test 23\"\nassert solution(\"....\\n....\\n#.##.#\\n....\\n\") == \"5 13\\n\", \"Test 24\"\nassert solution(\"....\\n....\\n#.#.#.\\n....\\n\") == \"5 13\\n\", \"Test 25\"\nassert solution(\"....\\n....\\n#..#.#\\n....\\n\") == \"5 13\\n\", \"Test 26\"\nassert solution(\"....\\n....\\n#..##\\n....\\n\") == \"5 13\\n\", \"Test 27\"\nassert solution(\"....\\n....\\n#.###\\n....\\n\") == \"5 13\\n\", \"Test 28\"\nassert solution(\"....\\n....\\n#...#\\n....\\n\") == \"5 13\\n\", \"Test 29\"\nassert solution(\"....\\n....\\n#..##\\n....\\n\") == \"5 13\\n\", \"Test 30\"\nassert solution(\"....\\n....\\n#.###\\n....\\n\") == \"5 13\\n\", \"Test 31\"\nassert solution(\"....\\n....\\n#...#\\n....\\n\") == \""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == 5\nassert solution(\"5 3\\n....\\n.#.#\\n....\\n\") == 13\n\nfrom typing import List"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 13\"\nassert solution() == \"5 22\"\nassert solution() == \"6 22\"\nassert solution() == \"6 13\"\nassert solution() == \"7 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5 13'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    \"\"\") == \"5\\n\"\nassert solution(\"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1 3? 0\n    \"\"\") == \"5\\n\"\nassert solution(\"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1 2 3? 0\n    \"\"\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n\") == \"5\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 3\n    0 -1\n    1 -1\n    2 1\n    ''') == '0\\n'\n\nassert solution('''\n    3 4\n    0 1\n    1 2\n    2 3\n    ''') == '3\\n'\n\nassert solution('''\n    6 8\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    ''') == '6\\n'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\nassert solution(\"1 1\\n0 1\") == 1\nassert solution(\"3 3\\n1 1\\n1 2\\n2 2\") == 3\nassert solution(\"1 1\\n1 1\") == 2\nassert solution(\"4 4\\n1 2\\n1 3\\n2 3\") == 4\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 3\n-1 0\n-1 1\n0 1\"\"\") == \"0\"\n\nassert solution(\"\"\"3 3\n-1 0\n-1 1\n0 1\n1 2\n-1 2\n0 2\n1 3\n-1 3\n0 3\"\"\") == \"3\"\n\nassert solution(\"\"\"4 4\n-1 0\n-1 1\n0 1\n1 2\n-1 2\n0 2\n1 3\n-1 3\n0 3\n2 4\n-1 4\n0 4\"\"\") == \"3\"\n\nassert solution(\"\"\"5 5\n-1 0\n-1 1\n0 1\n1 2\n-1 2\n0 2\n1 3\n-1 3\n0 3\n2 4\n-1 4\n0 4\n3 5\n-1 5\n0 5\"\"\") == \"5\"\n\nassert solution(\"\"\"1 1\n1 2\n-1 1\n0 1\n1 3\n-1 2\n0 2\n2 4\n-1 3\n0 3\"\"\") == \"0\"\n\nassert solution(\"\"\"4 5\n-1 0\n-1 1\n0 1\n1 2\n-1 2\n0 2\n1 3\n-1 3\n0 3\n2 4\n-1 4\n0 4\n3 5\n-1 5\n0 5\n4 6\n-1 6\n0 6\"\"\") == \"5\"\n\nassert solution(\"\"\"4 6\n-1 0\n-1 1\n0 1\n1 2\n-1 2\n0 2\n1 3\n-1 3\n0 3\n2 4\n-1 4\n0 4\n3 5\n-1 5\n0 5\n4 6\n-1 6\n0 6\n5 7\n-1 7\n0 7\"\"\") == \"7\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\", \"Output should be 6\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\", \"Please implement the solution function\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Failed for input:\\n{}\\nExpected output:\\n{}\".format(input(), expected_output)"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n9 6 2 4\\n') == '6\\n'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n9 6 2 4\") == 6\nassert solution(\"1\\n10\\n1 2 3 4 5 6 7 8 9\") == 9\nassert solution(\"1\\n20\\n1 1 1 1 1 1 1 1 1 1\") == 20\nassert solution(\"1\\n5\\n1 2 3 4 5\") == 5\nassert solution(\"1\\n1000000000\") == 9999999999\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output should be {output}, but it is {solution(input())}.\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n9 6 2 4') == '6\\n'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 9, 6, 2, 4) == 6, \"The output should be 6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed. Expected output: {sample_output}, got {solution(sample_input)}.\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\\n\"\nassert solution(\"2 5 1\") == \"2.000000\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2.000000\\n\", f\"Your solution is incorrect. Please check the input and examples.\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2.0\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nassert solution(\"2 5 1\") == 2.0"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\nassert solution('2 5 1') == '2.000000'\n\nprint('All tests passed!')"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"96\" # expected output: \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n') == '96'\nassert solution('5\\n1 2\\n3 4\\n\\n1 2\\n1 3\\n') == '72'\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"96\", \"The solution is incorrect.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"96\", \"Test case 1 failed\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 96\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"96\" # You should return the minimum transmission cost of the resulting network C"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 96, \"Incorrect solution\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"96\\n\", solution(stdin)\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output one line with a single integer: The weight of a Minimum Spanning Tree that spans these 4 points.\"\n\nfrom typing import List"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n1 1\\n1 0\\n0 1\\n0 0\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\\n7 0\\n7 1\\n8 0\\n8 1\\n9 0\\n9 1\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'\nassert solution('5\\n3 9\\n5 5\\n5 3\\n5 7') == '5\\n4\\n2'\nassert solution('10\\n5 4\\n7 9\\n3 8\\n2 6\\n6 8\\n3 4\\n4 2\\n1 9') == '12\\n10\\n8'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\"\nfor _ in range(test_cases):\n    A, B = map(int, input().split())\n    expected = round(A + B)\n    print(solution(input()))"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}\\nExpected Output: {output}\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '10\\n10\\n9'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\n\nassert solution('5 5\\n###\\n#F#F#\\n#..#\\n#..#\\n') == '5'\n\nassert solution('1 1\\n#J#\\n####\\n#..#\\n#..#\\n') == '4'\n\nassert solution('5 5\\n####\\n#..#\\n#..#\\n#..#\\n') == '3'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 3\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 1\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 10\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The provided test case {input()} is incorrect. The expected output is {output}, but the function returned {solution(input())} instead.\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndefinitely_impossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#...#\\n\") == \"2\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"2\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"2\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"2\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"3\\nimpossible\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#.....#\\n\") == \"4\\ndenied\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 3\\n3\\n2 2\") == \"0.6666666667\"\nassert solution(\"1 2 1\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(1) + '\\n' + str(2) + '\\n' + str(2)) == '0.3333333333'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n2\") == \"0.3333333333\\n0.3333333333\\n\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\\n\"\nassert solution(\"10\\n01\\n\") == \"1023\\n\"\nassert solution(\"10\\n101\\n\") == \"1023\\n\"\nassert solution(\"10\\n010111\\n\") == \"1023\\n\"\nassert solution(\"10\\n1110000\\n\") == \"1023\\n\"\nassert solution(\"10\\n0100010\\n\") == \"1023\\n\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\") == 1023"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n1\\n') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1023, \"The output should be 1023.\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {expected}!= {solution(stdin)}\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1\") == \"1023\\n\"\nassert solution(\"10\\n101*\") == \"1023\\n\"\nassert solution(\"10\\n1011*\") == \"1023\\n\"\nassert solution(\"10\\n11111*\") == \"1023\\n\"\nassert solution(\"10\\n0100010\") == \"1023\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"  # expected output: 6\nassert solution(\"1 1\") == \"0\"  # expected output: 0\nassert solution(\"10 10\") == \"120\"  # expected output: 120\nassert solution(\"1 2\") == \"0\"  # expected output: 0\nassert solution(\"10 20\") == \"240\"  # expected output: 240"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2, 2) == 6, \"The solution is incorrect. Expected 6, but got {}\".format(solution(2, 2))"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"2 2\\n\") == \"6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Test case not passed\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test failed for sample input.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"6\\n\"\nassert solution(stdin=\"5 4\\n\") == \"12\\n\"\nassert solution(stdin=\"8 9\\n\") == \"28\\n\"\nassert solution(stdin=\"2 3\\n\") == \"32\\n\"\nassert solution(stdin=\"0 0\\n\") == \"0\\n\"\nassert solution(stdin=\"1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2, 2) == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"2930\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000 2000 7\n    100\n    480\n    500\n    550\n    1000\n    1400\n    1500\n    \"\"\"\n) == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2930\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2930\", \"Your solution is incorrect!\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"Impossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2930\", \"Expected output: 2930, got: {}\".format(solution())"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2930\", \"The solution is not correct\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1 2 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    1 3 2\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    1 3 2\n    1 4 2\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    1 3 2\n    1 4 5\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    2 3 2\n    3 2 1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 2 3\n    2 3 2\n    3 2 3\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\" # Expected output: 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\" # wrong solution\nassert solution(\"1 2 3\\n0\\n100000\\n1\") == \"3\" # wrong solution\nassert solution(\"1 2 3\\n0\\n100000\\n100000\") == \"3\" # correct solution"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3]) == 2\nassert solution([0]) == 1\nassert solution([0, 0]) == 1\nassert solution([1, 2, 1, 2, 3]) == 3"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 10, \"Incorrect output.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == 10, \"Error: The solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"Your solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10\\n'\nassert solution('3 4\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 3') == '12\\n'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n\") == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Testcase failed: {input()} -> {output}\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10, \"Test Case 1 failed\"\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10, \"Test Case 2 failed\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"3100\\n\", \"Test failed. Expected output: 3100, actual output: {}.\".format(solution(sample_input))"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected output {expected}\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Expected 0, but got {} instead.\".format(solution())"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Test failed\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Solution is not correct.\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\n\nassert solution(\"3 3\\n0 1\\n1 2\\n0 2\\n1 3\\n\") == \"0\"\n\nassert solution(\"5 5\\n0 1\\n1 2\\n1 3\\n2 4\\n0 5\\n1 4\\n\") == \"3\"\n\nassert solution(\"6 6\\n0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n0 6\\n1 5\\n\") == \"3\"\n\nassert solution(\"6 10\\n0 1\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n0 7\\n1 6\\n2 5\\n\") == \"7\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 1\n0 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 3\n0 1\n1 2\n2 0\n1 2\n\"\"\") == \"12\\n\"\n\nassert solution(\"\"\"\n4 6\n0 1\n1 2\n2 3\n3 4\n0 1\n1 2\n2 3\n3 4\n0 1\n1 2\n2 3\n3 4\n\"\"\") == \"64\\n\"\n\nassert solution(\"\"\"\n7 5\n0 1\n1 2\n2 3\n3 4\n4 5\n0 1\n1 2\n2 3\n3 4\n4 5\n0 1\n1 2\n2 3\n3 4\n4 5\n0 1\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"548\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n1 1\\n\") == \"0\"\nassert solution(\"5 6\\n1 2\\n0 3\\n1 4\\n2 5\\n3 4\\n4 5\\n5 6\\n\") == \"2\"\nassert solution(\"5 6\\n1 2\\n0 3\\n1 4\\n2 5\\n3 4\\n4 5\\n5 6\\n7 6\\n\") == \"3\"\nassert solution(\"8 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"5\"\nassert solution(\"9 8\\n1 2\\n0 3\\n1 4\\n2 5\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"5\"\nassert solution(\"10 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"6\"\nassert solution(\"11 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"6\"\nassert solution(\"12 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n\") == \"6\"\nassert solution(\"13 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n\") == \"7\"\nassert solution(\"14 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n\") == \"7\"\nassert solution(\"15 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n\") == \"8\"\nassert solution(\"16 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"8\"\nassert solution(\"17 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n\") == \"9\"\nassert solution(\"18 4\\n0 1\\n1 2\\n2 3\\n3 4\\"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"3 2\\n1 2\\n0 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0 3\\n1 3\\n2 4\\n1 4\\n\") == \"3\\n\"\nassert solution(\"2 5\\n0 5\\n1 5\\n2 6\\n1 6\\n2 7\\n1 7\\n2 8\\n1 8\\n2 9\\n1 9\\n2 10\\n1 10\\n\") == \"4\\n\"\nassert solution(\"2 11\\n0 11\\n1 11\\n2 12\\n1 12\\n2 13\\n1 13\\n2 14\\n1 14\\n2 15\\n1 15\\n2 16\\n1 16\\n2 17\\n1 17\\n2 18\\n1 18\\n2 19\\n1 19\\n2 20\\n1 20\\n2 21\\n1 21\\n2 22\\n1 22\\n2 23\\n1 23\\n2 24\\n1 24\\n2 25\\n1 25\\n2 26\\n1 26\\n2 27\\n1 27\\n2 28\\n1 28\\n2 29\\n1 29\\n2 30\\n1 30\\n2 31\\n1 31\\n2 32\\n1 32\\n2 33\\n1 33\\n2 34\\n1 34\\n2 35\\n1 35\\n2 36\\n1 36\\n2 37\\n1 37\\n2 38\\n1 38\\n2 39\\n1 39\\n2 40\\n1 40\\n2 41\\n1 41\\n2 42\\n1 42\\n2 43\\n1 43\\n2 44\\n1 44\\n2 45\\n1 45\\n2 46\\n1 46\\n2 47\\n1 47\\n2 48\\n1 48\\n2 49\\n1 49\\n2 50\\n1 50\\n2 51\\n1 51\\n2 52\\n1 52\\n2 53\\n1 53\\n2 54\\n1 54\\n2 55\\n1 55\\n2 56\\n1 56\\n2 57\\n1 57\\n2 58\\n1 58\\n2 59\\n1 59\\n2 60\\n1 60\\n2 61\\n1 61\\n2 62\\n1 62\\n2 63\\n1 63\\n2 64\\n1 64\\n2 65\\n1 65\\n2 66\\n1 66\\n2 67\\n1 67\\n2 68\\n1 68\\n2 69\\n1 69\\n2 70\\n1 70\\n2 71\\n1 71\\n2 72\\n1 72\\n2 73\\n1 73\\n2 74\\n1 74\\n2 75\\n1 75\\n2 76\\n1 76\\n2 77\\n1 77\\n2 78\\n1 78\\n2 79\\n1 79\\n2 80\\n1 80\\n2 81\\n1 81\\"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n') == '0'\nassert solution('3 4\\n0 1\\n1 2\\n2 3\\n2 4\\n') == '0'\nassert solution('3 4\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '1'\nassert solution('2 1\\n0 2\\n1 3\\n2 4\\n') == '1'\nassert solution('3 4\\n0 2\\n1 3\\n2 4\\n') == '2'\nassert solution('2 1\\n0 2\\n1 3\\n2 4\\n') == '2'\nassert solution('4 2\\n0 2\\n1 3\\n2 4\\n') == '2'\nassert solution('2 1\\n0 3\\n1 3\\n2 4\\n') == '3'\nassert solution('4 3\\n0 3\\n1 3\\n2 4\\n') == '3'\nassert solution('3 4\\n0 3\\n1 3\\n2 4\\n') == '3'\nassert solution('2 1\\n0 3\\n1 4\\n2 4\\n') == '4'\nassert solution('5 3\\n0 3\\n1 4\\n2 4\\n') == '4'\nassert solution('4 2\\n0 3\\n1 4\\n2 4\\n') == '4'\nassert solution('2 1\\n0 4\\n1 4\\n2 4\\n') == '4'\nassert solution('5 4\\n0 4\\n1 4\\n2 4\\n') == '5'\nassert solution('3 2\\n0 4\\n1 4\\n2 4\\n') == '5'\nassert solution('5 4\\n0 4\\n1 4\\n2 4\\n') == '5'\nassert solution('3 2\\n0 5\\n1 4\\n2 4\\n') == '6'\nassert solution('5 5\\n0 5\\n1 4\\n2 4\\n') == '6'\nassert solution('4 3\\n0 5\\n1 4\\n2 4\\n') == '6'\nassert solution('3 2\\n0 6\\n1 4\\n2 4\\n') == '6'\nassert solution('6 5\\n0 6\\n1 4\\n2 4\\n') == '7'\nassert solution('5 4\\n0 6\\n1 4\\n2 4\\n') == '7'\nassert solution('4 3\\n0 6\\n1 4\\n2 4\\n') == '7'\nassert solution('3 2\\n0 7\\n1 4\\n2 4\\n') == '7'\nassert solution('7 6\\n0 7\\n1 4\\n2 4\\n') == '7'\nassert solution('6 5\\n0 7\\n1 4\\n2 4\\n') == '7'\nassert solution('4 3\\n0 7\\n1 4\\n2 4\\n') == '7'\nassert solution('2 1\\n0 8\\n1 4\\n2 4\\n') == '8'\nassert solution('6 6\\n0 8\\n1 4\\n2 4\\n') == '8'\nassert solution('5 5\\n0 8\\n1 4\\n2 4\\n') == '8'\nassert solution('4 3\\n0 8\\n1 4\\n2 4\\n') == '8'\nassert solution('3 2\\n0 9\\n1 4\\n2 4\\n') == '8'\nassert solution('8 7\\n0 9\\n1 4\\n2 4\\n') == '8'\nassert solution('7 6\\n0 9\\n1 4\\n2 4\\n') == '8'\nassert solution('5 5\\n0 9"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\"  # solution for sample input"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3 7) == \"21\"\nassert solution(10 15) == \"2\"\nassert solution(1 21) == \"21\"\nassert solution(10 20) == \"1\"\nassert solution(21 21) == \"1\"\nassert solution(100 200) == \"2\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"73 21\") == \"1\"\nassert solution(\"2015 21\") == \"1\"\nassert solution(\"21 42\") == \"1\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f\"\"\"\n1 10\n\"\"\") == \"10\"\n\nassert solution(f\"\"\"\n73 2000000000\n\"\"\") == \"10\"\n\nassert solution(f\"\"\"\n73 21\n\"\"\") == \"2\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"3 12\") == \"40\"\nassert solution(\"2 4\") == \"18\"\nassert solution(\"7 7\") == \"1\"\nassert solution(\"73 73\") == \"1\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10\\n'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 10, \"Sheldon numbers are greater or equal to 1, less or equal to 10\"\nassert solution(2) == 1, \"Sheldon numbers are greater or equal to 2, less or equal to 1\"\nassert solution(3) == 10, \"Sheldon numbers are greater or equal to 3, less or equal to 10\"\nassert solution(4) == 1, \"Sheldon numbers are greater or equal to 4, less or equal to 1\"\nassert solution(5) == 10, \"Sheldon numbers are greater or equal to 5, less or equal to 10\"\nassert solution(6) == 1, \"Sheldon numbers are greater or equal to 6, less or equal to 1\"\nassert solution(7) == 10, \"Sheldon numbers are greater or equal to 7, less or equal to 10\"\nassert solution(8) == 1, \"Sheldon numbers are greater or equal to 8, less or equal to 1\"\nassert solution(9) == 10, \"Sheldon numbers are greater or equal to 9, less or equal to 10\"\nassert solution(10) == 10, \"Sheldon numbers are greater or equal to 10, less or equal to 10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 10\nassert solution(10) == 10\nassert solution(73) == 2\nassert solution(50) == 1\nassert solution(1755) == 1\nassert solution(2015) == 1\nassert solution(42) == 1\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\\n\"\n\nassert solution(r\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\\n\"\n\nassert solution(r\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0\\n'\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0\nassert solution
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"1000 1000\\n0 1000\\n1000 0\\n0 0\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\"\nassert solution(\"0 1000\\n1000 1000\\n0 0\\n1000 0\\n\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0, \"Error: Test case 1 failed\"\nassert solution(open(\"input2.txt\", \"r\")) == 0, \"Error: Test case 2 failed\"\nassert solution(open(\"input3.txt\", \"r\")) == 0, \"Error: Test case 3 failed\"\nassert solution(open(\"input4.txt\", \"r\")) == 0, \"Error: Test case 4 failed\"\nassert solution(open(\"input5.txt\", \"r\")) == 0, \"Error: Test case 5 failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\\n\"\n\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n\") == \"0\\n\"\n\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\\n\") == \"0\\n\"\n\nassert solution(\"0 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n\"\n\nassert solution(\"0 0\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\n\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\n\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"0.500000000 1.000000000\"\"\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 1\n0 1 0.5\n\"\"\") == \"0.500000000 1.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [0.500000000, 1.000000000], \"Test failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7, \"The solution is incorrect. The expected output is 7, but the actual output is {}.\".format(solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\"))\nprint(\"Test Passed\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n') == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"1000 1000\\n\") == \"0\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\nassert solution('5 1\\n5 1\\n5 1\\n5 1\\n5 1') == '10\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\"\nassert solution(\"2 2\\n0 0\\n0 1\\n0 2\\n0 3\\n0 4\\n\") == \"0\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Output is incorrect. Received {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == [\"9-b\", \"8-a\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n1\\n\") == [\"9-b\", \"8-a\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\nabc\\n\") == [\"9-b\", \"8-a\", \"5-c\", \"6-a\"]\nassert solution(\"1\\nabc\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]\nassert solution(\"1\\nabc\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == [\"abc\"]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution should be correct.\"\n\nassert solution() == \"9-b\\n7-c\\n3-b\\n2-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution should be correct.\"\n\nassert solution() == \"5-c\\n5-b\\n5-a\\n5-def\\n6-a\\n6-b\\n6-c\\n6-def\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution should be correct.\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbba\\n0\") == [\"9-b\", \"8-a\", \"def\"]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\naaa bbb\\nccc ddd\\n1-d 2-e 3-f\\n4-g 5-h\\n6-i 7-j\\n8-k 9-l\\n0\") == \"9-l\\n8-k\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\naaa bbb\\nccc ddd\\n1-d 2-e 3-f\\n4-g 5-h\\n6-i 7-j\\n8-k 9-l\\n0\") == \"9-l\\n8-k\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\naaa bbb\\nccc ddd\\n1-d 2-e 3-f\\n4-g 5-h\\n6-i 7-j\\n8-k 9-l\\n0\") == \"9-l\\n8-k\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\naaa bbb\\nccc ddd\\n1-d 2-e 3-f\\n4-g 5-h\\n6-i 7-j\\n8-k 9-l\\n0\") == \"9-l\\n8-k\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\naaa bbb\\nccc ddd\\n1-d 2-e 3-f\\n4-g 5-h\\n6-i 7-j\\n8-k 9-l\\n0\") == \"9-l\\n8-k\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10\\naaa bbbb\\nccc dddd\\n11-b\\n12-a\\n0\") == \"0\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 0\\n0\") == \"56-9\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output of the solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\necho\\n1\\necho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n5\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n10\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n2\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n3\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2\\napple\\nbanana\\ncherry\\n100\\n\") == \"1234R1234\\nappledef\\nbananafedcba\\ncherryper\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"echo\\n1\\nechoecho\") == \"3246R3246\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n'\n                 'echo\\n'\n                 '1\\n'\n                 'echoecho\\n') == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3246R3246\", \"Test failed\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"echo\\n1\\necho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"echo\\n2\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n3\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n4\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n5\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n6\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n7\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n8\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n9\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n10\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n11\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n12\\necho\\n\") == \"R2\\n\"\nassert solution(\"echo\\n13\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n14\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n15\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n16\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n17\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n18\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n19\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n20\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n21\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n22\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n23\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n24\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n25\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n26\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n27\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n28\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n29\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n30\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n31\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n32\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n33\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n34\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n35\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n36\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n37\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n38\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n39\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n40\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n41\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n42\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n43\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n44\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n45\\necho\\n\") == \"D4\\n\"\nassert solution(\"echo\\n46\\necho\\n\") == \"D4\\n\"\nassert solution"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('2\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('3\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('4\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('5\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('6\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('7\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('8\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('9\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('10\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('11\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('12\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('13\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('14\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('15\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('16\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('17\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('18\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('19\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('20\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('21\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('22\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('23\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('24\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('25\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('26\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('27\\n' + 'echo\\n' + '1\\n' + 'echoecho' == '3246R3246')\nassert solution('28\\n' +"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\nassert solution('5 3') == 'NO'\nassert solution('3 5') == 'YES\\n1 2\\n1 3'\nassert solution('1 3') == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1) == 'YES'\nassert solution(5, 2) == 'NO'\nassert solution(5, 3) == 'YES'\nassert solution(5, 4) == 'YES'\nassert solution(6, 5) == 'YES'\nassert solution(6, 6) == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"  # Test case 1\nassert solution(\"5 2\") == \"NO\"  # Test case 2\nassert solution(\"10 3\") == \"YES\\n1 2\\n1 3\\n2 3\\n3 2\\n3 1\"  # Test case 3\nassert solution(\"10 4\") == \"NO\"  # Test case 4\nassert solution(\"10 5\") == \"NO\"  # Test case 5"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num} has incorrect output. Expected: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n') == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(2):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(2, 4):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(3, 5):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(4, 6):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(5, 7):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(6, 8):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(7, 9):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(8, 10):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(9, 11):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(10, 12):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(11, 13):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(12, 14):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(13, 15):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(14, 16):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(15, 17):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(16, 18):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(17, 19):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(18, 20):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(19, 21):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(20, 22):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(21, 23):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(22, 24):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(23, 25):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(24, 26):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(25, 27):\n    assert solution(input()) == expected_output, f\"Test case failed: {input()} -> {expected_output}\"\n\nfor i in range(26, 28):\n    assert solution(input())"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"The solution is incorrect.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"1\\n1\\n2 2\") == \"0\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"1\\n1\\n2 2\") == \"0\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176', \"Solution should return 176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"176\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == 176, \"The expected output is 176 but it is not.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Output should be 12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == \"12\"\nassert solution(479001600) == \"016\"\nassert solution(123456789) == \"678\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5') == '12\\n'\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == '12', 'Test case 1 failed'\nassert solution('12') == '016', 'Test case 2 failed'\nassert solution('10000001') == '0000016', 'Test case 3 failed'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"12\"\nassert solution(25) == \"1010\"\nassert solution(54321) == \"016\"\nassert solution(10000000) == \"016\"\nassert solution(20000000) == \"000\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"12\", \"Expected 12, got {}\".format(solution(5))\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"12\", \"Output should be '12'\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"4 1\\n(())\\n480\\n617\\n-570\\n928\") == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 480, \"Output should be 480\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 480, \"The solution is incorrect.\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The solution function is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 480\nassert solution() == 480\nassert solution() == 928\nassert solution() == 928\nassert solution() == 928\nassert solution() == 928"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480, \"The solution is incorrect\")\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480, \"The solution is incorrect\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480, \"Test case 1 failed\")\n\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480, \"Test case 2 failed\")\n\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480, \"Test case 3 failed\")\n\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480, \"Test case 4 failed\")\n\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == 480, \"Test case 5 failed\")\n\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928\\n') == '?', \"Test case 6 failed\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 2\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 3\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 4\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 5\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 6\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 7\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 8\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 9\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 10\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 11\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 12\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 13\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 14\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 15\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 16\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 17\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 18\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 19\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 20\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 21\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 22\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 23\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 24\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 25\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 26\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 27\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 28\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n((()\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\nassert solution(\"4 1\\n(())\") == 480\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 1"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Function should return the correct output.\"\nassert solution() == \"2 4\\n5 6\", \"Function should return the correct output.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"The solution for {input_data} is {solution(input_data)}, but should be {output_data}.\"\nfor input_data, output_data in [\n    ([2, 2, 4], [\"2 4\"]),\n    ([3, 1, 3, 5], [\"3 1 3 5\"]),\n    ([2, 2, 4], [\"2 4\"]),\n    ([3, 1, 3, 6], [\"3 1 3 6\"]),\n    ([2, 2, 6], [\"2 2 6\"]),\n    ([2, 4, 5], [\"2 4 5\"]),\n    ([2, 8, 9], [\"2 8 9\"]),\n    ([2, 7, 9], [\"2 7 9\"]),\n    ([2, 7, 8], [\"2 7 8\"]),\n    ([2, 11, 13], [\"2 11 13\"]),\n    ([2, 10, 12], [\"2 10 12\"]),\n    ([2, 11, 13], [\"2 11 13\"]),\n    ([2, 10, 12], [\"2 10 12\"]),\n]:\n    assert solution(input_data) == output_data, f\"The solution for {input_data} is {solution(input_data)}, but should be {output_data}.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"The solution is incorrect.\"\n\nprint(\"The solution is correct.\")"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"14\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"none\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 12 11\") == \"2 2\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 12 11\\n2 13 10\") == \"none\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 12 11\\n2 13 10\\n2 13 9\\n2 13 12\") == \"none\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 12 11\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13 9\\n2 13 12\\n2 13 10\\n2 13"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n    \"\"\"\n) == \"35 39 36 27 29\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1 1 1\n    1 1 1 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 2 2 2\n    2 2 2 2 2\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4 5\n    6 7 8 9 10\n    11 12 13 14 15\n    16 17 18 19 20\n    21 22 23 24 25\n    26 27 28 29 30\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\") == \"28 28 28 28 28\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n35 39 36 27 29\n\"\"\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '35 39 36 27 29', \"The output should be the danger levels for each chamber. Please fix the code to achieve this.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\nassert solution(\"5 1000000\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"1 000001 000002 000003 000004\\n\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\nassert solution('3 4\\n0 0 1 1') == '0 18'\nassert solution('3 5\\n2 2 1 1') == '0 38'\nassert solution('4 6\\n1 2 3 4') == '244614'\nassert solution('4 8\\n1 1 2 2 3 3 4 4 5 5 6 6') == '19108754'\nassert solution('4 9\\n1 1 1 2 2 2 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7') == '1509083497'\nassert solution('5 6\\n
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\n\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 3\n    3 2 1\n''') == '0 672\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0, \"Invalid Output\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\n\nassert solution(\"10 7\\n0 1 1 1 0\") == \"0 1000\"\n\nassert solution(\"2 3\\n3 2 1\") == \"0 672\"\n\nassert solution(\"2 3\\n3 2 1\") == \"0 672\"\n\nassert solution(\"1 3\\n3 2 1\") == \"0 672\"\n\nassert solution(\"5 4\\n3 2 1\") == \"0 672\"\n\nassert solution(\"10 7\\n0 1 1 1 0\") == \"0 1000\"\n\nassert solution(\"10 7\\n0 1 1 1 0\") == \"0 1000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n3 4 10\\n\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\") == \"2.500000\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data}!= {output_data}\" for input_data, output_data in zip(sample_input, sample_output)"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\nImpossible\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5\nassert solution(r'4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n3 10 15') == 'Impossible'\nassert solution(r'4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n3 10 15\\n4 3 20') == 1.625\nassert solution(r'4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n3 10 15\\n4 3 20\\n5 3 25\\n5 10 20') == 'Impossible'\nassert solution(r'4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 1 10\\n3 10 15\\n4 3 20\\n5 3 25\\n5 10 20\\n6 1 15\\n6 15 20') == 'Impossible'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3,5,3,4]) == '3'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3 4') == 3, 'Incorrect output'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(5) == 3\nassert solution(8) == 2\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5, 3, 4) == 3\nassert solution(5, 3, 5) == 4\nassert solution(5, 3, 6) == 5\nassert solution(5, 3, 7) == 5\nassert solution(5, 3, 8) == 6\nassert solution(5, 3, 9) == 6\nassert solution(5, 3, 10) == 7\nassert solution(5, 3, 11) == 7\nassert solution(5, 3, 12) == 8\nassert solution(5, 3, 13) == 8\nassert solution(5, 3, 14) == 9\nassert solution(5, 3, 15) == 9\nassert solution(5, 3, 16) == 10\nassert solution(5, 3, 17) == 10\nassert solution(5, 3, 18) == 11\nassert solution(5, 3, 19) == 11\nassert solution(5, 3, 20) == 12\nassert solution(5, 3, 21) == 12\nassert solution(5, 3, 22) == 13\nassert solution(5, 3, 23) == 13\nassert solution(5, 3, 24) == 14\nassert solution(5, 3, 25) == 14\nassert solution(5, 3, 26) == 15\nassert solution(5, 3, 27) == 15\nassert solution(5, 3, 28) == 16\nassert solution(5, 3, 29) == 16\nassert solution(5, 3, 30) == 17\nassert solution(5, 3, 31) == 17\nassert solution(5, 3, 32) == 18\nassert solution(5, 3, 33) == 18\nassert solution(5, 3, 34) == 19\nassert solution(5, 3, 35) == 19\nassert solution(5, 3, 36) == 20\nassert solution(5, 3, 37) == 20\nassert solution(5, 3, 38) == 21\nassert solution(5, 3, 39) == 21\nassert solution(5, 3, 40) == 22\nassert solution(5, 3, 41) == 22\nassert solution(5, 3, 42) == 23\nassert solution(5, 3, 43) == 23\nassert solution(5, 3, 44) == 24\nassert solution(5, 3, 45) == 24\nassert solution(5, 3, 46) == 25\nassert solution(5, 3, 47) == 25\nassert solution(5, 3, 48) == 26\nassert solution(5, 3, 49) == 26\nassert solution(5, 3, 50) == 27\nassert solution(5, 3, 51) == 27\nassert solution(5, 3, 52) == 28\nassert solution(5, 3, 53) == 28\nassert solution(5, 3, 54) == 29\nassert solution(5, 3, 55) == 29\nassert solution(5, 3, 56) == 30\nassert solution(5, 3, 57) == 30\nassert solution(5, 3, 58) == 31\nassert solution(5, 3, 59) == 31\nassert solution(5, 3, 60) == 32\nassert solution(5, 3, 61) == 32\nassert solution(5, 3, 62) == 33\nassert solution(5, 3, 63) == 33\nassert solution(5, 3, 64) == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 3, 4) == 3, \"Test Case 1: Pass\"\nassert solution(10, 2, 5) == 3, \"Test Case 2: Pass\"\nassert solution(15, 2, 5) == 4, \"Test Case 3: Pass\"\nassert solution(20, 2, 5) == 4, \"Test Case 4: Pass\"\nassert solution(25, 2, 5) == 4, \"Test Case 5: Pass\"\nassert solution(30, 2, 5) == 4, \"Test Case 6: Pass\"\nassert solution(35, 2, 5) == 4, \"Test Case 7: Pass\"\nassert solution(40, 2, 5) == 4, \"Test Case 8: Pass\"\nassert solution(45, 2, 5) == 4, \"Test Case 9: Pass\"\nassert solution(50, 2, 5) == 4, \"Test Case 10: Pass\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4, 5]) == \"3\\n3\\n3\\n3\\n3\\n\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == \"3\\n3\\n3\\n3\\n3\\n3\\n\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 1"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 3 4\") == 3\nassert solution(\"4\\n1 1 2\") == 2\nassert solution(\"6\\n2 3 2 2 4\") == 5\nassert solution(\"5\\n3 2 2 4\") == 1"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 2 2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    7 3 2\n    \"\"\"\n) == \"6\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\n', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i + 1} failed: {sample_input}\\n{sample_output}\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test failed\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test Case {test_case_num}: Expected output {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2\\n', 'Expected Output: 2\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"3 5 6\") == \"3\"\nassert solution(\"7 10 15\") == \"3\"\nassert solution(\"8 10 16\") == \"4\"\nassert solution(\"9 10 17\") == \"4\"\nassert solution(\"10 10 18\") == \"5\"\nassert solution(\"11 10 19\") == \"5\"\nassert solution(\"12 10 20\") == \"5\"\nassert solution(\"13 10 21\") == \"6\"\nassert solution(\"14 10 22\") == \"6\"\nassert solution(\"15 10 23\") == \"6\"\nassert solution(\"16 10 24\") == \"7\"\nassert solution(\"17 10 25\") == \"7\"\nassert solution(\"18 10 26\") == \"7\"\nassert solution(\"19 10 27\") == \"7\"\nassert solution(\"20 10 28\") == \"8\"\nassert solution(\"21 10 29\") == \"8\"\nassert solution(\"22 10 30\") == \"8\"\nassert solution(\"23 10 31\") == \"8\"\nassert solution(\"24 10 32\") == \"9\"\nassert solution(\"25 10 33\") == \"9\"\nassert solution(\"26 10 34\") == \"9\"\nassert solution(\"27 10 35\") == \"9\"\nassert solution(\"28 10 36\") == \"10\"\nassert solution(\"29 10 37\") == \"10\"\nassert solution(\"30 10 38\") == \"10\"\nassert solution(\"31 10 39\") == \"10\"\nassert solution(\"32 10 40\") == \"11\"\nassert solution(\"33 10 41\") == \"11\"\nassert solution(\"34 10 42\") == \"11\"\nassert solution(\"35 10 43\") == \"11\"\nassert solution(\"36 10 44\") == \"12\"\nassert solution(\"37 10 45\") == \"12\"\nassert solution(\"38 10 46\") == \"12\"\nassert solution(\"39 10 47\") == \"12\"\nassert solution(\"40 10 48\") == \"13\"\nassert solution(\"41 10 49\") == \"13\"\nassert solution(\"42 10 50\") == \"13\"\nassert solution(\"43 10 51\") == \"13\"\nassert solution(\"44 10 52\") == \"14\"\nassert solution(\"45 10 53\") == \"14\"\nassert solution(\"46 10 54\") == \"14\"\nassert solution(\"47 10 55\") == \"14\"\nassert solution(\"48 10 56\") == \"15\"\nassert solution(\"49 10 57\") == \"15\"\nassert solution(\"50 10 58\") == \"15\"\nassert solution(\"51 10 59\") == \"15\"\nassert solution(\"52 10 60\") == \"16\"\nassert solution(\"53 10 61\") == \"16\"\nassert solution(\"54 10 62\") == \"16\"\nassert solution(\"55 10 63\") == \"16\"\nassert solution(\"56 10 64\") == \"17\"\nassert solution(\"57 10 65\") == \"17\"\nassert solution(\"58 10 66\") == \"17\"\nassert solution(\"59 10 67\") == \"17\"\nassert solution(\"60 10 68\") == \"18\"\nassert solution(\"61 10 69\") == \"18\"\nassert solution(\"62 10 70\") == \"18\"\nassert solution(\"63 10 71\") == \""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 5') == '7\\n'\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test.txt', 'r')) == '7\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 5\") == \"7\"\nassert solution(\"2 4 6 8 10\") == \"15\"\nassert solution(\"3 5 7 9\") == \"24\"\nassert solution(\"4 6 8 10\") == \"34\"\nassert solution(\"5 7 9 11 13 15\") == \"49\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 7, \"Incorrect output. Please check the solution.\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=str) == '7\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"7\\n\"\nassert solution(4) == \"15\\n\"\nassert solution(5) == \"26\\n\"\nassert solution(6) == \"51\\n\"\nassert solution(7) == \"90\\n\"\nassert solution(8) == \"186\\n\"\nassert solution(9) == \"374\\n\"\nassert solution(10) == \"683\\n\"\nassert solution(11) == \"1170\\n\"\nassert solution(12) == \"2064\\n\"\nassert solution(13) == \"4190\\n\"\nassert solution(14) == \"8792\\n\"\nassert solution(15) == \"16985\\n\"\nassert solution(16) == \"30880\\n\"\nassert solution(17) == \"62656\\n\"\nassert solution(18) == \"130210\\n\"\nassert solution(19) == \"249966\\n\"\nassert solution(20) == \"548120\\n\"\nassert solution(21) == \"1142633\\n\"\nassert solution(22) == \"2274856\\n\"\nassert solution(23) == \"4824762\\n\"\nassert solution(24) == \"10650854\\n\"\nassert solution(25) == \"22039301\\n\"\nassert solution(26) == \"45615118\\n\"\nassert solution(27) == \"98485317\\n\"\nassert solution(28) == \"204042786\\n\"\nassert solution(29) == \"465476840\\n\"\nassert solution(30) == \"1063456463\\n\"\nassert solution(31) == \"2205211731\\n\"\nassert solution(32) == \"4548236203\\n\"\nassert solution(33) == \"9962815883\\n\"\nassert solution(34) == \"21533070704\\n\"\nassert solution(35) == \"47708889342\\n\"\nassert solution(36) == \"108112989766\\n\"\nassert solution(37) == \"221246160389\\n\"\nassert solution(38) == \"455627895151\\n\"\nassert solution(39) == \"999648231397\\n\"\nassert solution(40) == \"2268799773082\\n\"\nassert solution(41) == \"4767623337077\\n\"\nassert solution(42) == \"11145060475510\\n\"\nassert solution(43) == \"22438980835406\\n\"\nassert solution(44) == \"47842551310947\\n\"\nassert solution(45) == \"113753687129944\\n\"\nassert solution(46) == \"227873807054955\\n\"\nassert solution(47) == \"482431908738162\\n\"\nassert solution(48) == \"1102802800515920\\n\"\nassert solution(49) == \"2281125860468496\\n\"\nassert solution(50) == \"4895253175712910\\n\"\nassert solution(51) == \"11593817242956370\\n\"\nassert solution(52) == \"23066424314"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '7\\n', f\"Test failed. Got {solution(stdin=input())}\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\", \"Your code is not correct.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n', 'The solution is incorrect'\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'fred jetsons\\njohn jets\\nruth rockets\\n'\nassert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'Impossible\\n'\nassert solution('2\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'Impossible\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\", \"Incorrect output. Please check the solution.\"\n\nfrom typing import List"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input data {input_data} and expected output data {output_data}\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(input()) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1 2 1\\n'\nassert solution(stdin) == '2 1 2\\n'\nassert solution(stdin) == '1 1 1\\n'\nassert solution(stdin) == '1 1 0\\n'\nassert solution(stdin) == '0 1 1\\n'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"5\\n2 1\\n2 2\\n3 1\\n4 2\") == \"1 1 1 2 2\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n\nfrom typing import List"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"3\\n4 3\\n10 9\\n9 9\") == \"1 2 2\"\nassert solution(\"3\\n4 3\\n20 9\\n9 9\") == \"1 2 3\"\nassert solution(\"3\\n4 3\\n-10 9\\n10 9\") == \"1 2 3\"\nassert solution(\"3\\n4 3\\n-2 3\\n3 3\") == \"1 2 3\"\nassert solution(\"3\\n4 3\\n2 3\\n3 3\") == \"1 2 3\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 2 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [\"1\\n\", \"2\\n\", \"1\\n\"]\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == ['1']\n\nsolution(4, 3) # explode can 1\nsolution(4, 10) # explode can 2\nsolution(4, 5) # explode can 3\nsolution(4, 2) # explode can 4\nsolution(4, 1) # explode can 1\nsolution(4, 0) # explode can 2"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2.125\nassert solution(5) == 2.10714\nassert solution(6) == 2.0625"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=open(\"test_input.txt\", \"r\")) == \"2.125\\n\"\nassert solution(stdin=open(\"input.txt\", \"r\")) == \"2.0000000000000001\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.125, \"Expected 2.125 but got {}\".format(solution())"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.125\", \"Solution not correct\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"a.*\") == \"a.out\"\nassert solution(\"b.*c\") == \"readme\"\nassert solution(\"a*\") == \"a.out\"\nassert solution(\"a*b*\") == \"a.out\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"*/\") == [\"a.out\", \"readme\"]\nassert solution(\"*.out\") == []\nassert solution(\"*.c**\") == [\"main.c\", \"a.out\", \"def\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r\"\"\"*.*\n4\nmain.c\na.out\nreadme\nyacc\"\"\") == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('main.c') =='main.c'\nassert solution('*.c') =='main.c'\nassert solution('a.*') == 'a.out'\nassert solution('*.c') =='main.c'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"main.c\\na.out\\n\", \"Test failed.\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\", \"Test failed.\"\nassert solution(input()) == \"other_file.txt\\n\", \"Test failed.\"\nassert solution(input()) == \"c.cpp\\n\", \"Test failed.\"\nassert solution(input()) == \"b.txt\\n\", \"Test failed.\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"main.c\\na.out\\nreadme\\nyacc\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"a.*\") == [\"a.out\"]\nassert solution(\"b.*\") == []\nassert solution(\"abc.def\") == [\"abc.def\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == ['main.c', 'a.out']\nassert solution(input()) == ['readme', 'yacc']\nassert solution(input()) == ['*.c', 'a.out']\nassert solution(input()) == ['*.c', 'b.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('*.c') =='main.c'\nassert solution('**/*.c') =='main.c'\nassert solution('**/*/*.c') =='main.c'\nassert solution('**/*/*/*.c') =='main.c'\nassert solution('**/*/*/*/*.c') =='main.c'\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('main.c') =='main.c'\nassert solution('a.out') == 'a.out'\nassert solution('b.c') == ''\nassert solution('*.c') =='main.c'\nassert solution('abc*def') == 'abc.c'\nassert solution('**/*.c') =='main.c'\nassert solution('abc/def') == ''\nassert solution('abc/def/ghi') == ''"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.500000', \"Test failed\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.500000, \"The output is not as expected.\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 1\\n0.500000') == '0.500000'\nassert solution(stdin='2 2\\n0.333333\\n0.666667') == '0.500000'\nassert solution(stdin='3 3\\n0.250000\\n0.750000') == '0.500000'\nassert solution(stdin='4 4\\n0.300000\\n0.699999') == '0.500000'\nassert solution(stdin='5 5\\n0.400000\\n0.500000') == '0.500000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\", \"The given code is not correct.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('2 1\\n0.500000') == '0.500000'\nassert solution('3 1\\n0.500000') == '0.500000'\nassert solution('4 1\\n0.500000') == '0.500000'\nassert solution('5 1\\n0.500000') == '0.500000'\nassert solution('6 1\\n0.500000') == '0.500000'\nassert solution('7 1\\n0.500000') == '0.500000'\nassert solution('8 1\\n0.500000') == '0.500000'\nassert solution('9 1\\n0.500000') == '0.500000'\nassert solution('10 1\\n0.500000') == '0.500000'\nassert solution('11 1\\n0.500000') == '0.500000'\nassert solution('12 1\\n0.500000') == '0.500000'\nassert solution('13 1\\n0.500000') == '0.500000'\nassert solution('14 1\\n0.500000') == '0.500000'\nassert solution('15 1\\n0.500000') == '0.500000'\nassert solution('16 1\\n0.500000') == '0.500000'\nassert solution('17 1\\n0.500000') == '0.500000'\nassert solution('18 1\\n0.500000') == '0.500000'\nassert solution('19 1\\n0.500000') == '0.500000'\nassert solution('20 1\\n0.500000') == '0.500000'\nassert solution('21 1\\n0.500000') == '0.500000'\nassert solution('22 1\\n0.500000') == '0.500000'\nassert solution('23 1\\n0.500000') == '0.500000'\nassert solution('24 1\\n0.500000') == '0.500000'\nassert solution('25 1\\n0.500000') == '0.500000'\nassert solution('26 1\\n0.500000') == '0.500000'\nassert solution('27 1\\n0.500000') == '0.500000'\nassert solution('28 1\\n0.500000') == '0.500000'\nassert solution('29 1\\n0.500000') == '0.500000'\nassert solution('30 1\\n0.500000') == '0.500000'\nassert solution('31 1\\n0.500000') == '0.500000'\nassert solution('32 1\\n0.500000') == '0.500000'\nassert solution('33 1\\n0.500000') == '0.500000'\nassert solution('34 1\\n0.500000') == '0.500000'\nassert solution('35 1\\n0.5000"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.0\", \"Incorrect output\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 49.9\") == \"0.0\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.0\", \"Test case 1 is incorrect\"\n\nx = float(stdin.readline().strip())\np = float(stdin.readline().strip())"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == 0\nassert solution(\"1 50.1\") == 0\nassert solution(\"0.1 50.1\") == 0\nassert solution(\"0.11 50.1\") == 0.1\nassert solution(\"0.111 50.1\") == 0.11\nassert solution(\"0.1111 50.1\") == 0.111\nassert solution(\"0.11111 50.1\") == 0.1111\nassert solution(\"0.111111 50.1\") == 0.11111\nassert solution(\"0.1111111 50.1\") == 0.111111\nassert solution(\"0.11111111 50.1\") == 0.1111111\nassert solution(\"0.111111111 50.1\") == 0.11111111\nassert solution(\"0.1111111111 50.1\") == 0.111111111\nassert solution(\"0.11111111111 50.1\") == 0.1111111111\nassert solution(\"0.111111111111 50.1\") == 0.11111111111\nassert solution(\"0.1111111111111 50.1\") == 0.111111111111\nassert solution(\"0.11111111111111 50.1\") == 0.1111111111111\nassert solution(\"0.111111111111111 50.1\") == 0.11111111111111\nassert solution(\"0.1111111111111111 50.1\") == 0.111111111111111\nassert solution(\"0.11111111111111111 50.1\") == 0.1111111111111111\nassert solution(\"0.1111111111111111111 50.1\") == 0.11111111111111111\nassert solution(\"0.111111111111111111111 50.1\") == 0.1111111111111111111\nassert solution(\"0.1111111111111111111111 50.1\") == 0.11111111111111111111\nassert solution(\"0.111111111111111111111111 50.1\") == 0.111111111111111111111\nassert solution(\"0.111111111111111111111111 50.1\") == 0.1111111111111111111111\nassert solution(\"0.11111111111111111111111111 50.1\") == 0.11111111111111111111111111\nassert solution(\"0.11111111111111111111111111 50.1\") == 0.11111111111111111111111111\nassert solution(\"0.11111111"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == 0.0\n\nfrom typing import List"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 49.9') == '0.0' # Test 1\nassert solution('0 50.1') == '0.0' # Test 2\nassert solution('5 49.9') == '0.8333333333333333' # Test 3\nassert solution('5 50.1') == '0.8333333333333333' # Test 4\nassert solution('99 50.1') == '0.8333333333333333' # Test 5"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 4\") == \"1 3\\n2 2\\n3 1\\n4 2\\n5 3\\n6 4\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\") == \"1 3\\n2 2\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\") == \"1 3\\n2 2\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\") == \"1 3\\n2 2\\n3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nprint(solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n\"))"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is incorrect. Please submit the expected output instead.\"\n\nfor solution, expected_output in [\n    ([1, 2], [4, 1]),\n    ([2, 3], [2, 1]),\n    ([3, 1], [3, 2]),\n    ([1, 3], [1, 2]),\n]:\n    assert solution(stdin) == expected_output, f\"Your code is incorrect. Please submit the expected output instead.\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n1 3\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n3 2\") == \"3 2\\n1 3\\n2 1\\n4 1\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n3 2\\n4 1\\n3 4\") == \"3 2\\n1 3\\n2 1\\n4 1\\n3 4\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n3 2\\n4 1\\n3 4\\n4 5\") == \"3 2\\n1 3\\n2 1\\n4 1\\n3 4\\n4 5\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1\\n'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == 1\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"infinite\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == 1"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2 1 10\n0 1 1 2 6\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n2 1 10\n0 1 1 2 5\n\"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n2 1 10\n0 1 1 2 6\n1 1 2 3 4 5\n\"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n2 1 10\n0 1 1 2 6\n1 1 2 3 4 5\n2 3 4 5 6 7\n\"\"\"\n) == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"2 100000 100000\") == \"impossible\\n\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n\") == \"impossible\\n\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n5 5 5\") == \"impossible\\n\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n0 1 1 2 6\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"3 1 20\\n0 1 3 2 4\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(stdin=\"1 1 1\\n0 1 1 2 6\") == \"1\\n\"\nassert solution(stdin=\"1 1 1\\n0 1 1 2 0\") == \"impossible\\n\"\nassert solution(stdin=\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(stdin=\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(stdin=\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(stdin=\"2 1 10\\n0 1 1 2 6\") == \"3\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"2 20\\n100 2\\n1 100\") == \"2\\n1 2\"\nassert solution(\"2 100\\n99 2\\n1 99\") == \"2\\n1 2\"\nassert solution(\"2 20\\n100 1\\n1 100\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '''2\n1 2'''"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nprint(solution())"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', 'Your code is incorrect. Please fix it and re-run the test.'\n\nfrom math import log\nfrom typing import List"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5\\n', \"Test 1\"\n\nassert solution('H\\nT\\n1.0') == '1.0\\n', \"Test 2\"\n\nassert solution('H\\nT\\n0.0') == '0.0\\n', \"Test 3\"\n\nassert solution('T\\nH\\n0.5') == '0.5\\n', \"Test 4\"\n\nassert solution('T\\nH\\n1.0') == '1.0\\n', \"Test 5\"\n\nassert solution('T\\nH\\n0.0') == '0.0\\n', \"Test 6\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 7\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 8\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 9\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 10\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 11\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 12\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 13\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 14\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 15\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 16\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 17\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 18\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 19\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 20\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 21\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 22\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 23\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 24\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 25\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 26\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 27\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 28\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 29\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 30\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 31\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 32\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n', \"Test 33\"\n\nassert solution('H\\nH\\n0.5') == '0.5\\n', \"Test 34\"\n\nassert solution('H\\nH\\n1.0') == '1.0\\n', \"Test 35\"\n\nassert solution('H\\nH\\n0.0') == '0.0\\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.1') == '0.75'\nassert solution('H\\nT\\n0.8') == '0.5'\nassert solution('H\\nT\\n0.99') == '1'\nassert solution('H\\nT\\n0.01') == '0.0'\n\nprint(solution('H\\nT\\n0.5'))\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H') == 0.5, \"The correct answer is 0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nassert solution(\"HT\\nHT\\n0.5\") == \"1.0\"\nassert solution(\"HH\\nTT\\n0.5\") == \"0.0\"\nassert solution(\"HH\\nTH\\n0.5\") == \"1.0\"\n\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"The probability that Gon wins is not correct.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(5) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(6) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(7) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(8) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(9) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(10) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(11) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(12) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(13) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(14) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(15) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\nassert solution(6) == '8\\n1 2 3 4 5 6 7 8'\nassert solution(8) == '8\\n1 2 3 4 5 6 7 8'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"8\"\nassert solution(4) == \"2 4 6 8\"\nassert solution(5) == \"1 3 5 7 9 11 13 15\"\nassert solution(6) == \"1 3 5 7 9 11 13 15\"\nassert solution(7) == \"1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"8\"\nassert solution(4) == \"1 3 5 7\"\nassert solution(6) == \"1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\") == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of queries: \")) == 3\nassert solution(input(\"Enter the first element of the sequence: \")) == 3\nassert solution(input(\"Enter the first element of the sequence: \")) == 1\nassert solution(input(\"Enter the first element of the sequence: \")) == 0\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, \"Test failed\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"1\\n2 2\\n3 4\\n5 6\\n7 8\\n\") == \"2\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"2\\n2 2\\n2 5\\n1 5\\n\") == \"2\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"3\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"2\\n2 2\\n2 5\\n1 5\\n\") == \"2\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n\nassert solution(\"3\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, \"1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == [\"3\", \"1\", \"0\"]\nassert solution(4, \"1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == [\"3\", \"1\", \"0\"]\nassert solution(4, \"1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == [\"3\", \"1\", \"0\"]"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4, 1, 3, 5, 7]) == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution([3, 2, 2, 5, 1, 5]) == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution([2, 2, 5, 1, 5]) == \"0\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) =="
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0', \"Please add the given input to the solution function\"\n\nfrom typing import List"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 -2 0\\n\") == \"0\\n\", \"1\"\nassert solution(\"2 1\\n1 1 -2 0\\n2 1 -1 0\\n\") == \"0\\n2\\n\", \"2\"\nassert solution(\"3 4\\n1 1 -2 0\\n2 1 -1 0\\n3 4 -1 0\\n4 4 -2 0\\n\") == \"0\\n1\\n\", \"3\"\nassert solution(\"5 6\\n1 1 -2 0\\n2 1 -1 0\\n3 4 -1 0\\n4 4 -2 0\\n5 6 -1 0\\n6 6 -2 0\\n\") == \"0\\n2\\n\", \"4\"\nassert solution(\"7 8\\n1 1 -2 0\\n2 1 -1 0\\n3 4 -1 0\\n4 4 -2 0\\n5 6 -1 0\\n6 6 -2 0\\n7 8 -1 0\\n8 8 -2 0\\n\") == \"0\\n3\\n\", \"5\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nassert solution(\"2 1\\n2 3 -1 2\") == \"4\"\nassert solution(\"2 1\\n1 1 10000 10000\") == \"5\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\\n\"\n\nassert solution(\"3 1\\n1 1 -1 -1\\n1 0 1 -1\\n1 0 1 1\\n1 0 1 1\") == \"0\\n1\\n\\n2\\n\\n\"\n\nassert solution(\"2 2\\n1 1 -1 -1\\n1 1 -2 -2\\n1 1 -2 -2\\n1 1 -2 -2\") == \"0\\n\\n1\\n\\n2\\n\\n\"\n\nassert solution(\"2 2\\n1 1 -1 -1\\n1 1 -2 -2\\n1 1 -2 -2\\n1 1 -2 -2\") == \"0\\n\\n1\\n\\n2\\n\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\\n\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 1\\n1 1 -2 0\") == \"0\\n\"\nassert solution(stdin=\"3 3\\n0 1 1 0\") == \"6\\n\"\nassert solution(stdin=\"5 3\\n1 1 3 1\") == \"31\\n\"\nassert solution(stdin=\"3 5\\n0 0 0 0 0\") == \"2\\n\"\nassert solution(stdin=\"2 3\\n-1 1 1\") == \"1\\n\"\nassert solution(stdin=\"3 4\\n0 0 0 0\") == \"3\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\", \"Incorrect output for the given input.\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n''') == '''\n    194\n    2019 10 25\n    2020 10 30\n'''"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\"\nassert solution(\"3\\n1\\n2019\\n10\\n19\") == \"241\"\nassert solution(\"1\\n1\\n2019\\n10\\n19\") == \"241\"\nassert solution(\"4\\n3\\n2020\\n10\\n02\") == \"1005\"\nassert solution(\"5\\n4\\n2019\\n10\\n19\") == \"418\"\nassert solution(\"10\\n1\\n2021\\n10\\n01\") == \"198\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\ninput_data = \"\"\"\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n\"\"\"\n\nexpected = \"\"\"\n194\n2019 10 25\n2020 10 30\n\"\"\"\n\nsolution = \"\"\"\n194\n2019 10 25\n2020 10 30\n\"\"\"\n\ninput_data = input_data.split(\"\\n\")\nexpected = expected.split(\"\\n\")\n\nassert len(input_data) == len(expected), f\"Input and expected data have different lengths: {len(input_data)} vs. {len(expected)}\"\n\nfor i, (input_line, expected_line) in enumerate(zip(input_data, expected)):\n    assert int(expected_line.split()[0]) <= int(input_line.split()[0]), f\"Invalid year: {expected_line.split()[0]} vs. {input_line.split()[0]}\"\n    assert int(expected_line.split()[2]) >= 1, f\"Invalid day: {expected_line.split()[2]} vs. {input_line.split()[2]}\"\n\nprint(solution)"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == '5 12.5\\nnegative-infinity -5'\nassert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == [\"negative-infinity\", \"0\", \"5 12.5\", \"negative-infinity\", \"-5\", \"def solution(stdin: str) -> str: pass\"]"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\\n5 12.5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5) + \" \" + str(10) + \" \" + str(10) + \" \" + str(10) + \" \" + str(10) + \" \" + str(0)) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(str(5) + \" \" + str(10) + \" \" + str(10) + \" \" + str(5) + \" \" + str(10) + \" \" + str(0)) == \"5 12.5\\nnegative-infinity -5\"\nassert solution(str(6) + \" \" + str(10) + \" \" + str(10) + \" \" + str(10) + \" \" + str(10) + \" \" + str(0)) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity 0\\n6.5 12.5\\nnegative-infinity -5\"\nassert solution(\"10 10 10 10 10 0\") == \"negative-infinity 0\\n10.5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"negative-infinity 0\\n5 12.5\"\nassert solution() == \"negative-infinity -5\\n5 12.5\"\n\nfrom typing import List"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 10 10 10 10 0\n    5 10 10 5 10 0\n    6 10 10 10 10 0\n''') == '''\nnegative-infinity 0\n5 12.5\nnegative-infinity -5\n'''"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n\nimport math\nfrom typing import List"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2\\n\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\\n1 2') == 'IMPOSSIBLE\\n\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\\n1 2\\n1 3\\n1 4') == 'IMPOSSIBLE\\n\\n'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '2\\n\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n80 50000\\n80 40000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 2, \"Solution is incorrect. Expected 2, got {}\".format(solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000'))"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Solution: {solution(input_data)}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == 2\n\nfrom typing import List"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '345 2\\nrotS 2 1\\nnegR 2', \"Your solution is incorrect. Please check the output.\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\nassert solution('3 4\\n1 2 3\\n4 5 6') == '0 1\\nrotS 1 3'\nassert solution('3 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '300 0\\nrotR 2 1\\nnegS 1'\nassert solution('3 4\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n-1 0 -2 -3') == '2700 1\\nnegR 3\\nrotS 3 4'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2\\nrotS 2 1\\nnegR 2\\n'\nassert solution('4 5\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n') == '50000 1\\nrotR 1 2\\nnegS 1\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n5 6 -7 8\") == \"720 2\\nrotR 2 1\\nnegS 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"345 2\\nrotS 2 1\\nnegR 2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 4\\n-1 0 -2 -3\\n2 3 4 5\\n0 6 7 8\\n9 10 11 12\") == \"4215 1\\nrotS 1 4\\nnegS 4\"\nassert solution(\"7 4\\n1 0 1 2\\n0 1 2 3\\n3 2 3 4\\n4 3 4 5\") == \"2130 1\\nrotR 1 5\\nnegR 5\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5\\n'\nassert solution('10 5\\n3 1 1\\n10 2 3') == '0.5\\n'\nassert solution('5 1\\n5 1\\n5 1') == '5.0\\n'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please check the example.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 2\\n3 1 1\\n\"\n) == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\"\nassert solution(\"20 20\\n1 2 3 4 5\") == \"0.5\"\nassert solution(\"2 10\\n1 2 3 4 5\") == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'impossible'\nprint(solution())"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 4 5\\n2 6 7' # Correct Answer\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\\n\", \"Test case 1\"\n\nassert solution(input()) == \"1 4 5\\n2 6 7\\n\", \"Test case 2\"\n\nassert solution(input()) == \"impossible\\n\", \"Test case 3\"\n\nassert solution(input()) == \"1 4 5\\n2 6 7\\n\", \"Test case 4\"\n\nassert solution(input()) == \"1 4 5\\n2 6 7\\n\", \"Test case 5\"\n\nassert solution(input()) == \"impossible\\n\", \"Test case 6\"\n\nassert solution(input()) == \"impossible\\n\", \"Test case 7\"\n\nassert solution(input()) == \"impossible\\n\", \"Test case 8\"\n\nassert solution(input()) == \"1 4 5\\n2 6 7\\n\", \"Test case 9\"\n\nassert solution(input()) == \"2 6 7\\n1 4 5\\n\", \"Test case 10\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 4 5\\n2 6 7', \"Incorrect output\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == ['1 4 5', '2 6 7']"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 13500, \"The output is incorrect\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n12000\n''') == '24000'\nassert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n12000\n11000\n''') == '13500'\nassert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n12000\n11000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n12000\n120"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: '{output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '13500\\n'\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 13500\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 13500, \"Your solution is incorrect.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"13500\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo a pen- ny, One a pen- ny, Hot cross buns! =\\n4 4 4 4 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n'''\n\nassert solution('''\n3 3\nHere's a line of text. It's a good line.\nAnd here's another line, too. It's a good line.\nAnd here's yet another line, too.\n''') == '''Here's_a_line_of_text.It's_a_good_line.\nAnd_here's_another_line,_too.It's_a_good_line.\nAnd_here's_yet_another_line,_too,\n'''\n\nassert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input {stdin}\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 6\\nLine1 Line2 Line3 Line4 Line5\\n1 1 2 3 4 5\\n2 3 4 5 6 7\\n3 5 7 9 11 13\\n4 6 8 10 12 14\\n\") == \"Line1_Line2_Line3_Line4_Line5_Line1_Line2_Line3_Line4_Line5_Line1_Line2_Line3_Line4_Line5_Line1_Line2_Line3_Line4_Line5_Line1_Line2_Line3_Line4_Line5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\nOne a pen- ny, Two a pen- ny\\"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"1 10\\n_ _ _ _ _ _ _ _ _ _ _ _\\n
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,Hot_cross_buns!_=________One_"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n2 2\n
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is wrong. \\nExpected {sample_output}, but got {solution(sample_input)}.\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 33\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"The output is {solution(input_data)}, but the expected output is {expected_output}\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('4 3 2\\n2 2 3\\n3 3 3\\n4 4 3\\n') == '90'\nassert solution('3 4 3\\n2 2 2\\n3 3 2\\n4 3 2\\n5 3 2\\n6 3 2\\n') == '61'\nassert solution('3 4 4\\n2 2 3\\n3 3 2\\n4 3 3\\n5 3 2\\n6 3 3\\n') == '32'\nassert solution('5 4 4\\n2 2 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n') == '32'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    20 15 10\n    7 7\n    ''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3\n    20 15 10\n    7 7\n    30 0\n\"\"\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\" # correct output"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 405, \"Test case failed\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"405\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405, \"Test Failed\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 405, \"The given test case is incorrect.\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\\n\") == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=r\"\"\"\n4\n1 2 4 7\n\"\"\") == \"\"\"28 4 21 14.0\"\"\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'\nassert solution('5\\n1 2 3 4 5') == '28 4 21 14.0\\n'\nassert solution('6\\n1 2 3 4 5 6') == '28 4 21 14.0\\n'\nassert solution('7\\n1 2 3 4 5 6 7') == '28 4 21 14.0\\n'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '28 4 21 14.0\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '28 4 21 14.0\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '28 4 21 14.0\\n'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10 11') == '28 4 21 14.0\\n'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '28 4 21 14.0\\n'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '28 4 21 14.0\\n'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '28 4 21 14.0\\n'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '28 4 21 14.0\\n'\nassert solution('16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '28 4 21 14.0\\n'\nassert solution('17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '28 4 21 14.0\\n'\nassert solution('18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '28 4 21 14.0\\n'\nassert solution('19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '28 4 21 14.0\\n'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '28 4 21 14.0\\n'\nassert solution('21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == '28 4 21 14.0\\n'\nassert solution('22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 3 5 7\") == \"25 7 19 18.0\"\nassert solution(\"4\\n1 4 6 8\") == \"26 7 21 18.0\"\nassert solution(\"4\\n1 5 7 9\") == \"25 7 21 18.0\"\nassert solution(\"4\\n1 2 3 4\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 3 5\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 4 6\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 5 7\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 3 6 7\") == \"28 7 19 18.0\"\nassert solution(\"4\\n1 4 7 8\") == \"29 7 21 18.0\"\nassert solution(\"4\\n1 5 8 9\") == \"29 7 21 18.0\"\nassert solution(\"4\\n1 2 3 4 5 6 7 8 9\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 3 5 6 7 8 9 10\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 4 6 7 8 9 10 11\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 2 5 7 8 9 10 11 12\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 3 6 7 8 9 10 11 12\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 4 7 8 9 10 11 12 13\") == \"30 7 21 18.0\"\nassert solution(\"4\\n1 5 8 9 10 11 12 13 14\") == \"30 7 21 18.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\nprint('All tests passed!')"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('4 3\\n5 2 3\\n2 3 4 1') == 'no'\nassert solution('4 3\\n5 2 3\\n2 3 4 5') == 'no'\nassert solution('4 3\\n5 2 3\\n2 3 4 5\\n2 3 4 1') == 'no'\nassert solution('4 3\\n5 2 3\\n2 3 4 5\\n2 3 4 1\\n2 3 4 5') == 'no'\nassert solution('4 3\\n5 2 3\\n2 3 4 5\\n2 3 4 1\\n2 3 4 5\\n2 3 4 1') == 'no'\nassert solution('4 3\\n5 2 3\\n2 3 4 5\\n2 3 4 1\\n2 3 4 5\\n2 3 4 1\\n2 3 4 5') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"no\"\nassert solution(\"3 3\\n1 2 3\\n2"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"yes\"\nassert solution() == \"yes\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"2 3\\n4 1 2 3\\n5 6 7 8\\n9 10 11 12\\n\") == \"no\"\nassert solution(\"1 2\\n3 4 5 6\\n7 8 9 10\\n11 12 13 14\\n\") == \"yes\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n\"\nassert solution(\"1 2\\n3 4 5 6\\n7 8 9 10\\n11 12 13 14\\n\") == \"yes\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"2 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'yes'\nassert solution(input()) == 'no'\nassert solution(input()) == 'yes'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 5\") == \"no\"\nassert solution(\"2 3\\n4 1\\n5 6\\n7 8\\n9 10\") == \"yes\\n4 1 5 9 \\n8 2 7 3 \\n3 6 9 7 \\n7 5 3 2\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed. The solution is incorrect.\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000\\n'\nassert solution('4\\n1 2 -3 4') == '4.000000000\\n'\nassert solution('1\\n10') == '0.000000000\\n'\nassert solution('5\\n2 3 -4 -5 6') == '0.000000000\\n'\nassert solution('2\\n1 2') == '0.000000000\\n'\nassert solution('3\\n3 3 3') == '0.000000000\\n'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000\\n'\nassert solution('10\\n10 10 -10 -4 10') == '10.000000000\\n'\nassert solution('5\\n-10 -10 -4 10') == '0.000000000\\n'\nassert solution('5\\n10 10 -10 -4 10\\n') == '0.000000000\\n'\nassert solution('5\\n10 -10 -4 10\\n') == '0.000000000\\n'\nassert solution('5\\n10 10 -10 -4\\n') == '0.000000000\\n'\nassert solution('5\\n10 -10 -4\\n') == '0.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"2\\n1 2 3 4\") == \"5.000000000\"\nassert solution(\"10\\n
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r\"4\\n30\\n3\\n2\\n45\\n\") == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('2\\n100\\n5\\n3\\n20') == '7'\nassert solution('3\\n100\\n5\\n3\\n20') == '17'\nassert solution('1\\n100\\n5\\n3\\n20') == '1'\nassert solution('4\\n100\\n5\\n3\\n20') == '1'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"16\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"4\n30\n3\n2\n45\"\"\"\n\nsample_output = \"\"\"1\"\"\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 30, 3, 2, 45) == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Sample Input: \\n\" + sample_input + \"\\nSample Output: \\n\" + sample_output"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    \"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Incorrect output: {solution(stdin)}\\nExpected output: {output}\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())[:-1]) == str(4) + '\\n'\nassert solution(str(input())[:-1]) == str(4) + '\\n'\nassert solution(str(input())[:-1]) == str(4) + '\\n'"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output\nfor _ in range(3):\n    input_data = input()\n    expected_output = output_data[0]\n    solution(input_data) == expected_output\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n') == 4\nassert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n2\\n1 1\\n2 2\\n') == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 4\nassert solution(stdin=\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n-1 -1\\n5 5\\n\") == 3\nassert solution(stdin=\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n-1 -1\\n5 5\\n4\\n-1 -1\\n-1 5\\n\") == 4\nassert solution(stdin=\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n-1 -1\\n5 5\\n4\\n-1 -1\\n-1 5\\n5\\n\") == 5"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"  # Correct output"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\nassert solution('2 0\\n0 1\\n0 2\\n0 3\\n') == '1\\n3 2\\n3 1\\n'\nassert solution('5 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n4 0\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1\\n'\nassert solution('3 0\\n0 1\\n0 2\\n0 3') == '1\\n2 3\\n3 2\\n'\nassert solution('4 3\\n1 2\\n2 3\\n3 0') == '0\\n1 2\\n2 3\\n3 0'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\\n\"\nassert solution(\"0 0 -1\\n0 1.5 -1\\n\") == \"crash\\n\"\nassert solution
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"0.00000000000001 0 0\\n0.00000000000001 1.5 0\") == \"ok\"\nassert solution(\"0.00000000000001 0 0.00000000000001\\n0.00000000000001 1.5 0.00000000000001\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"ok\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing...\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"ok\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 2, 3, 4, 5) == \"R 0\\nG 2\"\nassert solution(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15) == \"R 0\\nG 2\"\nassert solution(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect.\"\n\nsample_input = \"\"\"\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n\"\"\"\n\nsample_output = \"\"\"\n2\nR 0\nG 2\n\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\", \"Test case 1 failed\"\nassert solution(\"10 10\\n1 0\\n2 0\\n3 4\\n4 3\\n5 6\\n6 5\\n7 8\\n8 7\\n9 10\\n\") == \"10\\nR 5\\nG 8\\n\", \"Test case 2 failed\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n3 8\\n4 9\\n4 10\\n\") == \"6\\nR 1\\nG 4\\n\", \"Test case 3 failed\"\nassert solution(\"4 2\\n0 2\\n0 3\\n1 3\\n1 4\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\", \"Test case 4 failed\"\nassert solution(\"5 4\\n1 1\\n1 3\\n2 2\\n3 4\\n4 3\\n\") == \"4\\nR 1\\nG 3\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == str(output())"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5 6\\n0 1\\n2 0\\n1 4\\n4 1\\n1 0\\n2 4\\n3 3\\n2 1\\n4 2\\n0 3\\n3 1\\n3 0\\n3 4\\n4 0\\n5 3\\n4 1\\n3 4\\n2 2\\n0 4\\n4 3\\n1 3\\n3 2\\n4 2\\n2 3\\n2 1\\n2 0\\n4 4\\n1 4\\n5 2\\n3 0\\n1 1\\n1 3\\n5 0\\n5 1\\n3 0\\n5 4\\n1 3\\n4 3\\n2 4\\n1 4\\n4 0\\n0 1\\n1 2\\n1 0\\n5 3\\n4 3\\n4 2\\n3 0\\n0 4\\n5 0\\n0 2\\n2 2\\n2 3\\n2 1\\n0 3\\n3 2\\n2 3\\n3 4\\n2 3\\n1 3\\n4 1\\n0 1\\n3 0\\n3 4\\n1 4\\n2 3\\n4 0\\n2 4\\n3 3\\n4 0\\n3 1\\n4 4\\n2 0\\n4 2\\n4 3\\n0 2\\n0 3\\n0 1\\n0 0\\n4 3\\n0 2\\n1 3\\n0 4\\n4 1\\n3 1\\n3 2\\n4 3\\n0 3\\n2 1\\n2 0\\n2 4\\n3 0\\n1 4\\n3 3\\n2 0\\n2 2\\n2 3\\n4 4\\n3 0\\n2 2\\n2 4\\n1 2\\n3 3\\n3 2\\n2 1\\n3 3\\n2 4\\n3 1\\n2 1\\n0 3\\n1 1\\n2 4\\n0 4\\n2 3\\n2 0\\n0 0\\n0 1\\n2 2\\n4 2\\n1 1\\n2 1\\n3 1\\n2 4\\n2 2\\n2 3\\n3 2\\n3 4\\n2 0\\n3 3\\n4 0\\n3 1\\n3 0\\n0 3\\n2 3\\n2 2\\n2 0\\n1 3\\n3 3\\n2 3\\n2 4\\n2 3\\n2 2\\n3 2\\n2 1\\n1 1\\n4 4\\n4 3\\n3 0\\n1 4\\n2 4\\n4 4\\n4 3\\n4 0\\n4 2\\n3 1\\n2 4\\n1 4\\n0 2\\n4 1\\n3 4\\n3 2\\n2 3\\n0 3\\n1 2\\n2 2\\n4 4\\n3 1\\n2 4\\n1 2\\n1 3\\n0 2\\n0 4\\n2 1\\n4 2\\n2 3\\n2 4\\n2 1\\n0 1\\n0 3\\n4 0\\n0 2\\n2 1\\n2 3\\n2 4\\n3 1\\n2 3\\n2 1\\n2 0\\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('10 10 10 10\\n') == '0'\nassert solution('10 10 10 10\\n1 A B C\\n2 D E F\\n3 A E G\\n4 A C E\\n5 B D F\\n6 G H I\\n7 J K L\\n8 M N O') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 G H I\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D E\") == \"1\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A D F\") == \"3\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Incorrect output: {solution(sample_input)}!= {expected_output}\"\n\nsample_input = \"\"\"\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\"\n\nexpected_output = \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\" # correct output\nassert solution(input()) == \"4\\n\" # correct output\nassert solution(input()) == \"5\\n\" # correct output\nassert solution(input()) == \"5\\n\" # correct output"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    7 3 3 3\n     A B C\n    D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    10 1 1 2\n     A B C\n     D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    3 G A F\n    3 H J K\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    10 1 1 2\n     A B C\n    D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    3 G A F\n    3 H J K\n    4 I J L\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    10 1 1 2\n     A B C\n    D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    3 G A F\n    3 H J K\n    4 I J L\n    5 M N O\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3\nYYY\nNYY\nYNY''') == '''2\n1 2 3\n3 1 2'''\n\nassert solution('''10\nNNN\nYNN\nNNY\nNYN\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY''') == '''0'''\n\nassert solution('''10\nNNN\nYNN\nNNY\nNYN\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY''') == '''2\n1 2 3 4 5 6'''\n\nassert solution('''1\nNN\nNY\nNYY\nNYN\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n1 2 3\\n3 1 2\"\nassert solution() == \"0\\n\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nY\\nY\\nY\") == \"1\\n1 2 3 4\"\nassert solution(\"3\\nY\\nY\\nY\") == \"0\\n0 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nNYY\\nYNY\\nYYY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nNYY\\nYNY\\nNYY\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Solution does not match.\\nExpected: {output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\nassert solution('3 4\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n1 2\\n2 3\\n2 1\\n2 2') == '4\\n1\\n10'\nassert solution('3 5\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n1 2\\n2 3\\n2 1\\n2 2\\n3 4\\n3 1\\n3 2\\n4 3\\n4 1\\n4 2') == '4\\n0\\n5'\nassert solution('3 6\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n1 2\\n2 3\\n2 1\\n2 2\\n3 4\\n3 1\\n3 2\\n4 3\\n4 1\\n4 2\\n5 4\\n5 1\\n5 2') == '4\\n1\\n15'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Your solution is {solution(input())}, but it should be {expected}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    x..\n   ...\n   ...\n    3\n    1 3\n    1 1\n    3 2\n    \"\"\"\n) == \"4\\n0\\n5\"\n\nassert solution(\n    \"\"\"\n    3 3\n    x..\n   ...\n   ...\n    3\n    1 3\n    1 1\n    3 2\n    3 1\n    \"\"\"\n) == \"10\\n4\\n20\"\n\nassert solution(\n    \"\"\"\n    3 3\n    x..\n   ...\n   ...\n    3\n    1 3\n    1 1\n    3 2\n    3 1\n    3 2\n    3 3\n    \"\"\"\n) == \"100\\n30\\n60\"\n\nassert solution(\n    \"\"\"\n    3 3\n    x..\n   ...\n   ...\n    3\n    1 3\n    1 1\n    3 2\n    3 1\n    3 2\n    3 3\n    3 4\n    \"\"\"\n) == \"1000\\n15\\n30\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(), \"Test Failed\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\nassert solution(3, 4) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\nassert solution(3, 4, 5) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n3\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n4\\n3\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n3\\n3\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n2\\n2\\n4\\n4\\n2 2\") == \"3.923 3.100\\n1.118 2.037\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n4\\n3\\n3 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n3\\n3\\n3 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n4 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n4\\n2\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n3\\n3\\n3\\n3 3\") == \"3.923 3.100\\n1.118 2.037\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n3 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n3 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n3\\n4\\n2 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n3\\n3\\n4\\n4 4\") == \"3.923 3.100\\n1.118 2.037\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n3\\n3\\n3 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n3 3\") == \"4.114 -2.84"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == [4.114, -2.842, 6.297, -0.784]\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\"\n) == \"3\\n5\\n8\\n10\\n13\"\n\nassert solution(\n    \"\"\"\n1 1\n1\n1\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 4\n1 2 3 4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\"\"\"\n) == \"13\"\n\nassert solution(\n    \"\"\"\n2 1 10\n1 2 3 4 5 6 7 8 9 10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for solution({sample_input}).\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == f'{0}\\n', 'Please implement the solution for the given problem.'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0\\n'\n\nassert solution('''\n10 5\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 0\n2 1\n3 2\n4 3\n5 4\n6 5\n7 6\n8 7\n9 8\n10 9\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '1\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n\\n'\nassert solution('7 4\\n0 1\\n0 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '5\\n'\nassert solution('6 4\\n0 1\\n0 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '0\\n'\nassert solution('8 5\\n0 1\\n0 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '0\\n'\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5 \n    '''\n) == '0\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"6 3\\n\"\n\"0 1\\n\"\n\"1 2\\n\"\n\"2 3\\n\"\n\"2 4\\n\"\n\"1 5\\n\"\n\"1 2 5 \"\n) == \"0\"\n\nassert solution(\n\"6 3\\n\"\n\"0 1\\n\"\n\"1 2\\n\"\n\"2 3\\n\"\n\"2 4\\n\"\n\"1 5\\n\"\n\"1 2 5\"\n) == \"1\"\n\nassert solution(\n\"6 3\\n\"\n\"0 1\\n\"\n\"1 2\\n\"\n\"2 3\\n\"\n\"2 4\\n\"\n\"1 5\\n\"\n\"1 2 5\"\n) == \"2\"\n\nassert solution(\n\"6 3\\n\"\n\"0 1\\n\"\n\"1 2\\n\"\n\"2 3\\n\"\n\"2 4\\n\"\n\"1 5\\n\"\n\"1 2 5\"\n) == \"3\"\n\nassert solution(\n\"6 3\\n\"\n\"0 1\\n\"\n\"1 2\\n\"\n\"2 3\\n\"\n\"2 4\\n\"\n\"1 5\\n\"\n\"1 2 5\"\n) == \"5\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"1 2\\n3 4\\n\") == 2\nassert solution(\"1 2\\n3 4\\n1 3\\n\") == 3\nassert solution(\"3 4\\n\") == 1\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 1\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 2\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 3\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 4\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 5"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    \"\"\") == \"106\\n107\\n71\"\n\nassert solution(\"\"\"\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    \"\"\") == \"106\\n107\\n71\"\n\nassert solution(\"\"\"\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    \"\"\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    \"\"\"\n) == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 2\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 3\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 4\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 5\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 6\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 7\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 8\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 9\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 10\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nAA\") == 51, \"The solution is incorrect\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nAA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='2\\nA\\n') == '51\\n'\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\"\nassert solution(\"3\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"no ties\\n\", \"Your solution is incorrect!\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'no ties\\n', 'Expected \"no ties\", but got \"{}\"'.format(solution(stdin))"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"no ties\"\nprint(\"Correct\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\\n\", \"Test failed\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"no ties\\n\", \"Test failed\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"no ties\"\nassert solution(\"\") == \"no ties\"\nassert solution(\"1 2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\"\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n\") == \"no ties\"\nassert solution(\"4\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 29 45 56 68\\n\") == \"no ties\"\nassert solution(\"5\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 29 45 56 68\\n2 31 45 56 68\\n\") == \"no ties\"\nassert solution(\"6\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 29 45 56 68\\n2 31 45 56 68\\n3 31 45 56 68\\n\") == \"no ties\"\nassert solution(\"7\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 29 45 56 68\\n2 31 45 56 68\\n3 31 45 56 68\\n4 31 45 56 68\\n\") == \"no ties\"\nassert solution(\"8\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 29 45 56 68\\n2 31 45 56 68\\n3 31 45 56 68\\n4 31 45 56 68\\n5"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\n\nprint(\"The input and expected output are correct.\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\"\n\nassert solution(\n    \"\"\"\n    3\n    1 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\"\n\nassert solution(\n    \"\"\"\n    4\n    1 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\"\n\nassert solution(\n    \"\"\"\n    5\n    1 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"no ties\"\n\nassert solution(\n    \"\"\"\n    6\n    1 29 45 56 68\n    1 19 43 50 72\n    11 25 40 49 61\n    9 23 31 58 63\n    4 27 42 54 71\n    \"\"\"\n) == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, \"Incorrect output.\"\n\ninput_data = [3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]\noutput_data = \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'no ties'\nassert solution(input()) == '2 1'\nassert solution(input()) == '2 2'\nassert solution(input()) == '1 2'\nassert solution(input()) == '3 4'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"3\\n3 2 1\\n2 1 3\\n2 1 3\") == 0\nassert solution(\"3\\n3 2 1\\n1 2 3\\n2 1 3\\n1 2 3\\n2 1 3\") == 2\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0\nassert solution('4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12') == 4\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n3 2 1\n1 2 3\n1 2 3''') == 0\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 1''') == 2\n\nassert solution('''5\n1 2 3\n2 4 6\n3 5 7\n4 6 8\n5 7 9''') == 2\n\nassert solution('''6\n1 2 3 4\n2 4 6 8\n3 5 7 9\n4 6 8 10\n5 7 9 11\n6 8 10 12''') == 1"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3\\n3 2 1\\n1 2 2\\n1 2 3\") == \"1\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 2\") == \"2\"\nassert solution(\"4\\n1 2 3\\n2 3 4\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5\\n1 2 3\\n2 3 4\\n3 4 1\\n4 1 2\\n5 2 3\\n6 3 4\\n7 4 1\\n8 1 2\\n9 2 3\\n10 3 4\\n11 4 1\\n12 1 2\\n13 2 3\\n14 3 4\\n15 4 1\\n16 1 2\\n17 2 3\\n18 3 4\\n19 4 1\\n20 1 2\") == \"4\"\nassert solution(\"6\\n1 2 3\\n2 3 4\\n3 4 1\\n4 1 2\\n5 2 3\\n6 3 4\\n7 4 1\\n8 1 2\\n9 2 3\\n10 3 4\\n11 4 1\\n12 1 2\\n13 2 3\\n14 3 4\\n15 4 1\\n16 1 2\\n17 2 3\\n18 3 4\\n19 4 1\\n20 1 2\\n21 2 3\\n22 3 4\\n23 4 1\\n24 1 2\\n25 2 3\\n26 3 4\\n27 4 1\\n28 1 2\\n29 2 3\\n30 3 4\\n31 4 1\\n32 1 2\\n33 2 3\\n34 3 4\\n35 4 1\\n36 1 2\\n37 2 3\\n38 3 4\\n39 4 1\\n40 1 2\\n41 2 3\\n42 3 4\\n43 4 1\\n44 1 2\\n45 2 3\\n46 3 4\\n47 4 1\\n48 1 2\\n49 2 3\\n50 3 4\\n51 4 1\\n52 1 2\\n53 2 3\\n54 3 4\\n55 4 1\\n56 1 2\\n57 2 3\\n58 3 4\\n59 4 1\\n60 1 2\\n61 2 3\\n62 3 4\\n63 4 1\\n64 1 2\\n65 2 3\\n66 3 4\\n67 4 1\\n68 1 2\\n69 2 3\\n70 3 4\\n71 4 1\\n72 1 2\\n73 2 3\\n74 3 4\\n75 4 1\\n76 1 2\\n77 2 3\\n78 3 4\\n79 4 1\\n80 1 2\\n81 2 3\\n82 3 4\\n83 4 1\\n84 1 2\\n85 2 3\\n86 3 4\\n87 4 1\\n88 1 2\\n89 2 3\\n90 3 4\\n91 4 1\\n92 1 2\\n9"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0\nassert solution('4\\n1 2 3\\n4 5 6\\n4 5 6') == 1\nassert solution('5\\n1 2 3\\n2 3 4\\n2 3 4\\n3 4 5') == 2"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3') == '10'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0, \"Test 1\"\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3') == 1, \"Test 2\"\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3') == 1, \"Test 3\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 0\nassert solution(\"3\\n2 1 3\\n3 2 4\\n4 3 5\") == 0\nassert solution(\"3\\n1 1 1\\n1 2 1\\n1 3 1\") == 0\nassert solution(\"4\\n1 1 1 1\\n1 1 2 1\\n1 1 3 1\\n1 1 4 1\") == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0 # Correct output"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'Here is the probability of an ideal car making it through all the traffic lights without being forced to stop: 0.4\\nHere is the probability that an ideal car makes it all the way without stopping: 0\\nHere is the probability of an ideal car making it through the first red light: 0.2\\nHere is the probability that an ideal car makes it through all the traffic lights: 0.171428571429\\nHere is the probability that an ideal car makes it through all the traffic lights without being forced to stop: 0.228571428571'\nprint(solution)\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\") == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution did not match expected output. Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n7 8\\n2 3\\n9 10\\n11 12\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n7 8\\n2 3\\n9 10\\n11 12\") == \"impossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n7 8\\n2 3\\n9 10\\n11 12\") == \"impossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n7 8\\n2 3\\n9 10\\n11 12\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n0 0\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 -6 = 5\\nimpossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n1 1\\n\") == \"impossible\"\nassert solution(\"1 1\\n\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"4\\n1 2\\n3 4\\n4 5\\n-1 -6\\n\") == \"impossible\"\nassert solution(\"4\\n1 2\\n3 4\\n4 5\\n-2 6\\n\") == \"impossible\"\nassert solution(\"4\\n1 2\\n3 4\\n4 5\\n0 6\\n\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n7 8\") == \"impossible\"\nassert solution(\"1 5\\n3 3\\n4 5\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"4\\n1\\n4\\n6\\n0\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for solution: {solution(input())}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution is {output}, but the input is {stdin}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == [0]\nassert solution(2) == [3]\nassert solution(3) == [5]\nassert solution(4) == [6]\nassert solution(5) == [0]"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 4\nassert solution(10) == 120\nassert solution(1000) == 202110\nassert solution(50000) == 205028370\nassert solution(1000000) == 3147230432181"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"1 1 1 1\\n\") == \"2\\n\"\nassert solution(\"1 1 1 2\\n\") == \"3\\n\"\nassert solution(\"1 1 2 1\\n\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == \"4\\n\", solution(read_input())"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\" # expected output"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4 # correct output\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution for the given input should be: {output}, but the actual output is: {solution(input())}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4\nassert solution(\"5\\n1 2 3 4 5\") == 6\nassert solution(\"7\\n1 2 3 4 5 6 7\") == 11\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == 30\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == 80\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == 384"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'You have successfully solved the problem.\\n'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 31 2\n20 60\n50 90\n\"\"\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3\\n'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 3\", \"Please implement the `solution()` function.\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('5 3 2') == '6'\nassert solution('10 20 30') == '10000000000000000000000000'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 2 1\\n\") == \"3\\n\"\nassert solution(stdin=\"3 2 3\\n\") == \"6\\n\"\nassert solution(stdin=\"5 3 5\\n\") == \"1\\n\"\nassert solution(stdin=\"6 3 6\\n\") == \"0\\n\"\nassert solution(stdin=\"8 4 8\\n\") == \"9\\n\"\nassert solution(stdin=\"9 4 9\\n\") == \"7\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Testcase {i+1} failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"4 3 2\") == \"2\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"4 1 1\") == \"1\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2 2 1) == 3\nassert solution(3 3 1) == 6\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(\"2 2 1\")) == \"3\"\nassert solution(solution(\"4 3 2\")) == \"6\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 3 2\") == \"6\"\nassert solution(\"4 4 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(2) +'' + str(2) +'' + str(1)) == '3'\nassert solution(str(3) +'' + str(2) +'' + str(1)) == '3'\nassert solution(str(2) +'' + str(3) +'' + str(1)) == '3'\n\nK = int(input())\nprint(int(K % (10**9 + 7)))"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output', \"Test Failed\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1\\n'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3 1\", \"Test Case 1 Failed\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1341 2412 1200 3112 2391') == '3 1', \"Expected 3 1, but got '{}'\".format(solution('1341 2412 1200 3112 2391'))"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1\\n'\nassert solution('5\\n1234 5678 9101 7890 2345') == '0 2\\n'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3 1\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6, \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6\nprint('All tests passed.')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6, \"Invalid output\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5\") == 10\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5\\n6\") == 10\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 10 20\") == \"120\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 10\\n4 4 10\") == 20\nassert solution(\"10 15\\n5 10\\n1 2 10\\n2 2 10\\n3 3 1"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    3 2 4\n''') == '6'\nprint('All tests passed.')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6'\nassert solution('10 15\\n2 10\\n1 2 3\\n4 5 6\\n7 8 9\\n') == '25'\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1\\n1') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\\n\") == \"0 1 -1\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('2\\n1 a\\n2 b') == '1 2 -1'\nassert solution('2\\n2 ab c\\n2 bc') == '2 1 -1'\nassert solution('2\\n2 ab\\n1 bc') == '0 1 -1'\nassert solution('2\\n2 ab\\n1 a') == '0 -1 1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"3\\n1 d\\n1 e\\n1 f\") == \"-1 -1 -1\"\nassert solution(\"2\\n1 a\\n2 b\\n2 c\\n2 d\\n2 e\\n2 f\\n2 g\\n2 h\\n2 i\\n2 j\\n2 k\\n2 l\\n2 m\\n2 n\\n2 o\\n2 p\\n2 q\\n2 r\\n2 s\\n2 t\\n2 u\\n2 v\\n2 w\\n2 x\\n2 y\\n2 z\") == \"0 1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"0 1 \n-1 0\"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"3\\n3 a c d\\n2 b c\") == \"0 2 1\"\nassert solution(\"4\\n4 a b c d\\n2 a b d\") == \"0 2 1 3\"\nassert solution(\"5\\n5 a b c d e f g h i j k l m n o p q r s t u v w x y z\\n1 a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"0 -1 -1 -1 -1 -1 -1 -1 -1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab b\\n1 a\") == \"-1 0\"\nassert solution(\"2\\n2 ab b\\n1 c\") == \"0 1 0\"\nassert solution(\"1\\n1 a\\n1 a\") == \"0\"\nassert solution(\"3\\n1 ab abc def\\n1 a\\n1 b\\n1 c\\n1 d\") == \"0 -1 0 0 0 -1\"\nassert solution(\"3\\n1 ab abc def\\n1 a\\n1 b\\n1 c\\n1 d\") == \"0 1 0 -1 -1 0\"\nassert solution(\"3\\n1 ab abc def\\n1 a\\n1 b\\n1 c\\n1 d\") == \"0 -1 0 0 0 -1\"\nassert solution(\"10000000\\nabcdefghijklmnopqrstuvwxyz\") == \"0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\n5 ab ab\\n2 bc ac\\n1 cd ab\\n3 ef ab\\n1 fg ab\\n2 hg ab\\n3 ih ab\\n1 jk ab\\n2 kl ab\\n3 lm ab\\n4 mn ab\\n2 no ab\\n1 op ab\\n2 pq ab\\n3 qr ab\\n4 rs ab\\n1 st ab\\n2 tp ab\\n3 uq ab\\n4 vr ab\\n2 ws ab\\n1 xy ab\\n3 zw ab\\nSample Input:\\n3\\n5 ab ab\\n2 bc ac\\n1 cd ab\\n3 ef ab\\n1 fg ab\\n2 hg ab\\n3 ih ab\\n1 jk ab\\n2 kl ab\\n3 lm ab\\n4 mn ab\\n2 no ab\\n1 op ab\\n2 pq ab\\n3 qr ab\\n4 rs ab\\n1 st ab\\n2 tp ab\\n3 uq ab\\n4 vr ab\\n2 ws ab\\n1 xy ab\\n3 zw ab\\nSample Output:\\n0 1\\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n3\"\nassert solution(stdin) == \"3\\n1\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for input '{stdin}'. Expected output '{expected_output}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '1\\n3\\n'\nassert solution(open('input_2.txt').read()) == '1\\n3\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3\\n'\nassert solution('1\\n1\\n1') == '1\\n'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n3\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n3\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n3\\n\\n3\\n8\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n3\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\n12\\n\", \"Test case 1 failed\"\nassert solution() == \"12\\n7\\n\", \"Test case 2 failed\"\nassert solution() == \"19\\n12\\n\", \"Test case 3 failed\"\nassert solution() == \"27\\n15\\n\", \"Test case 4 failed\"\nassert solution() == \"29\\n18\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"7\", \"Solution not provided\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == 7, \"The expected output is 7, but got {}\".format(solution('3\\n0 5 2\\n5 0 4\\n2 4 0'))"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '7\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 7, \"Incorrect solution\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7, \"Incorrect output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 7, \"The solution is incorrect\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'1099511627776') == b'8'\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1099511627776') == '8\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1099511627776\") == 8, \"Solution is not correct\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"1000000000000000000000000000000000000000000000000000000000000000\") == \"10000000000000000000000000000000000000000000000000000000000000000\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000\") == \"10000000000000000000000000000000000000000000000000000000000000000000\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1099511627776') == '8', \"The given input is not correct\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '8', \"Please implement the solution function\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == '2', \"The solution is incorrect.\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"The output is incorrect\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2', \"Test Case 1\"\nassert solution() == '4', \"Test Case 2\"\nassert solution() == '3', \"Test Case 3\"\nassert solution() == '1', \"Test Case 4\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Please check the solution and provide the correct output.\\n\\nInput: {input()}\\nOutput: {output}\\n\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\n\"\nassert solution(\"3 3\\nx.\\nx\\nx\") == \"3\\n\"\nassert solution(\"3 3\\nx.x\\nx..\\nx..\\n.x..\\nx..\") == \"3\\n\"\nassert solution(\"3 3\\nx.\\nx.\\nx\") == \"4\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == 2"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"9\\n5\\n6\"\nassert solution(5) == \"9\\n5\\n6\"\nassert solution(1) == \"9\\n5\\n6\"\nassert solution(2) == \"5\\n6\\n-1\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"9\\n6\"\nassert solution(5) == \"9\\n6\"\nassert solution(6) == \"9\\n6\"\nassert solution(7) == \"9\\n6\"\nassert solution(8) == \"9\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"\n    5\n    1 3 2\n    2 5 2\n    3 0 0\n    4 2 4\n    5 3 0\n\"\"\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 91, \"Incorrect output\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3)) == \"91\\n\"\nassert solution(str(4)) == \"91\\n\"\nassert solution(str(5)) == \"151\\n\"\nassert solution(str(6)) == \"151\\n\"\nassert solution(str(7)) == \"221\\n\"\nassert solution(str(8)) == \"221\\n\"\nassert solution(str(9)) == \"291\\n\"\nassert solution(str(10)) == \"291\\n\"\nassert solution(str(11)) == \"361\\n\"\nassert solution(str(12)) == \"361\\n\"\nassert solution(str(13)) == \"431\\n\"\nassert solution(str(14)) == \"431\\n\"\nassert solution(str(15)) == \"491\\n\"\nassert solution(str(16)) == \"491\\n\"\nassert solution(str(17)) == \"541\\n\"\nassert solution(str(18)) == \"541\\n\"\nassert solution(str(19)) == \"591\\n\"\nassert solution(str(20)) == \"591\\n\"\nassert solution(str(21)) == \"641\\n\"\nassert solution(str(22)) == \"641\\n\"\nassert solution(str(23)) == \"691\\n\"\nassert solution(str(24)) == \"691\\n\"\nassert solution(str(25)) == \"741\\n\"\nassert solution(str(26)) == \"741\\n\"\nassert solution(str(27)) == \"791\\n\"\nassert solution(str(28)) == \"791\\n\"\nassert solution(str(29)) == \"841\\n\"\nassert solution(str(30)) == \"841\\n\"\nassert solution(str(31)) == \"891\\n\"\nassert solution(str(32)) == \"891\\n\"\nassert solution(str(33)) == \"941\\n\"\nassert solution(str(34)) == \"941\\n\"\nassert solution(str(35)) == \"991\\n\"\nassert solution(str(36)) == \"991\\n\"\nassert solution(str(37)) == \"1041\\n\"\nassert solution(str(38)) == \"1041\\n\"\nassert solution(str(39)) == \"1091\\n\"\nassert solution(str(40)) == \"1091\\n\"\nassert solution(str(41)) == \"1141\\n\"\nassert solution(str(42)) == \"1141\\n\"\nassert solution(str(43)) == \"1191\\n\"\nassert solution(str(44)) == \"1191\\n\"\nassert solution(str(45)) == \"1241\\n\"\nassert solution(str(46)) == \"1241\\n\"\nassert solution(str(47)) == \"1291\\n\"\nassert solution(str(48)) == \"1291\\n\"\nassert solution(str(49)) == \"1341\\n\"\nassert solution(str(50)) == \"1341\\n\"\nassert solution(str(51)) == \"1391\\n\"\nassert solution(str(52)) == \"1391\\n\"\nassert solution(str(53)) == \"1441\\n\"\nassert solution(str(54)) == \"1441\\n\"\nassert solution(str(55)) == \"1491\\n\"\nassert solution(str(56)) == \"1491\\n\"\nassert solution(str(57)) == \"1541\\n\"\nassert solution(str(58)) == \"1541\\n\"\nassert solution(str(59)) == \"1591\\n\"\nassert solution(str(60)) == \"1591\\n\"\nassert solution(str(61)) == \"1641\\n\"\nassert solution(str(62"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\" # time: 237ms"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\\n0\\n0\\n0\\n0\") == \"15\", \"Test Case 1 failed\"\nassert solution(\"1\\n0\\n1\\n0\\n0\") == \"15\", \"Test Case 2 failed\"\nassert solution(\"2\\n1\\n0\\n0\\n0\") == \"15\", \"Test Case 3 failed\"\nassert solution(\"3\\n1\\n1\\n0\\n0\") == \"15\", \"Test Case 4 failed\"\nassert solution(\"4\\n1\\n1\\n1\\n0\") == \"15\", \"Test Case 5 failed\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15 20\\n0\\n1 1\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(15, 20) == 15, \"The output should be 15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\\n15\\n0\\n1 1\\n\") == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 15, \"Expected 15, got {}\".format(solution)"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"15\", \"Test failed\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\\n\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"1 2\\n1 3\\n2 1\\n2 3\\n3 1\\n3 2\") == \"impossible\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1\\n148 1\\n149 1\\n15"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n375\"\nassert solution(\"1 2\\n3 4\") == \"impossible\\n6\"\nassert solution(\"5 5\") == \"impossible\\n0\"\nassert solution(\"10 10\") == \"impossible\\n0\"\nassert solution(\"10 20\") == \"definitely possible\\n700\"\n\nfrom typing import List\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Expected output: {expected_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 6\\n1 2 350\\n2 3 650\\n3 4 900\\n4 5 1200') == 'definitely possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible\\n'\nassert solution('10 5\\n1 2 2\\n3 4 2\\n5 6 4\\n7 8 6') == 'impossible\\n'\nassert solution('5 10\\n1 2 2\\n3 4 2\\n5 6 4\\n7 8 6') == 'impossible\\n'\nassert solution('10 10\\n1 2 2\\n3 4 2\\n5 6 4\\n7 8 6') == 'possible\\n'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"10 2\\n2 5 35\\n3 4 8\\n4 3 5\\n5 6 9\") == \"definitely possible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"impossible\", \"The given solution is incorrect.\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1.000000000\\n\"\nassert solution() == \"1"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\\nExpected: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\"\nassert solution(6) == \"1.000000000\"\nassert solution(7) == \"1.000000000\"\nassert solution(8) == \"1.000000000\"\nassert solution(9) == \"1.000000000\"\nassert solution(10) == \"1.000000000\"\nassert solution(11) == \"1.000000000\"\nassert solution(12) == \"1.000000000\"\nassert solution(13) == \"1.000000000\"\nassert solution(14) == \"1.000000000\"\nassert solution(15) == \"1.000000000\"\nassert solution(16) == \"1.000000000\"\nassert solution(17) == \"1.000000000\"\nassert solution(18) == \"1.000000000\"\nassert solution(19) == \"1.000000000\"\nassert solution(20) == \"1.000000000\"\nassert solution(21) == \"1.000000000\"\nassert solution(22) == \"1.000000000\"\nassert solution(23) == \"1.000000000\"\nassert solution(24) == \"1.000000000\"\nassert solution(25) == \"1.000000000\"\nassert solution(26) == \"1.000000000\"\nassert solution(27) == \"1.000000000\"\nassert solution(28) == \"1.000000000\"\nassert solution(29) == \"1.000000000\"\nassert solution(30) == \"1.000000000\"\nassert solution(31) == \"1.000000000\"\nassert solution(32) == \"1.000000000\"\nassert solution(33) == \"1.000000000\"\nassert solution(34) == \"1.000000000\"\nassert solution(35) == \"1.000000000\"\nassert solution(36) == \"1.000000000\"\nassert solution(37) == \"1.000000000\"\nassert solution(38) == \"1.000000000\"\nassert solution(39) == \"1.000000000\"\nassert solution(40) == \"1.000000000\"\nassert solution(41) == \"1.000000000\"\nassert solution(42) == \"1.000000000\"\nassert solution(43) == \"1.000000000\"\nassert solution(44) == \"1.000000000\"\nassert solution(45) == \"1.000000000\"\nassert solution(46) == \"1.000000000\"\nassert solution(47) == \"1.000000000\"\nassert solution(48) == \"1.000000000\"\nassert solution(49) == \"1.000000000\"\nassert solution(50)"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '1.000000000'\nassert solution(3) == '0.666666667'\nassert solution(4) == '0.833333333'\nassert solution(5) == '0.500000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1\\n\") == \"1.000000000\\n\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed: output = {}, expected output = {}\".format(solution(input()), output())"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 115.000000000, \"Test case 1 failed\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\nassert solution(\"1 1\\n0 1\") == \"0.000000000\"\nassert solution(\"30 2 10\\n10 3 10\") == \"30.000000000\"\nassert solution(\"40 10 10\\n5 10 20\") == \"50.000000000\"\nassert solution(\"1 1 1\") == \"0.000000000\"\nassert solution(\"200 300 400\\n200 300 400\") == \"400.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == \"115.000000000\\n\"\n\nimport re"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"115.000000000\\n\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n5 200 100\n30 200 50\n150 500 100\n''') == '500.000000000'\nassert solution('''\n10 1000 50\n100 1000 25\n500 5000 100\n''') == '500.000000000'\nassert solution('''\n10 1000 50\n100 1000 25\n500 5000 100\n''') == '500.000000000'\nassert solution('''\n10 1000 50\n100 1000 25\n500 5000 100\n''') == '500.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('3\\n1 1 1\\n1 1 1\\n1 1 1') == 'Infinity'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '199.500000\\n'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100 1 1') == '199.500000'\nassert solution('100 1 1.5') == '200.000000'\nassert solution('10 1 1') == '10.000000'\nassert solution('10 1 1.5') == '10.500000'\nassert solution('1000 100 1.5') == '2000.000000'\nassert solution('1000 100 1.5') == '2000.000000'\n\nfrom typing import List\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.5\"\nassert solution(\"3\\n100 1 0\\n100 1 1.5\\n100 1 3.14\") == \"300.7\"\nassert solution(\"4\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\") == \"401.1\"\nassert solution(\"5\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\") == \"501.5\"\nassert solution(\"6\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\") == \"601.9\"\nassert solution(\"7\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\\n100 1 8*3.14\") == \"702.3\"\nassert solution(\"8\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\\n100 1 8*3.14\\n100 1 10*3.14\") == \"802.7\"\nassert solution(\"9\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\\n100 1 8*3.14\\n100 1 10*3.14\\n100 1 12*3.14\") == \"903.1\"\nassert solution(\"10\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\\n100 1 8*3.14\\n100 1 10*3.14\\n100 1 12*3.14\\n100 1 14*3.14\") == \"1003.5\"\nassert solution(\"11\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4*3.14\\n100 1 6*3.14\\n100 1 8*3.14\\n100 1 10*3.14\\n100 1 12*3.14\\n100 1 14*3.14\\n100 1 16*3.14\") == \"1103.9\"\nassert solution(\"12\\n100 1 0\\n100 1 1.5\\n100 1 3.14\\n100 1 2*3.14\\n100 1 4"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Your solution is incorrect. Please check your implementation and test cases.\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {input()} failed: expected output '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"1 1\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"1 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"1 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\"\nassert solution(\"1 1\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"2 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\"\nassert solution(\"2 8\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"8\"\nassert solution(\"2 9\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"9\"\nassert solution(\"2 10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"10\"\nassert solution(\"2 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\" + \"Impossible\\n\", \"The given solution is incorrect.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output: 5\\n'\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Error in the code\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\nassert solution(\"10\\n5 2 1 1\") == \"2\"\nassert solution(\"5\\n3 2 1 1\") == \"Impossible on a single line\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\nImpossible\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2, 1, 1) == 5\nassert solution(4, 2, 1, 1) == 4\nassert solution(13, 3, 2, 1) == 5\nassert solution(14, 3, 2, 1) == 4\nassert solution(15, 3, 2, 1) == 3\nassert solution(16, 3, 2, 1) == 2\nassert solution(17, 3, 2, 1) == 1\nassert solution(18, 3, 2, 1) == 0\nassert solution(19, 3, 2, 1) == 5\nassert solution(20, 3, 2, 1) == 4\nassert solution(21, 3, 2, 1) == 3\nassert solution(22, 3, 2, 1) == 2\nassert solution(23, 3, 2, 1) == 1\nassert solution(24, 3, 2, 1) == 0\nassert solution(25, 3, 2, 1) == 5\nassert solution(26, 3, 2, 1) == 4\nassert solution(27, 3, 2, 1) == 3\nassert solution(28, 3, 2, 1) == 2\nassert solution(29, 3, 2, 1) == 1\nassert solution(30, 3, 2, 1) == 0\nassert solution(31, 3, 2, 1) == 5\nassert solution(32, 3, 2, 1) == 4\nassert solution(33, 3, 2, 1) == 3\nassert solution(34, 3, 2, 1) == 2\nassert solution(35, 3, 2, 1) == 1\nassert solution(36, 3, 2, 1) == 0\nassert solution(37, 3, 2, 1) == 5\nassert solution(38, 3, 2, 1) == 4\nassert solution(39, 3, 2, 1) == 3\nassert solution(40, 3, 2, 1) == 2\nassert solution(41, 3, 2, 1) == 1\nassert solution(42, 3, 2, 1) == 0\nassert solution(43, 3, 2, 1) == 5\nassert solution(44, 3, 2, 1) == 4\nassert solution(45, 3, 2, 1) == 3\nassert solution(46, 3, 2, 1) == 2\nassert solution(47, 3, 2, 1) == 1\nassert solution(48, 3, 2, 1) == 0\nassert solution(49, 3, 2, 1) == 5\nassert solution(50, 3, 2, 1) == 4\nassert solution(51, 3, 2, 1) == 3\nassert solution(52, 3, 2, 1) == 2\nassert solution(53, 3, 2, 1) == 1\nassert solution(54, 3, 2, 1) == 0\nassert solution(55, 3, 2, 1) == 5\nassert solution(56, 3, 2, 1) == 4\nassert solution(57, 3, 2, 1) == 3\nassert solution(58, 3, 2, 1) == 2\nassert solution(59, 3, 2, 1) == 1\nassert solution(60, 3, 2, 1) == 0\nassert solution(61, 3, 2, 1) == 5\nassert solution(62, 3, 2, 1) == 4\nassert solution(63, 3, 2, 1) == 3\nassert solution(64, 3, 2, 1) == 2\nassert solution"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"Impossible on a single line\\n\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabcad\\naba\\nacd\\n') == 'yes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('aba\\nacd\\n') == 'no\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('abcd\\nabc\\n') == 'no\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('123\\n456\\n789\\n') == 'no\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('defg\\nhijklmn\\nuvwxyz\\n') == 'no\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"abc\\ndef\\nxyz\\n\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5, \"The correct output should be 5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'\nassert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"Your solution is incorrect. Please see the provided example.\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n\") == \"4\\n\"\nassert solution(\"3 1\\n1 2\\n4 5\\n6 7\\n\") == \"3\\n\"\nassert solution(\"2 1\\n3 2\\n5 3\\n6 4\\n\") == \"2\\n\"\nassert solution(\"5 2\\n1 3\\n4 4\\n7 5\\n\") == \"2\\n\"\nassert solution(\"3 1\\n2 2\\n4 3\\n5 4\\n\") == \"3\\n\"\nassert solution(\"4 2\\n2 3\\n5 4\\n6 5\\n\") == \"2\\n\"\nassert solution(\"2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n\") == \"2\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4\\n'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nassert solution('5 2\\n2 4 different\\n3 5 same') == '1'\nassert solution('5 2\\n2 4 same\\n3 5 different') == '1'\nassert solution('5 3\\n2 4 same\\n3 5 same') == '2'\nassert solution('5 3\\n2 4 different\\n3 5 same') == '2'\nassert solution('5 3\\n2 4 same\\n3 5 different') == '2'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nassert solution('5 2\\n2 4 different\\n3 5 same') == '0'\nassert solution('5 2\\n2 4 same\\n3 6 same') == '0'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3\nassert solution(\"10 10\") == 10\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3, \"Incorrect Output\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\", \"Test Case 1 Failed\"\nassert solution(stdin) == \"3\", \"Test Case 2 Failed\"\nassert solution(stdin) == \"3\", \"Test Case 3 Failed\"\nassert solution(stdin) == \"3\", \"Test Case 4 Failed\"\nassert solution(stdin) == \"3\", \"Test Case 5 Failed\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 4\n    0 1\n    0 2\n    3 4\n    3 5\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nURD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nURL\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLLD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLDD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nURD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nURL\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLLD\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLDD\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\", \"The solution should return '9.0\\n6.5\\n2.5'.\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test case 2\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\n\nSolution:\n\nThe given graph can be represented using a list of tuples, where each tuple contains three integers representing the color of the edge, the two nodes that it connects from, and the other node that it connects to. We need to construct a spanning tree that includes only the blue edges.\n\nTo achieve this, we need to iterate over all possible combinations of blue edges, and check whether a spanning tree exists that includes only these edges. We can use the concept of Floyd's cycle-finding algorithm to find the cycle in the graph.\n\nHere's the code implementation for the solution:\n\n```python\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 0\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1\\n'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 2 2\\nB 1 2\\nR 2 1\") == \"0\"\nassert solution(\"3 3 3\\nB 1 2\\nB 2 3\\nR 1 2\") == \"1\"\nassert solution(\"3 3 3\\nB 1 2\\nB 2 3\\nR 2 1\") == \"0\"\nassert solution(\"3 2 2\\nB 1 2\\nR 2 1\") == \"0\"\nassert solution(\"3 3 3\\nB 1 2\\nB 2 3\\nR 1 2\") == \"1\"\nassert solution(\"3 2 2\\nB 1 2\\nR 2 1\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 3 0\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"Error: Input format is incorrect\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(), \"Please implement the solution.\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n') == 5, \"Test failed\"\nassert solution('1 2\\n3\\n4\\n5\\n6\\n') == 6, \"Test failed\"\nassert solution('3 4 5\\n4\\n2\\n3\\n') == -1, \"Test failed\"\nassert solution('1 1\\n1\\n2\\n3\\n4\\n') == 3, \"Test failed\"\nassert solution('5 2\\n1\\n1\\n1\\n1\\n') == 3, \"Test failed\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n') == 5\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n3 3 3\\n') == -1\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n3 4 2\\n') == -1\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n3 3 3\\n3 3 3\\n') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"4 3 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == 1\nassert solution(\"3 4 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == 1\nassert solution(\"3 4 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == 1\nassert solution(\"3 4 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('4 4 2 3\\n2\\n2 1 1\\n1 2 2\\n1 1 3\\n2 3 3') == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> int:\\npass'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"3 3 0 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == -1"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"AbCdEfGhIjKlLmNoPqRsTuVwXyZ\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"mirkovC4nizCC44\")) == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44C4C44C4\") == \"mirkovniz\", \"The final string should be'mirkovniz', but it is '%s'\" % solution(\"mirkovC4nizCC44C4C44C4\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    mirkovC4nizCC44\n    C4\n    \"\"\"\n) == \"mirkovniz\"\n\nassert solution(\n    \"\"\"\n    m123r4567\n    a\n    \"\"\"\n) == \"m123r4567ab\"\n\nassert solution(\n    \"\"\"\n    m123r4567\n    b\n    \"\"\"\n) == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C4ab\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44a\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44ab\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44a\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44ab\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nprint('All tests passed!')"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44C44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C44C44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C44C44C44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C44C44C44C44\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 32, \"Solution is incorrect\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 32\nassert solution(4) == 50\nassert solution(5) == 64"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Output the least total amount of tolls Luka\u2019s company must pay.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\\n\") == \"32\\n\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\\n\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    5\n    1 2 0 3 1\n    '''\n) == '''\n3\n2\n'''"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n', \"Test case 1 failed\"\n\nassert solution('5\\n2 3 1 4 2') == '2\\n1\\n', \"Test case 2 failed\"\n\nassert solution('5\\n1 2 3 4 5') == '3\\n1\\n', \"Test case 3 failed\"\n\nassert solution('5\\n1 1 1 1 1') == '2\\n1\\n', \"Test case 4 failed\"\n\nassert solution('5\\n0 0 0 0 0') == '1\\n1\\n', \"Test case 5 failed\"\n\nassert solution('5\\n1 1 1 1 2') == '3\\n2\\n', \"Test case 6 failed\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n2'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\n\nassert solution('5\\n1 2 0 3 2') == '2\\n2\\n'\n\nassert solution('5\\n1 2 0 3 3') == '3\\n2\\n'\n\nassert solution('5\\n1 2 0 3 4') == '4\\n2\\n'\n\nassert solution('5\\n1 2 0 3 5') == '5\\n2\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\", \"Test case 1 failed\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)\n\nsample_input = [5]\nsample_output = [\"3\\n2\"]"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2\\n'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n100000') == '100000\\n'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n1000000000') == '1000000000\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '2\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2\\n'\nassert solution('2 6 3\\n+ 1 1\\n- 1 3\\n+ 1 2\\n- 1 4') == '0\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4, 4) == 2\nassert solution(5, 5, 5) == 2\nassert solution(5, 5, 6) == 0\nassert solution(10, 10, 1) == 599585053015462475300878276673556643348568839394141016157018950263944968019974197430368872034136306332304330889438854933969730186731071541749255954305132125914887816401864291868244402136141358996933808222667639726613215713505539437132255044889235569203788461936765525276571903033983394552190769265240872236350219190422455721516260080795532471007940822882523901215485959841101847744153970884787892401460939295617622041388263991688675603503640864354089474669660829077612721479882038378068217299643797552364417106667618841788714843078375225108556340178230046426925545795027063039066125388385219790991620380875723185935266779233640908394152358121181538574007733292407238212201713312219887742993284231720418829011573881115719673403304897691314282580855623909089032620415044168475934953226997539265306664695291656821235241536630346037535379373269212488503496672245409878242743950574293308082594617160133884690541290107376865039807528133202859308457331035646627146544533058"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '2\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\nprint(2)"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000000000 0\\n1000000000 1') == '500000004'\nassert solution('1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9\\n1000000000 10\\n1000000000 11\\n1000000000 12\\n1000000000 13\\n1000000000 14\\n1000000000 15\\n1000000000 16\\n1000000000 17\\n1000000000 18\\n1000000000 19\\n1000000000 20\\n1000000000 21\\n1000000000 22\\n1000000000 23\\n1000000000 24\\n1000000000 25\\n1000000000 26\\n1000000000 27\\n1000000000 28\\n1000000000 29\\n1000000000 30\\n1000000000 31\\n1000000000 32\\n1000000000 33\\n1000000000 34\\n1000000000 35\\n1000000000 36\\n1000000000 37\\n1000000000 38\\n1000000000 39\\n1000000000 40\\n1000000000 41\\n1000000000 42\\n1000000000 43\\n1000000000 44\\n1000000000 45\\n1000000000 46\\n1000000000 47\\n1000000000 48\\n1000000000 49\\n1000000000 50\\n1000000000 51\\n1000000000 52\\n1000000000 53\\n1000000000 54\\n1000000000 55\\n1000000000 56\\n1000000000 57\\n1000000000 58\\n1000000000 59\\n1000000000 60\\n1000000000 61\\n1000000000 62\\n1000000000 63\\n1000000000 64\\n1000000000 65\\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"500000004\"  # Test case 1"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 500000004\nassert solution() == 500000005\nassert solution() == 500000006\nassert solution() == 500000007\nassert solution() == 500000008\nassert solution() == 500000009\n\nimport sympy as sp\n\nn = int(input())\np = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1000000000 0\n    1000000000 1\n    \"\"\"\n) == 500000004\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"39\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"72\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"124\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"194\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"262\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\\n\", \"Incorrect Output\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '12\\n', 'Your solution is incorrect. Please check the problem statement and examples.'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == 12"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1\\n\"\nassert solution(\"5 10 25\") == \"1\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Got {solution(sample_input)}, expected {expected_output}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_sample) == output_sample, f\"Test case {i+1} failed. Expected output: {output_sample}, Received output: {solution(input_sample)}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution(3, 19) == 3, \"Expected 3, got: {}\".format(solution(3, 19))\nassert solution"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '5'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == 3, \"The output should be 3, but it is {}\".format(solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n'))"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == 3, \"Expected output: 3, actual output: \" + str(solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5'))"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\" + \"def solution(stdin: str) -> str:\\n    pass\\n\", \"\\n\".join(f\"assert solution({stdin}) == \\\"{expected_output}\\\", \\\"{expected_output}\\\"\")"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"2\\n2 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"4\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'1\\n1 1') == '1\\n1\\n1'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n1\\n\"\nassert solution(input()) == \"2\\n3\\n\"\nassert solution(input()) == \"3\\n4\\n\"\nassert solution(input()) == \"4\\n5\\n\"\nassert solution(input()) == \"5\\n6\\n\"\nassert solution(input()) == \"6\\n7\\n\"\nassert solution(input()) == \"7\\n8\\n\"\nassert solution(input()) == \"8\\n9\\n\"\nassert solution(input()) == \"9\\n10\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3\\n3 3\\n\") == \"3\\n1\\n1\\n1\\n2\\n2\\n2\\n\"\nassert solution(\"4\\n4 2\\n\") == \"2\\n4\\n\"\nassert solution(\"5\\n5 3\\n\") == \"3\\n5\\n\"\nassert solution(\"6\\n6 3\\n\") == \"3\\n2\\n1\\n\"\nassert solution(\"7\\n7 4\\n\") == \"4\\n5\\n3\\n2\\n\"\nassert solution(\"8\\n8 4\\n\") == \"4\\n3\\n2\\n1\\n\"\nassert solution(\"9\\n9 5\\n\") == \"5\\n7\\n4\\n2\\n\"\nassert solution(\"10\\n10 5\\n\") == \"5\\n5\\n4\\n2\\n\"\nassert solution(\"11\\n11 6\\n\") == \"6\\n8\\n6\\n4\\n2\\n\"\nassert solution(\"12\\n12 6\\n\") == \"6\\n7\\n5\\n4\\n2\\n\"\nassert solution(\"13\\n13 7\\n\") == \"7\\n9\\n7\\n4\\n2\\n\"\nassert solution(\"14\\n14 7\\n\") == \"7\\n8\\n6\\n4\\n2\\n\"\nassert solution(\"15\\n15 8\\n\") == \"8\\n10\\n8\\n4\\n2\\n\"\nassert solution(\"16\\n16 8\\n\") == \"8\\n9\\n7\\n4\\n2\\n\"\nassert solution(\"17\\n17 9\\n\") == \"9\\n11\\n9\\n4\\n2\\n\"\nassert solution(\"18\\n18 9\\n\") == \"9\\n10\\n8\\n4\\n2\\n\"\nassert solution(\"19\\n19 10\\n\") == \"10\\n12\\n10\\n4\\n2\\n\"\nassert solution(\"20\\n20 10\\n\") == \"10\\n11\\n9\\n4\\n2\\n\"\nassert solution(\"21\\n21 11\\n\") == \"11\\n13\\n11\\n4\\n2\\n\"\nassert solution(\"22\\n22 11\\n\") == \"11\\n12\\n10\\n4\\n2\\n\"\nassert solution(\"23\\n23 12\\n\") == \"12\\n14\\n12\\n4\\n2\\n\"\nassert solution(\"24\\n24 12\\n\") == \"12\\n13\\n11\\n4\\n2\\n\"\nassert solution(\"25\\n25 13\\n\") == \"13\\n15\\n13\\n4\\n2\\n\"\nassert solution(\"26\\n26 13\\n\") == \"13\\n14\\n12\\n4\\n2\\n\"\nassert solution(\"27\\n27 14\\n\") == \"14\\n16\\n14\\n4\\n2\\n\"\nassert solution(\"28\\n28 14\\n\") == \"14\\n15\\n12\\n4\\n2\\n\"\nassert solution(\"29\\n29 15\\n\") == \"15\\n17\\n15\\n4\\n2\\n\"\nassert solution(\"30\\n30 15\\n\") == \"15\\n16\\n13\\n4\\n2\\n\"\nassert solution(\"31\\n31 16\\n\") == \"16\\n18\\n16\\n4\\n2\\n\"\nassert solution(\"32\\n32 16\\n\")"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RGGY\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RGRY\\nGBBR\\nBYBY\\nYRYR\") == 3\nassert solution(\"RGRY\\nGBBR\\nBYBR\\nYBYY\") == 5\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == 3\nassert solution('RRRR\\nGGGG\\nBBBB\\nYYYY') == 3\nassert solution('RRGG\\nGGGB\\nBBBB\\nYYYY') == 3\nassert solution('RRRR\\nGGGG\\nBBBC\\nYYYY') == 3\nassert solution('RRRR\\nGGGG\\nBBCC\\nYYYY') == 3\nassert solution('RRRR\\nGGGG\\nBBCD\\nYYYY') == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 3\nassert solution(\"BYBY\") == 3\nassert solution(\"YRYR\") == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"The solution should be 3 moves.\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('RGGR') == 3\nassert solution('GBGB') == 4\nassert solution('BYBY') == 5\nassert solution('YRYR') == 10"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RGGR') == 3, \"Test Case 1 failed.\"\nassert solution('GBGB') == 3, \"Test Case 2 failed.\"\nassert solution('BYBY') == 3, \"Test Case 3 failed.\"\nassert solution('YRYR') == 3, \"Test Case 4 failed.\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGR\") == 3, \"Expected output: 3\"\nassert solution(\"GBGB\") == 3, \"Expected output: 3\"\nassert solution(\"BYBY\") == 3, \"Expected output: 3\"\nassert solution(\"YRYR\") == 3, \"Expected output: 3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\") == \"3\", \"Input not valid\"\nassert solution(\"GBGB\") == \"3\", \"Input not valid\"\nassert solution(\"BYBY\") == \"3\", \"Input not valid\"\nassert solution(\"YRYR\") == \"3\", \"Input not valid\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"BAABA\"\nassert solution(\"2\\n1 2\\n4 5\\n3 4\") == \"BBAB\"\nassert solution(\"4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\") == \"BBAB\"\nassert solution(\"3\\n2 1 3\\n4 5 6\\n7 8 9\") == \"ABBA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\n'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Error: {solution(input())}!= {output()}\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\nassert solution('5\\n-2 -1 0 1 2\\n-1 0 1 2') == 'BAAB'\nassert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\nassert solution('5\\n-2 -1 0 1 2\\n-1 0 1 2') == 'BAAB'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"The output should be '{sample_output}', but it is '{solution(sample_input)}'.\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"AAAAA\"\nassert solution(input()) == \"ABABA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"AAAAA\", \"The input string is empty\"\nassert solution(\" \") == \"AAAAA\", \"The input string contains only whitespace characters\"\nassert solution(\"1\") == \"AAA\", \"The input string contains only one character\"\nassert solution(\"1 2 3\") == \"AAAAA\", \"The input string contains multiple characters\"\nassert solution(\"2 1 0 -1 -2\") == \"AAAAA\", \"The input string is correct\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_input_4.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_input_5.txt\", \"r\").read()) == \"IMPOSSIBLE\"\nassert solution(open(\"test_input_6.txt\", \"r\").read()) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\" #pass"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test {test_num} failed. Expected: '{output_str}', got: '{solution(input_str)}'.\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('austria') == '12'\nassert solution('autocorrect') == '12'\nassert solution('program') == '4'\nassert solution('computer') == '3'\nassert solution('competition') == '2'\nassert solution('zyx') == '2'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\n\u00e1ustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\n\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\n\\n\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\n\\n\\n\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(io.StringIO(input())) == '12'\nassert solution(io.StringIO('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria')) == '12'\nassert solution(io.StringIO('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n')) == '12'\nassert solution(io.StringIO('6 6\\nb\\nbc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n')) == '12'\nassert solution(io.StringIO('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n')) == '12'\nassert solution(io.StringIO('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n')) == '12'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"austria\") == \"12\"\nassert solution(\"autocorrect\") == \"12\"\nassert solution(\"program\") == \"4\"\nassert solution(\"programming\") == \"11\"\nassert solution(\"computer\") == \"3\"\nassert solution(\"autocorrelation\") == \"2\"\nassert solution(\"zyx\") == \"2\"\n\nsolution(open(\"input.txt\", \"r\").read())"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"austria\") == \"12\", \"Incorrect output\"\nassert solution(\"autocorrect\") == \"12\", \"Incorrect output\"\nassert solution(\"program\") == \"4\", \"Incorrect output\"\nassert solution(\"programming\") == \"11\", \"Incorrect output\"\nassert solution(\"computer\") == \"3\", \"Incorrect output\"\nassert solution(\"autocorrelation\") == \"2\", \"Incorrect output\"\nassert solution(\"programming\") == \"3\", \"Incorrect output\"\nassert solution(\"competition\") == \"2\", \"Incorrect output\"\nassert solution(\"zyx\") == \"2\", \"Incorrect output\"\n\nsolution = input()"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"austria\") == \"12\", \"Test 1 failed\"\nassert solution(\"autocorrect\") == \"12\", \"Test 2 failed\"\nassert solution(\"program\") == \"4\", \"Test 3 failed\"\nassert solution(\"programming\") == \"11\", \"Test 4 failed\"\nassert solution(\"computer\") == \"3\", \"Test 5 failed\"\nassert solution(\"autocorrelation\") == \"2\", \"Test 6 failed\"\nassert solution(\"programming\") == \"3\", \"Test 7 failed\"\nassert solution(\"competition\") == \"11\", \"Test 8 failed\"\nassert solution(\"zyx\") == \"2\", \"Test 9 failed\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\", \"First Test\"\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\", \"Second Test\"\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\", \"Third Test\"\nassert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\n\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3\n0 1 1\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"4\n1 2 2 3\n2 2 2 2\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"1\n0\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"2\n2\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"3\n0 1 1\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"4\n1 2 2 3\n2 2 2 2\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"1\n0\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"2\n2\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"The size of the smallest widest row that will accommodate all the guests should be 3.\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\") == \"3\\n3\"\nassert solution(\"0 1 1\\n1 2 3\") == \"12\\n10\"\nassert solution(\"12\\n0 1 1\\n1 2 3\") == \"impossible\"\nassert solution(\"1\\n1 1 1\\n1 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\", \"Please provide the correct input\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 1 1') == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 1 1') == '3'\nassert solution('4\\n2 3 4 5') == '4'\nassert solution('13\\n5 0 5 0 0 0 0 0 0 0 0') == '3'\nassert solution('14\\n1 1 1 1 1 1 1 1 1 1 1') == '14'\nassert solution('5\\n3 3') == 'impossible'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 2, 0, 3, 4) == 3\nassert solution(3, 4, 1, 2, 0) == 1\nassert solution(4, 3, 2, 1, 0) == 1\nassert solution(10, 10, 10, 10, 10) == 12\nassert solution(0, 0, 0, 0, 0) == 0\nassert solution(1, 1, 1, 1, 1) == 1\nassert solution(1, 1, 1, 1, 1) == 1"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 1\") == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Test case failed\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\\nHFBIGEDCJA\\nBIGEDCJFAH\\nIGEDCJBAFH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\"Pre Post In Post In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution and the output are not the same\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"IGEDCJBAFH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"Solution for HFBIGEDCJA should be Pre Post In Post In Pre\"\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', \"Solution for BIGEDCJFAH should be Pre Post In Post In Pre\"\nassert solution('IGEDCJBAFH') == 'Pre Post In Post In Pre', \"Solution for IGEDCJBAFH should be Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"IGEDCJBAFH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Pre Post In Post In Pre\", \"Incorrect output.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n5 2 1 0\\n6 1 2\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n5 2 1 0\\n6 1 2\\n7 1 0\\n8 1 1\\n9 1 2\\n10 1 3\") == \"10\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n5 2 1 0\\n6 1 2\\n7 1 0\\n8 1 1\\n9 1 2\\n10 1 3\\n11 1 4\\n12 1 5\\n13 1 6\\n14 1 7\\n15 1 8\\n16 1 9\\n17 1 10\\n18 1 11\\n19 1 12\\n20 1 13\\n21 1 14\\n22 1 15\\n23 1 16\\n24 1 17\\n25 1 18\\n26 1 19\\n27 1 20\\n28 1 21\\n29 1 22\\n30 1 23\\n31 1 24\\n32 1 25\\n33 1 26\\n34 1 27\\n35 1 28\\n36 1 29\\n37 1 30\\n38 1 31\\n39 1 32\\n40 1 33\\n41 1 34\\n42 1 35\\n43 1 36\\n44 1 37\\n45 1 38\\n46 1 39\\n47 1 40\\n48 1 41\\n49 1 42\\n50 1 43\\n51 1 44\\n52 1 45\\n53 1 46\\n54 1 47\\n55 1 48\\n56 1 49\\n57 1 50\\n58 1 51\\n59 1 52\\n60 1 53\\n61 1 54\\n62 1 55\\n63 1 56\\n64 1 57\\n65 1 58\\n66 1 59\\n67 1 60\\n68 1 61\\n69 1 62\\n70 1 63\\n71 1 64\\n72 1 65\\n73 1 66\\n74 1 67\\n75 1 68\\n76 1 69\\n77 1 70\\n78 1 71\\n79 1 72\\n80 1 73\\n81 1 74\\n82 1 75\\n83 1 76\\n84 1 77\\n85 1 78\\n86 1 79\\n87 1 80\\n88 1 81\\n89 1 82\\n90 1 83\\n91 1 84\\n92 1 85\\n93 1 86\\n94 1 87\\n95 1 88\\n96 1 89\\n97 1 90\\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0') == '5'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10, \"Expected output: 10, but got: {}\".format(solution())"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nimport re\n\nn, p = map(int, input().split())\ntheorems = set()\n\nfor _ in range(p):\n    theorem = list(map(int, input().split()))\n    theorems.add(theorem)\n\nshortest_length = max(len(re.sub(r\"\\b\", \"\", theorem[0])) for theorem in theorems)\n\nprint(shortest_length)"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 10, \"Your solution is incorrect.\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nassert solution(\"1\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nassert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nassert solution(\"2\\n1\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\", \"Test case 1\"\nassert solution(input()) == \"15\", \"Test case 2\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10000.00\\n'\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed: output {solution(sample_input)} should be {sample_output}, but is {solution(sample_input)}\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10000.00'\nprint('All assertions passed!')"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"0 0 100 100\\n0 0 200 200\\n0 0 300 300\\n0 0 400 400\\n0 0 500 500\") == \"1000000.00\"\nassert solution(\"0 0 100 100\\n0 0 200 200\\n0 0 300 300\\n0 0 400 400\\n0 0 500 500\\n0 0 600 600\\n0 0 700 700\\n0 0 800 800\\n0 0 900 900\\n0 0 1000 1000\\n0 0 1100 1100\\n0 0 1200 1200\\n0 0 1300 1300\\n0 0 1400 1400\\n0 0 1500 1500\") == \"100000000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\\n\") == 10000.00, \"Expected: 10000.00, actual: {}\".format(solution(\"0 0 100 100\\n30 30 60 60\\n\"))"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == '10000.00\\n'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\\n45 45 60 60\") == \"14330.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\\n45 45 60 60\\n50 50 70 70\") == \"18660.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\\n45 45 60 60\\n50 50 70 70\\n55 55 80 80\") == \"22990.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10000.00\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    \"\"\") == \"10000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    \"\"\") == \"20000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    \"\"\") == \"30000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    \"\"\") == \"40000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    200 200 240 240\n    \"\"\") == \"50000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    200 200 240 240\n    250 250 300 300\n    \"\"\") == \"60000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    200 200 240 240\n    250 250 300 300\n    300 300 360 360\n    \"\"\") == \"70000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    200 200 240 240\n    250 250 300 300\n    300 300 360 360\n    400 400 480 480\n    \"\"\") == \"80000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180\n    200 200 240 240\n    250 250 300 300\n    300 300 360 360\n    400 400 480 480\n    500 500 560 560\n    \"\"\") == \"90000.00\"\n\nassert solution(r\"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    50 50 80 80\n    90 90 120 120\n    150 150 180 180"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5\nassert solution(stdin) == \"5\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Your code has a different output than the expected output.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\"\nassert solution(\"5 2\\n2 1\\n1 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n2 1\\n\") == \"5\\n\"\nassert solution(\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Error: Incorrect output\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"5\\n\"\nassert solution(stdin=\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n\nfrom typing import List"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == 5\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5') == 4\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6') == 6\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7') == 7\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8') == 8\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9') == 9\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9\\n4 10') == 10\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9\\n4 10\\n4 11') == 11\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9\\n4 10\\n4 11\\n5 12') == 12\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9\\n4 10\\n4 11\\n5 12\\n5 13') == 13\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n2 5\\n3 6\\n3 7\\n3 8\\n4 9\\n4 10\\n4 11\\n5 12\\n5 13\\n6 14') == 14"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == 5\n\nsolution('5 3\\n1 3\\n4 5\\n2 4')"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\", \"The solution should return 5\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5\nprint(solution())"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('21 32 10\\n1 3 2\\n0 0 0') == '25'\nassert solution('21 32 10\\n1 3 2\\n1 2 2') == '71'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\", \"Your solution is incorrect\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Error: None input\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nprint \"Hello, World!\";\nprint \"Another string!\";\nend.''') == 'Hello, World!\\nAnother string!'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print \\\"Hello, World!\\\"; end.\") == \"Hello, World!\\n\"\nassert solution(\"print 3.14159; end.\") == \"3.14159\\n\"\nassert solution(\"print 1e6; end.\") == \"1000000\\n\"\nassert solution(\"print 1.1e+1; end.\") == \"10.0\\n\"\nassert solution(\"print 1.1e-1; end.\") == \"0.1\\n\"\nassert solution(\"print 1.1e-6; end.\") == \"0.001\\n\"\nassert solution(\"print 1.1e+6; end.\") == \"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\"\n) == \"My name is Gon\\nMy name is Gon\"\n\nassert solution(\n\"\"\"\nvar a = \"Hello\";\nprint a;\nprint `World`;\nend.\n\"\"\"\n) == \"Hello\\nWorld\"\n\nassert solution(\n\"\"\"\nvar a = \"Hello\";\nvar b = \"World\";\nprint a;\nprint b;\nend.\n\"\"\"\n) == \"Hello\\nWorld\"\n\nassert solution(\n\"\"\"\nprint 123;\nprint \"abc\";\nprint {1, 2, 3};\nprint {a, b, c};\nprint [1, 2, 3];\nprint [a, b, c];\nend.\n\"\"\"\n) == \"123abc123abc123\"\n\nassert solution(\n\"\"\"\nvar a = \"Hello\";\nvar b = \"World\";\nprint a;\nprint b;\nend.\n\"\"\"\n) == \"Hello\\nWorld\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input.strip()) == \"My name is Gon\"\nassert solution(input.strip()) == \"My name is Gon\"\nassert solution(input.strip()) == \"My name is Gon\"\nassert solution(input.strip()) == \"My name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`;"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"\nMy name is Gon\nMy name is Gon\n\"\"\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2\n7 8\n10\"\"\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution is incorrect.\"\n\nassert solution(\"\"\"2\n7 8\n10\n\"\"\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\" == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the number of bottles: \")) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(input()))\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution(\"3\\n2 3\\n4 5\\n6 7\\n\") == \"fill 1\\ndiscard 0\\nfill 2\\ndiscard 1\\nfill 2\\ndiscard 0\\nfill 1\\ndiscard 1\\nfill 1\\ndiscard 0\\nfill 1\\ndiscard 1\\nfill 1\\ndiscard 0\\nfill 1\\ndiscard 1\\nfill 1\\ndiscard 0\\nfill 1\\ndiscard 1\\nfill 1\\ndiscard 0\\n\"\nassert solution(\"2\\n8 10\\n12\\n\") == \"fill 1\\ndiscard 0\\nfill 1\\ndiscard 0\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"fill 2\\ndiscard 0\\nfill 2\\ndiscard 0\\nfill 2\\ndiscard 0\\n\"\nassert solution(\"2\\n1 2\\n3 4\\n5 6\\n\") == \"impossible\"\nassert solution(\"1\\n100\\n100\\n\") == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"3\\n6 8\\n10\\n15\") == \"fill 0\\ndiscard 1\\ntransfer 1 2\\ntransfer 1 0\\nfill 1\\ntransfer 1 2\\ntransfer 1 0\\ndiscard 1\\nfill 0\\ndiscard 1\\ntransfer 1 2\\ntransfer 1 0\"\nassert solution(\"4\\n10 12\\n12\\n18\") == \"transfer 1 2\\ntransfer 1 0\\nfill 0\\ndiscard 1\\ntransfer 1 2\\ntransfer 1 0\\nfill 0\\ndiscard 1\\ntransfer 1 2\\ntransfer 1 0\"\nassert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4 3') == '27\\n'\nassert solution('5 3 4') == '24\\n'\nassert solution('100 10 3') == '500\\n'\nassert solution('9 3 4') == '18\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 3\") == 27\nassert solution(\"5 1 3\") == 15\nassert solution(\"1 1 1\") == 0"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"27\", \"Test failed\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    10 4 3\n    '''\n) == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"27\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"10 4 3\") == \"27\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"27\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == [\"3\\n-1\\n4\\n\"]"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case not valid.\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '3\\n-1\\n4\\n'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '3\\n-1\\n4\\n'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '3\\n-1\\n4\\n'"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"5 10 3\\n3 2 1 5\\n2\\n1 3 2 1 2\\n1\\n1 2 2\") == \"-1\\n-1\\n3\\n\"\nassert solution(\"2 2 3\\n1 2 4 5\\n2\\n1 3 1 2 3\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin_input, stdout_output)"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '533.3333333333\\n', \"The given code is incorrect.\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1000 3000 1000\n    \"\"\"\n) == \"533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '533.3333333333', \"The correct output is not provided.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '533.3333333333', \"The solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution failed: expected {output}, but got {solution(input())}.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '14.14', 'Incorrect output'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '14.14', 'Expected output is not correct.'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '14.14', \"Your solution is incorrect.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14, \"Incorrect solution\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 14.14, \"Incorrect solution\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"0.00\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\nassert solution(\"5 1\\n20 2\\n10 0\\n10 10\\n\") == \"18.36\"\nassert solution(\"10 0\\n10 10\\n10 10\\n\") == \"28.28\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\n\"\n\nThis code snippet checks if the given input meets the given conditions for the given problem statement. The solution provided is correct."
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 2\\n123457 0\\n0 2\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed with input {input_data} and expected output {expected_output}\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\n\", \"Solution does not match the expected output\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution.func_name == \"solution\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\n123457 0\n0 2\n123458 1\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5\n3 5 10 2 5\n2 4 5 1 3''') == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('tests/test_cases/dangerous_wild_west.txt', 'r')) == '90\\n'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 10 5 4 2\\n2 1 5 3 4\") == 100\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\") == 180\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\") == 270\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\") == 360"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\\n\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90\\n'\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n') == '90\\n'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '6.000000', \"Expected output: '6.000000', got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"television_city.txt\", \"r\").read()) == 6.0\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.000000, \"The output should be 6.000000, but it is %s.\" % solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\")"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6.000000\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3) + \" \" + str(10)) == \"6.000000\"\nassert solution(str(3) + \" \" + str(1) + \" \" + str(2) + \" \" + str(6)) == \"6.000000\"\nassert solution(str(3) + \" \" + str(0) + \" \" + str(4) + \" \" + str(3)) == \"6.000000\"\nassert solution(str(3) + \" \" + str(0) + \" \" + str(8) + \" \" + str(2)) == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.0\nassert solution(\"1 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 5.0\nassert solution(\"2 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 4.0\nassert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 3.0\nassert solution(\"4 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 2.0\nassert solution(\"5 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 1.0\nassert solution(\"6 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 0.0"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6.000000\", \"Test failed\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..'\nassert solution('2\\n0 0\\n0 0\\n1.2\\n..\\n0') == '1.2\\n..'\nassert solution('2\\n0 0\\n0 0\\n1.2\\n..\\n0\\n20') == '1.2\\n..\\n10\\n...\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n1.\n..\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n..\n0\n''') == '''\n1.\n..\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n...\\n0\") == \"1.\\n...\\n\"\nassert solution(\"3\\n0 0\\n0 0\\n1.5\\n.5\\n0\") == \"1.5\\n.5\\n0\\n\"\nassert solution(\"41\\n0 0\\n0 0\\n1.5\\n.5\\n0\") == \"1.5\\n.5\\n0\\n\"\nassert solution(\"41\\n0 0\\n0 0\\n1.5\\n.5\\n0\") == \"1.5\\n.5\\n0\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n...\\n0\") == \"1.\\n...\\n\"\nassert solution(\"401\\n0 0\\n0 0\\n1.5\\n.5\\n0\") == \"1.5\\n.5\\n0\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect: {output()}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n0') == '1.\\n..\\n0\\n1\\n0'\n\nfrom typing import List"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\nabcdef'\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef'\nassert solution('3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na\\nbc\\nbc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1\\ndef solution(stdin: str) -> str:\\n\\treturn input()\\n\"\nassert solution(1) == \"1\\ndef solution(stdin: str) -> str:\\n\\treturn 'abca'\\n\"\nassert solution(2) == \"1\\ndef solution(stdin: str) -> str:\\n\\treturn 'def'\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n1\\nabc\"\nassert solution() == \"1\\n1\\ncba\"\nassert solution() == \"1\\n1\\nabc\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n) == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nassert solution('4\\nxyz\\n123\\n456\\n789') == '4\\n2\\n123456789\\n'\n\nassert solution('10\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nuvwxyz\\n') == 'abcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nuvwxyz\\n'\n\nassert solution('10\\nabcde\\nuvwxyz\\n1234\\n') == 'abcde\\nuvwxyz\\n1234\\n'\n\nassert solution('10\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nuvwxyz\\n') == 'abcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nuvwxyz\\n'\n\nassert solution('10\\nabcde\\nuvwxyz\\n1234\\n') == 'abcde\\nuvwxyz\\n1234\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\", \"Test 1\"\nassert solution(\"2 2 2 2\") == \"NO\", \"Test 2\"\nassert solution(\"3 3 3 3\") == \"YES\", \"Test 3\"\nassert solution(\"4 4 4 4\") == \"YES\", \"Test 4\"\nassert solution(\"5 5 5 5\") == \"NO\", \"Test 5\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1 1 1 1\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n    2 2 1 1\n    \"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"\n    3 3 2 1\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n    4 4 1 1\n    \"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"\n    5 5 1 1\n    \"\"\"\n) == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"NO\"\nassert solution(\"2 1 2 2\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES\\n'\nassert solution('2 3 4 5') == 'NO\\n'\nassert solution('10 5 10 5') == 'NO\\n'\nassert solution('10 5 0 5') == 'NO\\n'\nassert solution('10 0 5 5') == 'YES\\n'\nassert solution('5 5 5 5') == 'YES\\n'\nassert solution('1 1 1 5') == 'YES\\n'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"1 1 2 2\") == \"YES\"\nassert solution(\"1 1 2 3\") == \"NO\"\nassert solution(\"2 2 2 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.5696000000'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"80.5696000000\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"80.57\", \"Expected output is 80.57, but got: {}.\".format(solution())"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"80.57\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.57\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.57\"\nassert solution(\"3 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"72.22\"\nassert solution(\"4 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"75.00\"\nassert solution(\"5 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"75.00\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.57'\nassert solution('''\n2 36\n1.0000 0.0000 50.0000\n0.0000 1.0000 30.0000\n''') == '80.00'\nassert solution('''\n2 36\n1.0000 0.0000 50.0000\n-0.0080 1.5417 25.0000\n''') == '80.00'\nassert solution('''\n2 36\n1.0000 0.0000 50.0000\n0.0000 1.0000 30.0000\n''') == '80.00'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\nassert solution('4 0 0 1 1 1 0 0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2') == 2\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"5 0 0 1 1 1 0 0 1\") == \"5\\n\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"6\\n\"\nassert solution(\"7 0 0 1 1 1 0 0 1\") == \"7\\n\"\nassert solution(\"8 0 0 1 1 1 0 0 1\") == \"8\\n\"\nassert solution(\"9 0 0 1 1 1 0 0 1\") == \"9\\n\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"10\\n\"\nassert solution(\"11 0 0 1 1 1 0 0 1\") == \"11\\n\"\nassert solution(\"12 0 0 1 1 1 0 0 1\") == \"12\\n\"\nassert solution(\"13 0 0 1 1 1 0 0 1\") == \"13\\n\"\nassert solution(\"14 0 0 1 1 1 0 0 1\") == \"14\\n\"\nassert solution(\"15 0 0 1 1 1 0 0 1\") == \"15\\n\"\nassert solution(\"16 0 0 1 1 1 0 0 1\") == \"16\\n\"\nassert solution(\"17 0 0 1 1 1 0 0 1\") == \"17\\n\"\nassert solution(\"18 0 0 1 1 1 0 0 1\") == \"18\\n\"\nassert solution(\"19 0 0 1 1 1 0 0 1\") == \"19\\n\"\nassert solution(\"20 0 0 1 1 1 0 0 1\") == \"20\\n\"\nassert solution(\"21 0 0 1 1 1 0 0 1\") == \"21\\n\"\nassert solution(\"22 0 0 1 1 1 0 0 1\") == \"22\\n\"\nassert solution(\"23 0 0 1 1 1 0 0 1\") == \"23\\n\"\nassert solution(\"24 0 0 1 1 1 0 0 1\") == \"24\\n\"\nassert solution(\"25 0 0 1 1 1 0 0 1\") == \"25\\n\"\nassert solution(\"26 0 0 1 1 1 0 0 1\") == \"26\\n\"\nassert solution(\"27 0 0 1 1 1 0 0 1\") == \"27\\n\"\nassert solution(\"28 0 0 1 1 1 0 0 1\") == \"28\\n\"\nassert solution(\"29 0 0 1 1 1 0 0 1\") == \"29\\n\"\nassert solution(\"30 0 0 1 1 1 0 0 1\") == \"30\\n\"\nassert solution(\"31 0 0 1 1 1 0 0 1\") == \"31\\n\"\nassert solution(\"32 0 0 1 1 1 0 0 1\") == \"32\\n\"\nassert solution(\"33 0 0 1 1 1 0 0 1\") == \"33\\n\"\nassert solution(\"34 0 0 1 1 1 0 0 1\") == \"34\\n\"\nassert solution(\"35 0 0 1 1 1 0 0 1\") == \"35\\n\"\nassert solution(\"36 0 0 1 1 1 0 0 1\") == \"36\\n\"\nassert solution(\"37 0 0 1 1 1 0 0 1\") == \"37\\n\"\nassert solution(\"38 0 0 1 1 1 0 "
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Input Error\"\nassert solution(\"2\\n0\\n0\\n1\\n1\\n1\\n0\\n0\\n1\") == \"2\"\nassert solution(\"4\\n0\\n0\\n1\\n1\\n1\\n0\\n0\\n1\") == \"2\"\nassert solution(\"4\\n0\\n0\\n1\\n1\\n1\\n0\\n0\\n1 2\") == \"2\"\nassert solution(\"4\\n0\\n0\\n1\\n1\\n1\\n0\\n0\\n1 2 3\") == \"2\"\nassert solution(\"4\\n0\\n0\\n1\\n1\\n1\\n0\\n0\\n1 2 3 4\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"5 0 0 1 1 1 0 0 1 1 1 1\") == \"4\\n\"\nassert solution(\"5 0 0 1 1 1 0 0 1 1 1 1 1\") == \"5\\n\"\nassert solution(\"5 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"7\\n\"\nassert solution(\"5 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2, \"Expected output: 2\"\nassert solution(\"6 0 1 1 1 0 1 1 1\") == 3, \"Expected output: 3\"\nassert solution(\"10 0 1 0 1 1 1 0 1\") == 3, \"Expected output: 3\"\nassert solution(\"12 1 1 0 1 1 1 1 1\") == 4, \"Expected output: 4\"\nassert solution(\"2 0 1 1 1 1 0 1 0\") == 1, \"Expected output: 1\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"4 1 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"4 1 0 1 1 1 0 0 0\") == \"1\"\nassert solution(\"4 1 0 1 1 0 0 0 1\") == \"1\"\nassert solution(\"4 1 0 1 0 0 0 0 1\") == \"0\"\nassert solution(\"4 1 0 0 0 0 0 0 1\") == \"0\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('4 1 0 1 1 1 0 0 1') == '3'\nassert solution('4 0 1 1 1 1 0 0 1') == '2'\nassert solution('4 0 1 1 1 1 0 0 1') == '3'\nassert solution('4 1 1 1 1 1 0 0 1') == '2'\nassert solution('4 1 1 1 1 1 0 0 1') == '3'\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1400\\n\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400, \"Invalid output\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 250\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n4 2 100\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == 1400, \"The output should be 1400.\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\nostrlo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nostrlo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3907\\n\", \"Please fill in the solution.\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n3907\n\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\nostr\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nlondon\\ndublin\\nreykjavik\\nbrussels\\nostr\\nstockholm\\nhelsinki\\nlondon\\ncopenhagen\\ncopenhagen\\nberlin\\namsterdam\\nl"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == 3907\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907\\n'\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '4267'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '6000'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3907\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"5191\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\\n\"\n\nassert solution(r\"\"\"10 2\n4 1 2 3\n5 3 1 2\n6 2 1 3\n7 3 2 1\n8 1 3 2\n9 2 1 3\n10 3 2 1\n\"\"\") == \"1\\n2\\n1\\n\"\n\nassert solution(r\"\"\"5 4\n2 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\\n\"\n\nassert solution(r\"\"\"10 2\n1 2 3 4\n5 3 1 2\n6 2 1 3\n7 3 2 1\n8 1 3 2\n9 2 1 3\n10 3 2 1\n\"\"\") == \"1\\n2\\n1\\n\"\n\nassert solution(r\"\"\"5 4\n1 2 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\\n\"\n\nassert solution(r\"\"\"10 2\n1 2 3 4\n5 3 1 2\n6 2 1 3\n7 3 2 1\n8 1 3 2\n9 2 1 3\n10 3 2 1\n\"\"\") == \"1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n\nfrom typing import List"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1\\n2\\n1\\n2'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1\\n2\\n1\\n2'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1\\n2\\n1\\n2'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1\\n2\\n1\\n2'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of huts: \")) == '2\\n1\\n2\\n1\\n'\nassert solution(input(\"Enter the number of huts: \")) == '2\\n2\\n1\\n2\\n'\nassert solution(input(\"Enter the number of huts: \")) == '1\\n3\\n1\\n2\\n'\nassert solution(input(\"Enter the number of huts: \")) == '1\\n2\\n3\\n1\\n'\nassert solution(input(\"Enter the number of huts: \")) == '3\\n1\\n1\\n2\\n'\nassert solution(input(\"Enter the number of huts: \")) == '1\\n1\\n1\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n\nfrom typing import List"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 5) == \"00010\"\nassert solution(3, 8) == \"01001\"\nassert solution(5, 5) == \"01001\"\nassert solution(5, 8) == \"01001\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n\nfrom typing import List"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 5\\n01000\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 5\\n01001\\n11101\\n10111\") == \"00010\"\nassert solution(\"3 5\\n01001\\n11100\\n10110\") == \"00010\"\nassert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n\nHere's the code for the given solution:\n\n```python\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 1\\n0 4\\n6 2\\n\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'\nassert solution('1\\n6 3\\n0 4\\n6 12\\n') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nprint(\"pass\")"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n10 10\\n0 5\\n1 1\\n\") == \"possible\"\nassert solution(\"2\\n10 20\\n0 5\\n1 1\\n\") == \"impossible\"\nassert solution(\"1\\n10 10\\n0 5\\n2 2\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n10 10\\n0 5\\n1 1\\n2 2\\n\") == \"possible\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"10\\n20 10 0\\n15 0 -5\\n0 10 5\\n25 5 -20\\n-10 10 25\") == \"2\"\nassert solution(\"10\\n20 10 0\\n15 0 -5\\n0 10 5\\n25 5 -20\\n-10 10 25\") == \"3\"\nassert solution(\"10\\n20 10 0\\n15 0 -5\\n0 10 5\\n25 5 -20\\n-10 10 25\") == \"3\"\nassert solution(\"10\\n20 10 0\\n15 0 -5\\n0 10 5\\n25 5 -20\\n-10 10 25\") == \"5\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n    \"\"\"\n) == \"2\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3)) == '1'\nassert solution(str(5)) == '2'\nassert solution(str(10)) == '2'\nassert solution(str(10000)) == '2'\nassert solution(str(100000000)) == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2\nassert solution(\"10\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\") == 1\nassert solution(\"10\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\") == 2\nassert solution(\"10\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\") == 4\nassert solution(\"10\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('10\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1') == '1000'\nassert solution('10\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\n0 0 1\\"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\nPlot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the number of events, dreams and scenarios: \")) == \"Plot Error\"\nassert solution(input(\"Enter the number of events, dreams and scenarios: \")) == \"Yes\"\nassert solution(input(\"Enter the number of events, dreams and scenarios: \")) == \"3 Just A Dream\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\"\n\nassert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nE nothing_happens\nS 1!nothing_happens\nS 2!nothing_happens\nE all_just_a_dream\nD 5\nE something_happens\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nE nothing_happens\nS 1!nothing_happens\nS 2!nothing_happens\nE all_just_a_dream\nD 5\nE something_happens\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nD 5\nE something_happens\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\n\"\"\") == \"3 Just A Dream\"\n\nassert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nE nothing_happens\nS 1!nothing_happens\nS 2!nothing_happens\nE all_just_a_dream\nD 5\nE something_happens\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nD 5\nE something_happens\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\nE all_just_a_dream\nD 5\nS 1!something_happens\nS 2!something_happens\n\"\"\") == \"Plot Error\"\n\nassert solution(\"\"\"10\nE"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"Plot Error\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1 bobby_died\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nE jr_does_bad_things\\n\") == \"Plot Error\\n2 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n2 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\nS 5!E business_as_usual\\n\") == \"Plot Error\\n4 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\nS 5!E business_as_usual\\nS 6!E jr_does_bad_things\\n\") == \"Plot Error\\n4 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\nS 5!E business_as_usual\\nS 6!E jr_does_bad_things\\nS 7!E business_as_usual\\n\") == \"Plot Error\\n4 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\nS 5!E business_as_usual\\nS 6!E jr_does_bad_things\\nS 7!E business_as_usual\\nS 8!S 1!E jr_does_bad_things\\n\") == \"Plot Error\\n4 Just A Dream\\nYes\\n\"\nassert solution(\"1\\nS 1!business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!E jr_does_bad_things\\nS 4!S 1!E jr_does_bad_things\\nS 5!E business_as_usual\\nS 6!E jr_does_bad"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nPlot Error\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 1\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 2\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 6\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_as_usual\\nS 1!business_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == '3 Just A Dream'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nPlot Error\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaec"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''EXERCITATION ULLAMCO Laboris Nisi Ut Amet Consulting Duis Aute Iure Dolor In Reprehenderit In Velit Esse Cillum Dolore Ultrices Pariatur Excepteur Cupidatat Non Proident Sunt Culpafugiat Officia Deserunt Mollit Id Esse'''\n\nassert solution('''10 10 20 30\nabcdefg\nhijklmnop\n''') == '''ABCDEFGHIJKLMNOP\nHIJKLMNOP'''\n\nassert solution('''3 10 15 20\nhello world\nabcde fghij\nklmno \n''') == '''HELLO WORLD\nABCDEFGHIJKLMNO'''\n\nassert solution('''1 10 15 20\nabcdefghijklmnopqrstuvwxyz\nhijklmnopqrstuvwxyz\n''') == '''ABCDEFGHIJKLMNOPQRSTUVWXYZ\nHIJKLMNOPQRSTUVWXYZ'''\n\nassert solution('''1 1 2 3\nabcde\nfghij\nklmno\n''') == '''ABCDE\nFGHIJ\nKLMNO'''"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\n eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco|^|\\nlaboris nisi ut aliquip| |\\nex ea commodo consequat|X|\\nDuis aute irure dolor in|v|\\nreprehenderit in|V|\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\nlaboris nisi ut aliquip\\nex ea commodo consequat\\nDuis aute irure dolor in\\nreprehenderit in\\nv\\n\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Input: 24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\nlaboris nisi ut aliquip\\nex ea commodo consequat\\nDuis aute irure dolor in\\nreprehenderit in\\nv\\n\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Input: 24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output: +------------------------+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Input: 24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output: +------------------------+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Input: 24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output: +------------------------+\n|"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24 5 8 7\") == \"\\n\" + \\\n                     \"+-------------------+ \" + \\\n                     \"|   exercitation ullamco   |\" + \\\n                     \"+-------------------+ \" + \\\n                     \"|   laboris nisi ut aliquip   |\" + \\\n                     \"+-------------------+ \" + \\\n                     \"|   ex ea commodo consequat| \" + \\\n                     \"+-------------------+ \" + \\\n                     \"|   Duis aute irure dolor in| \" + \\\n                     \"+-------------------+ \" + \\\n                     \"|   reprehenderit in        | \" + \\\n                     \"+-------------------+ \" + \\\n                     \"-------------------+ \" + \\\n                     \"|   Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum| \" + \\\n                     \"+-------------------+ \" + \\\n                     \"\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('24 5 8 7') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\ninput = \"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\n\\t\\t\\t\\teiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Input:\\n24 5 8 7\\n\\t\\tLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\n\\t\\t\\teiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nexpected = \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"possible\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\"\"\") == \"possible\"\n\nassert solution(\"\"\"5 5\n1 2 3 4 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\"\"\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"possible\\n\" # pass\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"1.00000000\"\n\nfrom typing import List"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == 1.00000000\nassert solution('1') == 1.00000000\nassert solution('2') == 1.00000000"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\n\"\nassert solution(\"10 2 2\") == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'You are correct!', \"Test Failed\"\n\nassert solution() == 'You are correct!', \"Test Failed\"\n\nassert solution() == 'You are correct!', \"Test Failed\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3'\nassert solution('2\\n1\\n3') == '2\\n1\\n3'\nassert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3'\nassert solution('2\\n1\\n3\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3'\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}\\nGot: {solution(stdin=input())}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\\n\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\\n\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\\n\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n1\\n3\\n', \"Test 1 failed\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n4 5\n0 1\n1 2\n2 3\n3 4\n5 0\n0 3\n1 4\n2 5\n3 0\n4 1\n5 2\n6 3\n7 4\n8 5\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n2 1\n0 1\n0 2\n1 2\n0 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n2 1\n0 1\n0 2\n1 2\n0 3\n0 4\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 3\n0 1\n0 2\n0 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 3\n0 1\n0 2\n0 3\n0 4\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 3\n0 1\n0 2\n0 3\n0 4\n0 5\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n4 4\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n0 14\n0 15\n0 16\n0 17\n0 18\n0 19\n0 20\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n5 5\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n0 11\n0 12\n0 13\n0 14\n0 15\n0 16\n0 17\n0 18\n0 19\n0 20\n0 21\n0 22\n0 23\n0 24\n0 25\n0 26\n0 27\n0 28\n0 29\n0 30\n0 31\n0 32\n0 33\n0 34\n0 35\n0 36\n0 37\n0 38\n0 39\n0 40\n0 41\n0 42\n0 43\n0 44\n0 45\n0 46\n0 47\n0 48\n0 49\n0 50\n0 51\n0 52\n0 53\n0 54\n0 55\n0 56\n0 57\n0 58\n0 59\n0 60\n0 61\n0 62\n0 63\n0 64\n0 65\n0 66\n0 67\n0 68\n0 69\n0 70\n0 71\n0 72\n0 73\n0 74\n0 75\n0 76\n0 77\n0 78\n0 79\n0 80\n0 81\n0 82\n0 83\n0 84\n0 85\n0 86\n0 87\n0 88\n0 89\n0 90\n0 91\n0 92\n0 93\n0 94\n0 95\n0 96\n0 97\n0 98\n0 99\n0 100\n0 101\n0 102\n0 103\n0 104\n0 105\n0 106\n0 107\n0 108\n0 109\n0 110\n0 111\n0 112\n0 113\n0 114\n0 115\n0 116\n0 117\n0 118\n0 119\n0 120\n0 121\n0 1"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Incorrect output. Expected: {output_str}, got: {solution(input_str)}\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 1\\n1 2\\n0 2\") == \"2\"\nassert solution(\"5 2\\n0 1\\n1 2\\n0 2\") == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"5 5\\n1 2\\n2 3\\n1 3\\n2 4\\n1 4\\n2 5\\n1 5\") == \"1.4\"\nassert solution(\"20 30\\n0 1\\n1 2\\n0 2\\n2 4\\n0 4\\n4 5\\n0 5\\n5 6\\n0 6\\n6 7\\n0 7\\n7 8\\n0 8\\n8 9\\n0 9\\n9 10\\n0 10\\n10 11\\n0 11\\n11 12\\n0 12\\n12 13\\n0 13\\n13 14\\n0 14\\n14 15\\n0 15\\n15 16\\n0 16\\n16 17\\n0 17\\n17 18\\n0 18\\n18 19\\n0 19\\n19 20\\n0 20\\n20 21\\n0 21\\n21 22\\n0 22\\n22 23\\n0 23\\n23 24\\n0 24\\n24 25\\n0 25\\n25 26\\n0 26\\n26 27\\n0 27\\n27 28\\n0 28\\n28 29\\n0 29\\n29 30\\n0 30\\n30 31\\n0 31\\n31 32\\n0 32\\n32 33\\n0 33\\n33 34\\n0 34\\n34 35\\n0 35\\n35 36\\n0 36\\n36 37\\n0 37\\n37 38\\n0 38\\n38 39\\n0 39\\n39 40\\n0 40\\n40 41\\n0 41\\n41 42\\n0 42\\n42 43\\n0 43\\n43 44\\n0 44\\n44 45\\n0 45\\n45 46\\n0 46\\n46 47\\n0 47\\n47 48\\n0 48\\n48 49\\n0 49\\n49 50\\n0 50\\n50 51\\n0 51\\n51 52\\n0 52\\n52 53\\n0 53\\n53 54\\n0 54\\n54 55\\n0 55\\n55 56\\n0 56\\n56 57\\n0 57\\n57 58\\n0 58\\n58 59\\n0 59\\n59 60\\n0 60\\n60 61\\n0 61\\n61 62\\n0 62\\n62 63\\n0 63\\n63 64\\n0 64\\n64 65\\n0 65\\n65 66\\n0 66\\n66 67\\n0 67\\n67 68\\n0 68\\n68 69\\n0 69\\n69 70\\n0 70\\n70 71\\n0 71\\n71 72\\n0 72\\n72 73\\n0 73\\n73 74\\n0 74\\n74 75\\n0 75\\n75 76\\n0"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1\\n1'\nassert solution('3 2\\n1 2\\n2 1\\n1 0') == '1\\n0'\nassert solution('3 2\\n0 1\\n1 2\\n1 0') == '0\\n1'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"14500000001\", \"Your solution is not correct.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 1 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 2 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 3 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 4 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 5 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 6 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 7 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 8 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 9 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 10 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 11 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 12 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 13 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 14 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 15 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 16 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 17 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 18 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 19 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 20 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 21 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 22 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 23 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 24 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 25 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 26 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 27 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 28 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"14500000001\", \"Testcase 29 incorrect\"\nassert solution(open(\"input.txt\", \"r\")) == \"145000"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n\nfrom math import gcd, floor"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The solution is not correct.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"14500000001\"\n\nimport math\nfrom sympy import gcd, symbols, factorial"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4 2') == '14500000001', \"Expected output: 14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"14500000001\"\nassert solution(2) == \"29000000000\"\nassert solution(3) == \"43500000000\"\nassert solution(4) == \"58000000000\"\nassert solution(5) == \"72500000000\"\n\nfrom typing import List"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 14500000001\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 0\nassert solution(1, 4) == 0\nassert solution(3, 7) == 0\nassert solution(1, 6) == 1\nassert solution(2, 6) == 1"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 0, \"The output should be 0.\"\nassert solution(12) == 0, \"The output should be 0.\"\nassert solution(16) == 1, \"The output should be 1.\"\nassert solution(20) == 1, \"The output should be 1.\"\nassert solution(24) == 2, \"The output should be 2.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6\\n') == '0\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Input {input} does not match expected output {expected_output}\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution does not match the expected output\\ninput: {input()}\\nexpected: {expected}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 4 300\\n3 5 300\\n\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3100\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5.250000000\\n\"\nassert solution(input()) == \"3.000000000\\n\"\nassert solution(input()) == \"1.875000000\\n\"\nassert solution(input()) == \"1.666666667\\n\"\nassert solution(input()) == \"1.500000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n566.5\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"The output is incorrect. Expected: {sample_output}, Received: {solution(sample_input)}\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'\nassert solution('4 2\\n1 1\\n6 5\\n2 5\\n2 9\\n7 13') == '3.750000000'\nassert solution('4 2\\n1 1\\n6 5\\n2 5\\n2 9\\n7 13') == '3.750000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.25"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == 5.25, 'MAD not as expected'\nprint('All tests passed!')"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output: 7\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\"\nassert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\"\nassert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\\n\", \"Your solution is incorrect!\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 32.6405451448, \"Incorrect answer\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Solution failed for input: {input_string}, expected output: {expected_output}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\", \"Test case 1 is incorrect. Expected output: 32.6405451448, actual output: {}.\"\n\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\", \"Test case 2 is incorrect. Expected output: 32.6405451448, actual output: {}.\"\n\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\", \"Test case 3 is incorrect. Expected output: 32.6405451448, actual output: {}.\"\n\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 "
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"32.6405451448\\n\", \"Incorrect output\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.640545144799999\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.640545144799999\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.640545144799999\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0."
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 32.640545144799997\nassert solution() == 33.333333333333334"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\"\nassert solution(stdin) == \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 4 3\\n\") == \"2 3 4 1\"\nassert solution(\"4\\n\") == \"4\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    Input:\n    4\n    2 1 4 3\n    \"\"\"\n) == \"\"\"\nOutput:\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\\n\"\nassert solution(\"6\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\\n\"\nassert solution(\"7\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\\n\"\nassert solution(\"8\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2 3 4 1\"\"\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Your answer is {solution(input())}, but the output is {output()}\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'\n\nassert solution('''\n8\n1 2\n2 1\n2 3\n2 4\n2 5\n3 3\n3 2\n3 1\n3 4\n4 1\n4 2\n4 3\n4 5\n5 1\n5 2\n5 3\n5 4\n''') == '8.616227766016836\\n8.616227766016836\\n8.616227766016836\\n8.616227766016836\\n8.616227766016836\\n8.616227766016836\\n8.616227766016836'\n\nassert solution('''\n9\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == '9.212608695652176\\n9.212608695652176\\n9.212608695652176\\n9.212608695652176\\n9.212608695652176\\n9.212608695652176\\n9.212608695652176\\n9.212608695652176'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\"\nassert solution(\"1\\n1 1\") == \"1.0\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\") == \"15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\"\nassert solution(\"1\\n1 1\") == \"1.0\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\") == \"15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.313708498984763\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"15.313708498984763\\n15.313708498984763\\n15.313708498984763\\n15.31370849898476"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Incorrect solution. Expected: {expected_output}, Received: {solution(sample_input)}\"\n\nsample_input = \"\"\"6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n\"\"\"\n\nexpected_output = \"\"\"7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\n7.656854249492381\"\"\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\n\nprint(solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\"))"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n\"\"\") == \"7.656854249492381\"\n\nassert solution(\"\"\"\n7\n1 1\n1 2\n2 2\n3 3\n3 4\n4 4\n4 3\n3 2\n2 1\n1 1\n\"\"\") == \"7.656854249492381\"\n\nassert solution(\"\"\"\n8\n1 1\n1 2\n2 2\n3 3\n3 4\n4 4\n4 3\n3 2\n2 1\n1 1\n1 1\n\"\"\") == \"7.656854249492381\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 3"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    ''') == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"4 3\\n1 1\\n1 3\\n1 5\") == 3\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '2\\n'\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 5, 3) == 2\n\nfrom collections import Counter"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1') == '9\\n'  # Test Case 1"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == 9"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"3 3\") == \"6\\n\"\nassert solution(\"4 2\") == \"6\\n\"\nassert solution(\"5 3\") == \"15\\n\"\nassert solution(\"7 3\") == \"18\\n\"\nassert solution(\"9 1\") == \"14\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\", \"Your code is incorrect\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'2 1\\n') == '9\\n'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1') == 9"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}, expected {expected}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"9\"\nassert solution(4) == \"8\"\nassert solution(5) == \"7\"\nassert solution(6) == \"6\"\nassert solution(7) == \"5\"\nassert solution(8) == \"4\"\nassert solution(9) == \"3\"\nassert solution(10) == \"2\"\nassert solution(11) == \"1\"\nassert solution(12) == \"0\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '12', \"Solution not correct!\"\nprint(\"Solution not correct!\")\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '12\\n'\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12\\n') == '12\\n'\nassert solution('3\\n3\\n') == 'no solution\\n'\nassert solution('2\\n1\\n') == 'no solution\\n'\nassert solution('1\\n') == 'no solution\\n'\nassert solution('0\\n') == 'no solution\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"12\\n\"\nassert solution(\"2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n\") == \"no solution\\n\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n10\\n\") == \"10\\n\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n10\\n11\\n\") == \"11\\n\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n10\\n11\\n13\\n\") == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\"\nassert solution() == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"10\\n5\\n7\\n2\\n8\\n12\") == \"12\"\nassert solution(\"10\\n5\\n7\\n2\\n8\\n12\\n3\") == \"no solution\"\nassert solution(\"10\\n5\\n7\\n2\\n8\\n12\\n4\") == \"no solution\"\nassert solution(\"10\\n5\\n7\\n2\\n8\\n12\\n5\") == \"no solution\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"no solution\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n4\") == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '12\\n'  # Test case 1\nassert solution(1) == 'no solution\\n'  # Test case 2\nassert solution(2) == 'no solution\\n'  # Test case 3\nassert solution(3) == 'no solution\\n'  # Test case 4\nassert solution(4) == 'no solution\\n'  # Test case 5"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(0) == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n00\\n01\\n10\\n110\\n111\\n\") == \"11\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1, \"Your solution is incorrect\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '11\\n'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('000101111100101001100000110100100001011100100101110010001011000100111100001000010111111011110000101010110111001101101011100110011101011001101000110010010101100001100001111010010000100001101101001100110010011000010011101111000111111110111001001100110110100100100000110010001000100010011001001101100001101011100111111010110101110010011100100101100110101011001001110101100010010010101011000100101001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010001011001100100010110011001000101100110010"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11\"\n\nfrom typing import List"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n00\n01\n10\n110\n111\n''') == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n\") == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the input and output.\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(data) == output\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '''100 250 320'''"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for input: {input()}, expected: {expected_output}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('tax_accountant.in', 'r')) == '100 250 320\\n'\nassert solution(open('tax_accountant.in', 'r')) == '100 250 320\\n'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2\\n'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(50, 100) == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(50, 100) == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(50, 100) == ['3', '7', '4', '6', '5', '7', '2', '15', '2']\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3 7 4 6 5 7 2 15 2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 40.0\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 14.0\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 8') == 40.0\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 14.0\nassert solution('1\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 14.0\nassert solution('1\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 8') == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 40.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\") == 10.0\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\") == 16.0\nassert solution(\"0 0\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(test_input) == test_output, \"Testcase failed: {}\".format(test_input)"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0000000000000000000000000000000\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Your solution is incorrect!\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == 1\nassert solution(\"2\\n3\\n1 2 3\\n\") == 2\nassert solution(\"3\\n3\\n1 2 3\\n\") == 3\nassert solution(\"4\\n3\\n1 2 3\\n\") == 0\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n2\\n4 2 4\\n\") == \"1\\n2\\n\"\nassert solution(\"2\\n3\\n5 2 3 2\\n\") == \"2\\n\"\nassert solution(\"3\\n4\\n6 3 4 3\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n3\\n4 3 2\\n\") == \"2\\n\"\nassert solution(\"3\\n4\\n5 4 3\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n4\\n5 5 4\\n\") == \"1\\n2\\n\"\nassert solution(\"1\\n2\\n3 4 5\\n\") == \"1\\n2\\n\"\nassert solution(\"2\\n3\\n5 4 6\\n\") == \"2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"2\\n5\\n1 2 3 4 5\") == \"2\\n1 3\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n2\\n1\\n3\") == \"1\\n1\\n\"\nassert solution(stdin=\"4\\n1\\n1 2 3 4\") == \"1\\n1\\n2\\n3\\n\"\nassert solution(stdin=\"3\\n1\\n2 1 3\") == \"1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 3\\n') == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(input())"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '''1'''"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''\n1\n3\n2 1 3\n'''"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    725.85 1.71 2.38\n    \"\"\"\n) == \"199 162\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"199 162\"\nprint(\"Tests passed\")"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"199\n162\n\"\"\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('555.55 1.23 2.45') == '0 0'\nassert solution('222.22 1.11 3.33') == '0 0'\nassert solution('0.00 1.11 2.22') == '0 0'\nassert solution('1000.00 1.11 2.22') == '0 0'\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"925.65 1.65 2.63\") == \"348 283\\n\"\nassert solution(\"625.90 1.55 2.95\") == \"455 459\\n\"\nassert solution(\"825.30 1.85 2.00\") == \"541 552\\n\"\nassert solution(\"725.65 1.65 2.80\") == \"163 149\\n\"\nassert solution(\"1000.00 1.00 0.00\") == \"None\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(stdin=\"0.00 1.00 0.00\") == \"0 0\"\nassert solution(stdin=\"2000.00 100.00 0.00\") == \"0 0\"\nassert solution(stdin=\"10000.00 10000.00 10000.00\") == \"0 0\"\nassert solution(stdin=\"10000.00 0.00 10000.00\") == \"0 0\"\nassert solution(stdin=\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(stdin=\"0.00 1.00 1.00\") == \"1 0\"\nassert solution(stdin=\"1.00 1.00 0.00\") == \"1 0\"\nassert solution(stdin=\"0.00 0.00 1.00\") == \"0 1\"\nassert solution(stdin=\"1.00 0.00 0.00\") == \"0 1\"\nassert solution(stdin=\"2.00 1.00 0.00\") == \"1 1\"\nassert solution(stdin=\"1.00 0.00 1.00\") == \"1 1\"\nassert solution(stdin=\"1.00 0.00 1.00\") == \"1 1\"\nassert solution(stdin=\"0.00 1.00 0.00\") == \"1 1\"\nassert solution(stdin=\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(stdin=\"1000.00 1000.00 1000.00\") == \"2 0\"\nassert solution(stdin=\"1000.00 1000.00 0.00\") == \"2 0\"\nassert solution(stdin=\"0.00 1000.00 1000.00\") == \"2 0\"\nassert solution(stdin=\"0.00 0.00 0.00\") == \"0 0\"\nassert solution(stdin=\"1000.00 1000.00 1000.00\") == \"2 0\"\nassert solution(stdin=\"1000.00 1000.00 0.00\") == \"2 0\"\nassert solution(stdin=\"0.00 1000.00 1000.00\") == \"2 0\"\nassert solution(stdin=\"0.00 0.00 0.00\") == \"0 0\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162\\n'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == 16"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"10 10\\n0 1 2 3\\n4 5 6 7\\n8 9 0 10\\n1 0 0 0\") == \"1024\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(\"The correctness of the solution is verified successfully!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '16'\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    1\n    O 4\n    ''') == '2 1 4'\n\nassert solution('''\n    2\n    E 1\n    O 15\n    ''') == '2 1 4'\n\nassert solution('''\n    3\n    O 15\n    E 10\n    I 5\n    ''') == '2 1 4'\n\nassert solution('''\n    4\n    O 25\n    E 30\n    I 35\n    I 40\n    E 45\n    ''') == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 1 4\\n\", \"The solution is incorrect\"\nassert solution() == \"3 2 4\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\nO 4\\n\"\n) == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '2 1 4\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\"\nassert solution(\"2\\nE 2\\n\") == \"1 2 1\"\nassert solution(\"3\\nO 4\\nE 5\\nI 8\\n\") == \"2 2 2\"\nassert solution(\"4\\nO 4\\nE 3\\nI 10\\n\") == \"4 1 2\"\nassert solution(\"5\\nO 1\\nE 5\\nI 10\\n\") == \"1 3 1\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nE 5\\nO 3\") == \"2 3 1\"\nassert solution(\"3\\nO 10\") == \"2 4 1\"\nassert solution(\"4\\nE 3\\nI 5\") == \"2 5 1\"\nassert solution(\"5\\nO 2\\nI 8\") == \"2 6 1\"\nassert solution(\"6\\nE 4\\nI 7\") == \"2 7 1\"\nassert solution(\"7\\nO 3\\nE 5\") == \"2 8 1\"\nassert solution(\"8\\nI 5\\nE 2\") == \"2 9 1\"\nassert solution(\"9\\nI 6\\nO 1\") == \"2 10 1\"\nassert solution(\"10\\nE 1\\nO 4\") == \"2 11 1\"\nassert solution(\"11\\nE 2\\nI 4\") == \"2 12 1\"\nassert solution(\"12\\nO 5\\nE 3\") == \"2 13 1\"\nassert solution(\"13\\nO 6\\nI 2\") == \"2 14 1\"\nassert solution(\"14\\nE 4\\nO 5\") == \"2 15 1\"\nassert solution(\"15\\nO 7\\nE 6\") == \"2 16 1\"\nassert solution(\"16\\nO 8\\nI 3\") == \"2 17 1\"\nassert solution(\"17\\nE 5\\nO 6\") == \"2 18 1\"\nassert solution(\"18\\nO 9\\nI 5\") == \"2 19 1\"\nassert solution(\"19\\nE 6\\nI 7\") == \"2 20 1\"\nassert solution(\"20\\nI 8\\nO 7\") == \"2 21 1\"\nassert solution(\"21\\nO 10\\nE 8\") == \"2 22 1\"\nassert solution(\"22\\nO 11\\nI 6\") == \"2 23 1\"\nassert solution(\"23\\nE 7\\nO 8\") == \"2 24 1\"\nassert solution(\"24\\nO 12\\nI 4\") == \"2 25 1\"\nassert solution(\"25\\nE 8\\nI 2\") == \"2 26 1\"\nassert solution(\"26\\nO 13\\nI 3\") == \"2 27 1\"\nassert solution(\"27\\nE 9\\nI 1\") == \"2 28 1\"\nassert solution(\"28\\nO 14\\nE 7\") == \"2 29 1\"\nassert solution(\"29\\nO 15\\nI 5\") == \"2 30 1\"\nassert solution(\"30\\nE 10\\nI 6\") == \"2 31 1\"\nassert solution(\"31\\nO 16\\nE 8\") == \"2 32 1\"\nassert solution(\"32\\nO 17\\nI 7\") == \"2 33 1\"\nassert solution(\"33\\nE 11\\nI 4\") == \"2 34 1\"\nassert solution(\"34\\nO 18\\nI 2\") == \"2 35 1\"\nassert solution(\"35\\nE 12\\nI 6\") == \"2 36 1\"\nassert solution(\"36\\nO 19\\nE 9\") == \"2 37 1\"\nassert solution(\"37\\nO 20\\nI 5\") == \"2 38 1\"\nassert solution(\"38\\nE 13\\nI 3\") == \"2 39 1\"\nassert solution(\"39\\nO 21\\nE 8\") == \"2 40 1\"\nassert solution(\"40\\nO 22\\nI 7\") == \"2 4"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 1 4\", \"The output should be '2 1 4', but it is '{}'\".format(solution(stdin))"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nO 4\\nO 4\\nO 4\\nI 5\\nI 6\\nI 5\\nE 7\\nE 8\\nE 9\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 10\\nE 1"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == 4"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=r\"\"\"\n5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Please check the output and try again.\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"Test case failed\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9') == '9.585073\\n'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('45.45 45.45 4545.45') == '9.585073'\nassert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    20 30\n    2 10 20 2 24 18 28 10\n    \"\"\"\n) == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('100 100\\n1 50 50 1 100 50 100') == 'impossible'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12.74 127.83\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\"\nassert solution(\"3\\n001\\n5\\n6\\n1\\n1\\n\\n\\n\\n\\n\") == \"1016\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\", \"Expected output: 0116\\n, but got {}\".format(solution(\"2\\n110\\n6\\n\"))"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'\nassert solution('2\\n110\\n120\\n') == '1106\\n'\nassert solution('2\\n110\\n90\\n60\\n40\\n80\\n') == '11090604080\\n'\nassert solution('2\\n110\\n90\\n60\\n40\\n80\\n70\\n') == '11090604070\\n'\nassert solution('2\\n110\\n90\\n60\\n40\\n80\\n50\\n') == '11090604050\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\\n\"\nassert solution(\"8 5\\n4 2 4\") == \"0 2 4\\n\"\nassert solution(\"8 3\\n1 2 3\") == \"0 2 3\\n\"\nassert solution(\"8 3\\n3 2 1\") == \"0 2 1\\n\"\nassert solution(\"8 5\\n4 4 3\") == \"0 2 4\\n\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\n4 4 4\\n') == ['0 2 4']"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == [0, 2, 4], \"The Drinking Musicians\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8 3\n4 4 4\n\"\"\") == [\"0\", \"2\", \"4\"]\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''8 3\n4 4 4''') == '0 2 4'\nassert solution('''9 6\n3 4 3\n3 4 3''') == '2 4'\nassert solution('''10 7\n4 5 4\n5 4 3''') == '2 4 6 8'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"10 5\\n2 3 5 6\") == \"0 2 5\"\nassert solution(\"10 10\\n2 3 4 5 6 7 8 9\") == \"0 2 4\"\nassert solution(\"10 5\\n10 20 30\") == \"0 20 30\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution()) == [0, 2, 4]"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"6 3\\n5 4 3 4 5\") == \"1 1 1\"\nassert solution(\"7 2\\n5 4 4\") == \"1 2 1\"\nassert solution(\"6 4\\n5 4 4 4 5\") == \"1 1 2 2 2\"\nassert solution(\"7 1\\n4 4 4\") == \"1 1 1\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\\n\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n3\\n1 1 2 3 4\\n2 2 3\\n1 2\\n2 1 3\\n3 2 4\\n2 3 4\\n3 4 5\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\"\nassert solution(\"6\\n2\\n3\\n4 4 2 3 4 3\") == \"definitely\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4\\n1 2\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2 3\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n4 5\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n4 5 6\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n4 5 6 7\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 4 5\\n1 2\\n4 5 6 7 8\\n7 2\\n\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n') == 'impossible'\nassert solution('4\\n5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == 'impossible'\nassert solution('4\\n1\\n1 1\\n2 1\\n3 2\\n4 3\\n5 4\\n') == 'impossible'\nassert solution('4\\n4\\n1 1\\n1 1\\n2 1\\n2 1\\n3 2\\n3 2\\n4 3\\n4 3\\n5 4\\n5 4\\n') == 'impossible'\nassert solution('4\\n3\\n1 1\\n1 1\\n2 1\\n2 1\\n3 2\\n3 2\\n4 3\\n4 3\\n5 4\\n5 4\\n') == 'impossible'\nassert solution('4\\n1\\n1 1\\n2 1\\n3 2\\n4 3\\n5 4\\n') == 'impossible'\nassert solution('4\\n3\\n1 1\\n1 1\\n2 1\\n2 1\\n3 2\\n3 2\\n4 3\\n4 3\\n5 4\\n5 4\\n') == 'impossible'\nassert solution('4\\n3\\n1 1\\n1 1\\n2 1\\n2 1\\n3 2\\n3 2\\n4 3\\n4 3\\n5 4\\n5 4\\n') == 'impossible'\nassert solution('4\\n5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"possible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n8\") == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"impossible\"\nassert solution(7) == \"possible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4.0, \"Incorrect solution\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n-1 0\\n-1 10') == 'inf\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 -1\\n4 10') == 'inf\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n0 0\\n0 10') == '0.00000\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n100000 100000') == 'inf\\nimpossible'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nprint('All tests passed!')"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n3 30\\n3 20\\n3 10\\n3 0\") == \"impossible\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n4 0\\n4 30\\n4 20\\n4 10\\n4 0\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'Input\\n2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\\nOutput\\n4.00000\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'Output\\n4.00000\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('2\\n20 20\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n10 10\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('2\\n-20 20\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n-10 10\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n-10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n-10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('2\\n-20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n-10 10\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n-10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n-10 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('2\\n-20 20\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n-10 10\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n-10 10\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n-10 10\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('2\\n-20 20\\n20 20\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n-10 10\\n20 20\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n-10 10\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('0\\n0 0\\n-10 10\\n20 20\\n20 20\\n2\\n4 10\\n4 0') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4.00000\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n2 2\\n3 3\") == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nprint(\"All test cases pass\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1\\n'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"4 3 2\\n2 2\\n1 1\\n2 3\\n3 1\\n4 1\") == \"0\"\nassert solution(\"3 2 4\\n2 1\\n2 2\\n2 3\\n1 3\\n3 1\") == \"0\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\") == \"1\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n6 2\") == \"0\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '1\\n'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Solution does not work as expected\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Test failed for sample input\"\nassert solution(\"4 3 2\\n1 1\\n2 2\\n1 2\\n1 3\\n2 3\\n3 3\") == 0, \"Test failed for sample input\"\nassert solution(\"6 7 8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == 1, \"Test failed for sample input\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n5 5\\n5 6\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"impossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test case failed.\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input}\\nExpected output: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n4 3\\n1 2\\n4 3\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    '''\n) == '5 3\\n1 0\\n2 4'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    '''\n) == '5 3\\n1 0\\n2 4'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    1 1\n    2 4\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    1 0\n    3 4\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    1 0\n    3 4\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    1 0\n    3 4\n    2 1\n    3 4\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    1 0\n    2 4\n    1 0\n    3 4\n    2 1\n    3 4\n    '''\n) == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\\n13 2\\n14 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\\n13 2\\n14 3\\n15 2\\n16 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\\n13 2\\n14 3\\n15 2\\n16 3\\n17 2\\n18 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\\n13 2\\n14 3\\n15 2\\n16 3\\n17 2\\n18 3\\n19 2\\n20 3\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 2\\n6 3\\n5 4\\n6 1\\n7 2\\n8 3\\n9 2\\n10 3\\n11 2\\n12 3\\"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4') == '5 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4') == '5 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4') == '5 4\\nimpossible'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1 2', \"Your solution is incorrect!\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n2\n1 2\n\"\"\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n1 2'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\nassert solution(\"5 2\\n0 0\\n1 0\\n0 1\\n2 1\") == \"4\\n3 3\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 4\\n2 4 5 6 8 9\") == \"2\"\nassert solution(\"10 5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 2\\n2 3 5 7 9 11 13 15 17 16\") == \"2\"\nassert solution(\"10 2\\n3 3 5 7 9 11 13 15 17 16\") == \"3\"\nassert solution(\"10 2\\n4 4 5 7 9 11 13 15 17 16\") == \"4\"\nassert solution(\"10 2\\n5 5 5 7 9 11 13 15 17 16\") == \"5\"\nassert solution(\"10 2\\n6 6 6 7 9 11 13 15 17 16\") == \"6\"\nassert solution(\"10 2\\n7 7 7 7 9 11 13 15 17 16\") == \"7\"\nassert solution(\"10 2\\n8 8 8 8 9 11 13 15 17 16\") == \"8\"\nassert solution(\"10 2\\n9 9 9 9 11 13 15 17 16\") == \"9\"\nassert solution(\"10 2\\n10 10 10 10 11 13 15 17 16\") == \"10\"\nassert solution(\"10 2\\n11 11 11 11 11 13 15 17 16\") == \"11\"\nassert solution(\"10 2\\n12 12 12 12 12 13 15 17 16\") == \"12\"\nassert solution(\"10 2\\n13 13 13 13 13 13 15 17 16\") == \"13\"\nassert solution(\"10 2\\n14 14 14 14 14 14 15 17 16\") == \"14\"\nassert solution(\"10 2\\n15 15 15 15 15 15 15 17 16\") == \"15\"\nassert solution(\"10 2\\n16 16 16 16 16 16 16 17 16\") == \"16\"\nassert solution(\"10 2\\n17 17 17 17 17 17 17 17 16\") == \"17\"\nassert solution(\"10 2\\n18 18 18 18 18 18 18 18 16\") == \"18\"\nassert solution(\"10 2\\n19 19 19 19 19 19 19 19 19\") == \"19\"\nassert solution(\"10 2\\n20 20 20 20 20 20 20 20 20\") == \"20\"\nassert solution(\"10 2\\n21 21 21 21 21 21 21 21 21\") == \"21\"\nassert solution(\"10 2\\n22 22 22 22 22 22 22 22 22\") == \"22\"\nassert solution(\"10 2\\n23 23 23 23 23 23 23 23 23\") == \"23\"\nassert solution(\"10 2\\n24 24 24 24 24 24 24 24 24\") == \"24\"\nassert solution(\"10 2\\n25 25 25 25 25 25 25 25 25\") == \"25\"\nassert solution(\"10"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 3\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 1\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 0\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 200001\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 4\\n1 2 3 4 5\\n3 4 5 6 7\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"0\\n\"\nassert solution(\"10 2\\n2 3 5 7 9 11 13 15 17 16\") == \"-1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Incorrect output for the given constraints.\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"0\\n\"\nassert solution(\"10 2\\n3 4 5 6 7 8 9 10 11 12\") == \"4\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"0\\n\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nimport itertools"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed for input: '{}', expected output: '{}', but got: '{}'\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    return \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    return \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n\"\"\") == \"7 4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''\n\nassert solution('''\nLET X = 5\nPRINT X\nLET Y = 10\nPRINT Y\nLET Z = 20\nPRINT Z\n''') == '''\n5\n10\n20\n'''\n\nassert solution('''\nLET X = 1000000000000000000000000000000000000000000000000000000000000000\nPRINT X\nLET Y = 100000000000000000000000000000000000000000000000000000000000000\nPRINT Y\nLET Z = X / Y\nPRINT Z\nLET A = 1\nLET B = 2\nLET C = 3\nLET D = 4\nLET E = 5\nLET F = 6\nLET G = 7\nLET H = 8\nLET I = 9\nLET J = 10\nLET K = 11\nLET L = 12\nLET M = 13\nLET N = 14\nLET O = 15\nLET P = 16\nLET Q = 17\nLET R = 18\nLET S = 19\nLET T = 20\nLET U = 21\nLET V = 22\nLET W = 23\nLET X = 24\nLET Y = 25\nLET Z = 26\nLET AA = 27\nLET BB = 28\nLET CC = 29\nLET DD = 30\nLET EE = 31\nLET FF = 32\nLET GG = 33\nLET HH = 34\nLET II = 35\nLET JJ = 36\nLET KK = 37\nLET LL = 38\nLET MM = 39\nLET NN = 40\nLET OO = 41\nLET PP = 42\nLET QQ = 43\nLET RR = 44\nLET SS = 45\nLET TT = 46\nLET UU = 47\nLET VV = 48\nLET WW = 49\nLET XX = 50\nLET YY = 51\nLET ZZ = 52\nLET AA = 53\nLET BB = 54\nLET CC = 55\nLET DD = 56\nLET EE = 57\nLET FF = 58\nLET GG = 59\nLET HH = 60\nLET II = 61\nLET JJ = 62\nLET KK = 63\nLET LL = 64\nLET MM = 65\nLET NN = 66\nLET OO = 67\nLET PP = 68\nLET QQ = 69\nLET RR = 70\nLET SS = 71\nLET TT = 72\nLET UU = 73\nLET VV = 74\nLET WW = 75\nLET XX = 76\nLET YY = 77\nLET ZZ = 78\nLET AA = 79\nLET BB = 80\nLET CC = 81\nLET DD = 82\nLET EE = 83\nLET FF = 84\nLET GG = 85\nLET HH = 86\nLET II = 87\nLET JJ = 88\nLET KK = 89\nLET LL = 90\nLET MM = 91\nLET NN = 92\nLET OO = 93\nLET PP = 94\nLET QQ = 95\nLET RR = 96\nLET SS = 97\nLET TT = 98\nLET UU = 99\nLET VV = 100\nLET W"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A \\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    10 LET A = 1\n    20 PRINT \"HELLO THERE \"\n    30 PRINTLN A\n    40 LET A = A + 1\n    50 IF A <= 5 THEN GOTO 20\n    60 PRINTLN \"DONE\"''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 0, 1) == 3\nassert solution(3, 0, 0) == 1\nassert solution(3, 1, 0) == 2\nassert solution(3, 1, 1) == 4"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, \"3 0 1\\n0 1\") == \"3\\n\"\nassert solution(3, \"3 0 1\\n0 2\") == \"2\\n\"\nassert solution(3, \"3 0 1\\n0 3\") == \"1\\n\"\nassert solution(3, \"3 0 1\\n0 4\") == \"0\\n\"\nassert solution(3, \"3 0 1\\n0 5\") == \"1\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nprint(\"PASS\")"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nassert solution(\"3\\n3 0 1\\n0 2\") == \"3\\n\"\nassert solution(\"3\\n3 0 1\\n0 3\") == \"3\\n\"\nassert solution(\"3\\n3 0 1\\n0 4\") == \"3\\n\"\nassert solution(\"3\\n3 0 1\\n0 5\") == \"3\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n3\\n1\\n'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 0, 1) == 3\nassert solution(3, 0, 1, 1) == 3\nassert solution(3, 1, 0, 1) == 3\nassert solution(3, 1, 1, 1) == 3\nassert solution(3, 2, 0, 1) == 1\nassert solution(3, 2, 1, 1) == 1\nassert solution(3, 2, 2, 1) == 1"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(0) == 2\nassert solution(1) == 1\nassert solution(2) == 0\nassert solution(3) == 2"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n6 4\\n1 3\\n4 2\\n5 4\\n6 3\\n3 2\\n2 4\\n2 1\\n3 1\\n4 5\\n5 1\\n6 2\\n1 5\\n5 3\\n6 5\\n2 5\\n1 3\\n1 1\\n3 4\\n4 2\\n2 4\\n4 1\\n5 4\\n1 5\\n5 2\\n3 3\\n6 4\\n5 4\\n6 5\\n5 3\\n2 1\\n4 5\\n3 1\\n4 6\\n2 6\\n2 5\\n5 4\\n5 2\\n2 6\\n2 3\\n5 3\\n2 2\\n5 1\\n3 5\\n4 3\\n4 5\\n5 2\\n1 4\\n3 4\\n3 3\\n2 4\\n2 1\\n3 4\\n2 4\\n3 1\\n4 4\\n4 5\\n4 2\\n2 4\\n2 2\\n3 2\\n3 3\\n3 1\\n4 2\\n4 1\\n5 2\\n5 4\\n5 3\\n1 2\\n1 4\\n1 3\\n2 4\\n2 3\\n2 2\\n3 1\\n3 3\\n3 2\\n3 5\\n4 1\\n4 3\\n4 2\\n4 4\\n5 2\\n5 3\\n5 1\\n5 5\\n6 1\\n6 3\\n6 5\\n6 4\\n6 2\\n5 1\\n6 3\\n6 5\\n\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([5]) == 'LRRRRLL'\nassert solution([1, 2]) == 'RRLLRRRR'\nassert solution([2, 5, 2, 3, 1, 3, 3, 5, 4, 5]) == 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}\\nExpected Output: {expected_output}\\nOutput: {solution(sample_input)}\"\n\nsample_input = \"\"\"5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\"\"\"\n\nexpected_output = \"\"\"LLRRRRLL\nimpossible\"\"\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"LLRRRRLL\\nimpossible\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n2\\n3\\n4\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"LLRRRRLL\\nimpossible\\n\"\nassert solution(\"1\\n2\\n1\\n3\\n1\\n4\\n2\\n5\\n1\\n6\\n1\\n7\\n2\\n8\\n1\\n9\\n\") == \"LLRRRRLL\\nimpossible\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRLL'\nassert solution(open('input.txt', 'r')) == 'LRRRRRL"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Solution should be: {output_str}, but got: {solution(input_str)}\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'LRRRRRRRR'\nassert solution(open('input2.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"LRRRLL\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"2\\n1009 1017\"\nassert solution(\"3\\n1009 2011\\n1017 2011\") == \"2\\n1017 1009\"\nassert solution(\"4\\n1009 2011\\n1017 2011\") == \"3\\n1017 1009 2011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\") == \"3\\n1009 1017 2011\"\nassert solution(\"6\\n1009 2011\\n1017 2011\") == \"3\\n1017 1009 2011 1009\"\nassert solution(\"7\\n1009 2011\\n1017 2011\") == \"4\\n1017 1009 2011 1009 1009\"\nassert solution(\"8\\n1009 2011\\n1017 2011\") == \"4\\n1009 1017 2011 1017\"\nassert solution(\"9\\n1009 2011\\n1017 2011\") == \"4\\n1017 1009 2011 1009 1017\"\nassert solution(\"10\\n1009 2011\\n1017 2011\") == \"4\\n1009 1017 2011 1017 2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed for input:\\n\" + input() + \"\\nExpected output:\\n\" + output() + \"\\nGot:\\n\" + solution(input())"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"5\\n1017 2011 1018 1020 1021\\n1012 1013 1015 1016 1019\\n1014 1016 1018\\n\") == \"2\\n1017 1018\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"2\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2012\\n1014 2012\\n1015 2012\") == \"2\\n2011\\n2012\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1014 2012\\n1015 2012\\n1016 2013\") == \"2\\n2011\\n2012\\n2013\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1014 2012\\n1015 2012\\n1016 2013\\n1018 2014\\n1019 2014\") == \"2\\n2011\\n2012\\n2013\\n2014\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1\\n1009 2011\\n1017 2012\\n\") == \"2\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"3\\n1009 2011\\n1017 2011\\n\") == \"3\\n2011\\n\"\nassert solution(\"1\\n1009 2011\\n1017 2011\\n1009 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"1\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n\") == \"3\\n2011\\n\"\nassert solution(\"1\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1017 2011\\n\") == \"4\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input:\\n2\\n1009 2011\\n1017 2011\\nSample Output:\\n1\\n2011\") == \"1\\n2011\\n\"\nassert solution(\"Sample Input:\\n3\\n1010 2010\\n1018 2010\\n1020 2010\\nSample Output:\\n2\\n2010\\n2010\\n\") == \"2\\n2010\\n2010\\n\"\nassert solution(\"Sample Input:\\n1\\n1009\\n1017\\n1023\\nSample Output:\\n1\\n2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"Sample Input:\\n3\\n1009 2011\\n1017 2011\\n1018 2011\\nSample Output:\\n2\\n2011\\n2011\\n\") == \"2\\n2011\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1009 2011\\n1017 2011') == '1\\n2011\\n'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Expected {expected_output}, but got {solution(input_data)}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == # Solution here"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n0 1\") == \"0 3\\n1 2\\n2 3\\n\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n0 1\\n0 2\") == \"0 3\\n1 2\\n2 3\\n\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n0 1\\n0 2\\n0 3\") == \"0 3\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The solution is incorrect. Please check the input and output formats.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0 3', \"The expected output is not correct.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 4\") == \"0 3 4\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 4\") == \"0 3 4\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"Output should be '0 3\\n'\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\"\nassert solution(\"1.9999 2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"10\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 20, \"Incorrect result\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == 20\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"20\", \"Incorrect output\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0 2 3 4 5 6\") == \"4\"\nassert solution(\"6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\nassert solution(\"6\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"3\"\nassert solution(\"6\\n1 1 2 3 4 6\\n2 2 2 3 4 5\") == \"4\"\nassert solution(\"6\\n1 1 2 3 4 6\\n2 2 2 3 4 5\") == \"3\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n6 1\") == \"4\"\nassert solution(\"3\\n1 3\\n2 5\\n3 1\") == \"2\"\nassert solution(\"1\\n1 1\\n1 1\") == \"3\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n6 1\\n2 2\") == \"2\"\nassert solution(\"1\\n1 1\\n1 1\") == \"3\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"10\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Output', f'Expected \"Output\", got \"{solution(input())}.\"'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 5 1 4 2 6\\n1 5 2 3 6 4\\n2 6 3 5 4 1\\n3 2 4 1 5 6\\n4 1 2 3 6 5\\n3 6 5 2 1 4\\n5 2 4 6 1 3\\n\") == \"4\\n\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 5 1 4 2 6\\n1 5 2 3 6 4\\n2 6 3 5 4 1\\n3 2 4 1 5 6\\n4 1 2 3 6 5\\n3 6 5 2 1 4\\n5 2 4 6 1 3\\n6 2 3 5 1 4\\n\") == \"4\\n\"\nassert solution(\"5\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 5 1 4 2 6\\n1 5 2 3 6 4\\n2 6 3 5 4 1\\n3 2 4 1 5 6\\n4 1 2 3 6 5\\n3 6 5 2 1 4\\n5 2 4 6 1 3\\n6 2 3 5 1 4\\n7 2 3 4 5 6\\n\") == \"4\\n\"\nassert solution(\"10\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 5 1 4 2 6\\n1 5 2 3 6 4\\n2 6 3 5 4 1\\n3 2 4 1 5 6\\n4 1 2 3 6 5\\n3 6 5 2 1 4\\n5 2 4 6 1 3\\n6 2 3 5 1 4\\n7 2 3 4 5 6\\n8 2 3 4 5 6\\n9 2 3 4 5 6\\n10 2 3 4 5 6\\n\") == \"4\\n\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 5 1 4 2 6\\n1"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4\\n'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\"\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"8\\n1 1\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 9\\n3 4 5 6 7 8 9 10\\n4 5 6 7 8 9 10 11\\n5 6 7 8 9 10 11 12\\n6 7 8 9 10 11 12 13\\n7 8 9 10 11 12 13 14\\n8 9 10 11 12 13 14 15\\n9 10 11 12 13 14 15 16\\n10 11 12 13 14 15 16 17\\n11 12 13 14 15 16 17 18\\n12 13 14 15 16 17 18 19\\n13 14 15 16 17 18 19 20\\n14 15 16 17 18 19 20 21\\n15 16 17 18 19 20 21 22\\n16 17 18 19 20 21 22 23\\n17 18 19 20 21 22 23 24\\n18 19 20 21 22 23 24 25\\n19 20 21 22 23 24 25 26\\n20 21 22 23 24 25 26 27\\n21 22 23 24 25 26 27 28\\n22 23 24 25 26 27 28 29\\n23 24 25 26 27 28 29 30\\n24 25 26 27 28 29 30 31\\n25 26 27 28 29 30 31 32\\n26 27 28 29 30 31 32 33\\n27 28 29 30 31 32 33 34\\n28 29 30 31 32 33 34 35\\n29 30 31 32 33 34 35 36\\n30 31 32 33 34 35 36 37\\n31 32 33 34 35 36 37 38\\n32 33 34 35 36 37 38 39\\n33 34 35 36 37 38 39 40\\n34 35 36 37 38 39 40 41\\n35 36 37 38 39 40 41 42\\n36 37 38 39 40 41 42 43\\n37 38 39 40 41 42 43 44\\n38 39 40 41 42 43 44 45\\n39 40 41 42 43 44 45 46\\n40 41 42 43 44 45 46 47\\n41 42 "
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4, \"Expected 4, got {}\".format(solution(1)) # Test case 1\nassert solution(2) == 4, \"Expected 4, got {}\".format(solution(2)) # Test case 2\nassert solution(3) == 4, \"Expected 4, got {}\".format(solution(3)) # Test case 3\nassert solution(4) == 4, \"Expected 4, got {}\".format(solution(4)) # Test case 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n4\\n\", \"Test case 1 failed\"\nassert solution() == \"4\\n3\\n\", \"Test case 2 failed\"\nassert solution() == \"4\\n1\\n\", \"Test case 3 failed\"\nassert solution() == \"4\\n2\\n\", \"Test case 4 failed\"\nassert solution() == \"4\\n2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Test failed\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Test failed\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Test failed\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Test failed\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\", \"Test failed\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"5\\n1 1\\n2 2 3 3 4 4\\n3 3 3 3 4 4\\n4 4 4 4 4 4\\n5 5 5 5 5 5\") == \"5\\n\"\nassert solution(\"10\\n1 1\\n2 2 3 3 4 4\\n3 3 3 3 4 4\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n8 8 8 8 8 8\\n9 9 9 9 9 9\\n10 10 10 10 10 10\") == \"10\\n\"\nassert solution(\"1\\n1 1\\n2 2 3 3 4 4\\n3 3 3 3 4 4\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n8 8 8 8 8 8\\n9 9 9 9 9 9\\n10 10 10 10 10 10\\n1 1 1 1 1 1\") == \"1\\n\"\nassert solution(\"1\\n2 2\\n3 3 4\\n4 4 5\\n5 5 6\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 "
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"3\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"3\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt')) == '6\\n'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.00001 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n7.0 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n7.0 3.1\\n8.0 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"The solution is incorrect\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6', f\"Test case failed. Expected output: '6', got: {solution(stdin)}\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 4.0\\n6.0 5.0\\n7.0 6.0\\n8.0 7.0\\n9.0 8.0\\n10.0 9.0\") == 12\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 4.0\\n6.0 5.0\\n7.0 6.0\\n8.0 7.0\\n9.0 8.0\\n10.0 9.0\\n11.0 10.0\\n12.0 11.0\\n13.0 12.0\\n14.0 13.0\\n15.0 14.0\\n16.0 15.0\\n17.0 16.0\\n18.0 17.0\\n19.0 18.0\\n20.0 19.0\\n21.0 20.0\\n22.0 21.0\\n23.0 22.0\\n24.0 23.0\\n25.0 24.0\\n26.0 25.0\\n27.0 26.0\\n28.0 27.0\\n29.0 28.0\\n30.0 29.0\\n31.0 30.0\\n32.0 31.0\\n33.0 32.0\\n34.0 33.0\\n35.0 34.0\\n36.0 35.0\\n37.0 36.0\\n38.0 37.0\\n39.0 38.0\\n40.0 39.0\\n41.0 40.0\\n42.0 41.0\\n43.0 42.0\\n44.0 43.0\\n45.0 44.0\\n46.0 45.0\\n47.0 46.0\\n48.0 47.0\\n49.0 48.0\\n50.0 49.0\\n51.0 50.0\\n52.0 51.0\\n53.0 52.0\\n54.0 53.0\\n55.0 54.0\\n56.0 55.0\\n57.0 56.0\\n58.0 57.0\\n59.0 58.0\\n60.0 59.0\\n61.0 60.0\\n62.0 61.0\\n63.0 62.0\\n64.0 63.0\\n65.0 64.0\\n66.0 65.0\\n67.0 66.0\\n68.0 67.0\\n69.0 68.0\\n70.0 69.0\\n71.0 70.0\\n72.0 71.0\\n73.0 72.0\\n74.0 73.0\\n75.0 74.0\\n76.0 75.0\\n77.0 76.0\\n78.0 77.0\\n79.0 78."
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Incorrect output\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n') == '8\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n7.0 3.1\\n8.0 3.1\\n') == '9\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n7.0 3.1\\n8.0 3.1\\n9.0 3.1\\n') == '10\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n6.0 3.1\\n7.0 3.1\\n8.0 3.1\\n9.0 3.1\\n10.0 3.1\\n11.0 3.1\\n12.0 3.1\\n13.0 3.1\\n14.0 3.1\\n15.0 3.1\\n16.0 3.1\\n17.0 3.1\\n18.0 3.1\\n19.0 3.1\\n20.0 3.1\\n21.0 3.1\\n22.0 3.1\\n23.0 3.1\\n24.0 3.1\\n25.0 3.1\\n26.0 3.1\\n27.0 3.1\\n28.0 3.1\\n29.0 3.1\\n30.0 3.1\\n31.0 3.1\\n32.0 3.1\\n33.0 3.1\\n34.0 3.1\\n35.0 3.1\\n36.0 3.1\\n37.0 3.1\\n38.0 3.1\\n39.0 3.1\\n40.0 3.1\\n41.0 3.1\\n42.0 3.1\\n43.0 3.1\\n44.0 3.1\\n45.0 3.1\\n46.0 3.1\\n47.0 3.1\\n48.0 3.1\\n49.0 3.1\\n50.0 3.1\\n51.0 3.1\\n52.0 3.1\\n53.0 3.1\\n54.0 3.1\\n55.0 3.1\\n56.0 3.1\\n57.0 3.1\\n58.0 3.1\\n59.0 3.1\\n60.0 3.1\\n61.0 3.1\\n62.0 3.1\\n63.0 3.1\\n64.0 3.1\\n65.0 3.1\\n66.0 3.1\\n67.0 3.1\\n68.0 3.1\\n69.0"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n3\n2\n2\n2\n\"\"\"\n) == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\nassert solution(\"3\\n1\\n1\\n1\") == 1\nassert solution(\"3\\n2\\n2\\n2\") == 5\nassert solution(\"3\\n3\\n3\\n3\") == 0"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output here\", \"Testcase not found!\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == 5\nassert solution(\"3\\n1\\n1\\n1\\n\") == 5\nassert solution(\"3\\n2\\n2\\n3\\n\") == 8\nassert solution(\"3\\n2\\n2\\n4\\n\") == 8\nassert solution(\"3\\n2\\n2\\n5\\n\") == 8\nassert solution(\"3\\n2\\n2\\n6\\n\") == 8\nassert solution(\"3\\n2\\n2\\n7\\n\") == 10\nassert solution(\"3\\n2\\n2\\n8\\n\") == 10"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == \"5\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, \"Test case failed\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\n\"\nassert solution(\"1 1\") == \"1 1\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 1\"\n\nfrom typing import List"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"You are not allowed to use the same pikeman for multiple problems.\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 1\\n'\nassert solution(input()) == '1 1\\n'\nassert solution(input()) == '1 1\\n'\nassert solution(input()) == '1 1\\n'\nassert solution(input()) == '1 1\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"10 20\\n1 2 3 4 5\") == \"10 30\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"3 10\\n1 1 1 1 1\") == \"10 10\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 10\\n1 2 3 4 5 6\") == \"10 20\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 10\\n1 2 3 4 5 6 7 8 9 10\") == \"10 20\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10 20\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 10\\n
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 1\", \"Incorrect output\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").readline()) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 10, \"There are exactly 10 pairs of best friend numbers with exactly 1 digit.\"\n\nfrom typing import List"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"12\") == \"2\"\nassert solution(\"13\") == \"1\"\nassert solution(\"1000\") == \"10\"\nassert solution(\"1001\") == \"11\"\nassert solution(\"1010\") == \"10\"\nassert solution(\"1011\") == \"11\"\nassert solution(\"1020\") == \"10\"\nassert solution(\"1021\") == \"11\"\nassert solution(\"1030\") == \"10\"\nassert solution(\"1031\") == \"11\"\nassert solution(\"1040\") == \"10\"\nassert solution(\"1041\") == \"11\"\nassert solution(\"1050\") == \"10\"\nassert solution(\"1051\") == \"11\"\nassert solution(\"1060\") == \"10\"\nassert solution(\"1061\") == \"11\"\nassert solution(\"1070\") == \"10\"\nassert solution(\"1071\") == \"11\"\nassert solution(\"1080\") == \"10\"\nassert solution(\"1081\") == \"11\"\nassert solution(\"1090\") == \"10\"\nassert solution(\"1091\") == \"11\"\nassert solution(\"1100\") == \"10\"\nassert solution(\"1101\") == \"11\"\nassert solution(\"1110\") == \"10\"\nassert solution(\"1111\") == \"11\"\nassert solution(\"1120\") == \"10\"\nassert solution(\"1121\") == \"11\"\nassert solution(\"1130\") == \"10\"\nassert solution(\"1131\") == \"11\"\nassert solution(\"1140\") == \"10\"\nassert solution(\"1141\") == \"11\"\nassert solution(\"1150\") == \"10\"\nassert solution(\"1151\") == \"11\"\nassert solution(\"1160\") == \"10\"\nassert solution(\"1161\") == \"11\"\nassert solution(\"1170\") == \"10\"\nassert solution(\"1171\") == \"11\"\nassert solution(\"1180\") == \"10\"\nassert solution(\"1181\") == \"11\"\nassert solution(\"1190\") == \"10\"\nassert solution(\"1191\") == \"11\"\nassert solution(\"1200\") == \"10\"\nassert solution(\"1201\") == \"11\"\nassert solution(\"1210\") == \"10\"\nassert solution(\"1211\") == \"11\"\nassert solution(\"1220\") == \"10\"\nassert solution(\"1221\") == \"11\"\nassert solution(\"1230\") == \"10\"\nassert solution(\"1231\") == \"11\"\nassert solution(\"1240\") == \"10\"\nassert solution(\"1241\") == \"11\"\nassert solution(\"1250\") == \"10\"\nassert solution(\"1251\") == \"11\"\nassert solution(\"1260\") == \"10\"\nassert solution(\"1261\") == \"11\"\nassert solution(\"1270\") == \"10\"\nassert solution(\"1271\") == \"11\"\nassert solution(\"1280\") == \"10\"\nassert solution(\"1281\") == \"11\"\nassert solution(\"1290\") == \"10\"\nassert solution(\"1291\") == \"11\"\nassert solution(\"1300\") == \"10\"\nassert solution(\"1301\") == \"11\"\nassert solution(\"1310\") == \"10\"\nassert solution(\"1311\") == \"11\"\nassert solution(\"1320\") == \"10\"\nassert solution(\"1321\") == \"11\"\nassert solution(\"1330\") == \"10\"\nassert solution(\"1331\") == \"11\"\nassert solution(\"1340\") == \"10\"\nassert solution(\"1341\") == \"11\"\nassert solution(\"1350\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001, \"Expected 0.001, got {}\".format(solution(\"1 2\\n1000 1 0\\n1 1000 1\"))"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001\n\nfrom typing import List"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 2\\n\") == \"0.0005\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n1 1000 1\\n\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {solution(sample_input)}!= {sample_output}\"\n\nsample_input = \"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\"\n\nsample_output = 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\n\nassert solution(\"4 4 1 10000\\n1 2\\n2 3\\n3 4\\n4 1\") == 1\n\nassert solution(\"5 5 2 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == 2\n\nassert solution(\"6 6 3 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\") == 3\n\nassert solution(\"7 7 3 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 1\") == 4\n\nassert solution(\"8 8 4 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 1\") == 5"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Test case {test_case_id} failed. Expected output: {expected_output}, Received output: {solution}\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0\nprint(\"You have successfully passed the test.\")"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0\\n'\n\nassert solution('6 3 2 2\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6') == '1\\n'\n\nassert solution('5 4 2 2\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '2\\n'\n\nassert solution('3 2 2 1\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '4\\n'\n\nassert solution('3 1 1 1\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16') == '1\\n'\n\nassert solution('4 3 1 1\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n10"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"The solution is incorrect\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0\\n', 'Expected output 0, but got {}'.format(solution(input()))"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Your solution is incorrect. Please fix it and try again.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\nprint('All test cases passed!')"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26, \"The output should be 26, but it is: {}\".format(solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\"))"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"26\\n\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26, \"The answer is incorrect. It should be 26.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('4 3\\n20 20 20 40\\nX.X\\nT.T') == '0.200000000\\n0.666666667\\n0.333333333\\n'\nassert solution('3 4\\n20 20 20 40\\nX.X\\nT.T') == '0.250000000\\n0.666666667\\n0.333333333\\n0.333333333\\n'\nassert solution('10 10\\n20 20 20 40\\nX.X\\nT.T') == '0.000000000\\n1.000000000\\n0.333333333\\n0.333333333\\n'\nassert solution('3 10\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n1.000000000\\n0.333333333\\n0.333333333\\n0.333333333\\n0.333333333\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0.333333333\\n0.666666667\\n', \"Your solution is incorrect.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution.input()) == solution.output(), \"Test failed\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.75\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(45, 45, 0, 0) == 0.75, \"Test failed\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(45) == 0.75, \"Expected 0.75, but got: {}\".format(solution(45))"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    4 3 9\n''') == '4'\nassert solution('''\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    4 3 9\n''') == '4'"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\\n\"\n\nprint(\"All tests pass\")"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"The output is incorrect for the given input.\\nInput: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected: 4\\nReceived: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == 4\nprint(\"Test Passed\")"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    4 3 9\n    ''') == '4'\n\nassert solution('''\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    4 3 9\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    ''') == '14'\n\nassert solution('''\n    5 6\n    0 1 2\n    0 3 8\n    1 2 11\n    2 3 5\n    2 4 2\n    4 3 9\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4 3\n    0 1 2\n    1 2 11\n    2 3 5\n    3 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\" # Example test case"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4, \"Solution does not match\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"100\", \"Your code is incorrect.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100\\n'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1\\n10 10 0 5\\n\") == \"100\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4\\n10 10 0 5') == '100\\n', \"Test case 1 failed\"\n\nassert solution(stdin='5\\n10 10 0 5') == '100\\n', \"Test case 2 failed\"\n\nassert solution(stdin='6\\n10 10 0 5') == '100\\n', \"Test case 3 failed\"\n\nassert solution(stdin='7\\n10 10 0 5') == '100\\n', \"Test case 4 failed\"\n\nassert solution(stdin='8\\n10 10 0 5') == '100\\n', \"Test case 5 failed\"\n\nassert solution(stdin='9\\n10 10 0 5') == '100\\n', \"Test case 6 failed\"\n\nassert solution(stdin='10\\n10 10 0 5') == '100\\n', \"Test case 7 failed\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'Your solution here'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\\n\"\nassert solution(\"2\\n5 10 0 10\\n\") == \"500\\n\"\nassert solution(\"3\\n100 100 0 1000\\n\") == \"1000000\\n\"\nassert solution(\"4\\n1000000 1000000 0 1000000000\\n\") == \"1000000000000000\\n\"\nassert solution(\"5\\n10000000000000000000 100000000000000000000 0 10000000000000000000000\\n\") == \"1000000000000000000000\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == '100' # correct solution"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(0) == 0, \"Test case 0 should pass.\"\nassert solution(1) == 1, \"Test case 1 should pass.\"\nassert solution(2) == 1, \"Test case 2 should pass.\"\nassert solution(3) == 0, \"Test case 3 should pass.\"\nassert solution(4) == 0, \"Test case 4 should pass.\"\nassert solution(5) == 1, \"Test case 5 should pass.\"\nassert solution(6) == 0, \"Test case 6 should pass.\"\nassert solution(7) == 0, \"Test case 7 should pass.\"\nassert solution(8) == 1, \"Test case 8 should pass.\"\nassert solution(9) == 1, \"Test case 9 should pass.\"\nassert solution(10) == 1, \"Test case 10 should pass.\"\nassert solution(11) == 1, \"Test case 11 should pass.\"\nassert solution(12) == 1, \"Test case 12 should pass.\"\nassert solution(13) == 1, \"Test case 13 should pass.\"\nassert solution(14) == 1, \"Test case 14 should pass.\"\nassert solution(15) == 1, \"Test case 15 should pass.\"\nassert solution(16) == 1, \"Test case 16 should pass.\"\nassert solution(17) == 1, \"Test case 17 should pass.\"\nassert solution(18) == 1, \"Test case 18 should pass.\"\nassert solution(19) == 1, \"Test case 19 should pass.\"\nassert solution(20) == 1, \"Test case 20 should pass.\"\nassert solution(21) == 1, \"Test case 21 should pass.\"\nassert solution(22) == 1, \"Test case 22 should pass.\"\nassert solution(23) == 1, \"Test case 23 should pass.\"\nassert solution(24) == 1, \"Test case 24 should pass.\"\nassert solution(25) == 1, \"Test case 25 should pass.\"\nassert solution(26) == 1, \"Test case 26 should pass.\"\nassert solution(27) == 1, \"Test case 27 should pass.\"\nassert solution(28) == 1, \"Test case 28 should pass.\"\nassert solution(29) == 1, \"Test case 29 should pass.\"\nassert solution(30) == 1, \"Test case 30 should pass.\"\nassert solution(31) == 1, \"Test case 31 should pass.\"\nassert solution(32) == 1, \"Test case 32 should pass.\"\nassert solution(33) == 1, \"Test case 33 should pass.\"\nassert solution(34) == 1, \"Test case 34 should pass.\"\nassert solution(35) == 1, \"Test case 35 should pass.\"\nassert solution(36) == 1, \"Test case 36 should pass.\"\nassert solution(37) == 1, \"Test case 37 should pass.\"\nassert solution(38) == 1, \"Test case 38 should pass.\"\nassert solution(39) == 1, \"Test case 39 should pass.\"\nassert solution(40) == 1, \"Test case 40 should pass.\"\nassert solution(41) == 1, \"Test case 41 should pass.\"\nassert solution(42) == 1, \"Test case 42 should pass.\"\nassert solution(43) == 1, \"Test case 43 should pass.\"\nassert solution(44) == 1, \"Test case 44 should pass.\"\nassert solution(45) == 1, \"Test case 45 should pass.\"\nassert solution(46) == 1, \"Test case 46 should pass.\"\nassert solution(47) == 1, \"Test case 47 should pass.\"\nassert solution(48) == 1, \"Test case 48 should pass.\"\nassert solution(49) == 1, \"Test case 49 should pass.\"\nassert solution(50) == 1, \"Test case 50 should pass.\"\nassert solution(51) == 1, \"Test case 51 should pass.\"\nassert solution(52)"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"2 2 0 0\\n3 3 3 4\\n5 5 5 5\\n6 6 6 6\") == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]), \"Test case 1 failed\"\nassert not solution([0, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]), \"Test case 2 failed\"\nassert not solution([1, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]), \"Test case 3 failed\"\nassert solution([1, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('0 0 2 2\\n1 1 4 3\\n5 7 6 8') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 9') == 0\nassert solution('0 0 2 2\\n1 1 4 3\\n5 7 6 8') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 9') == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Function should return 1\"\nassert solution() == 0, \"Function should return 0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1\\n'\nassert solution('0\\n0 0 0 0\\n0 0 0 0') == '0\\n'\nassert solution('2\\n0 0 2 2\\n2 2 2 2') == '0\\n'\nassert solution('4\\n0 0 2 2\\n1 1 3 4') == '0\\n'\nassert solution('5\\n0 0 2 2\\n2 2 2 2') == '1\\n'\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1, \"Output: 1, Input: 0 0 2 2\\n1 1 3 4\\n5 7 6 8\"\nassert solution('0 0 0 0') == 0, \"Output: 0, Input: 0 0 0 0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '0\\n'\nassert solution(stdin) == '1\\n'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"This assertion should pass.\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"The solution should return 1.\"\n\nassert solution(\"0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == 0, \"The solution should return 0.\"\n\nassert solution(\"0 0 1 2\\n0 0 3 4\\n0 0 5 6\\n0 0 7 8\") == 0, \"The solution should return 0.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 17, \"Solution is incorrect\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 17, \"The output should be 17.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"The expected output is not as expected.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '17'\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n3 2 3 1 1\n''') == '''\n    1 4 3 5 2 \n    2 3 5 1 4\n'''\nassert solution('''\n    3\n    1 2 3 4 5\n''') == '''\n    1 2 3 4 5\n'''\nassert solution('''\n    4\n    1 2 3 4 5\n''') == '''\nimpossible\n'''\nassert solution('''\n    5\n    1 2 3 4 5\n''') == '''\nimpossible\n'''"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\\nimpossible\"\nassert solution(\"5\\n3 2 3 1 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 1 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 2 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 3 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 1\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 2\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 3\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 4\") == \"impossible\"\nassert solution(\"5\\n3 2 3 5 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 1 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 2 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 3 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 1\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 2\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 4\") == \"impossible\"\nassert solution(\"5\\n3 2 4 4 5\") == \"impossible\"\nassert solution(\"5\\n3 2 4 5 "
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 4 3 5 2 \\n 2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 4 3 5 2 \\n 2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n3 1 2 4 5\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n3 1 2 4 6\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 4 3 5 2\\n2 3 5 1 4\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 4 3 5 2 \\n 2 3 5 1 4\", \"Test failed\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string=\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('5\\n3 1 2 4 5') == 'impossible'\nassert solution('5\\n1 2 3 4 5') == 'impossible'\nassert solution('5\\n1 2 3 4 6') == 'impossible'\nassert solution('5\\n3 1 2 4 5\\n3 1 2 4 6') == 'impossible'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Input {input_data} doesn't match the expected output {output_data}\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"Expected 0.76772047, got: \" + solution(\"1\\n3 0 1\\n1 4\")\nprint(\"All tests passed!\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047\\n'\nassert solution('1\\n3 0 1\\n1 0\\n') == '0\\n'\nassert solution('1\\n3 0 1\\n1 10\\n') == '0.76772047\\n'\nassert solution('1\\n3 0 1\\n1 10\\n') == '0\\n'\nassert solution('1\\n3 0 1\\n1 0\\n') == '0\\n'\nassert solution('1\\n3 0 1\\n1 10\\n') == '0\\n'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0.76772047, \"The expected output is 0.76772047, but got: \" + solution(stdin)"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.76772047, \"The output is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\nfor _ in range(100):\n    a, b, d = map(int, input().split())\n    x = [0] * n\n    y = [0] * n\n    r = [0] * n\n    for i in range(n):\n        x[i], y[i], r[i] = map(int, input().split())\n    dazed = False\n    for i in range(n):\n        for j in range(i + 1, n):\n            if r[i] + r[j] <= b and x[i] == x[j] and y[i] == y[j]:\n                dazed = True\n                break\n    if not dazed:\n        break"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\\n\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\"\nassert solution(\"2\\n1 4\\n\") == \"1.0\"\nassert solution(\"3\\n5 0 1\\n2 4\\n3 3\\n4 4\\n5 5\\n\") == \"0.96102802\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0.76772047\nprint(f\"Test passed!\")"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27', 'Expected: 27, Actual:'+ str(solution('hello teams'))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('hello teams') == '27\\ndef solution(stdin: str) -> str:\\n    pass'\n\nprint('All tests passed!')"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('hello teams') == '27', \"The solution is not correct. Please fix the code and submit the corrected code.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Output should be '27\\n'.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"The answer is: 27\\n\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\", \"Incorrect solution\"\nassert solution(\"def sample solution\") == \"2\", \"Incorrect solution\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2, \"Expected output 2, got {}\".format(solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3'))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1\\n12 6 3\\n4 7 2\\n6 3 1"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The solution should return 2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2, Received: \" + str(solution(input()))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2, \"The output should be 2\"\nassert solution('2\\n4 7 2') == 1, \"The output should be 1\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == 2, 'The number of messages must be 2'"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The output is incorrect\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nfor input_str, expected_output in [\n    (\"5 3\", 26),\n    (\"1 1\", 1),\n    (\"2 2\", 2),\n    (\"3 3\", 11),\n    (\"4 4\", 24),\n    (\"5 2\", 10),\n    (\"6 3\", 27),\n    (\"7 2\", 12),\n    (\"8 3\", 28),\n    (\"9 2\", 13),\n    (\"10 3\", 29),\n    (\"11 2\", 14),\n    (\"12 3\", 30),\n    (\"13 2\", 15),\n    (\"14 3\", 31),\n    (\"15 2\", 16),\n    (\"16 3\", 32),\n    (\"17 2\", 17),\n    (\"18 3\", 33),\n    (\"19 2\", 18),\n    (\"20 3\", 34),\n    (\"21 2\", 19),\n    (\"22 3\", 35),\n    (\"23 2\", 20),\n    (\"24 3\", 36),\n    (\"25 2\", 21),\n    (\"26 3\", 37),\n    (\"27 2\", 22),\n    (\"28 3\", 38),\n    (\"29 2\", 23),\n    (\"30 3\", 39),\n    (\"31 2\", 24),\n    (\"32 3\", 40),\n    (\"33 2\", 25),\n    (\"34 3\", 41),\n    (\"35 2\", 26),\n    (\"36 3\", 42),\n    (\"37 2\", 27),\n    (\"38 3\", 43),\n    (\"39 2\", 28),\n    (\"40 3\", 44),\n    (\"41 2\", 29),\n    (\"42 3\", 45),\n    (\"43 2\", 30),\n    (\"44 3\", 46),\n    (\"45 2\", 31),\n    (\"46 3\", 47),\n    (\"47 2\", 32),\n    (\"48 3\", 48),\n    (\"49 2\", 33),\n    (\"50 3\", 49),\n    (\"51 2\", 34),\n    (\"52 3\", 50),\n    (\"53 2\", 35),\n    (\"54 3\", 51),\n    (\"55 2\", 36),\n    (\"56 3\", 52),\n    (\"57 2\", 37),\n    (\"58 3\", 53),\n    (\"59 2\", 38),\n    (\"60 3\", 54),\n    (\"61 2\", 39),\n    (\"62 3\", 55),\n    (\"63 2\", 40),\n    (\"64 3\", 56),\n    (\"65 2\", 41),\n    (\"66 3\", 57),\n    (\"67 2\", 42),\n    (\"68 3\", 58),\n    (\"69 2\", 43),\n    (\"70 3\", 59),\n    (\"71 2\", 44),\n    (\"72 3\", 60),\n    (\"73 2\", 45),\n    (\"74 3\", 61),\n    (\"75 2\", 46),\n    (\"76 3\", 62),\n    (\"77 2\", 47),\n    (\"78 3\", 63),\n    (\"79 2\", 48),\n    (\"80 3\", 64),\n    (\"81 2\", 49),\n    (\"82 3\", 65),\n    (\"83 2\", 50),\n    (\"84 3\", 66),\n    (\"85 2\", 51),\n    (\"86 3\", 67),\n    (\"87 2\", 52),\n    (\"88 3\", 68),\n    (\"89 2\", 53),\n    (\"90 3\", 69),\n    (\"91 2\", 54),\n    (\"92 3\", "
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"26\", \"Expected output: 26, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"26\"\nassert solution(stdin) == \"26\"\nassert solution(stdin) == \"26\"\nassert solution(stdin) == \"26\"\nassert solution(stdin) == \"26\"\nassert solution(stdin) == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\na\\nb\\nc\\nd\\ne\\ncaf\\n\\n\\n\") == 26\nassert solution(\"5 3\\naaa\\nbbbb\\nccc\\nddd\\nee\\nfff\\nggg\\n\") == 25\nassert solution(\"5 3\\naaa\\nbbbb\\nccc\\nddd\\nee\\nfff\\nggg\\n\\n\\n\\n\\n\") == 25\nassert solution(\"5 3\\naaa\\nbbbb\\nccc\\nddd\\nee\\nfff\\nggg\\n\\n\\n\\n\\n\\n\\n\\n\") == 25\nassert solution(\"5 3\\naaa\\nbbbb\\nccc\\nddd\\nee\\nfff\\nggg\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n') == '26'\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n') == '26'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '3 5 2 1 4'\nassert solution == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"10 5 3 1 3\\n5 10 30\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"All test cases passed\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 2 1 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3 5 2 1 4\", \"Test case 1 failed\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 4 3 2 2') == 'impossible'\nassert solution('5 10 30\\n10 3 3 3 3') == 'impossible'\nassert solution('5 10 30\\n10 3 3 1 2') == '2 3 4 1 5'\nassert solution('5 10 30\\n10 5 4 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == '3 5 4 1 1'\nassert solution('5 10 30\\n10 5 3 1 3') == '3 5 4 1 2'\nassert solution('5 10 30\\n10 5 4 1 1') == 'impossible'\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 2 2 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 6\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 7\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 8\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 9\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 10\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 11\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 12\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 13\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 14\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 15\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 16\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 17\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 18\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 19\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 20\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 21\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 22\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 23\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 24\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 25\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 26\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 27\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 28\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 29\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 30\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 31\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 2 32\") == \"impossible\"\nassert solution(\"5 10 30"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"10 5 3 1 3\") == \"impossible\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3 5 2 1 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(4) == 4\nassert solution(5) == 8"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\nshovel time!\\n\", \"Test failed\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\\n\"\nassert solution(\"4\\n2 2\\n2 3\\n3 1\\n3 3\") == \"5\\nsimply impossible\\n\"\nassert solution(\"2\\n1 1\\n2 1\") == \"2\\nshovel time!\\n\"\nassert solution(\"3\\n1 1\\n2 2\\n2 3\") == \"2\\nshovel time!\\n\"\nassert solution(\"4\\n2 2\\n2 3\\n3 1\\n3 3\") == \"5\\nsimply impossible\\n\"\nassert solution(\"2\\n1 1\\n2 1\") == \"2\\nshovel time!\\n\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 2, \"Invalid Output\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == 2\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2') == 3\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3', \"Incorrect output\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"3\", \"The expected output is 3. But instead, got {}.\".format(solution(4))"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 3"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 3, \"Solution should return 3\"\nassert solution(4) == 3, \"Solution should return 3\"\nassert solution(4) == 3, \"Solution should return 3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"3\"\nprint(\"All Good\")"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '79', \"The correct output is not provided.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 79, \"The output should be 79.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Output should be 79\"\nassert solution(\"2 2 999999911\") == 13, \"Output should be 13\"\nassert solution(\"3 3 111111111\") == 17, \"Output should be 17\"\nassert solution(\"10 10 1000000001\") == 30, \"Output should be 30\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Incorrect output\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'4 4 999999937\\n') == '79\\n'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 79"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4 999999937') == 79, \"The output is incorrect.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Incorrect output.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4 4 999999937\") == \"79\"\nassert solution(stdin=\"4 2 10000000001\") == \"2\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"zucchini mozzarella mushrooms artichoke\", \"The expected output is incorrect. Please check the function signature and input format.\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'zucchini'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"1\\n3 +pepperoni +pineapple -onion -extra-cheese\") == \"pineapple\"\nassert solution(\"1\\n2 -pepperoni +pineapple\") == \"pineapple\"\nassert solution(\"1\\n2 -pepperoni -pineapple\") == \"extra-cheese\"\nassert solution(\"1\\n1 +mushrooms +tomato -eggplant\") == \"mushrooms\\ntomato\"\nassert solution(\"1\\n4 -zucchini +mozzarella +mushrooms -artichoke\") == \"extra-cheese\"\nassert solution(\"1\\n2 +mushrooms -tomato -eggplant -extra-cheese\") == \"mushrooms\\nextra-cheese\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"], \"Output should be ['zucchini','mozzarella','mushrooms', 'artichoke']\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == ['zucchini','mozzarella','mushrooms', 'artichoke']"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"zucchini\", \"Expected output: 'zucchini', but got: '{}'.\".format(solution(input()))\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == ['zucchini','mozzarella','mushrooms', 'artichoke'], \"The solution should return the list of toppings such that each friend has strictly more than $1/3$ of their wishes fulfilled.\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"zucchini\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"4 5\\nPP\\nPP\\nPP\\nPP\\n\") == \"PP\\nPP\\nPP\\nPP\\nPP\\n\"\nassert solution(\"2 3\\nPP\\nPP\\nSS\") == \"PP\\nPP\\nSS\\n\"\nassert solution(\"2 3\\nPP\\nPP\\nSS\\nPP\") == \"PP\\nPP\\nSS\\nPP\\n\"\nassert solution(\"2 3\\nPP\\nPP\\nSS\\nPP\\nPP\") == \"PP\\nPP\\nSS\\nPP\\nPP\\n\"\nassert solution(\"2 3\\nPP\\nPP\\nSS\\nPP\\nPP\\nPP\") == \"PP\\nPP\\nSS\\nPP\\nPP\\nPP\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"5 6\\nPPPPPP\\nRRRRRR\\nPPSSSS\\nSRRRRR\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\nPPPPPP\\"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"5 4\\nPP\\nP\\nS\\nS\\nPP\\nRR\\nPP\\nPP\\nSS\") == \"PP\\nPP\\nPP\\nPP\\nPP\\nPP\\nRR\\nRR\\nRR\\nRR\\nRR\"\nassert solution(\"2 4\\nPP\\nP\\nS\\nS\\nP\\nPP\\nPP\\nPP\\nSS\") == \"PP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 4\n    PP\n    RR\n    PS\n    SS\n    \"\"\"\n) == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\n    \"\"\"\n    3 4\n    PP\n    RR\n    PS\n    SS\n    \"\"\"\n) == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\n    \"\"\"\n    3 4\n    PP\n    RR\n    PS\n    SS\n    \"\"\"\n) == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\n    \"\"\"\n    3 4\n    PP\n    RR\n    PS\n    SS\n    \"\"\"\n) == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == 'PS\\nPP\\nRR\\nSS\\n'\nassert solution('4 3\\nP\\nS\\nR\\n') == 'R\\nP\\nS\\nR\\n'\nassert solution('3 3\\nPP\\nP\\nPS\\nSS\\nRR\\n') == 'PP\\nPS\\nRR\\nSS\\n'\nassert solution('5 4\\nPP\\nRR\\nSS\\nPP\\nSS\\nPP\\nPP\\nSS\\nPP\\n') == 'PP\\nPP\\nPP\\nPP\\nPP\\n'\nassert solution('5 4\\nPP\\nRR\\nSS\\nPP\\nSS\\nPP\\nPP\\nSS\\nPP\\n') == 'PP\\nPP\\nPP\\nPP\\nPP\\n'\nassert solution('4 4\\nP\\nS\\nR\\nR\\n') == 'R\\nR\\nR\\nR\\n'\nassert solution('5 5\\nPP\\nRR\\nSS\\nPP\\nRR\\nPP\\nPP\\nRR\\nSS\\nPP\\n') == 'PP\\nPP\\nPP\\nPP\\nPP\\nPP\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\\n\nassert solution(\"3 4\\nP\\nS\\nR\\nR\") == \"PS\\nPP\\nRR\\nSS\"\\n\nassert solution(\"3 4\\nP\\nR\\nR\\nS\") == \"SS\\nPP\\nRR\\nPS\"\\n\nassert solution(\"4 4\\nRR\\nP\\nPS\\nRR\\nSS\") == \"SS\\nPP\\nRR\\nPS\"\\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"PS\\nPP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == ['PS', 'PP', 'RR', 'SS']\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 288, \"Expected output: 288, got: %r\" % solution()\nprint(\"All assertions passed!\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '288'\n\nfrom typing import List"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Expected output: {output}, got: {solution(input)}\"\n\nfrom typing import List"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 288\nassert round(solution(), 6) == 288.0"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"288.0\\n\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('tests/example.txt')) == '288'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 288, \"Incorrect output\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 288, \"Expected output: 288, but got: \" + str(solution())"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 288, \"The output is incorrect.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(pastimeofwhimsy) == 1\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('pastimeofwhimsy') == '1', \"The meow factor of 'pastimeofwhimsy' should be 1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Output must be 1\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES', 'The solution is not correct'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\\n\"\nassert solution(\"4 5\\n1 2 2 1 \\n\") == \"NO\\n\"\nassert solution(\"2 3\\n1 2 3 1 \\n\") == \"YES\\n\"\nassert solution(\"1 2\\n1 1 1 1 \\n\") == \"NO\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"1 2 2 1 3\\n1 2 2 1 3 \") == \"YES\"\nassert solution(\"2 2 2 1 3\\n1 2 2 1 3 \") == \"NO\"\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1 \") == \"YES\"\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 2 1') == 'YES\\n'\nassert solution('3 5\\n1 2 2 1 3') == 'YES\\n'\nassert solution('3 6\\n1 2 2 1 3 4 5') == 'NO\\n'\nassert solution('3 7\\n1 2 2 1 3 4 5 6') == 'YES\\n'\nassert solution('3 8\\n1 2 2 1 3 4 5 6 7 8') == 'YES\\n'\nassert solution('3 9\\n1 2 2 1 3 4 5 6 7 8 9 10') == 'YES\\n'\nassert solution('3 10\\n1 2 2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 'YES\\n'\nassert solution('3 11\\n1 2 2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == 'NO\\n'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 1 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 3 1 \") == \"NO\"\nassert solution(\"3 4\\n1 1 2 1 \") == \"NO\"\nassert solution(\"3 4\\n1 2 4 1 \") == \"YES\"\nassert solution(\"3 4\\n1 3 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nassert solution(\"5\\n1 2\\n3\\n4\\n5\\n\") == \"7/5\"\nassert solution(\"10\\n1 2\\n3\\n4\\n5\\n\") == \"19/9\"\nassert solution(\"100\\n1 2\\n3\\n4\\n5\\n\") == \"281/10\"\nassert solution(\"1000\\n1 2\\n3\\n4\\n5\\n\") == \"3345/100\"\nassert solution(\"10000\\n1 2\\n3\\n4\\n5\\n\") == \"44325/1000\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    1 2\n    3\n    4\n    ''') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == \"3/1\"\nassert solution(1000) == \"12797/1\"\nassert solution(1001) == \"12798/2\"\nassert solution(2) == \"2/2\"\nassert solution(3) == \"3/3\"\nassert solution(4) == \"4/4\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '3/1'\nassert solution(1) == '1/1'\nassert solution(4) == '4/1'\nassert solution(2) == '2/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 2\n    3\n    4\n    \"\"\"\n) == \"3/1\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('2\\n1.2 9.9\\n2.2 16.0') == '0.773914064'\nassert solution('3\\n-0.2 0.8\\n1.4 1.8\\n-0.1 0.9') == '0.751010476'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Received {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4\n0 3\n1 1\n2 1\n2 0''') == '''3\n1 2 3 2'''\n\nprint('All tests passed!')"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nprint('All test cases passed!')"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n4 1\\n3 4\\n2 5\\n\") == \"5\\n1 2 3 4 5\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed. Input: {input}, Output: {output}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3\\n1 2 3 2\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n1\n2\n3\nnone\nnone\n\"\"\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '''1\n2\n3\nnone\n'''\n\nfrom typing import List"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'none'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"none\"\nassert solution(3) == \"none\"\nassert solution(6) == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == ['1', '2', '3']\nassert solution('3\\n1 1 2') == ['none']\nassert solution('4\\n1 2 1 3') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5\\n5'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\n\nassert solution(\"7\\n1 0 0 1 1 0 0\") == \"1\\n\"\n\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"4\\n\"\n\nassert solution(\"7\\n1 0 0 0 1 0 0\") == \"2\\n\"\n\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"4\\n\"\n\nassert solution(\"7\\n1 0 0 0 1 0 0\") == \"2\\n\"\n\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"4\\n\"\n\nassert solution(\"7\\n1 0 0 0 1 0 0\") == \"2\\n\"\n\nassert solution(\"7\\n3 3 3 3 3 3 3\") == \"4\\n\"\n\nassert solution(\"7\\n1 0 0 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 0 1 2 3 3\") == \"5\\n\", \"Test case 1 failed.\"\nassert solution(\"10\\n1 0 1 1 1 1 1\") == \"10\\n\", \"Test case 2 failed.\"\nassert solution(\"5\\n1 0 1 0 1 1\") == \"4\\n\", \"Test case 3 failed.\"\nassert solution(\"2\\n1 1\") == \"2\\n\", \"Test case 4 failed.\"\nassert solution(\"5\\n1 0 1 0 1 0 0 1\") == \"4\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=f\"\"\"\n7\n2 1 0 1 2 3 3\n\"\"\") == \"\"\"5\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n8\n3 2 2 2 2 2 2 2\n\"\"\") == \"\"\"8\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n9\n4 4 4 4 4 4 4 4\n\"\"\") == \"\"\"10\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n10\n5 5 5 5 5 5 5 5\n\"\"\") == \"\"\"11\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n11\n6 6 6 6 6 6 6 6\n\"\"\") == \"\"\"12\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n12\n7 7 7 7 7 7 7 7\n\"\"\") == \"\"\"13\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n13\n8 8 8 8 8 8 8 8\n\"\"\") == \"\"\"14\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n14\n9 9 9 9 9 9 9 9\n\"\"\") == \"\"\"15\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n15\n10 10 10 10 10 10 10 10\n\"\"\") == \"\"\"16\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n16\n11 11 11 11 11 11 11 11\n\"\"\") == \"\"\"17\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n17\n12 12 12 12 12 12 12 12\n\"\"\") == \"\"\"18\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n18\n13 13 13 13 13 13 13 13\n\"\"\") == \"\"\"19\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n19\n14 14 14 14 14 14 14 14\n\"\"\") == \"\"\"20\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n20\n15 15 15 15 15 15 15 15\n\"\"\") == \"\"\"21\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n21\n16 16 16 16 16 16 16 16\n\"\"\") == \"\"\"22\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n22\n17 17 17 17 17 17 17 17\n\"\"\") == \"\"\"23\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n23\n18 18 18 18 18 18 18 18\n\"\"\") == \"\"\"24\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n24\n19 19 19 19 19 19 19 19\n\"\"\") == \"\"\"25\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n25\n20 20 20 20 20 20 20 20\n\"\"\") == \"\"\"26\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n26\n21 21 21 21 21 21 21 21\n\"\"\") == \"\"\"27\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n27\n22 22 22 22 22 22 22 22\n\"\"\") == \"\"\"28\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n28\n23 23 23 23 23 23 23 23\n\"\"\") == \"\"\"29\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n29\n24 24 24 24 24 24 24 24\n\"\"\") == \"\"\"30\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n30\n25 25 25 25 25 25 25 25\n\"\"\") == \"\"\"31\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n31\n26 26 26 26 26 26 26 26\n\"\"\") == \"\"\"32\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3\\n') == 5, \"Output should be 5, but got {}\".format(solution('7\\n2 1 0 1 2 3 3\\n'))"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'.\"\n\nfor case in range(1, test_cases + 1):\n    stdin = f\"Case {case}:\\n\"\n    n = int(input())\n    pebbles = list(map(int, input().split()))\n    expected = 5\n\n    actual = solution(stdin)\n    print(f\"Case {case}: {actual}\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n5\"\nassert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"1\\n0\") == \"1\\n0\"\nassert solution(\"1\\n1 0\") == \"1\\n1\"\nassert solution(\"2\\n2\") == \"0\\n2\"\nassert solution(\"2\\n1\") == \"1\\n2\"\nassert solution(\"2\\n2 2 2\") == \"1\\n2\"\nassert solution(\"3\\n1 2\") == \"2\\n2\"\nassert solution(\"3\\n3 1\") == \"1\\n3\"\nassert solution(\"3\\n2 2 2\") == \"2\\n2\"\nassert solution(\"4\\n4 1 2\") == \"1\\n4\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n4\"\nassert solution(\"5\\n3 1 2 3 4\") == \"2\\n5\"\nassert solution(\"5\\n2 1 2 3 4\") == \"3\\n5\"\nassert solution(\"5\\n3 1 2 3 4 5\") == \"1\\n5\"\nassert solution(\"5\\n4 2 3 4 5 5\") == \"1\\n5\"\nassert solution(\"6\\n6 4 4 4 4 6\") == \"4\\n6\"\nassert solution(\"6\\n4 2 2 2 2 6\") == \"2\\n6\"\nassert solution(\"6\\n4 4 4 4 4 6\") == \"2\\n6\"\nassert solution(\"6\\n5 5 5 5 5 5\") == \"3\\n6\"\nassert solution(\"7\\n3 1 2 3 4 5 6 7\") == \"3\\n7\"\nassert solution(\"7\\n2 1 2 3 4 5 6 7\") == \"2\\n7\"\nassert solution(\"7\\n3 1 2 3 4 5 6 7 8 9 10\") == \"1\\n7\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#___\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#____\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#___#\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#___\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]\n\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#____\\n#####\") == [\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\"\n]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"1 3 5 7 9\\n-1 -1 -1 -1 -1\\n-1 1 4 5 6\\n-1 2 4 -1 -1\\n-1 3 1 2 0\\n-1 -1 -1 -1 -1\"\nassert solution(\"10 10\\n#....\\n##...#\\n#....#\\n#....#\\n#....#\\n#....#\\n\") == \"10 9\\n-1 -1\"\nassert solution(\"5 5\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\n#...\\"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '''-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'''\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 6 1\n    1\n    1 2 1\n    1 3 1\n    1 4 1\n    2 3 2\n    2 4 4\n    3 4 3\n    \"\"\"\n) == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'Impossible\\n'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\nImpossible'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n6'\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 "
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Test case 1\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 0, \"Test case 2\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Test case 3\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Test case 4\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Test case 5\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Test case 6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6\\n'\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1 4 1\\n1 5 1\\n2 4 4\\n') == 'impossible\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"The cost of the cheapest network satisfying the security measure is incorrect.\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 1\") == 15\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 1\\n5 6 1\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 1\\n5 6 1\\n6 7 1\") == 15\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\") == 26"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"1 1 1 1\") == \"00000\"\nassert solution(\"0 1 1 0\") == \"00011\"\nassert solution(\"0 0 0 0\") == \"00000\"\nassert solution(\"1 0 0 1\") == \"01000\"\nassert solution(\"0 1 0 0\") == \"01001\"\nassert solution(\"1 1 0 1\") == \"01010\"\nassert solution(\"0 1 1 1\") == \"01001\"\nassert solution(\"1 0 1 1\") == \"01011\"\nassert solution(\"0 1 1 0\") == \"00011\"\nassert solution(\"1 1 0 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0 1 0\") == \"01000\"\nassert solution(\"1 0"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\" # expected output: 01001\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,4,2,1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n\nsolution(\"3 4 2 1\")"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 3\\n3 3\\n3 4\\n\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\n\nassert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\n5 5\n1 1\n2 2\n3 3\n4 4\n\n6 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6''') == 'impossible'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\"\nassert solution() == \"< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.0\", \"Test failed\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n2.0\n\"\"\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0\nassert solution(\"0 0 0\\n0 1 0\\n1 0 1\") == 0.0\nassert solution
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == 2.0\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0, \"Expected 2.0, got: \" + str(solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\"))"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"2.0\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\"\"\"\n) == 4\n\nassert solution(\n    \"\"\"1\n5\"\"\"\n) == 1\n\nassert solution(\n    \"\"\"5\n5 5 1 1 3 4 7\"\"\"\n) == 4\n\nassert solution(\n    \"\"\"3\n7 1 4 5 6 2\"\"\"\n) == 3"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4\\n'\n\nsolution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2')"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4 3 2 1 6 7') == '4'\nassert solution('5 5 1 1 3 4 7') == '3'\nassert solution('3 7 1 4 5 6 2') == '4'\nprint('All test cases passed!')"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4\\n'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"4\\n0 0\\n10 10\") == \"1\"\nassert solution(\"5\\n0 0\\n10 10\\n0 10\\n10 20\") == \"3\"\nassert solution(\"5\\n0 0\\n10 10\\n0 10\\n10 20\\n0 0\") == \"1\"\nassert solution(\"5\\n0 0\\n10 10\\n0 10\\n10 20\\n0 10\\n10 10\") == \"2\"\nassert solution(\"5\\n0 0\\n10 10\\n0 10\\n10 20\\n0 10\\n10 10\\n10 10\") == \"3\"\nassert solution(\"5\\n0 0\\n10 10\\n0 10\\n10 20\\n0 10\\n10 10\\n10 10\\n10 10\") == \"4\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the length of the Ellen's lawn: \")) == \"2\", \"Output should be '2'\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n-10 0\\n-10 10\\n') == '2\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"The output should be '2', but it is actually '{}'\".format(solution())"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"2\\n-10000 0\\n-10000 10000\") == \"2\"\nassert solution(\"2\\n0 0\\n0 10000\") == \"1\"\nassert solution(\"10000\\n0 0\\n10000 10000\") == \"4\"\nassert solution(\"2\\n-10000 0\\n-10000 10000\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-10 0\\n-10 10\") == \"2\"\n\nsolution(\"-10 0\\n-10 10\")\n\nfrom typing import List"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n\") == \"0\"\nassert solution(\"2 3\\n\") == \"1\"\nassert solution(\"3 5\\n\") == \"1\"\nassert solution(\"5 4\\n\") == \"2\"\nassert solution(\"10 5\\n\") == \"1\"\nassert solution(\"50 10\\n\") == \"2\"\nassert solution(\"100 100\\n\") == \"1\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 10\") == \"2\\n\"\nassert solution(\"3 30\") == \"6\\n\"\nassert solution(\"4 50\") == \"15\\n\"\nassert solution(\"5 100\") == \"30\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"3\\n\"\nassert solution(\"10 10\") == \"10\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"0\\n\", \"Test case 1 failed\"\nassert solution(\"2 5\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"3 5\") == \"2\\n\", \"Test case 3 failed\"\nassert solution(\"4 5\") == \"2\\n\", \"Test case 4 failed\"\nassert solution(\"5 5\") == \"2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0\\n'\nassert solution('2 5') == '2\\n'\nassert solution('3 3') == '1\\n'\nassert solution('4 4') == '4\\n'\nassert solution('5 5') == '0\\n'\nassert solution('6 6') == '36\\n'\nassert solution('7 7') == '146\\n'\nassert solution('8 8') == '448\\n'\nassert solution('9 9') == '1520\\n'\nassert solution('10 10') == '44260\\n'\nassert solution('11 11') == '1302544\\n'\nassert solution('12 12') == '34199304\\n'\nassert solution('13 13') == '960379920\\n'\nassert solution('14 14') == '26123415100\\n'\nassert solution('15 15') == '652359516200\\n'\nassert solution('16 16') == '1717986918840\\n'\nassert solution('17 17') == '40588782892800\\n'\nassert solution('18 18') == '1024823610694400\\n'\nassert solution('19 19') == '24498670090880000\\n'\nassert solution('20 20') == '600069870240000000\\n'\nassert solution('21 21') == '18641283784704000000\\n'\nassert solution('22 22') == '5255144627694604800000\\n'\nassert solution('23 23') == '145046279204813280000000\\n'\nassert solution('24 24') == '3835663009733218560000000\\n'\nassert solution('25 25') == '1030397681295845878400000000\\n'\nassert solution('26 26') == '24944435783191803136000000000\\n'\nassert solution('27 27') == '6623332451137223190400000000000\\n'\nassert solution('28 28') == '174553418345246470102400000000000\\n'\nassert solution('29 29') == '42281724425172682885760000000000000\\n'\nassert solution('30 30') == '10703677181116919876921600000000000000\\n'\nassert solution('31 31') == '2654120472650702082336640000000000000000\\n'\nassert solution('32 32') == '68410471501064260911479040000000000000000000\\n'\nassert solution('33 33') == '2088153427418498425771321600000000000"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0\\n'\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5\\n') == '0\\n'\nassert solution('2 3\\n') == '1\\n'\nassert solution('3 4\\n') == '2\\n'\nassert solution('4 5\\n') == '1\\n'\nassert solution('5 6\\n') == '0\\n'\nassert solution('6 7\\n') == '1\\n'\nassert solution('7 8\\n') == '0\\n'\nassert solution('8 9\\n') == '2\\n'\nassert solution('9 10\\n') == '0\\n'\nassert solution('10 11\\n') == '1\\n'\nassert solution('11 12\\n') == '2\\n'\nassert solution('12 13\\n') == '0\\n'\nassert solution('13 14\\n') == '2\\n'\nassert solution('14 15\\n') == '1\\n'\nassert solution('15 16\\n') == '0\\n'\nassert solution('16 17\\n') == '1\\n'\nassert solution('17 18\\n') == '2\\n'\nassert solution('18 19\\n') == '0\\n'\nassert solution('19 20\\n') == '1\\n'\nassert solution('20 21\\n') == '0\\n'\nassert solution('21 22\\n') == '1\\n'\nassert solution('22 23\\n') == '0\\n'\nassert solution('23 24\\n') == '1\\n'\nassert solution('24 25\\n') == '0\\n'\nassert solution('25 26\\n') == '1\\n'\nassert solution('26 27\\n') == '0\\n'\nassert solution('27 28\\n') == '1\\n'\nassert solution('28 29\\n') == '0\\n'\nassert solution('29 30\\n') == '2\\n'\nassert solution('30 31\\n') == '0\\n'\nassert solution('31 32\\n') == '1\\n'\nassert solution('32 33\\n') == '0\\n'\nassert solution('33 34\\n') == '1\\n'\nassert solution('34 35\\n') == '0\\n'\nassert solution('35 36\\n') == '1\\n'\nassert solution('36 37\\n') == '0\\n'\nassert solution('37 38\\n') == '1\\n'\nassert solution('38 39\\n') == '0\\n'\nassert solution('39 40\\n') == '2\\n'\nassert solution('40 41\\n') == '0\\n'\nassert solution('41 42\\n') == '1\\n'\nassert solution('42 43\\n') == '0\\n'\nassert solution('43 44\\n') == '1\\n'\nassert solution('44 45\\n') == '0\\n'\nassert solution('45 46\\n') == '1\\n'\nassert solution('46 47\\n') == '0\\n'\nassert solution('47 48\\n') == '1\\n'\nassert solution('48 49\\n') == '0\\n'\nassert solution('49 50\\n') == '1\\n'\nassert solution('50 51\\n') == '0\\n'\nassert solution('51 52\\n') == '1\\n'\nassert solution('52 53\\n') == '0\\n'\nassert solution('53 54\\n') == '1\\n'\nassert solution('54 55\\n') == '0\\n'\nassert solution('55 56\\n') == '1\\n'\nassert solution('56 57\\n') == '0\\n'\nassert solution('57 58\\n') == '1\\n'\nassert solution('58 59\\n') == '0\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\nassert solution('2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1 1\\n'\nassert solution('2 3\\n1 0\\n0 1\\n0 0\\n0 1\\n0 0') == '0 0\\n0 2\\n'\nassert solution('1 2\\n0 1\\n1 0\\n0 1\\n1 0\\n0 1') == '0 0\\n1 1\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_file) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input_file)}\"\n\nfrom typing import List"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"3 5\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\") == \"1 1\\n2 2\\n3 3\\n4 4\"\nassert solution(\"5 10\\n0 1\\n1 1\\n0 1\\n1 0\\n0 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"4 3\\n5 5\\n6 6\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\", \"The solution should be '0 0\\n1 1\\n'.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0 0\\n1 1\\n\", \"Test case 1 failed\"\nassert solution(open(\"input.txt\").read()) == \"0 0\\n1 1\\n\", \"Test case 2 failed\"\nassert solution(open(\"input.txt\").read()) == \"0 0\\n1 1\\n\", \"Test case 3 failed\"\nassert solution(open(\"input.txt\").read()) == \"0 0\\n1 1\\n\", \"Test case 4 failed\"\nassert solution(open(\"input.txt\").read()) == \"0 0\\n1 1\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\", \"Expected Output: '0 0\\n1 1\\n'\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt').read()) == '44.975', 'Sample Output not as expected.'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"44.975\", \"Your solution is incorrect.\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 44.975\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\\n\", \"Test failed\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 1\\n10 5\\n1 3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"6 5 1\\n1 1\\n10 5\\n1 3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4 5 6\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 1 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"10 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == 4.0, \"Expected output: 4.0, got: {}.\".format(solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\"))"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0\\n'\n\nassert solution('4 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0\\n'\n\nassert solution('2 4\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '0.0\\n'\n\nassert solution('3 2\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '0.0\\n'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0\nprint(\"All test cases pass\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\\n\") == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000\\n'\nprint('All tests passed!')\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"18000\\n\", solution(stdin)"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"18000\", \"The given problem does not meet the given requirements.\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 18000 # your code should be correct here\n\nfrom typing import List"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    220 29\n    195 20\n    200 9\n    180 30''') == '18000\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"18000\\n\", \"Please provide the correct input and output formats for this problem.\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Test passed\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n1\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    input_string=r'BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n',\n) == 28\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"10\\nSTICKY 20\\nSTICKY 10\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 5\\nSTICKY 5\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5\\nSTICKY 10\\nSTICKY 20\\nSTICKY 20\\nSTICKY 5"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n'\nassert solution(15) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\n'\nassert solution(20) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\nINDV 9\\nINDV 10\\n'\nassert solution(25) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\nINDV 9\\nINDV 10\\nINDV 11\\nINDV 12\\nINDV 13\\nINDV 14\\nINDV 15\\nINDV 16\\nINDV 17\\nINDV 18\\nINDV 19\\nINDV 20\\n'\nassert solution(30) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\nINDV 9\\nINDV 10\\nINDV 11\\nINDV 12\\nINDV 13\\nINDV 14\\nINDV 15\\nINDV 16\\nINDV 17\\nINDV 18\\nINDV 19\\nINDV 20\\nINDV 21\\nINDV 22\\nINDV 23\\nINDV 24\\nINDV 25\\nINDV 26\\nINDV 27\\nINDV 28\\nINDV 29\\nINDV 30\\n'\nassert solution(40) == 'INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 6\\nINDV 7\\nINDV 8\\nINDV 9\\nINDV 10\\nINDV 11\\nINDV 12\\nINDV 13\\nINDV 14\\nINDV 15\\nINDV 16\\nINDV 17\\nINDV 18\\nINDV 19\\nINDV 20\\nINDV 21\\nINDV 22\\nINDV 23\\nINDV 24\\nINDV 25\\nINDV 26\\nINDV 27\\nINDV 28\\nINDV 29\\nINDV 30\\nINDV 31\\nINDV 32\\nINDV 33\\nINDV 34\\nINDV 35\\nINDV 36\\nINDV 37\\nINDV 38\\nINDV 39\\nINDV 40\\n'\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == ['INDV 1', 'INDV 2', 'CORP 1', 'INDV 4', 'CORP 2', 'INDV 3', 'CORP 3', 'INDV 5']"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '''INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5'''"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nfor i, input in enumerate(inputs, start=1):\n    expected_output = expected.splitlines()[i-1]\n    assert solution(input) == expected_output\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3, 8) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 3, 7) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 3, 9) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 2, 10) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 10) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 9) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 8) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 7) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 6) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 5) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 4) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 3) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 2) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(5, 4, 1) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test Case {test_case_number} failed. Expected: {expected}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\\n\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\") == \"0.414213562373\\n\"\nassert solution(\"6\\n10 1\\n1\\n0\\n10\\n10\") == \"0.000000000000\\n\"\nassert solution(\"7\\n10 1\\n1\\n0\\n10\\n10\") == \"0.000000000000\\n\"\nassert solution(\"8\\n10 1\\n1\\n0\\n10\\n10\") == \"0.000000000000\\n\"\nassert solution(\"9\\n10 1\\n1\\n0\\n10\\n10\") == \"0.000000000000\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: Solution should return {output_str}, but it returned {solution(input_str)}\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == 15\nassert solution('5\\n1 1\\n5 0\\n1 2\\n') == 3\nassert solution('4\\n1 1 1\\n1 2\\n') == 3"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 1\") == \"17\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 2\") == \"19\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"21\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"15\"\nassert solution() == \"120\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The sample input and output do not match.\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"7 10 1 1 1\") == \"....\\n.....\\n....\\n.....\\n....\\n\"\nassert solution(\"3 7 3 7 3\") == \".....\\n.....\\n.....\\n.....\\n.....\\n\"\nassert solution(\"10 3 9 1 9\") == \"....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n...."
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \"\"\"....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \" solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '..BBC..A.C..@DDDD'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Input: {input_str}\\nExpected Output: {expected_output}\\nOutput: {solution(input_str)}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '''...'''\nassert solution(2) == '''...'''\nassert solution(3) == '''..B'''\nassert solution(4) == '''..BB'''\nassert solution(5) == '''..BBB'''"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 5 3 3 4\n''') == '''.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 5\\n222\\n333\\n444\\n555\") == \"222\\n333\\n444\\n555\\n000\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 2\\n111\\n001\\n000\\n111\") == \"001\\n001\\n111\\n200\\n000\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000\\n') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000\\n') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000\\n') == '001\\n001\\n001\\n111\\n200\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '001'\nassert solution(input()) == '001'\nassert solution(input()) == '001'\nassert solution(input()) == '111'\nassert solution(input()) == '200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"001\\n001\\n001\\n111\\n200\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"001\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"1/3\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n') == '19 20\\n17 15 14 13 7 2\\n'\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"19/13\\n20/7\\n19/14\\n19/7\\n19/15\\n19/2\\n19/17\\n\") == \"impossible\\n\"\nassert solution(\"20/13\\n10/7\\n19/2\\n19/17\\n\") == \"impossible\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nSolution:\nWe can solve this problem by iterating through the input gear ratios and checking if we can achieve the gear ratio by adjusting the sprocket sizes on the front and rear derailleurs. We can keep track of the sprocket sizes on the front derailleur and rear derailleur, and adjust the sprocket sizes accordingly.\n\nLet's start by initializing the required sprocket sizes on the front and rear derailleur:\n\n```python\nfront_derailleur_sprocket_sizes = [1000, 1000, 1000, 1000]\nrear_derailleur_sprocket_sizes = [1000, 1000, 1000, 1000]"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'\nassert solution('15/8\\n20/15\\n15/10\\n8/5\\n12/15\\n10/10\\n10/10\\n10/10\\n8/10\\n15/10') == '15 10 8 6 4'\nassert solution('3/1\\n15/20\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1\\n1/1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '19 20\\n17 15 14 13 7 2\\n'\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\", \"Test case 1\"\n\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\", \"Test case 2\"\n\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\", \"Test case 3\"\n\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\", \"Test case 4\"\n\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"impossible\\n\", \"Test case 5\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '19 20\\n17 15 14 13 7 2\\n'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n5/6\\n5/4\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1 2 3') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n0 0\\n0 0\\n0 0\\n0 0\\n\") == \"possible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1 0\\n0 1\\n0 0\\n0 0\\n0 0\\n\") == \"possible\"\nassert solution(\"0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == \"possible\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"3 3\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 4 3') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\n\nassert solution('''\n2 3\n1 0\n3 1\n0 0\n1 1\n1 2 3\n2 2\n3 0 3\n''') == 'possible'\n\nassert solution('''\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\n\nassert solution('''\n2 3\n1 0\n3 1\n0 0\n1 1\n1 2 3\n2 2\n3 0 3\n''') == 'impossible'\n\nassert solution('''\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\n\nassert solution('''\n1 2 3\n2 0 2\n3 1 2\n2 0 2\n0 1 2\n0 2 3\n1 1 3\n2 2 3\n3 2 3\n''') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'possible'\nassert solution == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 1 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2\\n3 3 3\\n0 0') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"5 5\\n3 3\\n3 4\\n3 5\\n4 4\\n4 5\\n5 4\\n\") == \"impossible\"\nassert solution(\"6 6\\n4 4\\n4 5\\n4 6\\n5 5\\n5 6\\n6 5\\n\") == \"possible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n\") == 4\nassert solution(\"4 2\\n1\\n2\\n\") == 4\nassert solution(\"4 2\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n1\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n2\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n1\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n1\\n\") == 4\nassert solution(\"4 2\\n2\\n1\\n2\\n\") == 4\nassert solution(\"4 2\\n2\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n1\\n2\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n1\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n1\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n1\\n3\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n2\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n1\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n2\\n1\\n\") == 4\nassert solution(\"4 2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n1\\n2\\n3\\n2\\n3\\n\") == 4\nassert solution(\"4 2\\n3\\n1\\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n3\\n1\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n3\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n2\\n2\\n') == 4\nassert solution('10 4\\n1 2\\n2 1\\n3 3\\n') == 4\nassert solution('3 2\\n3 1\\n') == 1\nassert solution('4 2\\n3 1\\n') == 2\nassert solution('5 3\\n2 1\\n1 2\\n') == 3\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2\\n2') == '4\\n'\nassert solution('4 3\\n1\\n1') == '1\\n'\nassert solution('4 3\\n2\\n2') == '4\\n'\nassert solution('4 3\\n2\\n1') == '2\\n'\nassert solution('4 3\\n3\\n3') == '3\\n'\nassert solution('4 3\\n3\\n2') == '3\\n'\nassert solution('4 3\\n4\\n4') == '4\\n'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    2\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    5\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Mirko\", \"The solution should return Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\n\nfrom typing import List"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"4\\n1 1\\n1 2\\n1 3\") == \"Slavko\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,64,64,64,64,65,65,65,65,66,66,66,66,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,71,71,71,71,72,72,72,72,73,73,73,73,74,74,74,74,75,75,75,75,76,76,76,76,77,77,77,77,78,78,78,78,79,79,79,79,80,80,80,80,81,81,81,81,82,82,82,82,83,83,83,83,84,84,84,84,85,85,85,85,86,86,86,86,87,87,87,87,88,88,88,88,8"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Slavko'\nassert solution('4\\n1 1\\n2 1\\n3 1') == 'Slavko'\nassert solution('5\\n1 1\\n1 2\\n2 2\\n3 3') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"2\\n2 2\\n2 3\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 'Mirko', \"The code should return 'Mirko'.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko\\n'\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Please provide the input as a string.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2 4\"\nassert solution(6) == \"2 2 2 2 2\"\nassert solution(34) == \"2 2 2 2 2 2\"\nassert solution(38) == \"2 2 2 2 2 2 2\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['2 4']\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\nassert solution(\"3\\n5\\n10\\n20\") == \"2 3\"\nassert solution(\"3\\n1\\n2\\n3\") == \"2 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2 4\"\nassert solution(\"1000000000\") == \"1 1000000000\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n6\\n34\\n38\\n') == '2 4'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '2 4', \"Test failed for input: 3\"\nassert solution(6) == '2 3', \"Test failed for input: 6\"\nassert solution(34) == '2 3', \"Test failed for input: 34\"\nassert solution(38) == '2 3 4', \"Test failed for input: 38\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [\"2 4\"]\nassert solution(6) == [\"2 4\", \"4 6\"]\nassert solution(34) == [\"2 4\", \"4 6\", \"6 8\"]\nassert solution(38) == [\"2 4\", \"4 6\", \"6 8\", \"8 10\"]\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"12\\n\", \"The correct output should be '12'.\"\nassert solution(5) == \"12\\n\", \"The correct output should be '12'.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '12'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 10000, 400000, 500000, 900000]), \"The code for solution should return 12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == 12\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 12, \"Incorrect output\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 12, \"Your solution is incorrect. The correct output is 12.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\", \"The correct output is not provided for sample 1.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_example_1) == 12, \"The expected output is 12, but got {}\".format(solution(solution_example_1))\nassert solution(solution_example_2) == 12, \"The expected output is 12, but got {}\".format(solution(solution_example_2))"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\", \"Expected output 12, got {}\".format(solution(stdin))"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == 'YES', \"Test case 1 failed\"\nassert solution(sample_input_2) == 'NO', \"Test case 2 failed\"\nassert solution(sample_input_3) == 'YES', \"Test case 3 failed\"\nassert solution(sample_input_4) == 'YES', \"Test case 4 failed\"\nassert solution(sample_input_5) == 'NO', \"Test case 5 failed\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\\n\", \"Incorrect output\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"5 3\\n1 2 3 4\") == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 6 1 2 3 4\\n\", \"Solution should return '5 6 1 2 3 4'.\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5 6 1 2 3 4\", \"Test case 1 failed\"\nassert solution(input()) == \"Impossible\", \"Test case 2 failed\"\nassert solution(input()) == \"1 2 3 4 5 6\", \"Test case 3 failed\"\nassert solution(input()) == \"2 4 6 1 5 3\", \"Test case 4 failed\"\nassert solution(input()) == \"Impossible\", \"Test case 5 failed\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n') == '5 6 1 2 3 4\\n'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test cases must be formatted as a string\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 5 10 5\") == \"IMPOSSIBLE\"\nassert solution(\"5 2 8 2\") == \"IMPOSSIBLE\"\nassert solution(\"5 3 8 4\") == \"IMPOSSIBLE\"\nassert solution(\"5 2 10 5\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 8 4') == '20512'\nprint('All tests passed!')\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"6 2 8 4\") == \"20612\"\nassert solution(\"7 2 8 4\") == \"20712\"\nassert solution(\"8 2 8 4\") == \"20812\"\nassert solution(\"9 2 8 4\") == \"20912\"\nassert solution(\"10 2 8 4\") == \"21012\"\nassert solution(\"11 2 8 4\") == \"21112\"\nassert solution(\"12 2 8 4\") == \"21212\"\nassert solution(\"13 2 8 4\") == \"21312\"\nassert solution(\"14 2 8 4\") == \"21412\"\nassert solution(\"15 2 8 4\") == \"21512\"\nassert solution(\"16 2 8 4\") == \"21612\"\nassert solution(\"17 2 8 4\") == \"21712\"\nassert solution(\"18 2 8 4\") == \"21812\"\nassert solution(\"19 2 8 4\") == \"21912\"\nassert solution(\"20 2 8 4\") == \"22012\"\nassert solution(\"21 2 8 4\") == \"22112\"\nassert solution(\"22 2 8 4\") == \"22212\"\nassert solution(\"23 2 8 4\") == \"22312\"\nassert solution(\"24 2 8 4\") == \"22412\"\nassert solution(\"25 2 8 4\") == \"22512\"\nassert solution(\"26 2 8 4\") == \"22612\"\nassert solution(\"27 2 8 4\") == \"22712\"\nassert solution(\"28 2 8 4\") == \"22812\"\nassert solution(\"29 2 8 4\") == \"22912\"\nassert solution(\"30 2 8 4\") == \"23012\"\nassert solution(\"31 2 8 4\") == \"23112\"\nassert solution(\"32 2 8 4\") == \"23212\"\nassert solution(\"33 2 8 4\") == \"23312\"\nassert solution(\"34 2 8 4\") == \"23412\"\nassert solution(\"35 2 8 4\") == \"23512\"\nassert solution(\"36 2 8 4\") == \"23612\"\nassert solution(\"37 2 8 4\") == \"23712\"\nassert solution(\"38 2 8 4\") == \"23812\"\nassert solution(\"39 2 8 4\") == \"23912\"\nassert solution(\"40 2 8 4\") == \"24012\"\nassert solution(\"41 2 8 4\") == \"24112\"\nassert solution(\"42 2 8 4\") == \"24212\"\nassert solution(\"43 2 8 4\") == \"24312\"\nassert solution(\"44 2 8 4\") == \"24412\"\nassert solution(\"45 2 8 4\") == \"24512\"\nassert solution(\"46 2 8 4\") == \"24612\"\nassert solution(\"47 2 8 4\") == \"24712\"\nassert solution(\"48 2 8 4\") == \"24812\"\nassert solution(\"49 2 8 4\") == \"24912\"\nassert solution(\"50 2 8 4\") == \"25012\"\nassert solution(\"51 2 8 4\") == \"25112\"\nassert solution(\"52 2 8 4\") == \"25212\"\nassert solution(\"53 2 8 4\") == \"25312\"\nassert solution"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All Tests Pass\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\\n\", \"Output does not match the expected output\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 8 4') == '20512', \"Please provide the correct input\"\n\nfrom typing import List\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2, 3) == 2\nassert solution(3, 8) == 3\nassert solution(5, 6) == 0"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == \"2\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    BAC\n    ABC\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    3 8\n    HGBDFCAE\n    ADBGHFCE\n    HCFGBDAE\n    \"\"\"\n) == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ACGTAB\\nABCDE\\nFGHIJ\\nKLMNO\\nPQRST\\n\") == \"2\\n\"\n\nassert solution(\"ACGTAB\\nABCDE\\nFGHIJ\\nKLMNO\\nPQRST\\nABCDEFGHIJKLMNPQRSTUVWXYZ\\n\") == \"3\\nabcdefg\\n\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\nBAC\\nABC\\n') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 3] + [\"BAC\"]*2 + [\"ABC\"]*2) == 2\nassert solution([3, 8] + [\"HGBDFCAE\"]*2 + [\"ADBGHFCE\"]*2 + [\"HCFGBDAE\"]) == 3"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"3 4\\n\") == \"15\\n\"\nassert solution(\"5 6\\n\") == \"125\\n\"\nassert solution(\"7 8\\n\") == \"304\\n\"\nassert solution(\"9 10\\n\") == \"1326\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"10\\n\"\nassert solution(\"4 4\") == \"24\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 2\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"  # Example 1\nassert solution(\"2 2\\n\") == \"4\\n\"  # Example 2\nassert solution(\"3 3\\n\") == \"10\\n\"  # Example 3\n\nfrom typing import List"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 2\\n\") == \"3\\n\"\nassert solution(stdin=\"4 3\\n\") == \"9\\n\"\nassert solution(stdin=\"5 4\\n\") == \"14\\n\"\nassert solution(stdin=\"6 5\\n\") == \"20\\n\"\nassert solution(stdin=\"7 6\\n\") == \"28\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3\\n'\nassert solution('5 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 "
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(5) == 3\nassert solution(7) == 2"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"5\\n3\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('6\\n4\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n') == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\nNO\\n\", \"Expected output: YES\\nNO\\n, but got: \" + solution(stdin)\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n2\") == \"NO\"\nassert solution(\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"NO\"\nassert solution(\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n1\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n2\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'YES', 'Your solution is incorrect.'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 2"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\"\nassert solution(\"1\\n2\\n1\\n2\\n1\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == 'YES'\nassert solution(\"7\\n1 1\\n1 2\\n2 1\\n\") == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"NO\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3.000000000\"  # Correct output\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3.000000000\"\n\nimport random"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3.000000000\\n', \"Expected output: 3.000000000\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3.000000000', \"The output is incorrect.\"\nassert abs(solution(stdin) - 3.000000000) <= 10**-6, \"The output is incorrect.\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3.000000000\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3.000000000\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1000000001\"\nassert solution(\"10000 10000\") == \"1\"\nassert solution(\"1000 1000\") == \"1\"\nassert solution(\"10 10\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\\n\") == 1\nassert solution(\"10 5\\n50\\n10\\n\") == 3\nassert solution(\"100 100\\n100\\n200\\n100\\n\") == 4"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n', \"Please implement the solution\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 20\\n100 200\\n1000 2000\\n10000 20000\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 5\\n10 15\\n20 25\\n30 35\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"The output of the function should be 1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''3\n2\n3\n1\n'''"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n2\\n3\\n1\\n\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n2\\n3\\n1\\n', \"Test 1 failed\"\nassert solution() == '3\\n2\\n3\\n1\\n', \"Test 2 failed\"\nassert solution() == '3\\n2\\n3\\n1\\n', \"Test 3 failed\"\nassert solution() == '3\\n2\\n3\\n1\\n', \"Test 4 failed\"\nassert solution() == '3\\n2\\n3\\n1\\n', \"Test 5 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for {input_str}, expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    input_data=[\n        [3, 4, 5],\n        [1, 3, 4],\n        [0, 2, 2, 3, 2],\n        [1, 3, 2],\n        [1, 2, 4],\n        [1, 1, 4],\n    ],\n    expected_output=[3, 2, 3, 1, 3, 2]\n)"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n2\\n3\\n1\\n\", \"The solution is not correct\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);\\n}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\nsum += i;\\nprintf(\"SUM %d\", sum);\\n}\\n***END***\\nint Main() {\\nprintf(\"Hello %d\\n\",i);\\nprintf(\"THE END\\n\");\\n}\\n***END***') == 2\nassert solution('HelloWorld.c\\nint Main() {\\nprintf(\"Hello %d\\n\",i);\\n}\\n***END***\\nint Main() {\\nprintf(\"Hello %d\\n\",i);\\nprintf(\"THE END\\n\");\\n}\\n***END***') == 0"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"HelloWorld.c\") == \"2 HelloWorld.c\"\nassert solution(stdin=\"Add.c\") == \"2 Add.c\"\nassert solution(stdin=\"int Main() { printf(\\\"Hello %d\\\\n\\\",i); }***END***\\n\") == \"2 int Main() { printf(\\\"Hello %d\\\\n\\\",i); }***END***\\n\"\nassert solution(stdin=\"int Main() { printf(\\\"Hello %d\\\\n\\\",i); printf(\\\"THE END\\\\n\\\"); }***END***\\n\") == \"2 int Main() { printf(\\\"Hello %d\\\\n\\\",i); printf(\\\"THE END\\\\n\\\"); }***END***\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['HelloWorld.c', 'The END']\nassert solution(open('input2.txt', 'r').read()) == ['Add.c']"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == [\"def solution(stdin: str) -> str:\", \"    pass\"]"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '1 4 2 0'\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == [\"HelloWorld.c\", \"int Main() { printf(\\\"Hello %d\\\", i); }\", \"***END***\", \"Add.c\", \"int Main() { for (int i=0; i<10; i++) sum += i; printf(\\\"SUM %d\\\", sum); }\", \"***END***\", \"int Main() { printf(\\\"Hello %d\\\", i); printf(\\\"THE END\\\\n\\\"); }\"]"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"Test_Input.txt\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(solution(open(\"Test_Input.txt\").read()))"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\n\\n2\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\\n\\\", sum);\\n}\\n***END***\\n\\n3\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n4\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n5\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\"\n) == [\n    \"3 HelloWorld.c\",\n    \"2 ADD.c\",\n    \"1 int Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\",\n]\n\nassert solution(\n    \"1\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\n\\n2\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\\n\\\", sum);\\n}\\n***END***\\n\\n3\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n4\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n5\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\"\n) == [\n    \"3 HelloWorld.c\",\n    \"2 ADD.c\",\n    \"1 int Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\",\n]\n\nassert solution(\n    \"1\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\n\\n2\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\\n\\\", sum);\\n}\\n***END***\\n\\n3\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n4\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n5\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n***END***\"\n) == [\"0\"]\n\nassert solution(\n    \"1\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\n\\n2\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\\n\\\", sum);\\n}\\n***END***\\n\\n3\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n4\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n5\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\\n\\n***END***\\n\\n\"\n) == [\"0\"]\n\nassert solution(\n    \"1\\nHelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\n}\\n***END***\\n\\n2\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n   "
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"Hello World\\n\", \"The output should be 'Hello World'\"\nassert solution(stdin: str) == \"SUM 25\\n\", \"The output should be 'SUM 25'\"\nassert solution(stdin: str) == \"ADD 11\\n\", \"The output should be 'ADD 11'\"\nassert solution(stdin: str) == \"END\\n\", \"The output should be 'END'\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n'\nassert solution('5 5\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4') == '1\\n2\\n2\\n'\nassert solution('1 1\\n1 1 1') == '1\\n1\\n'\nassert solution('5 5\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2\\n2\\n\"\nassert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"The output of the solution function should be {expected_output}, but it is {solution(input)}\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() # check if output matches expected output"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    2 2 2\n    4 2 1\n    4 4 1\n    \"\"\"\n) == \"1\\n2\\n2\\n2\"\nassert solution(\n    \"\"\"\n    4 5\n    1 1 1\n    2 2 1\n    3 1 1\n    4 4 1\n    \"\"\"\n) == \"1\\n2\\n2\\n2\"\nassert solution(\n    \"\"\"\n    3 10\n    1 1 1 1 1 1 1 1 1 1\n    2 1 2 2 2 1 2 1 2 1\n    3 2 3 1 1 2 1 3 1 1\n    4 1 1 1 2 1 1 1 1 1 1\n    5 3 1 1 1 1 1 2 1 1 1\n    6 1 1 1 1 1 1 1 1 1 1\n    7 1 1 1 1 1 1 1 1 1 1\n    8 2 1 1 1 1 1 1 1 1 1\n    9 2 1 1 1 1 1 1 1 1 1\n    10 1 1 1 1 1 1 1 1 1 1\n    \"\"\"\n) == \"1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"3 4\\n1 1 1\\n1 1 1\") == \"2\"\nassert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    2 2 2\n    4 2 1\n    4 4 1\n    ''') == '1\\n2\\n2\\n'\n\nassert solution('''\n    5 5\n    1 1 1 1 1\n    2 2 2 2 2\n    3 3 3 3 3\n    4 4 4 4 4\n    5 5 5 5 5\n    ''') == '1\\n2\\n2\\n'\n\nassert solution('''\n    3 3\n    2 2 2\n    4 2 1\n    4 4 1\n    4 4 1\n    ''') == '1\\n2\\n2\\n'\n\nassert solution('''\n    5 5\n    1 1 1 1 1\n    2 2 2 2 2\n    3 3 3 3 3\n    4 4 4 4 4\n    5 5 5 5 5\n    ''') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\nassert solution(\"3 50\\n50 70 10\\n100 110 4\\n150 190 16\") == \"60\\n\"\nassert solution(\"3 100\\n50 70 10\\n100 110 4\\n150 190 16\") == \"100\\n\"\nassert solution(\"3 150\\n50 70 10\\n100 110 4\\n150 190 16\") == \"150\\n\"\nassert solution(\"3 200\\n50 70 10\\n100 110 4\\n150 190 16\") == \"200\\n\"\nassert solution(\"3 250\\n50 70 10\\n100 110 4\\n150 190 16\") == \"250\\n\"\nassert solution(\"3 300\\n50 70 10\\n100 110 4\\n150 190 16\") == \"300\\n\"\nassert solution(\"3 350\\n50 70 10\\n100 110 4\\n150 190 16\") == \"350\\n\"\nassert solution(\"3 400\\n50 70 10\\n100 110 4\\n150 190 16\") == \"400\\n\"\nassert solution(\"3 450\\n50 70 10\\n100 110 4\\n150 190 16\") == \"450\\n\"\nassert solution(\"3 500\\n50 70 10\\n100 110 4\\n150 190 16\") == \"500\\n\"\nassert solution(\"3 550\\n50 70 10\\n100 110 4\\n150 190 16\") == \"550\\n\"\nassert solution(\"3 600\\n50 70 10\\n100 110 4\\n150 190 16\") == \"600\\n\"\nassert solution(\"3 650\\n50 70 10\\n100 110 4\\n150 190 16\") == \"650\\n\"\nassert solution(\"3 700\\n50 70 10\\n100 110 4\\n150 190 16\") == \"700\\n\"\nassert solution(\"3 750\\n50 70 10\\n100 110 4\\n150 190 16\") == \"750\\n\"\nassert solution(\"3 800\\n50 70 10\\n100 110 4\\n150 190 16\") == \"800\\n\"\nassert solution(\"3 850\\n50 70 10\\n100 110 4\\n150 190 16\") == \"850\\n\"\nassert solution(\"3 900\\n50 70 10\\n100 110 4\\n150 190 16\") == \"900\\n\"\nassert solution(\"3 950\\n50 70 10\\n100 110 4\\n150 190 16\") == \"950\\n\"\nassert solution(\"3 1000\\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_input.txt', 'r')) == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"10 30\\n20 40 50\\n30 60 80\\n40 70 90\\n50 80 100\") == \"20\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5', 'Incorrect output.'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output a single line containing an integer B,\\nbetween 0 and 10^9.\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n    2 5\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    1 "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(2 5) (5 3)\") == 26\nassert solution(\"(5 4) (4 3)\") == 18\nassert solution(\"(1 1) (2 2) (3 3) (4 4) (5 5)\") == 6\nassert solution(\"(4 1) (5 2) (6 3) (7 4) (8 5) (9 6) (10 7) (11 8) (12 9) (13 10) (14 11) (15 12) (16 13) (17 14) (18 15) (19 16) (20 17) (21 18) (22 19) (23 20) (24 21) (25 22) (26 23) (27 24) (28 25) (29 26) (30 27) (31 28) (32 29) (33 30) (34 31) (35 32) (36 33) (37 34) (38 35) (39 36) (40 37) (41 38) (42 39) (43 40) (44 41) (45 42) (46 43) (47 44) (48 45) (49 46) (50 47) (51 48) (52 49) (53 50) (54 51) (55 52) (56 53) (57 54) (58 55) (59 56) (60 57) (61 58) (62 59) (63 60) (64 61) (65 62) (66 63) (67 64) (68 65) (69 66) (70 67) (71 68) (72 69) (73 70) (74 71) (75 72) (76 73) (77 74) (78 75) (79 76) (80 77) (81 78) (82 79) (83 80) (84 81) (85 82) (86 83) (87 84) (88 85) (89 86) (90 87) (91 88) (92 89) (93 90) (94 91) (95 92) (96 93) (97 94) (98 95) (99 96) (100 97) (101 98) (102 99) (103 100) (104 101) (105 102) (106 103) (107 104) (108 105) (109 106) (110 107) (111 108) (112 109) (113 110) (114 111) (115 112) (116 113) (117 114) (118 115) (119 116) (120 117) (121 118) (122 119) (123 120) (124 121) (125 122) (126 123) (127 124) (128 125) (129 126) (130 127) (131 128) (132 129) (133 130"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 5\n    2 5\n    5 3\n    5 5\n    5 5\n    1\n6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == '26'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26, \"Expected 26, but got %s\" % solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)')"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\"\"\") == \"26\"\nassert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26, \"Test failed\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\nassert solution('2\\n-1 0\\n0 0\\n1 0') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1''') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"success\"\nprint(\"success\")"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"failure\", \"Please provide the correct input\"\nassert solution(\"5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\", \"Please provide the correct input\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"success\"\nassert solution(1) == \"failure\"\nassert solution(2) == \"success\"\nassert solution(4) == \"failure\"\nassert solution(5) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"success\", \"Your solution is incorrect!\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() =='success'\nassert solution('2\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() == 'failure'\nassert solution('3\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() == 'failure'\nassert solution('4\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() == 'failure'\nassert solution('5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() == 'failure'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n').strip() == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) =='success'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"1 2\\n3 3\\n5 2 2\\n5 1 2\") == \"impossible\"\nassert solution(\"2 3\\n2 2\\n4 2\\n4 4\\n3 3\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n2 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 2\\n3 3\\n5 2 2\\n5"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\n\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Incorrect output: {solution(sample_input)}!= {expected_output}\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"2 3\\n1 1 3\\n3 1 1\\n3 2 1\") == \"1\\n\"\nassert solution(\"2 4\\n1 1 2\\n2 1 3\\n3 2 3\\n1 2 4\") == \"3\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"4 3\\n1 2 3\\n2 1 4\\n-1 1 2\") == \"2\"\nassert solution(\"2 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n353') == '3\\n353'\nassert solution('4 2\\n1234') == '4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''3\n353'''\nassert solution() == '''4\n1313'''"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\"\nassert solution(\"3 1\\n353\\n4 1\\n1234\\n\") == \"3\\n353\\n4\\n1243\"\nassert solution(\"3 2\\n353\\n5 2\\n1234\\n\") == \"3\\n353\\n5\\n1235\"\nassert solution(\"3 2\\n353\\n4 2\\n1235\\n\") == \"3\\n353\\n4\\n1243\"\nassert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1243\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"\n3\n353\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Solution 1\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Solution 2\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Solution 3\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20\\n') == '3\\n'\nassert solution('1 1 2 3 1 0\\n15 27 26\\n') == '2\\n'\nassert solution('1 1 2 3 1 0\\n2 2 1\\n') == '0\\n'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\\n\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\\n\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\\n\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\\n\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\\n\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == '4'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == '6'\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"000\\n2 0 1\\n4 0 1\\n3 0 2\\n6 0 2\\n3 0 2\\n2 0 2\\n1 1 2\\n2 0 2\\n1 1 2\") == \"8\"\nassert solution(\"000\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"000\\n2 0 1\\n4 0 1\\n3 0 2\\n6 0 2\\n3 0 2\\n2 0 2\\n1 1 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\nassert solution(open('example1.txt', 'r')) == '4\\n'\nassert solution(open('example2.txt', 'r')) == '6\\n'\nassert solution(open('example3.txt', 'r')) == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 0, 1, 2, 0, 2, 1, 2]) == 4\nassert solution([3, 0, 2, 2, 0, 2, 2, 2]) == 6\nassert solution([3, 0, 2, 2, 0, 2, 1, 2]) == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\\n\".join([\"0 0 1\", \"2 0 1\", \"4 0 1\"])) == \"4\"\nassert solution(r\"\\n\".join([\"0 0 2\", \"3 0 2\", \"6 0 2\"])) == \"6\"\nassert solution(r\"\\n\".join([\"0 0 2\", \"2 0 2\", \"1 1 2\"])) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 1\\n2 0 1\\n4 0 1') == '4\\n'\nassert solution('0 0 2\\n3 0 2\\n6 0 2') == '6\\n'\nassert solution('0 0 2\\n2 0 2\\n1 1 2') == '8\\n'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"NO\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES\\n'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO\\n'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES\\n'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n6 0 6 6 0 6 0 6\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\\n\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n0') == 'cslnb'\nassert solution('2\\n1 0') == 'cslnb'\nassert solution('2\\n2 2') =='sjfnb'\nassert solution('3\\n2 3 1') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"cslnb\"\nassert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'1\\n0\\n') == 'cslnb'\nassert solution(r'2\\n1 0\\n') == 'cslnb'\nassert solution(r'2\\n2 2\\n') =='sjfnb'\nassert solution(r'3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n1 5 3') == 2\nassert solution('1 2\\n1') == 1\nassert solution('1 1\\n1') == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(stdin=\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(stdin=\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n\\n1 1\\n1\") == 2\nassert solution(\"1 2\\n1\\n\\n1 1\\n1\") == 1\nassert solution(\"1 1\\n1\\n\\n1 1\\n1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\") == 2\nassert solution(\"1 2\\n1\") == 1\nassert solution(\"1 1\\n1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2'\nassert solution('1 2\\n1\\n') == '1'\nassert solution('1 1\\n1\\n') == '0'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == -1\nassert solution(4) == -1\nassert solution(5) == 1\nassert solution(6) == -1\nassert solution(7) == -1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == -1\nassert solution(11) == -1\nassert solution(12) == -1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == -1\nassert solution(17) == -1\nassert solution(18) == 1\nassert solution(19) == -1\nassert solution(20) == 1\nassert solution(21) == -1\nassert solution(22) == -1\nassert solution(23) == 1\nassert solution(24) == -1\nassert solution(25) == -1\nassert solution(26) == 1\nassert solution(27) == -1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == -1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == -1\nassert solution(35) == 1\nassert solution(36) == -1\nassert solution(37) == 1\nassert solution(38) == -1\nassert solution(39) == -1\nassert solution(40) == 1\nassert solution(41) == -1\nassert solution(42) == -1\nassert solution(43) == 1\nassert solution(44) == -1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == -1\nassert solution(48) == -1\nassert solution(49) == -1\nassert solution(50) == -1\nassert solution(51) == -1\nassert solution(52) == 1\nassert solution(53) == -1\nassert solution(54) == 1\nassert solution(55) == -1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == -1\nassert solution(59) == -1\nassert solution(60) == -1\nassert solution(61) == 1\nassert solution(62) == -1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == -1\nassert solution(67) == 1\nassert solution(68) == -1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == -1\nassert solution(72) == 1\nassert solution(73) == -1\nassert solution(74) == -1\nassert solution(75) == 1\nassert solution(76) == -1\nassert solution(77) == 1\nassert solution(78) == -1\nassert solution(79) == -1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == -1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == -1\nassert solution(86) == 1\nassert solution(87) == -1\nassert solution(88) == 1\nassert solution(89) == -1\nassert solution(90) == 1\nassert solution(91) == -1\nassert solution(92) == -1\nassert solution(93) == 1\nassert solution(94) == -1\nassert solution(95) == -1\nassert solution(96) == 1\nassert solution(97) == -1\nassert solution(98) == 1\nassert solution(99) == -1\nassert solution(100) == -1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == -1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 1\nassert solution(11) == 0\nassert solution(12) == 1\nassert solution(13) == 0\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 0\nassert solution(23) == 1\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 1\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 0\nassert solution(43) == 1\nassert solution(44) == 0\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 0\nassert solution(53) == 1\nassert solution(54) == 0\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 0\nassert solution(63) == 1\nassert solution(64) == 0\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 0\nassert solution(73) == 1\nassert solution(74) == 0\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 0\nassert solution(83) == 1\nassert solution(84) == 0\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 0\nassert solution(93) == 1\nassert solution(94) == 0\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 0\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\"\nassert solution(\"3\") == \"-1\\n0\\n1\"\nassert solution(\"4\") == \"-1\\n0 1\\n1\"\nassert solution(\"5\") == \"-1\\n0 1\\n1\"\nassert solution(\"6\") == \"-1\\n0 1\\n1\"\nassert solution(\"7\") == \"-1\\n0 1\\n1\"\nassert solution(\"8\") == \"-1\\n0 1\\n1\"\nassert solution(\"9\") == \"-1\\n0 1\\n1\"\nassert solution(\"10\") == \"-1\\n0 1\\n1\"\nassert solution(\"11\") == \"-1\\n0 1\\n1\"\nassert solution(\"12\") == \"-1\\n0 1\\n1\"\nassert solution(\"13\") == \"-1\\n0 1\\n1\"\nassert solution(\"14\") == \"-1\\n0 1\\n1\"\nassert solution(\"15\") == \"-1\\n0 1\\n1\"\nassert solution(\"16\") == \"-1\\n0 1\\n1\"\nassert solution(\"17\") == \"-1\\n0 1\\n1\"\nassert solution(\"18\") == \"-1\\n0 1\\n1\"\nassert solution(\"19\") == \"-1\\n0 1\\n1\"\nassert solution(\"20\") == \"-1\\n0 1\\n1\"\nassert solution(\"21\") == \"-1\\n0 1\\n1\"\nassert solution(\"22\") == \"-1\\n0 1\\n1\"\nassert solution(\"23\") == \"-1\\n0 1\\n1\"\nassert solution(\"24\") == \"-1\\n0 1\\n1\"\nassert solution(\"25\") == \"-1\\n0 1\\n1\"\nassert solution(\"26\") == \"-1\\n0 1\\n1\"\nassert solution(\"27\") == \"-1\\n0 1\\n1\"\nassert solution(\"28\") == \"-1\\n0 1\\n1\"\nassert solution(\"29\") == \"-1\\n0 1\\n1\"\nassert solution(\"30\") == \"-1\\n0 1\\n1\"\nassert solution(\"31\") == \"-1\\n0 1\\n1\"\nassert solution(\"32\") == \"-1\\n0 1\\n1\"\nassert solution(\"33\") == \"-1\\n0 1\\n1\"\nassert solution(\"34\") == \"-1\\n0 1\\n1\"\nassert solution(\"35\") == \"-1\\n0 1\\n1\"\nassert solution(\"36\") == \"-1\\n0 1\\n1\"\nassert solution(\"37\") == \"-1\\n0 1\\n1\"\nassert solution(\"38\") == \"-1\\n0 1\\n1\"\nassert solution(\"39\") == \"-1\\n0 1\\n1\"\nassert solution(\"40\") == \"-1\\n0 1\\n1\"\nassert solution(\"41\") == \"-1\\n0 1\\n1\"\nassert solution(\"42\") == \"-1\\n0 1\\n1\"\nassert solution(\"43\") == \"-1\\n0 1\\n1\"\nassert solution(\"44\") == \"-1\\n0 1\\n1\"\nassert solution(\"45\") == \"-1\\n0 1\\n1\"\nassert solution(\"46\") == \"-1\\n0 1\\n1\"\nassert solution(\"47\") == \"-1\\n0 1\\n1\"\nassert solution(\"48\") == \"-1\\n0 1\\n1\"\nassert solution(\"49\") == \"-1\\n0 1\\n1\"\nassert solution(\"50\") == \"-1\\n0 1\\n1\"\nassert solution(\"51\") == \"-1\\n0 1\\n1\"\nassert solution(\"52\") == \"-1\\n0 1\\n1\"\nassert solution(\"53\") == \"-1\\n0 1\\n1\"\nassert solution(\"54\") == \"-1\\n0 1\\n1\"\nassert solution(\"55"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '1'\nassert solution(4) == '2'\nassert solution(5) == '1'\nassert solution(6) == '2'\nassert solution(7) == '1'\nassert solution(8) == '2'\nassert solution(9) == '1'\nassert solution(10) == '2'\nassert solution(11) == '1'\nassert solution(12) == '2'\nassert solution(13) == '1'\nassert solution(14) == '2'\nassert solution(15) == '1'\nassert solution(16) == '2'\nassert solution(17) == '1'\nassert solution(18) == '2'\nassert solution(19) == '1'\nassert solution(20) == '2'\nassert solution(21) == '1'\nassert solution(22) == '2'\nassert solution(23) == '1'\nassert solution(24) == '2'\nassert solution(25) == '1'\nassert solution(26) == '2'\nassert solution(27) == '1'\nassert solution(28) == '2'\nassert solution(29) == '1'\nassert solution(30) == '2'\nassert solution(31) == '1'\nassert solution(32) == '2'\nassert solution(33) == '1'\nassert solution(34) == '2'\nassert solution(35) == '1'\nassert solution(36) == '2'\nassert solution(37) == '1'\nassert solution(38) == '2'\nassert solution(39) == '1'\nassert solution(40) == '2'\nassert solution(41) == '1'\nassert solution(42) == '2'\nassert solution(43) == '1'\nassert solution(44) == '2'\nassert solution(45) == '1'\nassert solution(46) == '2'\nassert solution(47) == '1'\nassert solution(48) == '2'\nassert solution(49) == '1'\nassert solution(50) == '2'\nassert solution(51) == '1'\nassert solution(52) == '2'\nassert solution(53) == '1'\nassert solution(54) == '2'\nassert solution(55) == '1'\nassert solution(56) == '2'\nassert solution(57) == '1'\nassert solution(58) == '2'\nassert solution(59) == '1'\nassert solution(60) == '2'\nassert solution(61) == '1'\nassert solution(62) == '2'\nassert solution(63) == '1'\nassert solution(64) == '2'\nassert solution(65) == '1'\nassert solution(66) == '2'\nassert solution(67) == '1'\nassert solution(68) == '2'\nassert solution(69) == '1'\nassert solution(70) == '2'\nassert solution(71) == '1'\nassert solution(72) == '2'\nassert solution(73) == '1'\nassert solution(74) == '2'\nassert solution(75) == '1'\nassert solution(76) == '2'\nassert solution(77) == '1'\nassert solution(78) == '2'\nassert solution(79) == '1'\nassert solution(80) == '2'\nassert solution(81) == '1'\nassert solution(82) == '2'\nassert solution(83) == '1'\nassert solution(84) == '2'\nassert solution(85) == '1'\nassert solution(86) == '2'\nassert solution(87) == '1'\nassert solution(88) == '2'\nassert solution(89) == '1'\nassert solution(90) == '2'\nassert solution(91) == '1'\nassert solution(92) == '2'\nassert solution(93) == '1'\nassert solution(94) == '2'\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\n\nassert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 1\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 1\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(8) == 2\nassert solution(9) == 1\nassert solution(10) == 2\nassert solution(11) == 1\nassert solution(12) == 2\nassert solution(13) == 1\nassert solution(14) == 2\nassert solution(15) == 1\nassert solution(16) == 2\nassert solution(17) == 1\nassert solution(18) == 2\nassert solution(19) == 1\nassert solution(20) == 2\nassert solution(21) == 1\nassert solution(22) == 2\nassert solution(23) == 1\nassert solution(24) == 2\nassert solution(25) == 1\nassert solution(26) == 2\nassert solution(27) == 1\nassert solution(28) == 2\nassert solution(29) == 1\nassert solution(30) == 2\nassert solution(31) == 1\nassert solution(32) == 2\nassert solution(33) == 1\nassert solution(34) == 2\nassert solution(35) == 1\nassert solution(36) == 2\nassert solution(37) == 1\nassert solution(38) == 2\nassert solution(39) == 1\nassert solution(40) == 2\nassert solution(41) == 1\nassert solution(42) == 2\nassert solution(43) == 1\nassert solution(44) == 2\nassert solution(45) == 1\nassert solution(46) == 2\nassert solution(47) == 1\nassert solution(48) == 2\nassert solution(49) == 1\nassert solution(50) == 2\nassert solution(51) == 1\nassert solution(52) == 2\nassert solution(53) == 1\nassert solution(54) == 2\nassert solution(55) == 1\nassert solution(56) == 2\nassert solution(57) == 1\nassert solution(58) == 2\nassert solution(59) == 1\nassert solution(60) == 2\nassert solution(61) == 1\nassert solution(62) == 2\nassert solution(63) == 1\nassert solution(64) == 2\nassert solution(65) == 1\nassert solution(66) == 2\nassert solution(67) == 1\nassert solution(68) == 2\nassert solution(69) == 1\nassert solution(70) == 2\nassert solution(71) == 1\nassert solution(72) == 2\nassert solution(73) == 1\nassert solution(74) == 2\nassert solution(75) == 1\nassert solution(76) == 2\nassert solution(77) == 1\nassert solution(78) == 2\nassert solution(79) == 1\nassert solution(80) == 2\nassert solution(81) == 1\nassert solution(82) == 2\nassert solution(83) == 1\nassert solution(84) == 2\nassert solution(85) == 1\nassert solution(86) == 2\nassert solution(87) == 1\nassert solution(88) == 2\nassert solution(89) == 1\nassert solution(90) == 2\nassert solution(91) == 1\nassert solution(92) == 2\nassert solution(93) == 1\nassert solution(94) == 2\nassert solution(95) == 1\nassert solution(96) == 2\nassert solution(97) == 1\nassert solution(98) == 2\nassert solution(99) == 1\nassert solution(100) == 2\nassert solution(101) == 1\nassert solution(102) == 2\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '-1 0 1'\nassert solution(3) == '-1 0 1'\nassert solution(4) == '-1 0 1'\nassert solution(5) == '1'\nassert solution(6) == '1 0 1'\nassert solution(7) == '1 0 1'\nassert solution(8) == '1 0 1'\nassert solution(9) == '1 0 1'\nassert solution(10) == '1 0 1'\nassert solution(11) == '1 0 1'\nassert solution(12) == '1 0 1'\nassert solution(13) == '1 0 1'\nassert solution(14) == '1 0 1'\nassert solution(15) == '1 0 1'\nassert solution(16) == '1 0 1'\nassert solution(17) == '1 0 1'\nassert solution(18) == '1 0 1'\nassert solution(19) == '1 0 1'\nassert solution(20) == '1 0 1'\nassert solution(21) == '1 0 1'\nassert solution(22) == '1 0 1'\nassert solution(23) == '1 0 1'\nassert solution(24) == '1 0 1'\nassert solution(25) == '1 0 1'\nassert solution(26) == '1 0 1'\nassert solution(27) == '1 0 1'\nassert solution(28) == '1 0 1'\nassert solution(29) == '1 0 1'\nassert solution(30) == '1 0 1'\nassert solution(31) == '1 0 1'\nassert solution(32) == '1 0 1'\nassert solution(33) == '1 0 1'\nassert solution(34) == '1 0 1'\nassert solution(35) == '1 0 1'\nassert solution(36) == '1 0 1'\nassert solution(37) == '1 0 1'\nassert solution(38) == '1 0 1'\nassert solution(39) == '1 0 1'\nassert solution(40) == '1 0 1'\nassert solution(41) == '1 0 1'\nassert solution(42) == '1 0 1'\nassert solution(43) == '1 0 1'\nassert solution(44) == '1 0 1'\nassert solution(45) == '1 0 1'\nassert solution(46) == '1 0 1'\nassert solution(47) == '1 0 1'\nassert solution(48) == '1 0 1'\nassert solution(49) == '1 0 1'\nassert solution(50) == '1 0 1'\nassert solution(51) == '1 0 1'\nassert solution(52) == '1 0 1'\nassert solution(53) == '1 0 1'\nassert solution(54) == '1 0 1'\nassert solution(55) == '1 0 1'\nassert solution(56) == '1 0 1'\nassert solution(57) == '1 0 1'\nassert solution(58) == '1 0 1'\nassert solution(59) == '1 0 1'\nassert solution(60) == '1 0 1'\nassert solution(61) == '1 0 1'\nassert solution(62) == '1 0 1'\nassert solution(63) == '1 0 1'\nassert solution(64) == '1 0 1'\nassert solution(65) == '1 0 1'\nassert solution(66) == '1 0 1'\nassert solution(67) == '1 0 1'\nassert solution(68) == '1 0 1'\nassert solution(69) == '1 0 1'\nassert solution(70) == '"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 0\nassert solution(9) == 1\nassert solution(10) == 0\nassert solution(11) == 1\nassert solution(12) == 0\nassert solution(13) == 1\nassert solution(14) == 0\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 0\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 0\nassert solution(21) == 1\nassert solution(22) == 0\nassert solution(23) == 1\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 0\nassert solution(27) == 1\nassert solution(28) == 0\nassert solution(29) == 1\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 1\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 0\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 0\nassert solution(41) == 1\nassert solution(42) == 0\nassert solution(43) == 1\nassert solution(44) == 0\nassert solution(45) == 1\nassert solution(46) == 0\nassert solution(47) == 1\nassert solution(48) == 0\nassert solution(49) == 1\nassert solution(50) == 0\nassert solution(51) == 1\nassert solution(52) == 0\nassert solution(53) == 1\nassert solution(54) == 0\nassert solution(55) == 1\nassert solution(56) == 0\nassert solution(57) == 1\nassert solution(58) == 0\nassert solution(59) == 1\nassert solution(60) == 0\nassert solution(61) == 1\nassert solution(62) == 0\nassert solution(63) == 1\nassert solution(64) == 0\nassert solution(65) == 1\nassert solution(66) == 0\nassert solution(67) == 1\nassert solution(68) == 0\nassert solution(69) == 1\nassert solution(70) == 0\nassert solution(71) == 1\nassert solution(72) == 0\nassert solution(73) == 1\nassert solution(74) == 0\nassert solution(75) == 1\nassert solution(76) == 0\nassert solution(77) == 1\nassert solution(78) == 0\nassert solution(79) == 1\nassert solution(80) == 0\nassert solution(81) == 1\nassert solution(82) == 0\nassert solution(83) == 1\nassert solution(84) == 0\nassert solution(85) == 1\nassert solution(86) == 0\nassert solution(87) == 1\nassert solution(88) == 0\nassert solution(89) == 1\nassert solution(90) == 0\nassert solution(91) == 1\nassert solution(92) == 0\nassert solution(93) == 1\nassert solution(94) == 0\nassert solution(95) == 1\nassert solution(96) == 0\nassert solution(97) == 1\nassert solution(98) == 0\nassert solution(99) == 1\nassert solution(100) == 0\nassert solution(101) == 1\nassert solution(102) == 0\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [-1, 0, 1]\nassert solution(3) == [-2, 0, 1]\nassert solution(4) == [-3, 0, 2]\nassert solution(5) == [-5, 0, 3]\nassert solution(6) == [-7, 0, 4]\nassert solution(7) == [-11, 0, 5]\nassert solution(8) == [-13, 0, 6]\nassert solution(9) == [-17, 0, 7]\nassert solution(10) == [-23, 0, 8]\nassert solution(11) == [-27, 0, 9]\nassert solution(12) == [-33, 0, 10]\nassert solution(13) == [-39, 0, 11]\nassert solution(14) == [-43, 0, 12]\nassert solution(15) == [-51, 0, 13]\nassert solution(16) == [-61, 0, 14]\nassert solution(17) == [-73, 0, 15]\nassert solution(18) == [-87, 0, 16]\nassert solution(19) == [-103, 0, 17]\nassert solution(20) == [-121, 0, 18]\nassert solution(21) == [-141, 0, 19]\nassert solution(22) == [-163, 0, 20]\nassert solution(23) == [-187, 0, 21]\nassert solution(24) == [-213, 0, 22]\nassert solution(25) == [-241, 0, 23]\nassert solution(26) == [-271, 0, 24]\nassert solution(27) == [-303, 0, 25]\nassert solution(28) == [-337, 0, 26]\nassert solution(29) == [-373, 0, 27]\nassert solution(30) == [-411, 0, 28]\nassert solution(31) == [-451, 0, 29]\nassert solution(32) == [-493, 0, 30]\nassert solution(33) == [-537, 0, 31]\nassert solution(34) == [-583, 0, 32]\nassert solution(35) == [-631, 0, 33]\nassert solution(36) == [-681, 0, 34]\nassert solution(37) == [-733, 0, 35]\nassert solution(38) == [-787, 0, 36]\nassert solution(39) == [-843, 0, 37]\nassert solution(40) == [-891, 0, 38]\nassert solution(41) == [-941, 0, 39]\nassert solution(42) == [-993, 0, 40]\nassert solution(43) == [-1047, 0, 41]\nassert solution(44) == [-1103, 0, 42]\nassert solution(45) == [-1161, 0, 43]\nassert solution(46) == [-1221, 0, 44]\nassert solution(47) == [-1283, 0, 45]\nassert solution(48) == [-1347, 0, 46]\nassert solution(49) == [-1413, 0, 47]\nassert solution(50) == [-1481, 0, 48]\nassert solution(51) == [-1551, 0, 49]\nassert solution(52) == [-1623, 0, 50]\nassert solution(53) == [-1697, 0, 51]\nassert solution(54"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 \\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 \\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 1 5 4\n    1 2 1 3\n    \"\"\"\n) == \"1 3 3 \"\n\nassert solution(\n    \"\"\"\n    3 1 5 3\n    1 3 1\n    \"\"\"\n) == \"2 3 2 \"\n\nassert solution(\n    \"\"\"\n    3 2 5 3\n    1 3 1\n    \"\"\"\n) == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \\n1 3 3  \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\\n\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == \"1 3 3 \"\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == \"2 3 2 \"\n\nassert solution(\"\"\"\n3 2 5 3\n1 3 1\n\"\"\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n2 3 2\\n1 2 2\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n1 2 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''1 3 3 \n2 3 2\n1 2 2'''"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 3 3 \"\nassert solution() == \"1 3 3 \"\nassert solution() == \"2 3 2 \"\nassert solution() == \"1 2 2 \""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 1 5 4\n    1 2 1 3\n    \"\"\") == \"1 3 3\"\n\nassert solution(\"\"\"\n    3 1 5 3\n    1 3 1\n    \"\"\") == \"2 3 2\"\n\nassert solution(\"\"\"\n    3 2 5 3\n    1 3 1\n    \"\"\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110\\n2\\n\\n111111011\\n2\\n\\n') == '3\\n'\nassert solution('111111011\\n2\\n\\n111111011\\n2\\n\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n\nimport math"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('110\\n2\\n') == '3', \"Test failed: 110\\n2\\nExpected: '3', got: '{}'\".format(solution('110\\n2\\n'))\nassert solution('111111011\\n2\\n') == '169', \"Test failed: 111111011\\n2\\nExpected: '169', got: '{}'\".format(solution('111111011\\n2\\n'))\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n\nfrom typing import List"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    110\n    2\n    '''\n) == '3'\n\nassert solution(\n    '''\n    111111011\n    2\n    '''\n) == '169'\n\nassert solution(\n    '''\n    100\n    1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    10111\n    1\n    '''\n) == '0'\n\nassert solution(\n    '''\n    101101\n    1\n    '''\n) == '5'\n\nassert solution(\n    '''\n    10110111\n    1\n    '''\n) == '4'\n\nassert solution(\n    '''\n    10111001\n    1\n    '''\n) == '10'\n\nassert solution(\n    '''\n    111111111\n    1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    111111110\n    1\n    '''\n) == '2'\n\nassert solution(\n    '''\n    11111110111\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    1111111011011\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    11111110111011\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    111111111011111\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    1111111111111111\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    1111111111111110\n    1\n    '''\n) == '2'\n\nassert solution(\n    '''\n    111111111111110111\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    11111111111111011011\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    111111111111110111011\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    1111111111111111101111\n    1\n    '''\n) == '169'\n\nassert solution(\n    '''\n    11111111111111111111111\n    1\n    '''\n) == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n\nassert solution(\"110\\n1\\n\") == \"2\\n\"\nassert solution(\"111111011\\n1\\n\") == \"170\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '11.084259940083'\nassert solution() == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 11.084259940083, \"The solution is incorrect\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'TODO: Write solution here'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11.084259940083\", \"The output is incorrect.\"\nassert solution(input()) == \"33.121375178000\", \"The output is incorrect.\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"answer\", \"Your code is incorrect. The given code is not correct.\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n') == 11.084259940083\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n') == 33.121375178000"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(8) +'' + str(5)) == '2\\n'\nassert solution(str(8) +'' + str(15)) == '1\\n'\nassert solution(str(7) +'' + str(20)) == '0\\n'\nassert solution(str(1000000000000) +'' + str(1000000000001)) == '500000000000\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 5\\n') == '2'\nassert solution('8 15\\n') == '1'\nassert solution('7 20\\n') == '0'\nassert solution('1000000000000 1000000000001\\n') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 5\\n') == '2\\n'\nassert solution('8 15\\n') == '1\\n'\nassert solution('7 20\\n') == '0\\n'\nassert solution('1000000000000 1000000000001\\n') == '500000000000\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1 10\\n01000\\n') == '11'\nassert solution('5 10 1\\n01000\\n') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1 10\\n01000\\n') == '11'\nassert solution('5 10 1\\n01000\\n') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 1 10\\n01000\\n\") == 11\nassert solution(stdin=\"5 10 1\\n01000\\n\") == 2\nassert solution(stdin=\"7 2 3\\n1111111\\n\") == 0"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10\\n01000\") == 11\nassert solution(\"5 10 1\\n01000\") == 2\nassert solution(\"7 2 3\\n1111111\") == 0"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n\nfrom typing import List\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed: {input_str}\\nExpected output: {output_str}\\nActual output: {solution(input_str)}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 1\\n') == '2 1\\n'\nassert solution('5 1 2\\n') == '19 5\\n'\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 1\\n5 1 2\\n') == '2 1\\n19 5\\n'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"1 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n3 1 1\\n5 1 2\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 1 1\\n1 2 3\\n1 1 1\\n1 2 3\\n\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n\nfor i in range(len(input_data)):\n    assert solution(input_data[i]) == expected_output_for_case[i]"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\") == \"2 1\\n\"\nassert solution(\"5 1 2\") == \"19 5\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\", \"Test 1: Expected result: 6. Got: \" + solution(\"7 1\")\nassert solution(\"10 2\") == \"4\", \"Test 2: Expected result: 4. Got: \" + solution(\"10 2\")"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == '6'\nassert solution(10) == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output', '\\n'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 1\\n') == '6\\n'\nassert solution('10 2\\n') == '4\\n'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7, 1) == 6\nassert solution(10, 2) == 4\n\nfrom math import gcd"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\"\nassert solution(\"5 1\") == \"5\\n\"\nassert solution(\"10 3\") == \"16\\n\"\nassert solution(\"7 2\") == \"12\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-149.154.167.99\") == \"1\"\nassert solution(\"+149.154.167.100/30\") == \"1\"\nassert solution(\"+149.154.167.128/25\") == \"1\"\nassert solution(\"-149.154.167.120/29\") == \"1\"\n\nassert solution(\"-127.0.0.4/31\") == \"1\"\nassert solution(\"+127.0.0.8\") == \"1\"\nassert solution(\"+127.0.0.0/30\") == \"1\"\nassert solution(\"-195.82.146.208/29\") == \"1\"\nassert solution(\"-127.0.0.6/31\") == \"1\"\n\nassert solution(\"+127.0.0.1/32\") == \"-1\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == 1\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == 2\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == 2\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == -1"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('1 -149.154.167.99') == '1 0.0.0.0/0'\\nassert solution('4 -149.154.167.99 +149.154.167.100/30 +149.154.167.128/25 -149.154.167.120/29') == '2 149.154.167.99 149.154.167.120/29'\\nassert solution('5 -127.0.0.4/31 +127.0.0.8 +127.0.0.0/30 -195.82.146.208/29 -127.0.0.6/31') == '2 195.0.0.0/8 127.0.0.4/30'\\nassert solution('2 +127.0.0.1/32 -127.0.0.1') == '-1'\\n\\nif __name__ == '__main__':\\n    main()\",\"Test cases\\nassert solution('1 -149.154.167.99') == '1 0.0.0.0/0'\\nassert solution('4 -149.154.167.99 +149.154.167.100/30 +149.154.167.128/25 -149.154.167.120/29') == '2 149.154.167.99 149.154.167.120/29'\\nassert solution('5 -127.0.0.4/31 +127.0.0.8 +127.0.0.0/30 -195.82.146.208/29 -127.0.0.6/31') == '2 195.0.0.0/8 127.0.0.4/30'\\nassert solution('2 +127.0.0.1/32 -127.0.0.1') == '-1'\\n\\nif __name__ == '__main__':\\n    main()\",\"Test cases\\nassert solution('1 -149.154.167.99') == '1 0.0.0.0/0'\\nassert solution('4 -149.154.167.99 +149.154.167.100/30 +149.154.167.128/25 -149.154.167.120/29') == '2 149.154.167.99 149.154.167.120/29'\\nassert solution('5 -127.0.0.4/31 +127.0.0.8 +127.0.0.0/30 -195.82.146.208/29 -127.0.0.6/31') == '2 195.0.0.0/8 127.0.0.4/30'\\nassert solution('2 +127.0.0.1/32 -127.0.0.1') == '-1'\\n\\nif __name__ == '__main__':\\n    main()\",\"Test cases\\nassert solution('1 -149.154.167.99') == '1 0.0.0.0/0'\\nassert solution('4 -149.154.167.99 +149.154.167.100/30 +149.154."
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# for i in range(int(stdin.strip())):\\n#     print(solution(stdin.strip()))'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == 1\nassert solution(\"22\\n0011223344556677889988\") == 2\nassert solution(\"11\\n31415926535\") == 0\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Input:\\n{stdin}\\nExpected output:\\n{expected_output}\\nGot:\\n{solution(stdin)}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"1\"\nassert solution(\"31415926535\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\nassert solution('11\\n31415926535') == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '1'\nassert solution('22') == '2'\nassert solution('11') == '0'\nassert solution('31415926535') == '0'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\\n\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\n\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\\n\"\n\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\n\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\\n\"\n\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == 'Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n'\nassert solution('Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == 'Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n'\nassert solution('Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == 'Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n'\nassert solution('Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == 'Output\\n-1\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n```python\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n1 4\n\"\"\") == 6\n\nassert solution(\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == 12\n\nassert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 3\n1 4''') == 6\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3''') == 12\nassert solution('''2 2\n1 2\n2 1''') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\\n0 0\\n0 0\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\\n\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\\n\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\\n\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\\n0 0\\n0 0\") == \"YES\\n\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\n\nassert solution(\"5 1\\n1 1\\n1 0\") == \"YES\"\n\nassert solution(\"5 1\\n0 1\\n1 0\") == \"YES\"\n\nassert solution(\"5 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO' #First team doesn't know all problems\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES' #Second team can choose the first and the third problems"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\", \"Expected 'Yes' but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\" or solution(stdin) == \"No\", \"The output should be either 'Yes' or 'No'.\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 7\\n2 3\") == \"No\"\nassert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\nprint(\"Correct\")"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes'\nassert solution('2 7\\n2 3\\n') == 'No'"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 1') == 6\nassert solution('6 4 2') == 8\nassert solution('2 3 4') == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 1') == 6\nassert solution('6 4 2') == 8\nassert solution('2 3 4') == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\n\nfrom typing import List"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6\nassert solution() == 8\nassert solution() == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Output: 6\"\nassert solution(stdin) == \"8\", \"Output: 8\"\nassert solution(stdin) == \"-1\", \"Output: -1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 4 3\\n') == '2\\n'\nassert solution('3\\n4 1 1\\n') == '2\\n'\nassert solution('4\\n0 3 0 4\\n') == '0\\n'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution(solution_input)}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 2, 2, 4, 3) == 2\nassert solution(3, 4, 1, 1, 2) == 2\nassert solution(4, 0, 3, 0, 4) == 0"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2', \"Expected '2', got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1\\n2 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(stdin=\"3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(stdin=\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"The output should be 2.\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 2 4 3\\n') == '2'\nassert solution('3\\n4 1 1\\n') == '2'\nassert solution('4\\n0 3 0 4\\n') == '0'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"Test case 1 failed\"\nassert solution(input()) == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"8\\n10000011\\n\") == \"5\"\nassert solution(stdin=\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n10000011\\n') == '5\\n'\nassert solution('2\\n01\\n') == '2\\n'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of questions: \")) == \"Output a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring.\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring.'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\"\nassert solution(\"4\\n2 3 1 4\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2 3 1 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n4 4 4 4\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\n\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'\nassert solution('Input') == 'Output'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\\n7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{stdin}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\\n1\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n2\\n1\\n0\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9) == 504\nassert solution(7) == 210"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n\nfrom math import lcm"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"504\", \"Test Case 1\"\nassert solution(\"7\") == \"210\", \"Test Case 2\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"504\", \"Expected '504', got '{}'\".format(solution(\"9\"))\nassert solution(\"7\") == \"210\", \"Expected '210', got '{}'\".format(solution(\"7\"))\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n\nn = int(input())\nprint(n*1)\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\n') == '504\\n'\nassert solution('7\\n') == '210\\n'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(9) == \"504\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 1'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\", \"Incorrect output\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\", \"Incorrect output\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\", \"Incorrect output\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\", \"Incorrect output\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''1 1\n1 1\n1 1\n1 1\n1 1'''\n\nassert solution(open('input_example.txt', 'r').read()) == '''1 1\n1 1\n1 1\n1 1\n1 1'''\n\nassert solution(open('input_example2.txt', 'r').read()) == '''1 1\n1 1\n1 1\n1 1\n1 1'''\n\nassert solution(open('input_example3.txt', 'r').read()) == '''1 1\n1 1\n1 1\n1 1\n1 1'''\n\nassert solution(open('input_example4.txt', 'r').read()) == '''1 1\n1 1\n1 1\n1 1\n1 1'''\n\nassert solution(open('input_example5.txt', 'r').read()) == '''3 4'''"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '1 1\\n3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n5 5 5 5\\n5 5 5 5\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1 1\\n'\nassert solution('0 0 1 1\\n1 1 1 1\\n1 1 1"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\", \"Error: Please write the solution function.\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\", \"Error: Please write the solution function.\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\", \"Error: Please write the solution function.\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\", \"Error: Please write the solution function.\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES') == 'YES', 'Expected \"YES\" but got \"{}\"'.format(solution('Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES'))\n\nassert solution('Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES') == 'NO', 'Expected \"NO\" but got \"{}\"'.format(solution('Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES'))"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n18 55 16 17\") == \"YES\"\nassert solution(\"Input\\n6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"Input\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n\n\"\"\") == \"9\\n\"\n\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\\n\", \"Expected output: 9\\nGot: \" + str(solution(input()))\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n\") == \"Vasya\\n\"\nassert solution(stdin=\"2\\n\") == \"Petya\\n\"\nassert solution(stdin=\"8\\n\") == \"Petya\\n\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 2 3\n    1 2\n    2 2\n    2 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    1 5 3\n    1 3\n    1 1\n    1 5\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 3 6\n    1 2\n    1 3\n    2 2\n    2 3\n    3 1\n    3 3\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1\\n') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5\\n') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n') == '1\\n'\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: {solution(input())}!= {output}\\n{input()}\\n{output}\"\nfor i, input_ in enumerate(inputs):\n    output_ = solution(input_)\n    assert output_ == expected_output[i], f\"Test {i+1} failed: {output_}!= {expected_output[i]}\\n{input_}\\n{expected_output[i]}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2 3\n    1 2\n    2 2\n    2 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    1 5 3\n    1 3\n    1 1\n    1 5\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 3 6\n    1 2\n    1 3\n    2 2\n    2 3\n    3 1\n    3 3\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed: solution({input()})!= expected, solution({expected})\"\n\ntest_case = 1\nn, m, q = map(int, input().split())"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input {input()} should output {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0\\n'\nassert solution(open('test_1.txt', 'r').read()) == '0\\n'\nassert solution(open('test_2.txt', 'r').read()) == '0\\n'\nassert solution(open('test_3.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nA\\nA\") == \"1\"\nassert solution(\"5\\nA\\nB\\A\\A\") == \"2\"\nassert solution(\"5\\nA\\nA\\A\\A\") == \"1\"\nassert solution(\"5\\nA\\A\\A\\A\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"1\"\nassert solution(\"4\\nA\\nB\\xB\\xA\") == \"0\"\nassert solution(\"4\\nA\\xB\\xB\\xA\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"1\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"0\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"3\"\nassert solution(\"4\\xA\\yB\\xB\\xA\") == \"4\"\nassert solution(\"4\\xA\\yB\\xB\\xA\") == \"4\"\nassert solution(\"4\\xA\\yB\\xB\\xA\") == \"4\"\nassert solution(\"4\\xA\\yB\\xB\\xA\") == \"4\"\nassert solution(\"4\\xA\\yB\\xB\\xA\") == \"4\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\nassert solution(\"4\\xA\\xB\\xB\\xA\") == \"5\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"4\\n\") == \"0\"\nassert solution(\"5\\n\") == \"0\"\n\nN = int(stdin.readline())\nc_aa = stdin.readline()\nc_ab = stdin.readline()\nc_ba = stdin.readline()\nc_bb = stdin.readline()\n\nassert 1 <= N <= 1000\nassert len(c_aa) == 1\nassert len(c_ab) == 1\nassert len(c_ba) == 1\nassert len(c_bb) == 1"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Test failed\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"2\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"3\\nA\\nB\\nB\\xA\\xA\") == \"4\"\nassert solution(\"3\\nA\\xB\\xB\\xA\\xB\\xA\") == \"4\"\nassert solution(\"3\\xA\\xA\\xB\\xB\\xB\\xA\") == \"4\"\nassert solution(\"2\\xA\\xA\\xA\\xB\\xB\\xB\") == \"3\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xB\\xB\") == \"4\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xA\\xB\") == \"3\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xA\\xB\") == \"1\"\nassert solution(\"3\\xA\\xB\\xB\\xA\\xB\\xA\") == \"4\"\nassert solution(\"2\\xA\\xA\\xA\\xB\\xB\\xB\") == \"3\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xB\\xB\") == \"4\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xA\\xB\") == \"3\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xA\\xB\") == \"1\"\nassert solution(\"3\\xA\\xB\\xB\\xA\\xB\\xA\") == \"4\"\nassert solution(\"2\\xA\\xA\\xA\\xB\\xB\\xB\") == \"3\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xB\\xB\") == \"4\"\nassert solution(\"1\\xA\\xA\\xA\\xA\\xA\\xB\") == \"3\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"5\\xA\\xA\\xA\\xA\\xA\\xA\\xA\\xB\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"1\"\nassert solution(\"4\\nA\\nA\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nA\\nB\\A\") == \"0\"\nassert solution(\"4\\nA\\nB\\A\\A\") == \"2\"\nassert solution(\"4\\nA\\nA\\B\\A\") == \"1\"\nassert solution(\"4\\nA\\B\\A\\B\") == \"1\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"2\"\nassert solution(\"4\\nA\\A\\A\\B\") == \"1\"\nassert solution(\"4\\nA\\B\\B\\B\") == \"1\"\nassert solution(\"4\\nA\\B\\A\\A\") == \"0\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"1\\nA\\nA\\nB\\nB\") == \"0\"\nassert solution(\"2\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"3\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"6\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"7\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"8\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"9\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"10\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"11\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"12\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"13\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"14\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"15\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"16\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"17\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"18\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"19\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"20\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"21\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"22\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"23\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"24\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"25\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"26\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"27\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"28\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"29\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"30\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"31\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"32\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"33\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"34\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"35\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"36\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"37\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"38\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"39\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"40\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"41\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"42\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"43\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"44\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"45\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"46\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"47\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"48\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"49\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"50\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"51\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"52\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"53\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"54\\nA\\nB\\"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 3, 4) == 2\nassert solution(5, 2, 3, 4, 6, 7) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example1) == 2\nassert solution(example2) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input1) == example_output1\nassert solution(example_input2) == example_output2\n\nexample_input1 = \"3\\n2 3 4\\n\"\nexample_output1 = \"2\"\nexample_input2 = \"5\\n2 3 4 6 7\\n\"\nexample_output2 = \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\" # Solution 1"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '2\\n'\nassert solution(5) == '3\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(output - output)}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n' # sample 1\nassert solution(stdin) == '3\\n' # sample 2"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nC\") == \"11\"\nassert solution(\"1\\nA\\nB\\nC\") == \"1\"\nassert solution(\"1\\nA\\nB\\nC\\nD\") == \"10\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\") == \"9\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\") == \"8\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\") == \"7\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\") == \"6\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\") == \"5\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\") == \"4\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\") == \"3\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\") == \"2\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\") == \"1\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"11\\n\", input()\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nA\\nB\\nC\\n') == '11'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nA\\AABAC') == '11'\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\\n\", input()"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nAABC\\n') == '11\\n'\nassert solution('5\\nAABBC\\n') == '22\\n'\nassert solution('5\\nACCBA\\n') == '33\\n'\nassert solution('5\\nCAABA\\n') == '44\\n'\nassert solution('5\\nAAABA\\n') == '55\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test failed for the given input.\"\nprint(\"Test passed successfully!\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: Expected {output}, got {solution(input)}\"\nfor i, (input, output) in enumerate(zip(input_data, output_data)):\n    print(f\"Test case {i+1}:\")\n    print(f\"Input:\\n{input}\\n\")\n    print(f\"Output:\\n{output}\\n\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == expected, f\"Test failed. Please check the solution provided.\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"The expected output is '3'.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == '3'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\nassert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution() == '3'\nassert solution() == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\"\nassert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'Minimum time required to reach heights'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Invalid input\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"2\"\nassert solution(\"2 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"0\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n\nsolution(\"2\\n4 5\") # should print \"2\\n\" as the minimum number of operations required to achieve the objective is 2."
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"The output is not correct.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"3\\n1 2\\n3 4 5\") == \"2\\n\", \"Test 2 failed\"\nassert solution(\"1\\n1 2 3\\n4 5 6 7\\n8 9 10\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"5\\n\", \"Test 4 failed\"\nassert solution(\"1\\n\") == \"0\\n\", \"Test 5 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"3\\n5 2 4 1\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"5\\n3 4 5 6\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"3\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\"\nassert solution(\"4 4 5 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\"\nassert solution(\"4 4 5 5 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\"\nassert solution(\"4 4 5 5 5 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\"\nassert solution(\"4 4 5 5 5 5 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\", \"The minimum number of operations required to achieve the objective is not 1.\"\nassert solution(\"1 2 3 4 5 6\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is not 2.\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\\n\"\nassert solution(input()) == \"NO\\n\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(\"YES\")\nfor i in range(1, 4):\n    print(input())\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case + 1} failed. Expected output: '{expected_output}', Received output: '{solution(input())}'\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 1, 1) == 0\nassert solution(1, 2, 1) == 666666672\nassert solution(1, 2, 2) == 1\nassert solution(2, 1, 1) == 666666672\nassert solution(2, 1, 2) == 1\nassert solution(3, 1, 1) == 0\nassert solution(3, 1, 2) == 0\nassert solution(4, 1, 1) == 0\nassert solution(4, 1, 2) == 0\nassert solution(5, 1, 1) == 0\nassert solution(5, 1, 2) == 0\nassert solution(6, 1, 1) == 0\nassert solution(6, 1, 2) == 0\nassert solution(7, 1, 1) == 0\nassert solution(7, 1, 2) == 0\nassert solution(8, 1, 1) == 0\nassert solution(8, 1, 2) == 0\nassert solution(9, 1, 1) == 0\nassert solution(9, 1, 2) == 0\nassert solution(10, 1, 1) == 0\nassert solution(10, 1, 2) == 0\nassert solution(11, 1, 1) == 0\nassert solution(11, 1, 2) == 0\nassert solution(12, 1, 1) == 0\nassert solution(12, 1, 2) == 0\nassert solution(13, 1, 1) == 0\nassert solution(13, 1, 2) == 0\nassert solution(14, 1, 1) == 0\nassert solution(14, 1, 2) == 0\nassert solution(15, 1, 1) == 0\nassert solution(15, 1, 2) == 0\nassert solution(16, 1, 1) == 0\nassert solution(16, 1, 2) == 0\nassert solution(17, 1, 1) == 0\nassert solution(17, 1, 2) == 0\nassert solution(18, 1, 1) == 0\nassert solution(18, 1, 2) == 0\nassert solution(19, 1, 1) == 0\nassert solution(19, 1, 2) == 0\nassert solution(20, 1, 1) == 0\nassert solution(20, 1, 2) == 0\nassert solution(21, 1, 1) == 0\nassert solution(21, 1, 2) == 0\nassert solution(22, 1, 1) == 0\nassert solution(22, 1, 2) == 0\nassert solution(23, 1, 1) == 0\nassert solution(23, 1, 2) == 0\nassert solution(24, 1, 1) == 0\nassert solution(24, 1, 2) == 0\nassert solution(25, 1, 1) == 0\nassert solution(25, 1, 2) == 0\nassert solution(26, 1, 1) == 0\nassert solution(26, 1, 2) == 0\nassert solution(27, 1, 1) == 0\nassert solution(27, 1, 2) == 0\nassert solution(28, 1, 1) == 0\nassert solution(28, 1, 2) == 0\nassert solution(29, 1, 1) == 0\nassert solution(29, 1, 2) == 0\nassert solution(30, 1, 1) == 0\nassert solution(30, 1, 2) == 0\nassert solution(31, 1, 1) == 0\nassert solution(31, 1, 2) == 0\nassert solution(32, 1, 1) == 0\nassert solution(32"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1, 1) == 0\n\nassert solution(1, 2, 1) == 666666672\n\nfrom fractions import Fraction"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1, 1) == 0, \"Jon Snow doesn't like the arrangement\"\nassert solution(1, 2, 1) == 666666672, \"Jon Snow likes the arrangement\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 1 1\") == \"0\\n\"\nassert solution(stdin=\"1 2 1\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output', \"The solution should return the expected output.\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\", \"Expected output: 5\\n, Actual output: {}\".format(solution(\"6\\n7 2 3 1 5 6\"))"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == \"5\\n\"  # Correct output\n\nfrom typing import List"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6 8\") == \"6\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9\") == \"7\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10\") == \"8\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11\") == \"9\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12\") == \"10\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13\") == \"11\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14\") == \"12\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15\") == \"13\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16\") == \"14\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17\") == \"15\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18\") == \"16\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19\") == \"17\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"18\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"19\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"20\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"21\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"22\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"23\"\nassert solution(\"6\\n7 2 3 1 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"24\"\nassert solution(\"6\\n7 2 3 1 5 6 "
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(output())\n\ninput_data = \"\"\"\n1 1 1 8\n\"\"\"\n\nwith open(\"input.txt\", \"r\") as f:\n    input_data = f.read()\n\na, b, l, r = map(int, input_data.split())"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()} and expected output {expected}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2', \"Test 1 failed\"\nassert solution(input()) == '3', \"Test 2 failed\"\nassert solution(input()) == '1', \"Test 3 failed\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\\n\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\\n\", \"Test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"First sample test failed\"\nassert solution(input()) == \"3\", \"Second sample test failed\"\nassert solution(input()) == \"1\", \"Third sample test failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"The first test case is incorrect.\"\nassert solution(\"4 2 2 6\") == \"3\", \"The second test case is incorrect.\"\nassert solution(\"3 7 4 6\") == \"1\", \"The third test case is incorrect.\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with expected output {expected_output} but got {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 2 5\") == \"2\"\nassert solution(stdin=\"-1 4 15\") == \"4\"\nassert solution(stdin=\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is wrong.\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\", \"First example\"\nassert solution(\"-1 4 15\") == \"4\", \"Second example\"\nassert solution(\"0 -1 5\") == \"-1\", \"Third example\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2\"\nassert solution(0) == \"2\"\nassert solution(-1) == \"-1\"\nassert solution(1) == \"2\"\nassert solution(2) == \"2\"\nassert solution(5) == \"2\"\nassert solution(4) == \"2\"\nassert solution(6) == \"-1\"\nassert solution(7) == \"4\"\nassert solution(8) == \"6\"\nassert solution(9) == \"8\"\nassert solution(10) == \"10\"\nassert solution(11) == \"12\"\nassert solution(12) == \"14\"\nassert solution(13) == \"16\"\nassert solution(14) == \"18\"\nassert solution(15) == \"20\"\nassert solution(16) == \"22\"\nassert solution(17) == \"24\"\nassert solution(18) == \"26\"\nassert solution(19) == \"28\"\nassert solution(20) == \"30\"\nassert solution(21) == \"32\"\nassert solution(22) == \"34\"\nassert solution(23) == \"36\"\nassert solution(24) == \"38\"\nassert solution(25) == \"40\"\nassert solution(26) == \"42\"\nassert solution(27) == \"44\"\nassert solution(28) == \"46\"\nassert solution(29) == \"48\"\nassert solution(30) == \"50\"\nassert solution(31) == \"52\"\nassert solution(32) == \"54\"\nassert solution(33) == \"56\"\nassert solution(34) == \"58\"\nassert solution(35) == \"60\"\nassert solution(36) == \"62\"\nassert solution(37) == \"64\"\nassert solution(38) == \"66\"\nassert solution(39) == \"68\"\nassert solution(40) == \"70\"\nassert solution(41) == \"72\"\nassert solution(42) == \"74\"\nassert solution(43) == \"76\"\nassert solution(44) == \"78\"\nassert solution(45) == \"80\"\nassert solution(46) == \"82\"\nassert solution(47) == \"84\"\nassert solution(48) == \"86\"\nassert solution(49) == \"88\"\nassert solution(50) == \"90\"\nassert solution(51) == \"92\"\nassert solution(52) == \"94\"\nassert solution(53) == \"96\"\nassert solution(54) == \"98\"\nassert solution(55) == \"100\"\nassert solution(56) == \"102\"\nassert solution(57) == \"104\"\nassert solution(58) == \"106\"\nassert solution(59) == \"108\"\nassert solution(60) == \"110\"\nassert solution(61) == \"112\"\nassert solution(62) == \"114\"\nassert solution(63) == \"116\"\nassert solution(64) == \"118\"\nassert solution(65) == \"120\"\nassert solution(66) == \"122\"\nassert solution(67) == \"124\"\nassert solution(68) == \"126\"\nassert solution(69) == \"128\"\nassert solution(70) == \"130\"\nassert solution(71) == \"132\"\nassert solution(72) == \"134\"\nassert solution(73) == \"136\"\nassert solution(74) == \"138\"\nassert solution(75) == \"140\"\nassert solution(76) == \"142\"\nassert solution(77) == \"144\"\nassert solution(78) == \"146\"\nassert solution(79) == \"148\"\nassert solution(80) == \"150\"\nassert solution(81) == \"152\"\nassert solution(82) == \"154\"\nassert solution(83) == \"156\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution('6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution('6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(f\"Test Case {test_case_num}: Passed\")"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\\n\"\nassert solution(\"10000000000\") == \"91\\n\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91\n"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 5\\n') == '0'\nassert solution('3\\n1 2 5\\n') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n2\\n3\\n1 2 5\\n\") == \"0\"\nassert solution(\"1 5\\n2\\n3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Expected 0, got {}\".format(solution())\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test 2 failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test 3 failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\nRU\\n') == 'Yes\\n'\nassert solution('1 2\\nRU\\n') == 'No\\n'\nassert solution('-1 1000000000\\nLRRLU\\n') == 'Yes\\n'\nassert solution('0 0\\nD\\n') == 'Yes\\n'\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\nRU') == 'Yes', \"Output should be 'Yes', but it's '{}'\".format(solution('2 2\\nRU'))\nassert solution('1 2\\nRU') == 'No', \"Output should be 'No', but it's '{}'\".format(solution('1 2\\nRU'))\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', \"Output should be 'Yes', but it's '{}'\".format(solution('-1 1000000000\\nLRRLU'))\nassert solution('0 0\\nD') == 'Yes', \"Output should be 'Yes', but it's '{}'\".format(solution('0 0\\nD'))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Output should be Yes\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Output should be No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Output should be Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Output should be Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60   \\t\\t\\t\\t 29\\n31 \\n \\t \\t\\t\\t\\t\\t \\t\\t \\t31 \\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t31\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n\\n  31\\n\\n\\n\\n358\") == \"1\\n\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n  29\\n    \\n   31\\n    \\n    \\n    \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60   \\n29\\n        31\\n        \\n    \\n    \\n    \") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Error: Incorrect output\"\nassert solution(\"10   3   7\") == \"1\", \"Error: Incorrect output\"\nassert solution(\"314\") == \"0\", \"Error: Incorrect output\"\nassert solution(\"22 19 3\") == \"1\", \"Error: Incorrect output\"\nassert solution(\"   60\\n29\\n31\\n358\") == \"1\", \"Error: Incorrect output\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n       31\\n           31\\n               1\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n  31\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n31\\n358\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60   \\n  29\\n\\t 31\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n   35\\n\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1\\n\") == \"9\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"123\") == \"32\"\nassert solution(\"123456\") == \"543\"\nassert solution(\"1234567890\") == \"1692\"\nassert solution(\"12345678901234567890\") == \"169210587\"\n\nfrom typing import List"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"9\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\", \"The output should be 9, but it is \" + str(solution(input()))"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"123\") == \"16\"\nassert solution(\"123456789\") == \"22\"\nassert solution(\"987654321\") == \"40\"\nassert solution(\"1000000000\") == \"41\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"9\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\\n4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\\n3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\nfor _ in range(test_cases):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    expected = solution(a)\n    actual = solution(a)\n    if expected == -1:\n        assert actual == -1, f\"Expected {expected}, but got {actual}\"\n    else:\n        assert actual == expected, f\"Expected {expected}, but got {actual}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 6 28 9\\n4\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\") == \"4\\n3\\n-1\"\nassert solution(\"5\\n5 12 9 16 48\\n-1\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n-1\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\\n') == '4\\n4\\n'\nassert solution('5\\n12 9 16 48\\n4\\n5 12 9 16 48\\n-1\\n') == '3\\n-1\\n'\nassert solution('4\\n1 2 4 8\\n-1\\n') == '-1\\n'\n\nassert solution('5\\n12 9 16 48\\n4\\n5 12 9 16 48\\n-1\\n') == '-1\\n'\nassert solution('4\\n1 2 4 8\\n-1\\n') == '-1\\n'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '-1' # Replace with your solution here\nassert solution() == 3 # Replace with your solution here\nassert solution() == 4 # Replace with your solution here\nassert solution() == '-1' # Replace with your solution here"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n3\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"4\\n3 6 28 9\\n\") == 4\\nassert solution(\"5\\n5 12 9 16 48\\n\") == 3\\nassert solution(\"4\\n1 2 4 8\\n\") == -1\\n\\n# Test cases with comment\\n# assert solution(\"1\\n5 1 2 3 4\\n\") == 5\\n# assert solution(\"1\\n1 1 1 1 1\\n\") == 0\\n# assert solution(\"1\\n1 1 1 1 1 1\\n\") == 1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 6 28 9\\n') == '4\\n'\nassert solution('5\\n5 12 9 16 48\\n') == '3\\n'\nassert solution('4\\n1 2 4 8\\n') == '-1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 2\nassert solution(5) == 2\nassert solution(7) == 1"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5, 0, 5, 2, 3) == 2, \"The expected output is 2, but got {}\".format(solution(5, 0, 5, 2, 3))\nassert solution(7, 1, 0, 5, 0, 0, 2) == 1, \"The expected output is 1, but got {}\".format(solution(7, 1, 0, 5, 0, 0, 2))"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Expected {expected_output}, but got {solution(input_data)}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\"\n\nassert solution(\"5\\n0 0 0 0 0\\n\") == \"0\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"5\\n0 2 3 4 5\\n\") == \"1\"\n\nassert solution(\"5\\n0 1 0 0 0\\n\") == \"0\"\nassert solution(\"5\\n0 0 1 2 3\\n\") == \"1\"\nassert solution(\"5\\n0 3 2 1 0\\n\") == \"1\"\n\nassert solution(\"5\\n0 1 1 1 1\\n\") == \"0\"\nassert solution(\"5\\n0 2 2 2 2\\n\") == \"1\"\nassert solution(\"5\\n0 3 3 3 3\\n\") == \"1\"\n\nassert solution(\"5\\n0 1 1 0 0\\n\") == \"0\"\nassert solution(\"5\\n0 2 2 1 0\\n\") == \"1\"\nassert solution(\"5\\n0 3 3 2 1\\n\") == \"1\"\n\nassert solution(\"5\\n0 1 1 1 0\\n\") == \"0\"\nassert solution(\"5\\n0 2 2 2 1\\n\") == \"1\"\nassert solution(\"5\\n0 3 3 3 2\\n\") == \"1\"\n\nassert solution(\"5\\n0 1 1 1 1\\n\") == \"0\"\nassert solution(\"5\\n0 2 2 2 2\\n\") == \"1\"\nassert solution(\"5\\n0 3 3 3 3\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Solution should return 2\"\nassert solution(stdin) == \"2\", \"Solution should return 2\"\nassert solution(stdin) == \"1\", \"Solution should return 1\"\nassert solution(stdin) == \"1\", \"Solution should return 1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == 2\nassert solution(\"7\\n1 0 0 5 0 0 2\") == 1"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '5\\n'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n\nsolution(\"4\")\nsolution(\"5\")"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is incorrect. Expected output: '{expected_output}'.\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4\\n1 5\\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2\\n3 4\\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5\\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\naa\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 2\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\\nb\\nc\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Yes\\naa'\nassert solution() == 'No'\n\nfrom typing import List\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\n\nfor i, expected in enumerate(expected_output):\n    if i == 0:\n        assert expected == 0, f\"Output for first iteration is incorrect. Expected: {expected}, Received: {expected_output[0]}\"\n    else:\n        assert expected == output[i], f\"Output for iteration {i} is incorrect. Expected: {expected}, Received: {output[i]}\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(0, 1, 1) == 7\nassert solution(0, 1, 1) == 7\nassert solution(0, 1, 1) == 7"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(0) == 7, \"Test 1\"\nassert solution(1) == 19, \"Test 2\"\nassert solution(2) == 87, \"Test 3\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3') == 7\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3') == 19\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5') == 87\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n\\n0 2 2\\n1 0 100\\n1 2 0\\n3\\n\\n0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n\\n0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(0) == 0, \"Test case 1 failed\"\nassert solution(1) == 1, \"Test case 2 failed\"\nassert solution(2) == 2, \"Test case 3 failed\"\nassert solution(3) == 6, \"Test case 4 failed\"\nassert solution(4) == 11, \"Test case 5 failed\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == 1, \"Expected 1 but got {}\".format(solution(\"Bulbbasaur\"))\nassert solution(\"F\") == 0, \"Expected 0 but got {}\".format(solution(\"F\"))\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2, \"Expected 2 but got {}\".format(solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\"))"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"Incorrect solution\"\nassert solution(\"F\") == \"0\", \"Incorrect solution\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"Incorrect solution\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Bulbbasaur') == 1, 'The solution should return 1'\nassert solution('F') == 0, 'The solution should return 0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == 2, 'The solution should return 2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"3 3\\nabc\\ndef\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"4 6\\npqr\\nstu\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\nassert solution('4 5\\nbcd\\nbdc\\n') == 'NO'\nassert solution('2 3\\nabc\\nabc\\n') == 'YES'\nassert solution('3 2\\nabc\\ndef\\nabc\\n') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\n\") == \"NO\"\nassert solution(\"1 1\\nabc\\ndef\") == \"YES\"\nassert solution(\"1 1\\nabc\\nabc\") == \"NO\"\nassert solution(\"1 1\\nabc\\nghi\") == \"NO\"\nassert solution(\"1 1\\nabc\\nabc\\ndef\") == \"YES\"\nassert solution(\"1 1\\nabc\\ndef\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\n\") == \"NO\"\nassert solution(\"3 3\\nabc\\ndef\\n\") == \"YES\"\nassert solution(\"3 3\\nabc\\ndef\\n\") == \"NO\"\nassert solution(\"5 5\\nabc\\ndef\\nghi\\n\") == \"YES\"\nassert solution(\"5 5\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"3 2\\nabc\\ndef\") == \"NO\"\nassert solution(\"1 1\\nhello\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\\n\"\nassert solution(\"2 3\\nrac\\narc\\n\") == \"NO\\n\"\nassert solution(\"2 3\\naba\\nabb\\n\") == \"YES\\n\"\nassert solution(\"2 3\\nab\\nab\\n\") == \"YES\\n\"\nassert solution(\"2 3\\na\\na\\n\") == \"NO\\n\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES\\n'\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\\n\") == \"1\\n\"\nassert solution(\"6 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"7 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"1\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"1\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4', \"The output should be '4', but it is '{}'\".format(solution('3 111\\n1111\\n10111\\n10010'))"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"4 7\\n1010\\n1101\\n1011\\n\") == \"3\\n\"\nassert solution(\"5 9\\n1000\\n1001\\n1100\\n1101\\n1111\\n\") == \"3\\n\"\nassert solution(\"6 15\\n1100\\n1101\\n1110\\n1111\\n\") == \"4\\n\"\nassert solution(\"7 1010\\n1101\\n1110\\n1111\\n\") == \"3\\n\"\nassert solution(\"8 1101\\n1110\\n1111\\n1111\\n\") == \"2\\n\"\nassert solution(\"9 1000\\n1001\\n1010\\n1011\\n\") == \"2\\n\"\nassert solution(\"10 1001\\n1010\\n1011\\n1100\\n\") == \"1\\n\"\nassert solution(\"11 1001\\n1010\\n1011\\n1100\\n1101\\n\") == \"1\\n\"\nassert solution(\"12 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n\") == \"1\\n\"\nassert solution(\"13 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\\n\") == \"1\\n\"\nassert solution(\"14 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\\n1111\\n\") == \"1\\n\"\nassert solution(\"15 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\\n1111\\n1111\\n1111\\n\") == \"1\\n\"\nassert solution(\"16 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\") == \"1\\n\"\nassert solution(\"17 1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4'\nassert solution('10 10\\n10010') == '4'\nassert solution('3 100\\n11111') == '2'\nassert solution('10 0\\n10010') == '1'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"4 222\\n111\\n10111\\n10100\\n10010\") == \"4\"\nassert solution(\"2 111\\n1111\\n10111\\n10100\\n10010\") == \"4\"\n\nsolution(\"3 111\\n1111\\n10111\\n10010\")  # Output: 4\nsolution(\"4 222\\n111\\n10111\\n10100\\n10010\")  # Output: 4\nsolution(\"2 111\\n1111\\n10111\\n10100\\n10010\")  # Output: 4"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n6\\n\"\n\nfrom itertools import permutations\n\nN, X = map(int, stdin.split())\nA = list(map(int, stdin.split()))\n\ncount = 0\nfor perm in permutations(A):\n    if perm[0]!= X:\n        count += 1\n        if count % 998244353 == 0:\n            break\n\nprint(count)"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n'\nprint('All tests passed!')\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"5 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"11 11 10\") == \"1\"\nassert solution(\"5 5 5\") == \"1\"\nassert solution(\"1 1 1\") == \"1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"1 2 3\") == \"-1\\n\"\nassert solution(\"1 1 2\") == \"1\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 1 0\") == \"1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 11 5\\n') == '1\\n'\nassert solution('11 2 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2'\nassert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n2\\n..\\n..\\n\\n2\\n..\\n..\\n\\n2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\"\n\nfor line in stdin.splitlines():\n    assert solution(line) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n..\\n..\\n\\n4 4\\n....\\n.#.#\\n....\\n.#..') == '2'\nassert solution('4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....') == '1'\nassert solution('3 4\\n....\\n.##.\\n....\\n\\n4 4\\n....\\n.##.\\n....') == '2'\n\nimport sys"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"Your solution is incorrect.\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n\", \"Test case not passed.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\nassert solution(\"1 1 3\") == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n2 1 2\\n3 3 2\\n4 4 2\\n5 5 2\") == \"6\\n\"\nassert solution(\"5\\n3 1 3\\n4 2 2\\n5 3 2\\n6 4 2\\n7 5 2\") == \"6\\n\"\nassert solution(\"6\\n4 2 2\\n5 3 2\\n6 4 2\\n7 5 2\\n8 6 2\\n9 7 2\\n10 8 2\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\"\n\nHere's the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n1 1 3\\n\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"3\\n1 1 3\\n\") == \"6\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 3\\n') == '6\\n'\nassert solution('4\\n1 2 3 4\\n') == '12\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''11\n3\n1\n4\n2\n'''"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"45\\n4\\n1\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"45\\n4\\n1\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\na_1 a_2... a_N\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"1\\na_1 a_2... a_N\\n\") == \"1\\n\"\nassert solution(\"5\\na_1 a_2... a_N\\na_1 a_2... a_N\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"1\\na_1 a_2... a_N\\na_1 a_2... a_N\\na_1 a_2... a_N\\n\") == \"1\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"100\\n5\\n1\\n2\\n3\\n4\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"6\\n1 4 3 7 5 2 6\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"8\\n1 4 3 7 5 2 6 8 10 12 14 16 18 20 22 24\") == \"18\\n2\\n1\\n4\\n\"\nassert solution(\"10\\n
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10.25\"\nassert solution(input()) == \"10.3\"\nassert solution(input()) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\nfor i in range(10):\n    assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(10.25), \"Incorrect output for example 1.\"\nassert solution(str(input())) == str(10.30), \"Incorrect output for example 2.\"\nassert solution(str(input())) == str(9.2), \"Incorrect output for example 3.\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Your code is not correct\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # Test case 1\nassert solution(\"1 2 2 1\") == \"0110\"  # Test case 2"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == \"Impossible\"\nassert solution('1 2 2 1') == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"  # Correct\nassert solution(\"1 2 2 1\") == \"0110\"  # Correct"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == 'Impossible'  # Example 1\nassert solution('1 2 2 1') == '0110'  # Example 2"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n*..P*P*\\n\\n10\\n.**PP.*P.*\\n\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n7\n*..P*P*\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n10\n.**PP.*P.*\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"2\"\n\nsolution = '''\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()} and output {output} don't match.\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16\n\nfrom typing import List"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 8\nassert solution(1) == 4\nassert solution(4) == 16\nassert solution(2) == 8"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"4\\n\"\nassert solution(2) == \"8\\n\"\nassert solution(3) == \"16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, \"Test Failed\"\nprint(solution(stdin=input()))"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7\\n'\nassert solution('100 100 52 50 46 56') == '17 8 86 92\\n'\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 9 7\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Output should be Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes', \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output. Please check your code.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes', \"Test case 1 is incorrect.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\\n\", \"Test failed for the given constraints.\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"TFTRFFTF\\n3 0\") == \"No\\n\"\nassert solution(\"TFTFFTT\\n4 2\") == \"Yes\\n\"\nassert solution(\"FTFFTTF\\n5 2\") == \"No\\n\"\nassert solution(\"FTFFTTB\\n5 2\") == \"Yes\\n\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\", \"The solution is incorrect.\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFFF\\n4 2\") == \"No\"\nassert solution(\"TTFF\\n4 2\") == \"Yes\"\nassert solution(\"TTFF\\n3 2\") == \"No\"\nassert solution(\"TFFF\\n4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\nassert solution(5) == 10"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"6\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(1) == \"2\"\nassert solution(0) == \"0\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3\n    3\n    1 2 4\n    4\n    1 2 5\n    5\n    1 2 6\n    6\n    1 2 7\n    7\n    \"\"\"\n) == \"1.3333333333\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2\n    3\n    1 2\n    4\n    1 2\n    5\n    1 2\n    6\n    1 2\n    7\n    \"\"\"\n) == \"1.3333333333\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 3\n    3\n    1 2 4\n    4\n    1 2 5\n    5\n    1 2 6\n    6\n    1 2 7\n    7\n    1 3 4\n    6\n    2 1 3\n    5\n    3 1 2\n    4\n    1 3 6\n    7\n    3 2 1\n    5\n    2 3 1\n    4\n    3 2 5\n    6\n    2 3 4\n    5\n    4 2 3\n    4\n    3 4 2\n    4\n    4 3 2\n    4\n    4 3 5\n    4\n    5 3 2\n    4\n    5 3 4\n    4\n    6 3 2\n    4\n    6 3 4\n    4\n    7 3 2\n    4\n    7 3 4\n    4\n    1 1 1\n    1\n    1 1 1\n    1\n    \"\"\"\n) == \"1.0000000000\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.3333333333\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'\n\nassert solution('5\\n2 3 4\\n1') == '1.5'\n\nassert solution('10\\n5 6 7\\n10') == '2.8333333333'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()} expected output {expected_output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1.3333333333\"\nassert abs(1.3333333333 - 1.3333333333) <= 0.00001\nprint(\"All tests passed!\")\n\nfrom typing import List"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3)<1000000000\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\\na_4 a_5 a_6\") == \"1.3333333333\"\nassert solution(\"1\\na_1\\np 2\\na_2\\na_3\\np 3\\na_4\\np 4\\np 5\\np 6\\np 7\\np 8\\np 9\\np 10\") == \"1.0\"\n\nfrom typing import List"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"4\\n2 3 4\\n2\\n\") == \"0.0\"\nassert solution(\"1\\n1 1 1\\n1\\n\") == \"1.0\"\nassert solution(\"3\\n1 2 3\\n4\\n\") == \"1.0\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '13 7', \"Your solution is incorrect\"\nassert solution(10) == '100000 569', \"Your solution is incorrect\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 100000 569') == '986 605', \"Test case 1 failed\"\nassert solution('5 1 2') == '13 7', \"Test case 2 failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '13 7'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n') == '13 7\\n'\nassert solution('2 100000 569\\n605 986\\n') == '986 605\\n'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed. Expected output: {output}, got {solution(input())}\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nfor i, expected in enumerate(output):\n    print(f'{i+1}. {expected}')"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == -1\nassert solution() == 3"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin=\"2\\nG3 G3\\n\")) == \"0\"\nassert solution(solution(stdin=\"4\\nG4 R4 R3 B3\\n\")) == \"2\"\nassert solution(solution(stdin=\"5\\nB1 Y1 W1 G1 R1\\n\")) == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nR4 R3 B3\\nG4 R4 R3 B3\\nB4 Y3 G1 R1\\nG3 R2 B2 Y2\\nY1 W1 G1 R1\\n') == '0'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1\\nA\\nB\\nC\\nD\\nE\\nF\\n') == '4'\nassert solution('5\\nB1 Y1 W1"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == '2'\nassert solution(5) == '4'\nassert solution(6) == '4'\nassert solution(7) == '5'\nassert solution(8) == '7'\nassert solution(9) == '9'\nassert solution(10) == '9'\nassert solution(11) == '11'\nassert solution(12) == '11'\nassert solution(13) == '13'\nassert solution(14) == '15'\nassert solution(15) == '17'\nassert solution(16) == '19'\nassert solution(17) == '21'\nassert solution(18) == '23'\nassert solution(19) == '23'\nassert solution(20) == '25'\nassert solution(21) == '25'\nassert solution(22) == '25'\nassert solution(23) == '25'\nassert solution(24) == '25'\nassert solution(25) == '25'\nassert solution(26) == '25'\nassert solution(27) == '25'\nassert solution(28) == '25'\nassert solution(29) == '25'\nassert solution(30) == '25'\nassert solution(31) == '25'\nassert solution(32) == '25'\nassert solution(33) == '25'\nassert solution(34) == '25'\nassert solution(35) == '25'\nassert solution(36) == '25'\nassert solution(37) == '25'\nassert solution(38) == '25'\nassert solution(39) == '25'\nassert solution(40) == '25'\nassert solution(41) == '25'\nassert solution(42) == '25'\nassert solution(43) == '25'\nassert solution(44) == '25'\nassert solution(45) == '25'\nassert solution(46) == '25'\nassert solution(47) == '25'\nassert solution(48) == '25'\nassert solution(49) == '25'\nassert solution(50) == '25'\nassert solution(51) == '25'\nassert solution(52) == '25'\nassert solution(53) == '25'\nassert solution(54) == '25'\nassert solution(55) == '25'\nassert solution(56) == '25'\nassert solution(57) == '25'\nassert solution(58) == '25'\nassert solution(59) == '25'\nassert solution(60) == '25'\nassert solution(61) == '25'\nassert solution(62) == '25'\nassert solution(63) == '25'\nassert solution(64) == '25'\nassert solution(65) == '25'\nassert solution(66) == '25'\nassert solution(67) == '25'\nassert solution(68) == '25'\nassert solution(69) == '25'\nassert solution(70) == '25'\nassert solution(71) == '25'\nassert solution(72) == '25'\nassert solution(73) == '25'\nassert solution(74) == '25'\nassert solution(75) == '25'\nassert solution(76) == '25'\nassert solution(77) == '25'\nassert solution(78) == '25'\nassert solution(79) == '25'\nassert solution(80) == '25'\nassert solution(81) == '25'\nassert solution(82) == '25'\nassert solution(83) == '25'\nassert solution(84) == '25'\nassert solution(85) == '25'\nassert solution(86) == '25'\nassert solution(87) == '25'\nassert solution(88) == '25'\nassert solution(89) == '25'\nassert solution(90) =="
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\"\n\nfrom typing import List"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n10 50 9 12 25\\n10 75 13 16 30\") == \"3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\\n1 1\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n3\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\\n\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n3 3 4 3\\n4 7 6 5\\n\\nInput\\n2\\n1 1\\n100 100\\n\\nInput\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"Output\\n2 6\\n1 1\\n3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''\n2\n1 1\n100 100\n''') == '1 1'\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2 6\n1 1\n100 100\n5\n10 30 5 6 24\n10 41 7 8 24\"\"\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\\n\"\nassert solution(\"2 2\") == \"Impossible\\n\"\nassert solution(\"3 2\") == \"1A1B\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3B'\nassert solution() == 'Impossible'\nassert solution() == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n') == '3\\n'\nassert solution('5 4\\n') == '25\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"3\"\nassert solution(5) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('10 2') == '2'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\"\nassert solution(\"4 3\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"0\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\") == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n5 6\") == \"5\"\nassert solution(\"1 2\\n3 4\") == \"0\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"5\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n5 6\") == \"5\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1. After that, the graph is separated into two connected components. The score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2''') == '1'\n\nassert solution('''5 4\n5 1 2 3 4\n0 2 -3 4 1\n1 2 3 4\n2 3 4\n3 4\n4 2\n5 1\n5 3''') == '1'\n\nassert solution('''6 4\n6 1 2 3 4 5\n0 2 -3 4 5 1\n1 2 3 4 5\n2 3 4 5\n3 4 5\n4 5\n5 6''') == '1'\n\nassert solution('''7 4\n7 1 2 3 4 5 6\n0 2 -3 4 5 6 1\n1 2 3 4 5 6\n2 3 4 5 6\n3 4 5 6\n4 5 6\n5 6 7\n6 7 7''') == '1'\n\nassert solution('''8 4\n8 1 2 3 4 5 6 7\n0 2 -3 4 5 6 7 1\n1 2 3 4 5 6 7\n2 3 4 5 6 7\n3 4 5 6 7\n4 5 6 7\n5 6 7 8\n6 7 7 8\n7 8 8''') == '1'\n\nassert solution('''9 4\n9 1 2 3 4 5 6 7 8\n0 2 -3 4 5 6 7 8 1\n1 2 3 4 5 6 7 8\n2 3 4 5 6 7 8\n3 4 5 6 7 8\n4 5 6 7 8\n5 6 7 8\n6 7 7 8\n7 8 8 9\n8 9 9''') == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == 2, \"Remove the upper-right and lower-left leaves.\"\nassert solution(2, 3) == 1, \"Remove the upper-left and lower-right leaves.\"\nassert solution(2, 2) == 0, \"No leaves to remove.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 3\nS.o\n.o.\no.T\"\"\") == 2\n\nassert solution(\"\"\"3 3\n.o\no.\n.o\"\"\") == -1\n\nassert solution(\"\"\"3 3\n.o\no.\n.o\"\"\") == -1"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    S.o\n   .o.\n    o.T\n    \"\"\"\n) == \"2\"\n\nassert solution("
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"H W\\n\")) == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\n.o.o.o.o\") == \"1\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\n.o.o.o.o.o\") == \"-1\\nNo solution.\"\nassert solution(\"3 3\\n.o.o.o.o..o\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\n..o..o..o..o\") == \"1\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\n..o..o..o..o..\") == \"-1\\nNo solution.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"H W\\na_{11}... a_{1W}\\n:\").split()) == \"2\"\nprint(\"Remove the upper-right and lower-left leaves.\")\n\nassert solution(input(\"H W\\na_{11}... a_{1W}\\n:\").split()) == \"-1\"\nprint(\"The objective is not achievable.\")"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\nS.o\n.o.\no.T\n\"\"\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n\nassert solution(\"\"\"\n3 3\no.\n.o\no.\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n3 3\nS.o\n.o.\no.T\no.o\n\"\"\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output\\n200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Please do not use the %lld specifier to read or write 64-bit integers in \u0421++.\" % 64"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3, \"Expected 3, got {}\".format(solution(3, 2))  # expected output: 3"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 3\nassert solution(199, 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 3\nassert solution(199, 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"199 200\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n3 2\\n199 200') == '200\\n', 'Expected \"200\"\\n'\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == '8\\n', 'Expected \"8\"\\n'\nassert solution('1 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100') == '100\\n', 'Expected \"100\"\\n'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"1 1\\n\") == \"1\\n\"\nassert solution(b\"3 2\\n\") == \"3\\n\"\nassert solution(b\"199 200\\n\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"199 200\") == \"200\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\n\nassert solution(\"1\\n1\") == \"Takahashi\\n\"\n\nassert solution(\"2\\n5 2\\n3 3\\n5 2\\n3 4\\n5 3\\n\") == \"Aoki\\nAoki\\nAoki\\nAoki\\n\"\n\nassert solution(\"2\\n5 2\\n3 3\\n5 2\\n3 4\\n5 3\\n1\") == \"Takahashi\\nAoki\\nAoki\\nAoki\\nAoki\\n\"\n\nassert solution(\"2\\n5 2\\n3 3\\n5 2\\n3 4\\n5 3\\n2\") == \"Aoki\\nAoki\\nAoki\\nAoki\\nAoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2\\n5 2\\n3 3\\n') == 'Aoki\\n'\nassert solution(stdin='2\\n2 2\\n3 3\\n') == 'Takahashi\\n'\nassert solution(stdin='2\\n5 1\\n3 3\\n') == 'Aoki\\n'\nassert solution(stdin='2\\n5 1\\n3 2\\n') == 'Takahashi\\n'\nassert solution(stdin='2\\n5 1\\n3 1\\n') == 'Takahashi\\n'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 2\n    3 3\n    \"\"\"\n) == \"Aoki\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1\n    1 2\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    2 1\n    3 2\n    1 1\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 2\n    1 1\n    \"\"\"\n) == \"Aoki\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1\n    1 1\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1\n    1 2\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    2 1\n    1 1\n    3 2\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    2 1\n    2 2\n    3 1\n    \"\"\"\n) == \"Takahashi\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    2 1\n    2 3\n    3 2\n    \"\"\"\n) == \"Aoki\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3\n    2 1\n    2 3\n    3 3\n    \"\"\"\n) == \"Aoki\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 1\n    1 1\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5 2\\n3 3\\n') == 'Aoki'\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n5 2\\n3 3\\n') == 'Aoki'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Solution should return 0\"\nassert solution() == 8, \"Solution should return 8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n') == '0\\n'\nassert solution('3 3\\n') == '8\\n'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 2) == 0\nassert solution(3, 3) == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(2) + \" \" + str(2)) == \"0\"\nassert solution(str(3) + \" \" + str(3)) == \"8\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2\n1 2 3 4\n1 5 3 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 2\n1 2 3 4\n1 5 6 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 3\n1 2 4 5\n1 2 1 3 2 3\n\"\"\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\"\n\nassert solution(\"1 2\\n1 2 2\\n\") == \"0\\n\"\nassert solution(\"1 2\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2 4\\n3 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"test_input2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"test_input3.txt\", \"r\").read()) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1'\nassert solution(open('example1.txt', 'r').read()) == '1'\nassert solution(open('example2.txt', 'r').read()) == '0'\nassert solution(open('example3.txt', 'r').read()) == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    2 2\n    1 2 3 4\n    1 5 3 4\n    2 2\n    1 2 3 4\n    1 5 6 4\n    2 3\n    1 2 4 5\n    1 2 1 3 2 3\n    \"\"\").strip() == '1'\nassert solution(\"\"\"\n    2 2\n    1 2 3 4\n    1 5 6 4\n    2 3\n    1 2 4 5\n    1 2 1 3 2 3\n    \"\"\").strip() == '0'\nassert solution(\"\"\"\n    2 3\n    1 2 4 5\n    1 2 1 3 2 3\n    \"\"\").strip() == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\nassert solution(\"1\\n1 2 3\\n2 3\\n4 5 6\\n1 5\") == \"0\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 2 3 4\n1 5 3 4''') == '1'\nassert solution('''2 2\n1 2 3 4\n1 5 6 4''') == '0'\nassert solution('''2 3\n1 2 4 5\n1 2 1 3 2 3''') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"00:00\"\nassert solution(\"12\") == \"00:00\"\nassert solution(\"24\") == \"00:00\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'12\\n17:30') == b'17:30'\nassert solution(b'24\\n99:99') == b'09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24\") == \"17:30\", \"Test 1\"\nassert solution(\"12\") == \"07:30\", \"Test 2\"\nassert solution(\"24\") == \"09:09\", \"Test 3\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('24\\n17:30') == '17:30\\n'\nassert solution('12\\n17:30') == '07:30\\n'\nassert solution('24\\n99:99') == '09:09\\n'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"3 3\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5 5\\n2\\n1 1\\n1 2\\n1 3\\n1 4\\n2 3 1\\n2 4 1\\n3 2 1\\n3 4 1\\n4 3 1\\n4 4 1\") == \"41\"\nassert solution(\"5 5\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"3 4\\n2\\n1 1\\n1 2\\n1 3\") == \"1\"\nassert solution(\"5 7\\n1\\n2 1\\n1 3 1\\n3 2 2\\n2 3 2\\n4 3 2\\n4 5 3\\n3 6 3\\n5 6 3\\n1 7 1\\n2 6 1\\n3 5 1\\n4 7 1\\n5 7 1\") == \"110\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output.\\nExpected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n2 1\n2 5\n3 3\n3 6\n5 6\n\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\na_1 a_2 a_3 a_4 a_5 a_6\\na_2 0 a_3 3 a_4 1 a_5 1\\na_3 0 3 a_4 1 a_5 1\\na_4 3 3 a_5 6 a_6 6\\na_5 1 1 a_6 6\\na_6 6 a_6 6 6 a_6 6\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\na_1\\n\") == \"0\"\nassert solution(\"6\\na_1 a_2 a_3 a_4 a_5 a_6\\na_2 0 a_3 3 a_4 1 a_5 1\\na_3 0 3 a_4 1 a_5 1\\na_4 3 3 a_5 6 a_6 6\\na_5 1 1 a_6 6\\na_6 6 a_6 6 6 a_6 6\\na_2 0\\na_4 3\\n\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution() == \"-1\"\nassert solution() == \"0\"\nassert solution() == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    6\n    2 0 3 0 1 1\n    ''') == '''\n    5\n    2 1\n    2 5\n    3 3\n    3 6\n    5 6\n    '''\n\nassert solution('''\n    1\n    0\n    ''') == '''\n    0\n    '''\n\nassert solution('''\n    6\n    3 2 2 2 1 1\n    ''') == '''\n    1\n    '''"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n2 0 3 0 1 1') == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'\nassert solution('1\\n0') == '0'\nassert solution('6\\n3 2 2 2 1 1') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n5\n2 1\n2 5\n3 3\n3 6\n5 6\n\n-1\n\"\"\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\\n1\\n0\\n\\n6\\n3 2 2 2 1 1\\n\\n-1\\n') == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\\n\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"1 0\\n1 10\\n\") == \"2\\n1 0 0 0\"\nassert solution(\"0 0\\n1 0\\n\") == \"2\\n0 0 0 0\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    2 8\n    12 20\n    3 10\n    10 20 30\n    '''\n) == '''\n2\n0 4 0 0 0\n'''\n\nassert solution(\n    '''\n    3 10\n    10 20 30\n    '''\n) == '''\n1\n0 0 4 0\n'''"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case not passed\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: '{output}'. Received: '{solution(input())}'\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(solution(input()))\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.73', \"The output is incorrect.\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Please see the examples provided.\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == 11.547005383792516398"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"1\\n1\\n1\\n2\\n2 1\\n1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\", \"Function should return 'Second' if Taro wins and 'First' if Jiro wins.\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n3\\n2\\n1 10\\n10 2\\n1 2\") == \"Second\\nSecond\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n3\\n2\\n1 10\\n10 2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n4\\n2\\n1 10\\n10 2\\n1 2\\n21\\n476523737 103976339 266993 70680"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\\n\", \"Test 1\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\n\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n4\\n1\\n5\\n1\\n1 5\") == \"Second\\nSecond\"\n\nassert solution(\"1\\n1\") == \"First\"\n\nassert solution(\"1\\n1\\n1\") == \"First\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\", \"Test case 1 should output 'Second' for Jiro the second wins.\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"Second\\nFirst\\nSecond\", \"Test case 1\"\n\nassert solution(4) == \"Second\\nFirst\\nSecond\", \"Test case 2\"\n\nassert solution(5) == \"Second\\nFirst\\nSecond\", \"Test case 3\"\n\nassert solution(6) == \"Second\\nFirst\\nSecond\", \"Test case 4\"\n\nassert solution(7) == \"First\\nSecond\\nSecond\", \"Test case 5\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n\") == \"Second\"\nassert solution(\"2\\n2\\n4\\n4\\n6\\n\") == \"First\"\nassert solution(\"1\\n10\\n100\\n20\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second'\nassert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n4\\n1 1000') == 'First'\nassert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n4\\n1 1000\\n2\\n999') == 'Second'\nassert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n4\\n1 1000\\n2\\n1001') == 'First'\n\nfrom typing import List"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 2\\n4 3 1 5 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\"  # Sample Output"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', \"Test case 1 failed\"\nassert solution(input()) == '1\\n', \"Test case 2 failed\"\nassert solution(input()) == '2\\n', \"Test case 3 failed\"\nassert solution(input()) == '2\\n', \"Test case 4 failed\"\nassert solution(input()) == '3\\n', \"Test case 5 failed\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"Testcase 1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 5\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 6\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 7\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 3\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 5\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 3\") == \"1\\n\"\nassert solution(\"5 3 3\\n4 3 1 5 3\") == \"1\\n\"\nassert solution(\"5 3 5\\n4 3 1 5 3\") == \"1\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n\nN, k = [int(x) for x in stdin.split()]\ncost = lambda i: i ** k"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3 2\\n\") == \"1\\n24\"\nassert solution(\"3 2\\n\") == \"24\"\nassert solution(\"3 4\\n\") == \"64\"\n\nassert solution(\"4 4\\n\") == \"16\"\nassert solution(\"5 5\\n\") == \"32\"\nassert solution(\"6 6\\n\") == \"64\"\n\nassert solution(\"7 7\\n\") == \"288\"\nassert solution(\"8 8\\n\") == \"576\"\nassert solution(\"9 9\\n\") == \"1280\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\"\nassert solution(\"3 3\\n\") == \"12\\n\"\nassert solution(\"2 3\\n\") == \"9\\n\"\nassert solution(\"1 2\\n\") == \"6\\n\"\nassert solution(\"2 2\\n\") == \"4\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\"\nassert solution(\"4 3\") == \"48\\n\"\nassert solution(\"1 2\") == \"6\\n\"\nassert solution(\"5 6\") == \"120\\n\"\nassert solution(\"2 3\") == \"96\\n\"\nassert solution(\"3 4\") == \"144\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('3 2') == '24\\n'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(31) == \"64921457\"\nassert solution(3) == \"3\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == '6'\nassert solution(4, 4) == '3'\nassert solution(7, 3) == '1196'\nassert solution(31, 8) == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\nassert solution(\"4 4 2\") == \"3\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(311) == \"17167116105\"\nassert solution(312) == \"11365313405\"\nassert solution(313) == \"12167119005\"\nassert solution(314) == \"11365313405\"\nassert solution(315) == \"11365313405\"\nassert solution(316) == \"11365313405\"\nassert solution(317) == \"11365313405\"\nassert solution(318) == \"11365313405\"\nassert solution(319) == \"11365313405\"\nassert solution(320) == \"11365313405\"\nassert solution(321) == \"11365313405\"\nassert solution(322) == \"11365313405\"\nassert solution(323) == \"11365313405\"\nassert solution(324) == \"11365313405\"\nassert solution(325) == \"11365313405\"\nassert solution(326) == \"11365313405\"\nassert solution(327) == \"11365313405\"\nassert solution(328) == \"11365313405\"\nassert solution(329) == \"11365313405\"\nassert solution(330) == \"11365313405\"\nassert solution(331) == \"11365313405\"\nassert solution(332) == \"11365313405\"\nassert solution(333) == \"11365313405\"\nassert solution(334) == \"11365313405\"\nassert solution(335) == \"11365313405\"\nassert solution(336) == \"11365313405\"\nassert solution(337) == \"11365313405\"\nassert solution(338) == \"11365313405\"\nassert solution(339) == \"11365313405\"\nassert solution(340) == \"11365313405\"\nassert solution(341) == \"11365313405\"\nassert solution(342) == \"11365313405\"\nassert solution(343) == \"11365313405\"\nassert solution(344) == \"11365313405\"\nassert solution(345) == \"11365313405\"\nassert solution(346) == \"11365313405\"\nassert solution(347) == \"11365313405\"\nassert solution(348) == \"11365313405\"\nassert solution(349) == \"11365313405\"\nassert solution(350) == \"11365313405\"\nassert solution(351) == \"11365313405\"\nassert solution(352) == \"11365313405\"\nassert solution(353) == \"11365313405\"\nassert solution(354) == \"11365313405\"\nassert solution(355) == \"11365313405\"\nassert solution(356) == \"11365313405\"\nassert solution(357) == \"11365"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(31) == \"64921457\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 6, \"The test case should output 6, but instead it outputs {}\".format(solution(3, 2))\nassert solution(4, 4) == 3, \"The test case should output 3, but instead it outputs {}\".format(solution(4, 4))\nassert solution(7, 3) == 1196, \"The test case should output 1196, but instead it outputs {}\".format(solution(7, 3))\nassert solution(31, 8) == 64921457, \"The test case should output 64921457, but instead it outputs {}\".format(solution(31, 8))"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 6\nassert solution(4) == 3\nassert solution(7) == 1196\nassert solution(31) == 64921457"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\\nX.#.\\n#...\\n\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '''\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '\\n#.X#\\nX.#.\\n#...\\n'\nassert solution('5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#') == '\\n#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '#XXX\\n#X#.X\\nX#..#X\\n...#X.#\\n.#.#.#'\nassert solution('5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...#') == '#XXX\\n#X#.X\\nX#..#X\\n...#X.#\\n.#.#.#'\nassert solution('5 4 10\\n#...#\\n#.#.#\\n.#..#\\n...#') == '#XXX\\n#X#.X\\nX#..#X\\n...#X.#\\n.#.#.#'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 2') == \"\"\"#X#\nX#.\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\nX#X\nX#X\nX#X\n\"\"\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(3)) == '1\\n'\nassert solution(str(5)) == '3\\n'\nassert solution(str(18)) == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {stdin}, expected output: {expected_output}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n') == '1'\nassert solution('5\\n1 2 2 2\\n') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed. Input: {input}, Output: {output}\" for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3)) == \"1\", \"Expected 1, got: \" + solution(str(3))\nassert solution(str(1)) == \"1\", \"Expected 1, got: \" + solution(str(1))\nassert solution(str(1)) == \"1\", \"Expected 1, got: \" + solution(str(1))\nassert solution(str(5)) == \"3\", \"Expected 3, got: \" + solution(str(5))\nassert solution(str(18)) == \"4\", \"Expected 4, got: \" + solution(str(18))"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(18) == \"4\\n\", \"Test 1\"\nassert solution(5) == \"3\\n\", \"Test 2\"\nassert solution(3) == \"1\\n\", \"Test 3\"\nassert solution(1) == \"1\\n\", \"Test 4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\nassert solution(open('input2.txt', 'r').read()) == '3\\n'\nassert solution(open('input3.txt', 'r').read()) == '4\\n'\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Expected 1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\", \"Expected 3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\", \"Expected 4\\n\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"3 1 2 3\"\nassert solution(\"5 10 8\") == \"-1\"\nassert solution(\"1 2 3\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3\\n'\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2 4 1 5 3\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 4 1 5 3'\nprint(\"Test Passed\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"2 3 4\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"1 3 3\") == \"3\"\nassert solution(\"1 3 4\") == \"3\"\nassert solution(\"1 4 3\") == \"3\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 2 3\") == \"2\"\nassert solution(\"2 3 3\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"2 4 4\") == \"4\"\nassert solution(\"2 4 5\") == \"4\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"3 3 4\") == \"3\"\nassert solution(\"3 4 4\") == \"4\"\nassert solution(\"3 4 5\") == \"4\"\nassert solution(\"3 5 5\") == \"5\"\nassert solution(\"4 4 4\") == \"4\"\nassert solution(\"4 4 5\") == \"4\"\nassert solution(\"4 5 5\") == \"5\"\nassert solution(\"5 5 5\") == \"5\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nassert solution('10 3 2') == '-1'\nassert solution('10 5 4') == '1 2 3'\nassert solution('1 5 2') == '5 2 1'\nassert solution('7 3 2') == '1 2 3'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 3 2\\n\") == \"2 4 1 5 3\"\nassert solution(stdin=\"10 3 2\\n\") == \"-1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\"\n2 4 1 5 3\n\"\"\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\\n\") == \"Yes\"\nassert solution(\"2\\n7 17\\n\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"Input\\n2\\n7 17\") == \"No\\n\"\nassert solution(\"Input\\n9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Yes\", \"Please implement the solution for the given problem.\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(9) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(6) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(9) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n9\\n18\\n36\\n108\") == \"Yes\"\nassert solution(\"2\\n7\\n17\") == \"No\"\nassert solution(\"9\\n4\\n8\\n10\\n12\\n15\\n18\\n33\\n44\\n81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 -6 4 5 3') == '12'"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n-6\\n4\\n5\\n3\") == \"12\"\nassert solution(\"6\\n1\\n2\\n-6\\n4\\n5\\n3\") == \"12\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"5\\n1 2 -6 4 5 3\") == \"10\"\nassert solution(\"5\\n1 2 -6 4 5 4\") == \"12\"\nassert solution(\"5\\n1 2 -6 4 5 6\") == \"12\"\nassert solution(\"6\\n1 2 -6 4 5 4\") == \"12\"\nassert solution(\"6\\n1 2 -6 4 5 5\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == \"12\\n\"\nassert solution(stdin=\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\", \"Test 1 failed\"\nassert solution(\"6\\n1 2 -6 4 5 6\") == \"18\\n\", \"Test 2 failed\"\nassert solution(\"6\\n1 2 -6 4 5 7\") == \"24\\n\", \"Test 3 failed\"\nassert solution(\"6\\n1 2 -6 4 5 8\") == \"30\\n\", \"Test 4 failed\"\nassert solution(\"6\\n1 2 -6 4 5 9\") == \"36\\n\", \"Test 5 failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"6\\n1 1 1 -1 1 1\") == \"1\"\nassert solution(\"6\\n1 1 -1 1 1 1\") == \"-1\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"0\"\nassert solution(\"6\\n1 1 1 -1 -1 1\") == \"0\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\", \"Your solution is incorrect\"\nassert int(stdin) == 12, \"Your solution is incorrect\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", f\"Expected output: 5, got: {solution(input())}\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\" # Correct solution\nassert solution(\"4 2\\n1 3 4 2 1\") == \"3\" # Correct solution\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2\") == \"5\" # Correct solution\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2 3 1\") == \"5\" # Correct solution"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5\\n'\nassert solution('4 2\\n2 2 1 2 3') == '7\\n'\nassert solution('5 2\\n2 1 2 2 2 1') == '3\\n'\nassert solution('5 3\\n1 1 1 1 1 1') == '6\\n'\nassert solution('6 3\\n2 2 2 2 2 2') == '6\\n'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2\") == \"12\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2\") == \"15\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5', 'Incorrect output'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2 3\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 4 2 3 1 "
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect, expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor i in range(len(input().split())):\n    assert int(input().split()[i]) == int(output().split()[i]), f\"Test case failed for index {i}\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0 0\\n0 1\\n2 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n2\\n1 3\") == \"2 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0 0\"\nassert solution(input()) == \"0 1\"\nassert solution(input()) == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test {test_num} failed. Expected: {expected_output}, Received: {solution(input_data)}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\\n\", \"Test case 1 incorrect\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n\", \"Test case 2 incorrect\"\nassert solution(\"3\\n3 2 1\\n3\\n1 2 3\") == \"2 1\\n\", \"Test case 3 incorrect\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"0 1\\n2 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '0 0'\nassert solution(3) == '0 1'\nassert solution(3) == '2 1'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\na\\nb\") == \"6\"\nassert solution(\"3 3\\nab\\nba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO\\n'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n2 2 1 1\"\nassert solution() == \"NO\\n2 1 2 1 1\"\nassert solution() == \"NO\\n2 1 2 1 1\"\nassert solution() == \"NO\\n2 1 2 1 1\"\nassert solution() == \"NO\\n2 1 2 1 1\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1 \"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1 \"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 6 7\\n') == 'YES\\n2 2 1 1\\n'\nassert solution('5\\n6 15 35 77 22\\n') == 'YES\\n2 1 2 1 1\\n'\nassert solution('5\\n6 10 15 1000 75\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n2 3 6 7') == 'YES\\n2 2 1 1'\nassert solution('Input\\n5\\n6 15 35 77 22') == 'YES\\n2 1 2 1 1'\nassert solution('Input\\n5\\n6 10 15 1000 75') == 'NO'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 5"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100\\n60\\n70\\n') == '40'\nassert solution('410\\n55\\n70\\n') == '5'\nassert solution('600\\n60\\n70\\n') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 40 # correct answer\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"40\"\nassert solution() == \"5\"\nassert solution() == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(100) == 40\nassert solution(410) == 5\nassert solution(600) == 0"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\", \"Incorrect output\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\\n1\\n\", \"Incorrect output\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Output is incorrect: {solution(input())}, Expected {output}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Output mismatch: got '{solution(input())}', expected '{output}'\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output:\\n{expected_output}\\nGot:\\n{solution(input())}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed.\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"3 2\\n1 3 3\\n2 3 2\\n\") == \"12\"\nassert solution(\"3 3\\n1 3 3\\n2 3 2\\n3 3 3\\n\") == \"24\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"5 1\\n1 2 2\\n\") == \"15\"\nassert solution(\"4 3\\n1 2 3\\n2 3 1\\n\") == \"10089627\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"2 3\\n1 2 3\\n2 1 3\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2 2\\n1 1 2\\n\") == \"6\\n\"\nassert solution(\"3 3\\n1 1 2\\n2 2 2\\n2 1 2\\n\") == \"6\\n\"\nassert solution(\"3 4\\n1 1 1\\n2 2 2\\n1 2 2\\n2 1 2\\n\") == \"6\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nprint(solution(\"3 1\\n1 3 3\\n\"))\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\", \"Your solution is not correct.\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n87654\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\n\nsolution(\"100\\n100\") == \"10\"\n\nsolution(\"100\\n300\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"42308\\n11\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"\") == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nprint(\"Example output:\", solution(\"87654\\n30\"))  # Example output: 10"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n300\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('87654 30') == '10'\nassert solution('100 87654') == '10'\nassert solution('10000000000000000000') == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654 30\") == \"10\"\nassert solution(\"100 87654\") == -1"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abcde\") == \"First\"\nassert solution(\"abac\") == \"First\"\nassert solution(\"aaab\") == \"Second\"\nassert solution(\"aab\") == \"First\"\n\nfor s in [\"aba\", \"abcde\", \"abac\", \"aaab\", \"aab\"]:\n    assert solution(s) == \"Second\" if s == \"aba\" else \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\"\nprint(\"First\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abca') == 'Second'\nassert solution('abb') == 'First'\nassert solution('abc') == 'First'\nassert solution('aab') == 'First'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\", \"Solution should return 'Second'\"\nassert solution(\"aaaaa\") == \"First\", \"Solution should return 'First'\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\", \"Test failed: The output should be 'Second'.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abc') == 'First'\nassert solution('aab') == 'First'\nassert solution('baa') == 'Second'\nassert solution('abac') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\\n\"\nassert solution(\"xyz\") == \"First\\n\"\nassert solution(\"aaabbbccccddddeeff\") == \"Second\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10, \"12345\") == 6\nassert solution(16, \"439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'10\\n12345') == '6'\nassert solution(r'16\\n439873893693495623498263984765') == '40'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'10\\n12345') == '6'\nassert solution(r'16\\n439873893693495623498263984765') == '40'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(read_input()) == \"Output\\n40\", \"Test 1 failed\"\nassert solution(read_input()) == \"Output\\n6\", \"Test 2 failed\"\nassert solution(read_input()) == \"Output\\n40\", \"Test 3 failed\"\nassert solution(read_input()) == \"Output\\n6\", \"Test 4 failed\"\nassert solution(read_input()) == \"Output\\n40\", \"Test 5 failed\"\nassert solution(read_input()) == \"Output\\n6\", \"Test 6 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output\", \"Test case 1 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n12345\") == \"6\", \"The expected output is: 6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\", \"The expected output is: 40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}\\nExpected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"332748119\\n332748119\\n3\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"332748119\", \"The expected weight is incorrect.\"\n\nfrom functools import reduce"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"332748119\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\nassert solution(\"1 1\\n0 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"97\\n\"\nassert solution(\"1 1\\n0 1\\n1 1\\n\") == \"9\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 332748119, \"The expected weight of each picture after all the visits modulo 998244353 is not 332748119.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\", \"The given input is not valid.\"\nassert solution(\"AA\\nA\\nA\") == \"0\", \"The given input is not valid.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == 0"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == 0"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ORZ\", \"Test failed for input: {}\".format(input())\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\"\n) == \"ORZ\", \"Test case 1 failed\"\n\nassert solution(\n    \"AA\\nA\\nA\"\n) == \"0\", \"Test case 2 failed\"\n\nassert solution(\n    \"ABCDGHI\\nEFGHIJKLMN\\nGHIJKLMNOPQRSTUVWXYZ\\nHIJKLMNOPQRSTUVWXYZ\"\n) == \"ABCDGHI\", \"Test case 3 failed\"\n\nassert solution(\n    \"A\\nB\\nC\"\n) == \"0\", \"Test case 4 failed\"\n\nassert solution(\n    \"ABCDE\\nFGHIJ\\nKLMNO\\nPQRST\\nUVWXYZ\"\n) == \"ABCDEFGHIJKLMNO\", \"Test case 5 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test 1: Expected: ORZ, but got: {}.\".format(solution(\"AJKEQSLOBSROFGZ\"))\nassert solution(\"OVGURWZLWVLUXTH\") == \"OZ\", \"Test 2: Expected: OZ, but got: {}.\".format(solution(\"OVGURWZLWVLUXTH\"))\nassert solution(\"AA\") == \"0\", \"Test 3: Expected: 0, but got: {}.\".format(solution(\"AA\"))"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Expected output: ORZ, but got: \" + solution(\"AJKEQSLOBSROFGZ\")\nassert solution(\"OVGURWZLWVLUXTH\") == \"OZ\", \"Expected output: OZ, but got: \" + solution(\"OVGURWZLWVLUXTH\")\nassert solution(\"AA\") == \"0\", \"Expected output: 0, but got: \" + solution(\"AA\")"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed. Output: {solution(input())}, Expected output: {output}\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99, \"Expected 99, got: \" + str(solution(\"1 2 1\\n1 100 1\\n1 100 100\"))"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n').strip() == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1\\n').strip() == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, \"Test case failed.\"\n\ninput_str = '''\n1 2 1\n1 100 1\n1 100 100\n'''\n\noutput_str = '99'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"The given solution is incorrect. \\nExpected: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"0\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('3 2\\n') == '1\\n'\nassert solution('3 3\\n') == '0\\n'\nassert solution('1000000000000 1048576\\n') == '118606527258\\n'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"0\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"The output is not as expected\"\nassert solution() == 1, \"The output is not as expected\"\nassert solution() == 0, \"The output is not as expected\"\nassert solution() == 118606527258, \"The output is not as expected\"\nassert solution() == 118606527258, \"The output is not as expected\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"0\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1) == 1, \"Test 1 failed\"\nassert solution(3, 2) == 1, \"Test 2 failed\"\nassert solution(3, 3) == 0, \"Test 3 failed\"\nassert solution(1000000000000, 1048576) == 118606527258, \"Test 4 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('3 2\\n') == '1'\nassert solution('3 3\\n') == '0'\nassert solution('1000000000000 1048576\\n') == '118606527258'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test 1\"\nassert solution(\"3 2\") == \"1\\n\", \"Test 2\"\nassert solution(\"3 3\") == \"0\\n\", \"Test 3\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\", \"Test 4\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(1000000000000) == 118606527258"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"++\") == \"Yes\", \"Test case 2 failed\"\nassert solution(\"-\") == \"No\", \"Test case 3 failed\"\nassert solution(\"-++-\") == \"Yes\", \"Test case 4 failed\"\nassert solution(\"+-\") == \"Yes\", \"Test case 5 failed\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"--\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('-++-') == 'Yes', 'Test case 1 failed'\nassert solution('-+-') == 'No', 'Test case 2 failed'\nassert solution('++') == 'Yes', 'Test case 3 failed'\nassert solution('-') == 'No', 'Test case 4 failed'"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-++\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"-++\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+++\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"-++\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\\n\", \"Test 1\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\\n\", \"Test 2\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2\n1 2''') == '12.566370614359172464'\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 0 0\n0 1\n-1 2\n1 2\"\"\") == 12.566370614359172464\nassert solution(\"\"\"4 1 -1\n0 0\n1 2\n2 0\n1 1\"\"\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == \"12.566370614359172464\\n\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == \"21.991148575128551812\\n\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 0, 0) == 12.566370614359172464\nassert solution(4, 1, -1) == 21.991148575128551812\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"48\") == \"9 42\", \"Input 48\"\nassert solution(\"6\") == \"6 6\", \"Input 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9 42', \"The expected output is not provided.\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n\") == \"6 6\"\nassert solution(\"48\\n\") == \"9 42\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(48) == '9 42'\nassert solution(6) == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\", \"Expected 'Yes', got: \" + solution(\"2\\n)(\\n\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"Expected 'No', got: \" + solution(\"3\\n(()\\n\")\nassert solution(\"2\\n()\") == \"Yes\", \"Expected 'Yes', got: \" + solution(\"2\\n()\")\nassert solution(\"10\\n((((\\n\") == \"No\", \"Expected 'No', got: \" + solution(\"10\\n((((\\n\")\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n( \\n\") == \"Yes\"\nassert solution(\"3\\n(() \\n\") == \"No\"\nassert solution(\"2\\n() \\n\") == \"Yes\"\nassert solution(\"10\\n())(((((( \\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\\n\") == \"No\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected {output}\" for input, output in [\n    (1, 50),\n    (3, 100),\n    (2, 50),\n    (1, 50),\n    (2, 100),\n    (2, 150),\n    (3, 200),\n]"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\\n\"\n\nfor input_ in [\"1 50\", \"3 100\", \"2 50\"]:\n    stdin = input_\n    output = solution(stdin)\n    assert output == input_, f\"Expected {output}, got {input_}\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 50\\n50') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100') == '5\\n2\\n'\nassert solution('2 50\\n50 50') == '-1\\n0\\n'\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\") == 2\nassert solution(\"Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\") == 4\nassert solution(\"Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\") == 1"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(5) == 4\nassert solution(4) == 1"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '4'\nassert solution(4) == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output', 'Test case 1 failed'\n\nassert solution(stdin) == 'Output', 'Test case 2 failed'\n\nassert solution(stdin) == 'Output', 'Test case 3 failed'\n\nassert solution(stdin) == 'Output', 'Test case 4 failed'\n\nassert solution(stdin) == 'Output', 'Test case 5 failed'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Solution not provided.\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"6\n\"\"\"\n\nassert solution(stdin) == \"\"\"-1\n\"\"\"\n\nassert solution(stdin) == \"\"\"5\n\"\"\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\", \"Incorrect output\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\", \"Incorrect output\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\", \"Incorrect output\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n3\\n17 18\\n15 24\\n12 15\\n') == '6\\n'\nassert solution('Input\\n2\\n10 16\\n7 17\\n') == '-1\\n'\nassert solution('Input\\n5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n') == '5\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"The output is incorrect. Expected: {expected}, got: {solution(input())}\"\n\ninput_data = \"\"\"\n3\n17 18\n15 24\n12 15\n\n2\n10 16\n7 17\n\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n\"\"\"\n\nexpected = \"\"\"\n6\n\n-1\n\"\"\"\n\nfor line in input_data.split(\"\\n\"):\n    assert solution(line) == expected.strip(), f\"The output is incorrect for line: {line}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == 6\nassert solution(\"2\\n10 16\\n7 17\") == -1\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 6, \"Incorrect output\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15') == '6\\n'\nassert solution('2\\n10 16\\n7 17') == '-1\\n'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30') == '5\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == 6\nassert solution() == -1\nassert solution() == 5\n\nfrom typing import List"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3\\n'\nassert solution('bb') == '2\\n1 0\\n1 3\\n'\nassert solution('bbbb') == '0\\n'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bb\") == \"1\\n0\\n3\\n\"\nassert solution(\"bbbb\") == \"0\\n0\\n\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\ns = input()\nt = input()"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3'\nassert solution('bb') == '2\\n1 0\\n1 3'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\"\nassert solution(\"bb\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\"\nassert solution(\"bb\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"1 3\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 2\\n1 3\\n2 3\\n4 2 5') == 'IMPOSSIBLE'\nassert solution('1\\n5\\n10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 3') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 3') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 3') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 3') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 2 3') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n2 1\\n1 2 3 4\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n1 2\\n2 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 1\\n6 5 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 1\\n6 5 2\\n7 6 3\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"2\\n1 1\\n1 1\\n2 2\\n3 2\\n1 2\\n2 2\\n3 1\\n\") == \"POSSIBLE\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"POSSIBLE\\n\"\nassert solution(\"2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\\n3 2\\n2 2\\n1 1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\\n3 2\\n2 2\\n1 1\\n3 1\\n\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1\n4 3 2\n''') == 'POSSIBLE'\nassert solution('''\n4\n1 1\n3 2\n2 3\n1 4\n''') == 'POSSIBLE'\nassert solution('''\n3\n1 1\n4 3\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"The expected output is not correct\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"  # Correct output\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"  # Correct\nassert solution(\"1 1000000007\") == \"1\\n\"  # Correct\nassert solution(\"3 1000000007\") == \"1\\n2\\n\"  # Correct\nassert solution(\"5 1000000007\") == \"1\\n2\\n3\\n\"  # Correct\nassert solution(\"7 1000000007\") == \"1\\n2\\n3\\n4\\n\"  # Correct\nassert solution(\"10 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n\"  # Correct\nassert solution(\"11 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n\"  # Correct\nassert solution(\"15 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"  # Correct\nassert solution(\"20 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"  # Correct\nassert solution(\"25 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\"  # Correct\nassert solution(\"30 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"  # Correct\nassert solution(\"35 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\"  # Correct\nassert solution(\"40 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\"  # Correct\nassert solution(\"45 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\"  # Correct\nassert solution(\"50 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\"  # Correct\nassert solution(\"55 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\"  # Correct\nassert solution(\"60 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\"  # Correct\nassert solution(\"65 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\"  # Correct\nassert solution(\"70 1000000007\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\"  # Correct\nassert solution(\"75 10000000"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"4 2000000003\") == \"4\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed.\"\nassert solution(stdin) == \"1\\n\", \"Test case 2 failed.\"\nassert solution(stdin) == \"2\\n\", \"Test case 3 failed.\"\nassert solution(stdin) == \"2\\n\", \"Test case 4 failed.\"\nassert solution(stdin) == \"1\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Case 1:\\nNo solution.\\n\"\nassert solution(\"1\\n\") == \"Case 1:\\nNo solution.\\n\"\nassert solution(\"2\\n\") == \"Case 2:\\nNo solution.\\n\"\nassert solution(\"3\\n\") == \"Case 3:\\nNo solution.\\n\"\nassert solution(\"1 2\\n\") == \"Case 1:\\nNo solution.\\n\"\nassert solution(\"2 1\\n\") == \"Case 2:\\nNo solution.\\n\"\nassert solution(\"2 1 3\\n\") == \"Case 3:\\nNo solution.\\n\"\nassert solution(\"2 3 1 4\\n\") == \"Case 4:\\nNo solution.\\n\"\nassert solution(\"2 3 1\\n\") == \"Case 1:\\nNo solution.\\n\"\nassert solution(\"2 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n\") == \"Case 1:\\nNo solution.\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"The solution should return 2 for the given constraints.\"\n\nfrom typing import List"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 3 3\\n+-+') == 7\nassert solution('4 1 5 1\\n-') == 999999228\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 2 3 3\n+-+\n\"\"\") == \"7\"\n\nassert solution(\"\"\"4 1 5 1\n-\n\"\"\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"7\\n\"\nassert solution(open('input1.txt', 'r')) == \"999999228\\n\"\nassert solution(open('input2.txt', 'r')) == \"7\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\\n\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\nassert solution(\"5 2 1 3\\n+---+\\n\") == \"11\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 2 3 3\n    -+\n    \"\"\"\n) == \"7\\n\"\n\nassert solution(\n    \"\"\"\n    4 1 5 1\n    -\n    \"\"\"\n) == \"999999228\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\"\nassert solution(\"1 2 3 1\") == \"2\\n\"\nassert solution(\"10 2 1 7\") == \"0\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution {input()} failed, expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output\\n6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'\nassert solution('1 1') == '1'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2') == '6'\nassert solution('1 3 1') == '6'\nassert solution('2 1 2') == '6'\nassert solution('2 3 2') == '6'\nassert solution('3 1 3') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == \"6\"\nassert solution(2, 2) == \"3\"\nassert solution(2, 3) == \"2\"\nassert solution(3, 3) == \"1\"\nassert solution(4, 4) == \"0\"\nassert solution(1, 1) == \"0\"\nassert solution(3, 1) == \"0\"\nassert solution(4, 5) == \"0\"\nassert solution(5, 1) == \"0\"\nassert solution(1, 5) == \"0\"\nassert solution(5, 5) == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\nprint('All tests passed!')"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"10 5\") == \"0\"\nassert solution(\"1000000000\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"The output must be 2.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"1\\n2 3\\n\") == \"1\\n0\\n\"\nassert solution(\"3\\n4 2\\n\") == \"3\\n0\\n\"\nassert solution(\"5\\n6 2\\n7 8\\n\") == \"5\\n0\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"  # sample output\nassert solution(\"3\\n1 2\\n2 3\\n3 1\") == \"1\\n\"  # sample output\n\nfrom typing import List"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"11\"\nassert solution(5) == \"143\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2\nassert solution == 4\nassert solution == 18"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"Please implement the solution to the problem\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == solution2"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example1) == 2"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed\"\n\nfor test_case in range(1, 6):\n    input_card = list(map(int, input().split()))\n    expected = min(operations_needed, operations_needed2)\n    operations_needed = operations_needed2 = 0\n    \n    for i in range(1, len(input_card), 2):\n        operations_needed += 1\n        operations_needed2 += 2\n        \n    print(operations_needed)"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"tests/test_input.txt\").read()) == \"YES\"\nassert solution(open(\"tests/test_input2.txt\").read()) == \"YES\"\nassert solution(open(\"tests/test_input3.txt\").read()) == \"YES\"\nassert solution(open(\"tests/test_input4.txt\").read()) == \"NO\"\nassert solution(open(\"tests/test_input5.txt\").read()) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6 10\\ncode*s\\ncodeforces') == 'YES\\n'\nassert solution(stdin='6 5\\nvk*cup\\nvkcup\\n') == 'YES\\n'\nassert solution(stdin='1 1\\nv\\nk\\n') == 'NO\\n'\nassert solution(stdin='9 6\\ngfgf*gfgf\\ngfgfgf\\n') == 'NO\\n'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6,10) == \"YES\"\nassert solution(6,5) == \"YES\"\nassert solution(1,1) == \"NO\"\nassert solution(9,6) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.800000000000\", \"Sample Case 1\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.8\"\nassert solution(\"2\\n0.1 0.2\") == \"0.26\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.260000000000', \"Your solution is incorrect. Please revise it.\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.800000000000\", \"Expected 0.800000000000, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.26\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0.800000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.260000000000', 'The solution should be 0.260000000000.'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.260000000000\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5.0000000000'\nassert solution(input()) == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Error: {solution(input())}!= {output()}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5.0000000000'\n\nimport math"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0.250\nassert solution(3) == 0.279"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"0.250\", \"Expected 0.250, but got \" + solution(stdin=input())"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected output {output()}, got {solution(input())}\"\n\ninput_list = list(map(float, input().split()))\nn = len(input_list)\n\na = input_list[:n]\na_ = list(map(int, a))\n\na_.sort()\na_ = [x for x in a_ if x!= a[0]]\na_ = [x for x in a_ if x!= a[-1]]\na_ = a_ + a\n\nmin_diff = float('inf')\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if abs(a_[i] - a_[j]) < min_diff:\n            min_diff = abs(a_[i] - a_[j])\n\nprint(f\"{min_diff:.3f}\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.250\", \"Expected 0.250, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5\\n5 2\\n') == '18'\nassert solution('0 1\\n0 0\\n') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\", \"Test 1\"\nassert solution(\"0 1\\n0 0\") == \"8\", \"Test 2\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"18\\n\", \"Test Case 1\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Input {input()} should output {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"18\", \"The correct length of the quadcopter path is not equal to 18.\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"Expected 4, got {}\".format(solution())"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4, \"The expected output is not 4 but {}\".format(solution(1))\nassert solution(2) == 10, \"The expected output is not 10 but {}\".format(solution(2))\nassert solution(10) == 244, \"The expected output is not 244 but {}\".format(solution(10))"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()} and expected output {output()}\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\"\"\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '0\\n'\nassert solution('4') == '2\\n'\nassert solution('5') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 2 2\\n1 4 1 4 9\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"5\\n1 4 1 4 9\\n1 2 3 4 5\\n\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"0\\n\"\nassert solution(\"4\\n1\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"5\\n1\\n4\\n1\\n9\\n\") == \"2\\n\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"Error: incorrect output\"\nassert solution(\"bbacc\") == \"NO\", \"Error: incorrect output\"\nassert solution(\"aabc\") == \"YES\", \"Error: incorrect output\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n\nassert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\nprint('All tests passed.')"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 2\nassert solution(input()) == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == 2\nassert solution(\"4\\n4 1 3 2\") == 2\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5\\n4 1 2 5 3\\nOutput\\n2\") == \"2\\n\"\nassert solution(\"Input\\n4\\n4 1 3 2\\nOutput\\n2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 5 3\\n4\\n1 3 2\\n\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n5\\n4 1 2 5 3\\n\") == \"Output\\n2\\n\\n\"\nassert solution(\"Input\\n4\\n4 1 3 2\\n\") == \"Output\\n2\\n\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 5 3\") == \"2\"\nassert solution(\"4\\n1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2 5 3\") == 2\nassert solution(\"4 1 3 2\") == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Expected output 2\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == 3.5\nassert solution(\"6 3\") == 4.96\nassert solution(\"2 2\") == 1.75"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3.500000000000', 'The expected output is 3.500000000000'\nassert solution(stdin) == '4.958333333333', 'The expected output is 4.958333333333'\nassert solution(stdin) == '1.750000000000', 'The expected output is 1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}, expected {output}\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.958333333333\nassert solution(2, 2) == 1.75"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"3.5\", \"Test Case 1 Failed\"\nassert solution(\"6 3\") == \"4.96\", \"Test Case 2 Failed\"\nassert solution(\"2 2\") == \"1.76\", \"Test Case 3 Failed\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n\") == \"3.500000000000\\n\"\nassert solution(\"6 3\\n\") == \"4.958333333333\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\"\n\nfrom math import exp, log, sqrt"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.500000000000\", \"Your solution is incorrect\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.96\nassert solution(2, 2) == 1.76\n\nfrom typing import List"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.in', 'r')) == '3\\n5\\n3\\n0\\n'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3\\n5\\n3\\n0'\n\nassert solution('''\n4\n1\n<--\n2\n<>\n''') == '3\\n0'\n\nassert solution('''\n4\n2\n<--\n1\n<>\n''') == '3\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Solution: {solution(input)}, Expected output: {expected_output}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n2\\n<>\") == \"3\"\nassert solution(\"4\\n4\\n<-\") == \"0\"\nassert solution(\"4\\n4\\n>>\") == \"3\"\nassert solution(\"4\\n4\\n<<<\") == \"0\"\nassert solution(\"4\\n4\\n>>>>\") == \"3\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3\\n5\\n3\\n0', \"Expected '3\\n5\\n3\\n0', got '{0}'\".format(solution(input()))"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('3\\n<--\\n2\\n<>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<--\\n4\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<<-\\n4\\n>>>>') == '3\\n5\\n3\\n0'\nassert solution('5\\n<>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-<-\\n5\\n>>>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n<-->\\n5\\n<---->\") == \"5\\n3\\n5\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor test in range(int(input())):\n    n = int(input())\n    s = input()\n    output = solution(input())\n    assert output == output, f\"Test Case {test+1}: {s} -> {output}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n2\\n<>\") == \"0\"\nassert solution(\"2\\n<\\n2\\n<>\") == \"2\"\nassert solution(\"5\\n<>\") == \"3\"\nassert solution(\"2\\n<\\n2\\n<\") == \"0\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 16\nassert solution() == 9 9 10\nassert solution() == 202\nassert solution() == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"16\\n9 9 10\\n202\\n101 101 101 101\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10 \\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}' instead of '{expected_output}'\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10 \\n\"\nassert solution(\"Input\\n4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"Input\\n3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\"\n\nfor k in range(1, ceil(n/2)+1):\n    solution(f\"{n}\\n1 1 1 1 1\\n{k}\")"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected:\\n{}\\nGot:\\n{}\\n\".format(output(), solution(input()))"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2 \\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2 2\"\nassert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\"\nassert solution(6) == \"1 0\"\nassert solution(7) == \"0\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\"\nassert solution(1) == \"1 2 2\"\nassert solution(2) == \"0 2\"\nassert solution(3) == \"0 2\"\nassert solution(4) == \"0 1 2\"\nassert solution(5) == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\", \"First example incorrect\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \", \"Second example incorrect\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \", \"Third example incorrect\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 2\\n'\nassert solution() == '0 2\\n'\nassert solution() == '0 1 3\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\"\nassert solution(1) == \"1 2\"\nassert solution(10) == \"0 1 3 5\"\nassert solution(100) == \"0 1 3 5 9\"\nassert solution(500) == \"0 1 3 5 9 13\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(101101) == '110110', \"Test 1 failed\"\nassert solution(10010110) == '01100011', \"Test 2 failed\"\nassert solution(10) == '01', \"Test 3 failed\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\"\nassert solution(\"10\\n11100\\n\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101101\") == \"110110\", \"The first example is incorrect.\"\nassert solution(\"10010110\") == \"01100011\", \"The second example is incorrect.\"\nassert solution(\"10\") == \"01\", \"The third example is incorrect.\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\"\nassert solution(\"10\\n11100\\n\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\\n3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\\n\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\\n\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\\n\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 5 2\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 0 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    \"\"\"\n) == 1\n\nassert solution(\n    \"\"\"\n    3 4 1\n    1 0 0 0\n    0 1 1 1\n    1 1 1 0\n    1 0 0 1\n    1 0 0 1\n    \"\"\"\n) == -1\n\nassert solution(\n    \"\"\"\n    3 4 1\n    1 0 0 1\n    0 1 1 0\n    1 0 0 1\n    0 1 1 0\n    1 1 1 1\n    \"\"\"\n) == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 0 0\\n\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == 0"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2  \\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\"\nassert solution(\"\") == \"\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 3\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 4\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 4 4 6 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\nassert solution(\"\") == \"\"\n\nfrom typing import List"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(1, n):\n    for j in range(i+1):\n        a[i] = a[i] + a[j]\n        a[j] = a[i] - a[j]\n\nprint(*a)"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 2 3 1 2 1 3\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 3 1 2 4 4\"\nassert solution(\"0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 2 3 1 2  \"\nassert solution(input()) == \"9999 10000 9998\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == 22\nassert solution(solution) == 103\nassert solution(solution) == 105\nassert solution(solution) == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"4\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '22'\n\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n''') == '103'\n\nassert solution('''\n6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n''') == '105'\n\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n''') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == 22\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n''') == 103\nassert solution('''\n6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n''') == 105\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n''') == 0"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 9\n1 3 1 2\n2 1 3\n4 3 6\n''') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\n'\nassert solution('''\n3 4 10\n2 3 1 2\n2 1 3\n4 3 6\n''') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3\\n'\nassert solution('''\n3 4 9\n2 3 1 2\n2 1 3\n4 3 6\n''') == 'YES\\n3 3 2 3\\n'\nassert solution('''\n3 4 5\n1 3 1 2\n2 1 3\n5 3 6\n''') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n1 3 1 3\\n3 3 2 3\\n'\nassert solution() == 'YES\\n2 3 2 3\\n'\nassert solution() == 'YES\\n1 3 1 3\\n3 3 2 3\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n2 3 2 3\\n\"\nassert solution() == \"YES\\n1 3 1 3\\n\"\nassert solution() == \"YES\\n3 3 2 3\\n\"\nassert solution() == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample.txt\").read()) == \"YES\\n1 3 1 3\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Your solution is not correct. Expected {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\nYES\\n1 3 1 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is: {expected_output}, but the output is: {solution(input())}\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n\nassert solution(\"4 1\\n1 2 3 4\\n2 3 4 1\") == \"NO\"\nassert solution(\"4 1\\n3 4 2 1\\n4 3 1 2\") == \"YES\"\nassert solution(\"4 3\\n3 4 2 1\\n4 3 1 2\") == \"YES\"\nassert solution(\"4 2\\n2 1 4 3\\n4 3 1 2\") == \"YES\"\nassert solution(\"4 1\\n2 1 4 3\\n4 3 1 2\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case+1} failed\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n') == '''1 1\n3 1\n1 5\n4 4'''\n\nassert solution('7\\n') == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6'''"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(7) == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\", \"Ivan places knights on infinite chessboard.\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"Ivan places knights on infinite chessboard.\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\\n2\"\nassert solution(\"3\") == \"1\\n2\\n3\"\nassert solution(\"4\") == \"1\\n2\\n3\\n4\"\nassert solution(\"5\") == \"1\\n2\\n3\\n4\\n5\"\nassert solution(\"6\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"7\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(str(input()))}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\\n3\\n1 2 3\\n\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\\n\") == 3\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(1) == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    1 2 3\n    ''') == -1\n\nassert solution('''\n    4\n    1 2 3 4\n    ''') == 1\n\nassert solution('''\n    5\n    1 2 3 4 5\n    ''') == 3\n\nassert solution('''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 10\n\nassert solution('''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 10"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"1\") == \"-1\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n''') == '-1'\n\nassert solution('''3\n1 2 3''') == '3'\n\nassert solution('''2\n1\n2\n''') == '-1'\n\nassert solution('''3\n1 2 3\n2 3 4\n3 4 5\n''') == '6'\n\nassert solution('''5\n1 2 3 4 5\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n''') == '3'\n\nassert solution('''7\n1 2 3 4 5 6 7\n2 3 4 5 6 7 8\n3 4 5 6 7 8 9\n4 5 6 7 8 9 10\n5 6 7 8 9 10 11\n6 7 8 9 10 11 12\n7 8 9 10 11 12 13\n''') == '-1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"3\\n92 205 1\"\nassert solution(\"1 1\\n1 0\") == \"1\"\nassert solution(\"-1 0\") == \"-1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"10 2\\n\") == \"0\\n\"\nassert solution(\"100 200\\n\") == \"1\\n99 89 79\\n\"\nassert solution(\"10 1000\\n\") == \"1\\n1999 999 899\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\"\n\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution {solution(input())} does not match the expected output {output}.\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\"\nassert solution(\"3 10 10\\n100 1\\n20 2\\n50 3\\n\") == \"75.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5.000000000000000', 'Your solution is incorrect.'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"5.000000000000000\"\nassert abs(solution - 5.000000000000000) <= 10**-6"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 5.000000000000000\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5.000000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\\n\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\\n\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '5.000000000000000', \"Test failed: The given solution does not match the expected output.\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n8 2\\n') == 4\nassert solution('10 20\\n2 30\\n') == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test cases failed. Please check your code and inputs.\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3') == '4', \"Expected output: '4', got: '{}'.\".format(solution('2 3'))\nassert solution('8 2') == '5', \"Expected output: '5', got: '{}'.\".format(solution('8 2'))"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\", \"Test Case 1 failed\"\nassert solution(\"8 2\") == \"5\", \"Test Case 2 failed\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\\n2\\n1 1\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan\\n'\nassert solution('2\\n1 1\\n') == 'Agasa\\n'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'Conan'\nassert solution(2) == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nfor _ in range(test_cases):\n    h, w = map(int, input().split())\n    for i in range(h):\n        s = \"\"\n        for j in range(w):\n            if j < w // 2:\n                s += \"#\"\n            else:\n                s += \".\"\n        print(s)"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3 3\\n..#\\n#.#\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n\"\nassert solution(\"2 4\\n\") == \"4 4\\n\"\nassert solution(\"5 4\\n\") == \"5 4\\n\"\nassert solution(\"10 10\\n\") == \"10 10\\n\"\nassert solution(\"5 5\\n\") == \"5 5\\n\"\nassert solution(\"10 10\\n\") == \"10 10\\n\"\nassert solution(\"2 1\\n\") == \"2 1\\n\"\nassert solution(\"2 2\\n\") == \"2 2\\n\"\nassert solution(\"1 1\\n\") == \"1 1\\n\"\nassert solution(\"1 2\\n\") == \"1 2\\n\"\nassert solution(\"1 3\\n\") == \"1 3\\n\"\nassert solution(\"3 1\\n\") == \"3 1\\n\"\nassert solution(\"3 2\\n\") == \"3 2\\n\"\nassert solution(\"3 3\\n\") == \"3 3\\n\"\nassert solution(\"4 4\\n\") == \"4 4\\n\"\nassert solution(\"4 3\\n\") == \"4 3\\n\"\nassert solution(\"4 2\\n\") == \"4 2\\n\"\nassert solution(\"4 1\\n\") == \"4 1\\n\"\nassert solution(\"4 5\\n\") == \"4 5\\n\"\nassert solution(\"6 4\\n\") == \"6 4\\n\"\nassert solution(\"6 5\\n\") == \"6 5\\n\"\nassert solution(\"6 6\\n\") == \"6 6\\n\"\nassert solution(\"7 7\\n\") == \"7 7\\n\"\nassert solution(\"8 8\\n\") == \"8 8\\n\"\nassert solution(\"9 9\\n\") == \"9 9\\n\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3') == '3 3\\n##.\\n..#\\n#.#'\nassert solution('1 1') == '1 1\\n#.#'\nassert solution('3 2') == '2 3\\n#.#\\n.##'\nassert solution('5 5') == '5 5\\n#.#\\n...\\n#...\\n#...\\n#....'\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\"\nassert solution(\"4 3\") == \"4 3\\n3 3\\n3 3\"\nassert solution(\"1 1\") == \"1 1\\n1 1\\n1 1\"\nassert solution(\"5 1\") == \"5 1\\n1 1\\n1 1\"\nassert solution(\"1 4\") == \"1 4\\n1 4\\n1 4\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 3\\n\") == \"3 3\\n#.#\\n#.#\\n#.#\\n\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3. \\n..#\\n#.#\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input {input()} should output {output}, but got {solution(input())}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"0\", \"Your solution is incorrect\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 4\n+ 1\n+ 2\n- 2\n- 1''') == '''\n    4\n    1 3 4 5\n'''\n\nassert solution('''\n    3 2\n+ 1\n- 2\n''') == '''\n    1\n3 \n'''\n\nassert solution('''\n    2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '''\n    0\n'''\n\nassert solution('''\n    5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n''') == '''\n    3\n    2 3 5\n'''\n\nassert solution('''\n    2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '''\n    0\n'''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n') == '4\\n1 3 4 5\\nInput\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n') == '1\\n3\\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n') == '0\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 3 4 5 \\n2 3 0 \\n1 3 0 \\n3 4 0 \\n2 3 0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"3\"\"\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"The output is '{solution(stdin)}', but the expected output is '{expected_output}'\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1') == '4\\n1 3 4 5 '\nassert solution('3 2\\n+ 1\\n- 2\\n') == '1\\n3 \nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n') == '0'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '3\\n2 3 5 '\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n'\nassert solution(input()) == '1\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed for input\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1'\nassert solution('3 3\\n1 2 3\\n4\\n5\\n') == '0'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n3\\n4\\n5\\n') == '1'\nassert solution('5 1\\n5 4 2 4 5\\n6\\n') == '0'\nassert solution('3 3\\n1 2 3\\n1 2 3\\n4\\n5\\n') == '1'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n4 4 4 4\\n6\\n\") == \"0\"\nassert solution(\"6 6\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n3\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1\\n\") == \"1\"\nassert solution(\"2 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n8 8 8 8 8 8\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n8 8 8 8 8 8\\n9 9 9 9 9 9\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7 7\\n8 8 8 8 8 8\\n9 9 9 9 9 9\\n10 10 10 10 10 10\\n\") == \"1\"\nassert solution(\"1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\\n4 4 4 4 4 4\\n5 5 5 5 5 5\\n6 6 6 6 6 6\\n7 7 7 7 7"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\n\nassert solution(\"5 1\") == \"1\"\n\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\n\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nbca\") == \"NO\"\nassert solution(\"3 4\\nbca\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 3) == 'NO'\nassert solution(3, 4) == 'cbd'\nassert solution(4, 4) == 'abda'"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"50\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"50\\n\" # correct output\nassert solution(input(\"Enter the number of people: \")) == \"50\\n\" # correct output"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 5, 20) == 50\nassert solution(1, 2, 10) == 7"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50\\n'\nassert solution('1 2 10\\n11') == '7\\n'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\"\nassert solution(\"3 2\\n0 0\") == \"1 3\"\nassert solution(\"1 10\\n5 3\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"1 6\n\"\"\"\nassert solution() == \"\"\"1 3\n\"\"\"\nassert solution() == \"\"\"5 5\n\"\"\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\"\nassert solution(\"2 10\\n5 3\\n\") == \"2 5\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"4\\n-2 5 -1 6\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n\"\nassert solution(\"5\\n-2 5 -1 6 7\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n7 3\\n\"\nassert solution(\"6\\n-2 5 -1 6 7 8\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n7 3\\n8 3\\n\"\nassert solution(\"7\\n-2 5 -1 6 7 8 9\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n7 3\\n8 3\\n9 3\\n\"\nassert solution(\"8\\n-2 5 -1 6 7 8 9 10\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n7 3\\n8 3\\n9 3\\n10 3\\n\"\nassert solution(\"9\\n-2 5 -1 6 7 8 9 10 11\\n\") == \"2\\n2 3\\n3 3\\n4 3\\n5 3\\n6 3\\n7 3\\n8 3\\n9 3\\n10 3\\n11 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n-2 5 -1\\n') == '''2\n2 3\n3 3\n'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''\n2\n2 3\n3 3\n'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''2\n2 3\n3 3'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"4\\n-5 10 -3\") == \"0\\n\"\nassert solution(\"5\\n-5 10 -3\") == \"2\\n3 4\\n4 4\\n\"\nassert solution(\"6\\n-5 10 -3\") == \"4\\n3 3\\n2 2\\n1 1\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\", \"Output should be 3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 3\\n1 5') == '3'\nassert solution('1\\n0 4') == '1'\nassert solution('2\\n1 10\\n2 2') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n0 3\\n1 5\\n\\nOutput\\n3\\n\\nInput\\n1\\n0 4\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 10\\n2 2\\n\\nOutput\\n3\\n\\n\") == \"Output\\n3\\n\\nOutput\\n1\\n\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n2\\n0 3\\n1 5\\n\\nOutput\\n3\\n\\nInput\\n1\\n0 4\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 10\\n2 2\\n\\nOutput\\n3\\n\\n-----\\n\\nSolution:\\n\\nimport math\\n\\ndef solution(stdin: str) -> str:\\n    n = int(stdin.split()[0])\\n    boxes = []\\n    for i in range(n):\\n        k, a = map(int, stdin.split()[1:])\\n        boxes.append((k, a))\\n    boxes.sort(key=lambda x: x[0])\\n    max_side = 2**math.ceil(math.log2(max(boxes, key=lambda x: x[1])))\\n    for box in boxes:\\n        if box[0] == max_side:  # check if the box fits into the max_side\\n            return str(box[1])\\n    return \"No valid solution\"\\n\\n\\n\\n\\n# Test cases\\n# solution(\"Input\\n# 2\\n# 0 3\\n# 1 5\\n# \\n# Output\\n# 3\\n# \\n# Input\\n# 1\\n# 0 4\\n# \\n# Output\\n# 1\\n# \\n# Input\\n# 2\\n# 1 10\\n# 2 2\\n# \\n# Output\\n# 3\\n# \\n# -----\\n# \\n# Solution:\\n# \\n# import math\\n# \\n# def solution(stdin: str) -> str:\\n#     n = int(stdin.split()[0])\\n#     boxes = []\\n#     for i in range(n):\\n#         k, a = map(int, stdin.split()[1:])\\n#         boxes.append((k, a))\\n#     boxes.sort(key=lambda x: x[0])\\n#     max_side = 2**math.ceil(math.log2(max(boxes, key=lambda x: x[1])))\\n#     for box in boxes:\\n#         if box[0] == max_side:  # check if the box fits into the max_side\\n#             return str(box[1])\\n#     return \"No valid solution\"\\n\\n# Test cases\\n# print(solution(\"Input\\n# 2\\n# 0 3\\n# 1 5\\n# \\n# Output\\n# 3\\n# \\n# Input\\n# 1\\n# 0 4\\n# \\n# Output\\n# 1\\n# \\n# Input\\n# 2\\n# 1 10\\n# 2 2\\n# \\n# Output\\n# 3\\n# \\n# Solution:\\n# \\n# import math\\n# \\n# def solution(stdin: str) -> str:\\n#     n = int(stdin.split()[0])\\n#     boxes = []\\n#     for i in range(n):\\n#         k, a = map(int, stdin.split()[1:])\\n#         boxes.append((k, a))\\n#     boxes.sort(key=lambda x: x[0])\\n#     max_side = 2**math.ceil(math.log2(max(boxes, key=lambda x: x[1])))\\n#     for box in boxes:\\n#         if box[0] == max_side:  # check if the box fits into the max_side\\n#             return str(box[1])\\n#     return \"No valid solution\"\\n\\n# Test cases\\n# print(solution(\"Input\\n# 2\\n# 0 3\\n# 1 5\\n# \\n# Output\\n# 3\\n# \\n# Input\\n# 1\\n# 0 4\\n# \\n# Output\\n# 1\\n# \\n# Input\\n# 2\\n# 1 10\\n# 2 2\\n# \\n# Output\\n# 3\\n# \\n# Solution:\\n# \\n# import math\\n# \\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 1 10 12 2\\n6 18\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\", \"Pari wants to buy an expensive chocolate from Arya.\\nArya has 3 coins, the value of the i-th coin is c_{i}. The price of the chocolate is 18, so Pari will take a subset of her coins with sum equal to 18 and give it to Arya.\\nAfter giving the coins to Arya, what values does Arya can make with them? She is jealous and she doesn't want Arya to make a lot of values. So she wants to know all the values x, such that Arya will be able to make x using some subset of coins with the sum 18. The values x are 0, 25, and 50. Pari can make the sum 18 using these coins, which are the only two choices.\\nFormally, Pari wants to know the values x such that there exists a subset of coins with the sum 18 such that some subset of this subset has the sum x, i.e. there is exists some way to pay for the chocolate, such that Arya will be able to make the sum x using these coins.\\nIn the given example, Pari can make the sum 18 using the only two coins, which are 50 and 18, which are the only two coins that can make the sum 18.\\nOutput:\\n16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '\nassert solution('Input\\n3 50\\n25 25 50\\n') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(stdin=\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n5\n6 1 10 12 2\n18\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25\n25\n50\n25"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == 3, \"Expected 3 but got {}\".format(solution(6))\nassert solution(2) == 2, \"Expected 2 but got {}\".format(solution(2))"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\\n\"\nassert solution(\"2\") == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == 3\nassert solution(\"2\") == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '3'\nassert solution('1') == '1'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}, expected output: {output}\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example1) == expected1\nassert solution(example2) == expected2\nassert solution(example3) == expected3\nassert solution(example4) == expected4\nassert solution(example5) == expected5"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(\"1\\n5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\\n\"\nassert solution(\"1\\n5 10\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '180'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == 180\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == 21\nassert solution('1\\n5 10\\n') == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == 21\nassert solution(\"1\\n5 10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 10, 20, 30) == 180\nassert solution(3, 3, 2, 4) == 21\nassert solution(1, 5, 10) == 50"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() # check if the solution is correct"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0 10\\n\\n5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\\n3') == '2'\nassert solution('5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\\n3') == '1'\nassert solution('4\\n0 0 0 0\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\\n3') == '4'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n\\n3\\n0 0 0 0 0 0 0 0 0\\n\\n0 1 0 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 1 1 1\\n\\n1 1 1 1 1 1 "
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(5) == 1\nassert solution(4) == 4\nassert solution(9) == 3\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(5) == 1\nassert solution(4) == 4\nassert solution(9) == 3"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', \"The output must be 2\"\n\nassert solution() == '1', \"The output must be 1\"\n\nassert solution() == '4', \"The output must be 4\"\n\nassert solution() == '3', \"The output must be 3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"2\\n0 0\\n1 0\\n0 1\\n0 2\") == \"10\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n1 1\\n2 1\\n0 2\\n1 2\\n2 2\") == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\n\nfrom functools import reduce"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5\nprint(\"Correct solution!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4\\n'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"The solution should be 4.\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"10\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"7\"\nassert solution(\"3\\nB 2\\nW 1\\nB 1\\nW 2\\nB 3\") == \"3\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4\\n'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"5\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"6\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"7\"\nassert solution(\"5\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"8\"\nassert solution(\"6\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"9\"\nassert solution(\"6\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"10\"\nassert solution(\"7\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"11\"\nassert solution(\"7\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"12\"\nassert solution(\"8\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"13\"\nassert solution(\"9\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"14\"\nassert solution(\"10\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"15\"\nassert solution(\"10\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"16\"\nassert solution(\"11\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"17\"\nassert solution(\"12\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"18\"\nassert solution(\"13\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"19\"\nassert solution(\"14\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"20\"\nassert solution(\"15\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"21\"\nassert solution(\"16\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"22\"\nassert solution(\"17\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"23\"\nassert solution(\"18\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"24\"\nassert solution(\"19\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"25\"\nassert solution(\"20\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"26\"\nassert solution(\"21\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"27\"\nassert solution(\"22\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"28\"\nassert solution(\"23\\nB"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n3\\n\") == \"1\"\nassert solution(\"3\\n3\\n4\\n\") == \"2\"\nassert solution(\"6\\n6\\n6\\n\") == \"3\"\nassert solution(\"6\\n6\\n7\\n\") == \"3\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\n\nsolution = input().split()\nb = int(solution[0])\ng = int(solution[1])\nn = int(solution[2])"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"5\\n10\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 4\nassert solution(5) == 4\nassert solution(5) == 4\nassert solution(5) == 4\nassert solution(5) == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n6\\n3\\n') == '4'\nassert solution('5\\n3\\n5\\n') == '4'\nassert solution('5\\n6\\n3\\n') == '4'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\n, but got: \" + solution(input())\n\nprint(solution(input()))"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    4 2\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    4 3\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"32\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 3\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"16\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 3 2\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"576\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2 4 6\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 3 3\n    8\n    1 2 4 8 16 32 64 576\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 2) == 2, \"The first solution is incorrect.\"\nassert solution(8, 1, 2, 4, 8, 16, 32, 64, 576) == 32, \"The second solution is incorrect.\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n1 2 4 8 16 32 64 576') == '32'\nassert solution('2\\n4 2') == '2'\nassert solution('') == ''\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution() == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n2\\n\\nOutput\\n2\\n\\nInput\\n8\\n\\nOutput\\n32\") == \"2\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\") == \"3\\n\"\n\nsolution(\"400 4\\n100 300 450 500\")\nsolution(\"50 2\\n100 25\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\nassert solution(\"600 2\\n100 100\\n\") == \"-1\"\nassert solution(\"1000 2\\n100 500\\n\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor i in range(input_count):\n    assert solution(input(f\"Case {i+1}: \")) == output(f\"Case {i+1}: \")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The output should be '6\\\\n'.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n\", \"Test case 1 failed\"\n\nassert solution(input()) == \"8\\n\", \"Test case 2 failed\"\n\nassert solution(input()) == \"9\\n\", \"Test case 3 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test case 4 failed\"\n\nassert solution(input()) == \"11\\n\", \"Test case 5 failed\"\n\nassert solution(input()) == \"12\\n\", \"Test case 6 failed\"\n\nassert solution(input()) == \"13\\n\", \"Test case 7 failed\"\n\nassert solution(input()) == \"14\\n\", \"Test case 8 failed\"\n\nassert solution(input()) == \"15\\n\", \"Test case 9 failed\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The output is incorrect.\"\nassert solution(\"10 5\") == \"1\\n\", \"The output is incorrect.\"\nassert solution(\"4 10\") == \"1\\n\", \"The output is incorrect.\"\nassert solution(\"5 1\") == \"1\\n\", \"The output is incorrect.\"\nassert solution(\"5 10\") == \"1\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2') == '6\\n', \"Test case failed\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n', \"Expected output: 6\\nGot: \" + solution(input())"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"4\") == \"144010650\\n144010650\\n144010650\"\nassert solution(\"5\") == \"69778858\\n69778858\\n69778858\"\nassert solution(\"6\") == \"186430047\\n186430047\\n186430047\"\nassert solution(\"7\") == \"12689337\\n12689337\\n12689337\"\nassert solution(\"8\") == \"56854831\\n56854831\\n56854831\"\nassert solution(\"9\") == \"23453871\\n23453871\\n23453871\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '499122178'\nprint(\"All test cases pass\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\nassert solution(\"6\") == \"499122178\"\nassert solution(\"7\") == \"499122178\"\nassert solution(\"8\") == \"499122178\"\nassert solution(\"9\") == \"499122178\"\nassert solution(\"10\") == \"499122178\"\nassert solution(\"11\") == \"499122178\"\nassert solution(\"12\") == \"499122178\"\nassert solution(\"13\") == \"499122178\"\nassert solution(\"14\") == \"499122178\"\nassert solution(\"15\") == \"499122178\"\nassert solution(\"16\") == \"499122178\"\nassert solution(\"17\") == \"499122178\"\nassert solution(\"18\") == \"499122178\"\nassert solution(\"19\") == \"499122178\"\nassert solution(\"20\") == \"499122178\"\nassert solution(\"21\") == \"499122178\"\nassert solution(\"22\") == \"499122178\"\nassert solution(\"23\") == \"499122178\"\nassert solution(\"24\") == \"499122178\"\nassert solution(\"25\") == \"499122178\"\nassert solution(\"26\") == \"499122178\"\nassert solution(\"27\") == \"499122178\"\nassert solution(\"28\") == \"499122178\"\nassert solution(\"29\") == \"499122178\"\nassert solution(\"30\") == \"499122178\"\nassert solution(\"31\") == \"499122178\"\nassert solution(\"32\") == \"499122178\"\nassert solution(\"33\") == \"499122178\"\nassert solution(\"34\") == \"499122178\"\nassert solution(\"35\") == \"499122178\"\nassert solution(\"36\") == \"499122178\"\nassert solution(\"37\") == \"499122178\"\nassert solution(\"38\") == \"499122178\"\nassert solution(\"39\") == \"499122178\"\nassert solution(\"40\") == \"499122178\"\nassert solution(\"41\") == \"499122178\"\nassert solution(\"42\") == \"499122178\"\nassert solution(\"43\") == \"499122178\"\nassert solution(\"44\") == \"499122178\"\nassert solution(\"45\") == \"499122178\"\nassert solution(\"46\") == \"499122178\"\nassert solution(\"47\") == \"499122178\"\nassert solution(\"48\") == \"499122178\"\nassert solution(\"49\") == \"499122178\"\nassert solution(\"50\") == \"499122178\"\nassert solution(\"51\") == \"499122178\"\nassert solution(\"52\") == \"499122178\"\nassert solution(\"53\") == \"499122178\"\nassert solution(\"54\") == \"499122178\"\nassert solution(\"55\") =="
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\") == \"499122178\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"499122178\\n499122178\\n499122178\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"499122178\\n499122178\\n499122178\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"5\") == \"755137310\"\nassert solution(\"10\") == \"1123545678\"\nassert solution(\"15\") == \"2006083355\"\nassert solution(\"20\") == \"2791332420\"\nassert solution(\"25\") == \"3676581485\"\nassert solution(\"30\") == \"4561830550\"\nassert solution(\"35\") == \"5447079615\"\nassert solution(\"40\") == \"6332328680\"\nassert solution(\"45\") == \"7217577745\"\nassert solution(\"50\") == \"8102826810\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '499122178'\nassert solution(input()) == '499122178'\nassert solution(input()) == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"4\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"5\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"6\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"7\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"8\") == \"499122178\\n499122178\\n499122178\\n\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6, \"The solution should be 6\"\nassert solution(3) == 6669, \"The solution should be 6669\"\nassert solution(10) == -1, \"The solution should be -1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '6669\\n'\nassert solution(stdin) == '-1\\n'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6669\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '6', \"Baron's claim is incorrect.\"\nassert solution('3') == '6669', \"Baron's claim is incorrect.\"\nassert solution('10') == '-1', \"Baron's claim is incorrect.\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution('2\\n') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('bike.in', 'r')) == '''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3'''"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution('2\\n') == '-1'\nprint('All test cases pass.')"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution(2) == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution('2') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Input: '{input_str}', Output: '{output_str}'\"\nfor input_str, output_str in [(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\", \"Yes\"), (\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\", \"No\")]:\n    assert solution(input_str) == output_str, f\"Test failed. Input: '{input_str}', Output: '{output_str}'\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Output does not match expected output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"24500\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"24500\"\nassert solution == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\"\"\"\n) == \"24500\\n\"\n\nassert solution(\n    \"\"\"\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n\"\"\"\n) == \"-1\\n\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 24500, \"Expected 24500, but got {}\".format(solution())"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"24500\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 0.828427125\nassert solution(input()) == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\\n\") == 0.828427125, \"Expected 0.828427125, got {}.\".format(solution(\"1 1 45\\n\"))\nassert solution(\"6 4 30\\n\") == 19.668384925, \"Expected 19.668384925, got {}.\".format(solution(\"6 4 30\\n\"))"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == 'Output\\n3000\\n'\n\nassert solution('Input\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == 'Output\\n992\\n'\n\nassert solution('Input\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == 'Output\\n1\\n'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3000\\n', 'Output should be 3000'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 992, \"Your solution is incorrect!\"\nprint(\"Test Case 1 Passed!\")"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n3000\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n992\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n1\") == \"Output\\n3000\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n992\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n1\\n\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\", \"First Test Case Failed\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\", \"Second Test Case Failed\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\", \"Third Test Case Failed\"\nassert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\", \"First Test Case Failed\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n3000\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n992\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n1\") == \"Output\\n3000\\n\\nInput\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n992\\n\\nInput\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\nOutput\\n1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_cases/sample_input.txt\").read()) == \"3000\"\nassert solution(open(\"test_cases/sample_input2.txt\").read()) == \"992\"\nassert solution(open(\"test_cases/sample_input3.txt\").read()) == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n1\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6\\n'\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2\\n'\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62\\n'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62\nassert solution(\"10 4\\n4 2 1 1\\n1 2 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\") == 10"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\")) == 6\nassert solution(solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\")) == 2\nassert solution(solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\")) == 62\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62\nprint(\"All tests passed!\")"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\", \"Expected output is '6\\n', but got '{}'\\n\".format(solution())"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('abab') == 'YES'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"YES\"\nassert solution(\"bbaa\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabb\") == \"NO\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aaba\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\n\nassert solution(\"aaba\") == \"YES\"\nassert solution(\"abaab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"NO\", \"Test case 1 failed\"\nassert solution(1) == \"YES\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\n1\\n0\\n1\"\nassert solution(stdin) == \"YES\\n2\\n1\\n2\"\nassert solution(stdin) == \"YES\\n0\\n2\\n1\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\n\" + str(n * (n - 1) // 2) + '\\n'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\" or solution(input()) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\nab\nac\ncd\n1 2\n\"\"\") == \"Yes\\na?\"\n\nassert solution(\"\"\"\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\") == \"Yes\\nes?\"\n\nassert solution(\"\"\"\n4 4\na\nb\nc\ndd\n1 2 3 4\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\") == \"Yes\\n???\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abac') == 'Yes'  # Correct solution\nassert solution('abacde') == 'No'  # Correct solution\nassert solution('test') == 'Yes'  # Correct solution\nassert solution('test.txt') == 'Yes'  # Correct solution\nassert solution('abc.txt') == 'Yes'  # Correct solution\nassert solution('ab.txt') == 'No'  # Correct solution\nassert solution('a.b.c.txt') == 'No'  # Correct solution\nassert solution('abc.def') == 'No'  # Correct solution\nassert solution('abacdef') == 'No'  # Correct solution\nassert solution('a.b.c.d.e.f.txt') == 'Yes'  # Correct solution"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\\na?\\n\"\nassert solution() == \"Yes\\nb?\\n\"\nassert solution() == \"Yes\\nc?\\n\"\nassert solution() == \"Yes\\nd?\\n\"\nassert solution() == \"No\\n\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"test\") == \"Yes\\na?t\"\nassert solution(\"teszt\") == \"Yes\\na?t\"\nassert solution(\"test.est\") == \"Yes\\na?t\"\nassert solution(\"tes.tes\") == \"Yes\\na?t\"\nassert solution(\"svn\") == \"Yes\\n.svn\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\"....\") == \"Yes\\n....\"\nassert solution(\"...\") == \"Yes\\n....\"\nassert solution(\"..\") == \"Yes\\n.....\"\nassert solution(\".??\") == \"Yes\\n.???def solution(stdin: str) -> str:pass\"\nassert solution(\"def solution(stdin: str) -> str:pass\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"dd\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 'Yes\\na?'\nassert solution(5, 3) == 'Yes\\n?es?'\nassert solution(4, 4) == 'No'\nassert solution(6, 3) == 'Yes\\n.???def solution(stdin: str) -> str:pass'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\", f\"Expected output 'Yes', got {solution(stdin)}\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\\na?\\n\"\nassert solution() == \"Yes\\n?es?\\n\"\nassert solution() == \"No\\n\"\nassert solution() == \"Yes\\n.???\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\\na?\"\nassert solution(stdin) == \"No\\n\"\nassert solution(stdin) == \"Yes\\ntes?\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2\") == \"1\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 1 1 1 1\") == \"2\\n\"\nassert solution(\"3\\n2 3 1 2 1 4 3\") == \"3\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"5 1 2 3 2 1\") == \"2\"\nassert solution(\"1 5 3 4 2 6 1\") == \"2\"\nassert solution(\"1 5 3 4 2 6 1 4 1 2 5\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 3\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 1 1 1 2 1\") == \"2\"\nassert solution(\"1 2 1 2 1 1 1\") == \"2\"\nassert solution(\"1 2 1 2 1 1 2\") == \"2\"\nassert solution(\"1 2 1 2 1 1 3\") == \"3\"\nassert solution(\"1 2 1 2 1 2 1\") == \"2\"\nassert solution(\"1 2 1 2 1 2 2\") == \"2\"\nassert solution(\"1 2 1 2 1 2 3\") == \"3\"\nassert solution(\"1 2 1 2 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 1 2\") == \"2\"\nassert solution(\"1 2 1 2 2 1 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 2\") == \"2\"\nassert solution(\"1 2 1 2 2 2 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1 1 1 1 2 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 1 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 1 1 2\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 1 1 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 1 2\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 1 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 2\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 1 1 1 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 2 1 1 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 2 1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 2 1 2 1 2\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 2 1 2 1 3\") == \"3\"\nassert solution(\"1 2 1 2 2 2 1 2 1 2 2 1 2 1 2 2 1\") == \"2"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"Test case 1 failed\"\nassert solution() == \"3\\n\", \"Test case 2 failed\"\nassert solution() == \"3\\n\", \"Test case 3 failed\"\n\nN = int(input())\nx = list(map(int, input().split()))"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'  # This is the correct output."
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n1 5\\n\") == \"3\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n\") == \"3\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n\") == \"2\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n\") == \"3\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n\") == \"2\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n\") == \"3\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n\") == \"2\\n\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n\") == \"3\\n\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n\") == \"2\\n\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"3\\n\"\nassert solution(\"16\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n\") == \"2\\n\"\nassert solution(\"17\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n\") == \"3\\n\"\nassert solution(\"18\\n1 2\\n2 3\\n3 4\\n1 5\\n3 6\\n1 7\\n3 8\\n1 9\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 "
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n', \"Incorrect output.\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5') == 2\nassert solution('4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n') == 1"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3 \\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\"\"\") == \"2\\n2 3\\n\"\n\nassert solution(\"\"\"4 4\n1 2\n1 3\n1 4\n3 4\n\"\"\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 6\n    1 2\n    1 3\n    2 3\n    2 5\n    3 4\n    4 5\n    \"\"\") == \"2\\n2 3 \\n\"\n\nassert solution(\"\"\"\n    4 4\n    1 2\n    1 3\n    1 4\n    3 4\n    \"\"\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n2 3 \\n\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index + 1} failed: {solution(input())} should be {expected_output}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes\\n', \"Test 1\"\nassert solution('3\\n100 150 250') == 'No\\n', \"Test 2\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\\n\"\nassert solution(\"2\\n-1\\n-1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2\n50 50 50''') == '150'\nassert solution('''2\n-1 -100 -1''') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\", \"Test 1: Correct output.\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\", \"Test 2: Correct output.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\"\nassert solution(\"2\\n-1\\n-100\\n-1\") == \"100\"\n\nsolution(stdin.read())"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '150', 'Your code is not correct. Please check the example inputs and outputs.'\n\nYaroslav has an array, consisting of (2\u00b7n - 1) integers. In a single operation, Yaroslav can change the sign of exactly n elements in the array. In other words, in one operation Yaroslav can select exactly n array elements, and multiply each of them by -1.\n\nThe maximum sum of array elements can be obtained if it is allowed to perform any number of described operations.\n\nHelp Yaroslav.\n\nInput\n2\n50 50 50\n\nOutput\n150\n\nInput\n2\n-1 -100 -1\n\nOutput\n100\n\nHere is the Python code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"The correct output is: 150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"The correct output is: 100\\n\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\"\n\nsolution(\"2\\n50 50 50\") # pass\nsolution(\"2\\n-1 -100 -1\") # pass"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\naab a\\nccc c\\ncac a\\nee c\\nfff d\\n\") == 4\nassert solution(\"2 8\\nafe e\\nddd d\\nccf f\\nbbc b\\ndab b\\neba a\\nbbb b\\nfff c\\n\") == 1\nassert solution(\"6 2\\nbba a\\nbaa a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 5\nab a\ncc c\nca a\nee c\nff d\"\"\") == 4\n\nassert solution(\"\"\"2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\"\"\") == 1\n\nassert solution(\"\"\"6 2\nbb a\nba a\n\"\"\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"af e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5\nab a\ncc c\nca a\nee c\nff d\n\"\"\") == 4\n\nassert solution(\"\"\"\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n\"\"\") == 1\n\nassert solution(\"\"\"\n6 2\nbb a\nba a\n\"\"\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test case failed: \\nInput: {input()} \\nOutput: {output()}\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nc a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"10\\n\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '10\\n'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n1 2\\n2 2\\n1 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n1 2\\n2 2\\n1 1\") == \"-1\\n\"\nassert solution(\"4 1\\n1 2\\n1 1\\n2 2\\n2 2\\n1 1\") == \"1.250000000000\\n\"\n\nassert solution(\"\") == \"1.000000000000\\n\"\nassert solution(\"3 1\\n1 3\\n4 1\\n1 2\\n2 2\\n1 1\") == \"1.000000000000\\n-1\\n1.250000000000\\n\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1) == \"1.000000000000\"\nassert solution(1, 3) == \"-1\"\nassert solution(4, 1) == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == 1.000000000000\nassert solution(\"4 1\") == 1.250000000000\nassert solution(\"1 3 4 1\") == -1"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\"\nassert solution(\"4 1\\n\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Input and Output do not match\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 10.0000000000"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"Test failed\"\nfor i in range(input):\n    n, m, a_1, a_2, a_3, a_4, b_1, b_2, b_3, b_4 = map(int, input().split())\n    assert 2 <= n <= 1000\n    assert 1 <= m <= 1000\n    assert n - 2 == len(a_1 + a_2 + a_3 + a_4)\n    assert n - 2 == len(b_1 + b_2 + b_3 + b_4)\n    m1 = sum(a_1) + sum(b_1)\n    m2 = sum(a_2) + sum(b_2)\n    m3 = sum(a_3) + sum(b_3)\n    m4 = sum(a_4) + sum(b_4)\n    total_mass = m1 + m2 + m3 + m4\n    min_mass = min(total_mass, m1)\n    print(min_mass)"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 85.48"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\\n3\\n1\\n1 4 1\\n2 5 3\\n\\n6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\\n6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Solution:\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(12) == 10\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 1.5\nassert solution(4) == 8\nassert solution(5) == 14\nassert solution(6) == 85.48"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10.0000000000\"\nassert solution() == \"-1\"\nassert solution() == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12\\n11 8\\n7 5') == '10.0000000000'\nassert solution('3\\n1\\n1 4 1\\n2 5 3') == '-1'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3') == '85.4800000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"For input '{stdin}', expected output '{expected_output}', but got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 0\nassert solution(10) == 4"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\" # Expected output: 0\nassert solution(input()) == \"4\\n\" # Expected output: 4\nassert solution(input()) == \"0\\n\" # Expected output: 0"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\ninput_data = \"\"\"\n2\n\"\"\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n\\nOutput\\n0\\n\\nInput\\n10\\n\\nOutput\\n4\") == \"0\\n4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '0'\nassert solution(3) == '1'\nassert solution(4) == '1'\nassert solution(5) == '2'\nassert solution(6) == '2'\nassert solution(7) == '3'\nassert solution(8) == '3'\nassert solution(9) == '4'\nassert solution(10) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\\n\"\nassert solution(\"10\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\"\nassert solution(\"Input\\n5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"Input\\n10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 111111111111\n''') == 'Wh.\\n'\n\nassert solution('''\n5\n0 69\n1 194\n1 139\n0 47\n1 66\n''') == 'abdef\\n'\n\nassert solution('''\n10\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n''') == 'Areyoubusy\\n'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Wh.', 'The output should be \"Wh.\"'\n\nassert solution() == 'abdef', 'The output should be \"abdef\"'\n\nassert solution() == 'Areyoubusy', 'The output should be \"Areyoubusy\"'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('What are you doing at the end of the world? Are you busy? Will you save us?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\"? Are you busy? Will you send \"What are you doing at the end of the world? Are you busy? Will you save us?\"?') == 'Wh.'\nassert solution('What are you doing while sending \"What are you doing at the end of the world? Are you"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"Wh.\\n\", \"Test failed for input 3\"\nassert solution(5) == \"abdef\\n\", \"Test failed for input 5\"\nassert solution(10) == \"Areyoubusy\\n\", \"Test failed for input 10\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\nabcdef\\nabcdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\nAreyoubusy\\nAreyoubusy\\nAreyoubusy\\nAreyoubusy\\nAreyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'3\\n1 1\\n1 2\\n1 111111111111') == 'Wh.'\nassert solution(r'5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef'\nassert solution(r'10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\", \"Wrong answer. Expected 'Possible', got '{}' instead.\".format(solution(\"? +? -? +? = 42\"))\n\nassert solution(\"? -? = 1\") == \"Impossible\", \"Wrong answer. Expected 'Impossible', got '{}' instead.\".format(solution(\"? -? = 1\"))\n\nassert solution(\"? = 1000000\") == \"Possible\", \"Wrong answer. Expected 'Possible', got '{}' instead.\".format(solution(\"? = 1000000\"))"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\n\nassert solution('? -? = 1') == 'Impossible'\n\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5\\n'\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case 1\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case 2\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case 3\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case 4\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test case 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\n\") == \"7 4 5\\n\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na120012000012101200000210000220000102000210012200021200210021200020002000121020101210010200020001210010100201000201000212000210002120010200120002000101001002000200012101200000020100020100021200021000212001020012000200010100100200020001210120000002010002010002120002100021200102001200020001010010020002000121012000000201000201000212000210002120010200120002000101001002000200012101200000020100020100021200021000212001020012000200010100100200020001210120000002010002010002120002100021200102001200020001010010020002000121012000000201000201000212000210002120010200120002000101001002000200012101200000020100020100021200021000212001020012000200010100100200020001210120000002010002010002120002100021200102001200020001010010020002000121012000000201000201000212000210002120010200120002000101001002000200012101200000020100020100021200021000212001020012000200010100100200020001210120000002010002010002120002100021200102001200020001010010020002000121012000000201000201000212000210002120010200120002000101001002000200012101200000020100"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\", \"Testcase not passed\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na 1 2 0 2\\na\\na\\na\\na\") == \"7 4 5\"\nprint(\"Correct\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5\\n'\nassert solution('5\\n1 0 2 2\\n0\\n0\\n0\\n') == '2 1 1\\n'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test failed\"\nassert solution(\"10\\n0 1 2 0 1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test failed\"\nassert solution(\"10\\n0 1 2 0 1 2 0 2\\n0\\n0\\n1\\n\") == \"11 8 9\", \"Test failed\"\nassert solution(\"10\\n0 1 2 0 1 2 0 2\\n0\\n0\\n1\\n\") == \"11 8 9\", \"Test failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\nassert solution(\"4\\n1 2 0 2\\n1\\n2\\n0\\n\") == \"7 4 5\\n\"\nassert solution(\"4\\n1 2 0 2\\n1\\n2\\n0\\n\") == \"7 4 5\\n\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 'aabddc') == 'Yes'\nassert solution(3, 'abc') == 'No'\nassert solution(3, 'jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\naabddc') == 'Yes\\n'\nassert solution('3\\nabc') == 'No\\n'\nassert solution('3\\njjj') == 'Yes\\n'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\abc\") == \"No\"\nassert solution(\"3\\jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabddc') == 'Yes', \"Output should be 'Yes'.\"\nassert solution('3abc') == 'No', \"Output should be 'No'.\"\nassert solution('3jjj') == 'Yes', \"Output should be 'Yes'.\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == 54\nassert solution(\"7 4\") == 1728\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == 54\nassert solution(\"7 4\") == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\\n\"\nassert solution(\"7 4\") == \"1728\\n\"\n\nimport math"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1728, \"The output should be 1728.\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 4', \"Expected output: '2 4', but got '{}'\".format(solution())"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"6 5 6 5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 7\n    2 4\n    5 1\n    2 3\n    3 4\n    4 1\n    5 3\n    3 5\n    \"\"\").strip() == \"10 9 10 10 9\"\n\nassert solution(\"\"\"\n    2 3\n    1 2\n    1 2\n    1 2\n    \"\"\").strip() == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''2 3\n1 2\n1 2\n1 2\n''') == '5 6'\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Test cases failed for solution. Output: {solution}, Expected output: {expected_output}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''\n10 9 \n\nInput\n2 3\n1 2\n1 2\n1 2\n\nOutput\n5 6 \n\nInput\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n\nOutput\n10 9 10 10 9 \n\nInput\n2 3\n1 2\n1 2\n1 2\n\nOutput\n5 6 \n'''"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n''') == '2'\n\nassert solution(r'''\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n''') == '2'\n\nassert solution(r'''\n1 1\n0 0\n2\n1 0 0\n0 1 0\n1 0 1\n''') == '1'\n\nassert solution(r'''\n1 1\n0 0\n3\n1 0 0\n0 1 0\n1 0 -2\n''') == '2'\n\nassert solution(r'''\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n''') == '2'\n\nassert solution(r'''\n1 1\n1 1\n2\n1 0 0\n0 1 0\n1 1 1\n''') == '1'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n4\\n-2 -1\\n-1 1\\n1 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n5\\n-1 1\\n-1 -1\\n1\\n') == '2'\nassert solution('1 1\\n-1 -1\\n6\\n-1 -1\\n1\\n1\\n') == '3'\nassert solution('1 1\\n-1 -1\\n7\\n-1 -1\\n-1\\n1\\n1\\n') == '4'\nassert solution('1 1\\n-1 -1\\n8\\n1\\n1\\n-1\\n-1\\n') == '4'\nassert solution('1 1\\n-1 -1\\n9\\n1\\n1\\n-1\\n-1\\n') == '5'\nassert solution('1 1\\n-1 -1\\n10\\n1\\n1\\n-1\\n-1\\n') == '6'\nassert solution('1 1\\n-1 -1\\n11\\n-1\\n-1\\n-1\\n') == '7'\nassert solution('1 1\\n-1 -1\\n12\\n1\\n1\\n-1\\n-1\\n') == '8'\nassert solution('1 1\\n-1 -1\\n13\\n1\\n1\\n-1\\n-1\\n') == '9'\nassert solution('1 1\\n-1 -1\\n14\\n1\\n1\\n-1\\n-1\\n') == '10'\nassert solution('1 1\\n-1 -1\\n15\\n1\\n1\\n-1\\n-1\\n') == '11'\nassert solution('1 1\\n-1 -1\\n16\\n1\\n1\\n-1\\n-1\\n') == '12'\nassert solution('1 1\\n-1 -1\\n17\\n1\\n1\\n-1\\n-1\\n') == '13'\nassert solution('1 1\\n-1 -1\\n18\\n1\\n1\\n-1\\n-1\\n') == '14'\nassert solution('1 1\\n-1 -1\\n19\\n1\\n1\\n-1\\n-1\\n') == '15'\nassert solution('1 1\\n-1 -1\\n20\\n1\\n1\\n-1\\n-1\\n') == '16'\nassert solution('1 1\\n-1 -1\\n21\\n1\\n1\\n-1\\n-1\\n') == '17'\nassert solution('1 1\\n-1 -1\\n22\\n1\\n1\\n-1\\n-1\\n') == '18'\nassert solution('1 1\\n-1 -1\\n23\\n1\\n1\\n-1\\n-1\\n') == '19'\nassert solution('1 1\\n-1 -1\\n24\\n1\\n1\\n-1\\n-1\\n') == '20'\nassert solution('1 1\\n-1 -1\\n25\\n1\\n1\\n-1\\n-1\\n') == '21'\nassert solution('1 1\\n-1 -1\\n26\\n1\\n1\\n-1\\n-1\\n') == '22'\nassert solution('1 1\\n-1 -1\\n27\\n1\\n1\\n-1\\n-1\\n') == '23'\nassert solution('1 1\\n-1 -1\\n28"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"2 3\\n-2 -2\\n1\\n0 1\\n1 0\\n\") == \"0\\n\"\nassert solution(\"1 1\\n-1 -1\\n4\\n1 0 0\\n0 1 0\\n1 1 0\\n\") == \"0\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Please provide valid input\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\\n\") == \"2\"\n\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2 # Replace this with the solution you want to test\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin\\n'\nassert solution('1 2\\n3') == 'Nicky\\n'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\"\nassert solution(\"1 2\\n3\\n4\\n\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin\\n'\nassert solution('1 2\\n3\\n') == 'Nicky\\n'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\"\nassert solution(\"10 100\\n1 2 3 4 5\\n6 7 8 9 10\\n\") == \"Kevin\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Kevin\" or solution(input()) == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == '1 2 3'\nassert solution(open('input.txt', 'r')) == '1 2 3'\nassert solution(open('input.txt', 'r')) == '1 2 3'\nassert solution(open('input.txt', 'r')) == '-1'\nassert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n2 2 2\\n2\\n2 1\\n') == '3\\n1 2 3\\n2\\n1\\n'\nassert solution('3\\n2 2 2\\n2 1\\n') == '1\\n1 1 1\\n2\\n'\nassert solution('2\\n2 1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '1 2 3'\nassert solution(input()) == '-1'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n2 2 2') == '1\\n1 1 1\\n2'\nassert solution('2\\n2 1') == '-1\\ndef solution(stdin: str) -> str: pass'\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n1 2 3\\n1 2 3\\n2\\n2 1\\n-1\\n'\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3, \"Output: 3\\nInput: 3\\nOutput: 3\\nInput: 3\\nOutput: 3\"\nassert solution(2) == 1, \"Output: 1\\nInput: 3\\nOutput: 1\\nInput: 2\\nOutput: 1\"\nassert solution(2) == 2, \"Output: 1\\nInput: 3\\nOutput: 1\\nInput: 2\\nOutput: 1\"\nassert solution(2) == -1, \"Output: -1\\nInput: 3\\nOutput: -1\\nInput: 2\\nOutput: -1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11') == 6\nassert solution('01') == 2\nassert solution('1') == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(10) == 6\nassert solution(4) == 1\n\nfrom functools import reduce"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '6', \"The correct output is not '6'.\"\nassert solution('01') == '2', \"The correct output is not '2'.\"\nassert solution('1') == '1', \"The correct output is not '1'.\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15\\n1 1 2\\n3\\n5 7\") == \"1\\n3\\n4\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(15) == \"1\"\nassert solution(3) == \"3\"\nassert solution(2) == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\"\n\nimport bisect\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\"\nassert solution(\"2\\n5 7\\n\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n1\\n15\\n') == '1\\n'\nassert solution('Input\\n3\\n1 1 2\\n') == '3\\n'\nassert solution('Input\\n2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3\n    1 0 2\n    2 0 1\n    0 1\n    '''\n) == 'YES'\n\nassert solution(\n    '''\n    2\n    1 0\n    0 1\n    '''\n) == 'YES'\n\nassert solution(\n    '''\n    4\n    1 2 3 0\n    0 3 2 1\n    0 3 1 2\n    0 1 2 3\n    '''\n) == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('1 0\\n0 1\\n') == 'YES'\nassert solution('1\\n0\\n1\\n') == 'NO'\nassert solution('1 2 3 0\\n0 3 2 1\\n') == 'NO'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9000', \"Expected output 9000, got: \" + solution(stdin)"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 9000\nassert solution() == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '9000'\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9000\\n\", \"Expected: 9000\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test 1 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n') == '6\\n'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == '1\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '1\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\"\nassert solution(\"2 3\\n4 5\\n6 7\\n8 9\") == \"2\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\", \"The code should return 6\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n\") == \"Output\\n6\\n\"\nassert solution(\"Input\\n8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n\") == \"Output\\n1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"5\\n2 2 3 4 6\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n5\\n2 2 3 4 6\\n\") == \"5\\n\\n\"\nassert solution(\"Input\\n4\\n2 4 6 8\\n\") == \"-1\\n\\n\"\nassert solution(\"Input\\n3\\n2 6 9\\n\") == \"4\\n\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"5\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"5\\n2 2 3 4 6\\n5\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"5\\n2 2 3 4 6\\n2 2 3 4 6\\n2 2 3 4 6\\n2 2 3 4 6\\n2 2 3 4 6\\n\") == \"-1\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Error: {output()} is incorrect\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacabaca\") == \"aca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"aca\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\\n\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == ['aca', 'ba', 'ca']\nassert solution('abaca') == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abacabaca') == ['aca', 'ba', 'ca']\nassert solution('abaca') == []\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0\n\nfrom typing import List\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == ['aca', 'ba', 'ca']\nassert solution('abaca') == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca', \"The solution is incorrect.\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5\\n1#2#3') == 2\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3\\n1#2#3\\n1#2#3\\n1#2#3') == -1\nassert solution('1 1\\n#2#3\\n#2#3\\n#2#3\\n#2#3') == 0\nassert solution('2 2\\n#3#3\\n#3#3\\n#3#3\\n#3#3') == 2"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == \"2\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5\\n1#2#3') == '2'\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('1 5\\n1#2#3') == '-1'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input', 'Output') == ['Expected output']"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1\n\nfrom typing import List"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8)())())()\") == 6\nassert solution(\"3)()\") == -1\nassert solution(\"2)()()()())\") == 6"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n(()((())(()()\\n') == 6\nassert solution('3\\n(()\\n') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n))((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"()()\", \"Case 1\"\nassert solution(\"()())\") == \"()()()\", \"Case 2\"\nassert solution(\"(()(()))\") == \"()()\", \"Case 3\"\nassert solution(\"())(\") == \"-1\", \"Case 4\"\nassert solution(\"(()\") == \"-1\", \"Case 5\"\nassert solution(\"()())())\") == \"()()()\", \"Case 6\"\nassert solution(\"(()(()))\") == \"()()\", \"Case 7\"\nassert solution(\"()())()\") == \"-1\", \"Case 8\"\nassert solution(\"(()()())\") == \"-1\", \"Case 9\"\nassert solution(\"(())())\") == \"-1\", \"Case 10\"\nassert solution(\"(())()())\") == \"-1\", \"Case 11\"\nassert solution(\"(())()())(())\") == \"-1\", \"Case 12\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6', \"The given sequence is not correct.\"\n\nassert solution(stdin) == '6', \"The given sequence is not correct.\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n8\n))((())(\n''') == 6\nassert solution('''\n3\n(()\n''') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n(()((())()\\n\") == 6, \"Example 1\")\nassert solution(\"3\\n(()\\n\") == -1, \"Example 2\")"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 2\\n3 1\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, \"The output of the function is incorrect\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"1\n3 \n1\"\"\"\n\nassert solution(stdin) == \"\"\"4\n1 2 3 4 \n3\"\"\"\n\nassert solution(stdin) == \"\"\"1\n3 \n1\"\"\"\n\nassert solution(stdin) == \"\"\"4\n1 2 3 4 \n3\"\"\"\n\nassert solution(stdin) == \"\"\"1\n3 \n1\"\"\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"1\\n\" + \"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\"\nassert solution(stdin=input()) == \"4\\n1 2 3 4 \\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed. Input: {input_data}, Output: {output_data}\" for input_data, output_data in [\n    ([3, 3, 5], [1, 3]),\n    ([4, 5, 4], [2, 1, 0, 3]),\n    ([2, 1, 0, 3], [4]),\n    ([4, 3], [1, 2, 3, 4]),\n    ([2, 1, 0, 3, 1], [2]),\n    ([2, 1, 0, 3, 4, 2], [3, 4]),\n    ([2, 1, 0, 3, 4, 1, 4], [1, 3]),\n    ([2, 1, 0, 3, 4, 1, 3], [2]),\n    ([2, 1, 0, 3, 4, 1, 3], [1, 2]),\n]"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1\\n3 1\\n2' # expected output\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '8', 'Your solution is not correct.'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"8\" # correct answer\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 8, \"Expected output: 8, but got: \" + str(solution)"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n') == '8'\nassert solution('1000 1000\\n') == '1000000'\nassert solution('5 5\\n') == '7'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'2 3\\n') == '8\\n'\nassert solution(b'1 2\\n') == '10\\n'\nassert solution(b'5 4\\n') == '18\\n'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 8, \"The expected output is 8, but the actual output is: \" + str(solution())"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == '8'\nassert solution('1 1') == '1'\nassert solution('3 2') == '0'\nassert solution('1 2') == '1'\nassert solution('3 3') == '3'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_number} failed\"\n\ntest_case_number = 1\ninput_array = [1, 2, 1, 2, 2]\noutput_array = [5]\nexpected_output = output_array[0]\nsolution(input_array) == expected_output, f\"Test {test_case_number} failed\"\n\ntest_case_number += 1\ninput_array = [1, 2, 1, 2, 2]\noutput_array = [4]\nexpected_output = output_array[0]\nsolution(input_array) == expected_output, f\"Test {test_case_number} failed\"\n\ntest_case_number += 1\ninput_array = [1, 2, 1, 1, 1]\noutput_array = [100]\nexpected_output = output_array[0]\nsolution(input_array) == expected_output, f\"Test {test_case_number} failed\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\", \"Incorrect output.\"\nprint(\"Correct output.\")"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"The solution does not match the expected output. Expected: {expected_solution}, Actual: {solution}\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 2\n1 2\n2 3\n\"\"\") == \"5\"\n\nassert solution(\"\"\"100 3\n1 2\n2 1\n3 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"1 2\n1 1\n2 100\n\"\"\") == \"100\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect result: 6\"\nassert solution(\"usaco\") == 1, \"Incorrect result: 1\"\nassert solution(\"lol\") == 2, \"Incorrect result: 2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == 6, \"Test failed.\"\nassert solution(\"usaco\") == 1, \"Test failed.\"\nassert solution(\"lol\") == 2, \"Test failed.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Solution should return 6\"\nassert solution(\"usaco\") == \"1\", \"Solution should return 1\"\nassert solution(\"lol\") == \"2\", \"Solution should return 2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(4) == 2"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1\\n3 4\\n\") == \"1 2\"\nassert solution(\"4\\n3 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 1, 4, 2, 5, 3, 6]) == 1, \"Invalid output\"\nassert solution([1, 2, 3, 4, 5]) == [1, 2], \"Invalid output\"\nassert solution([1, 1, 1]) == [1, 1], \"Invalid output\"\nassert solution([1, 2, 1]) == [1, 2], \"Invalid output\"\nassert solution([1, 2, 1, 1]) == [1, 2], \"Invalid output\"\nassert solution([1, 1, 1, 2, 2, 2, 1]) == [1, 2], \"Invalid output\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\") == \"1 1\"\nassert solution(\"2\\n1 1\\n2 2\\n2 2\") == \"1 1\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\") == \"-1\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"3\\n1\\n2\") == \"-1\\n1 2\\n2 1\"\nassert solution(\"2\\n1\\n2\\n1\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"4\\n1\\n2\\n1\\n3\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"5\\n1\\n2\\n1\\n3\\n4\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\\n2 3\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\\n2 3\\n1 2\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\\n2 3\\n1 2\\n1 2\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n4 5\\n2 3\\n1 2\\n1 2\\n3 4\\n2 3\\n1 2\\n1 2\\n1 2\\n1 2\") == \"-1\\n1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 2\\n2 1\\n1 2\\n'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. The output should be '{output}', but you provided '{solution(input())}'.\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n1 1\\n2 2\\n3 3\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"1 4\\n2 5\\n3 6\\n1 1\\n2 2\\n3 3\\n4 1\\n5 2\\n6 3\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'\nassert solution(input()) == '1 2\\n2 1\\n1 2\\n'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2\\n'\nassert solution('2\\n1 4\\n2 5\\n3 6') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 5\\n3 6') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 5\\n3 6') == '-1'\nassert solution('3\\n1 4\\n2 4\\n3 6') == '1 1\\n1 1\\n'\nassert solution('2\\n1 4\\n2 4\\n3 6') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 4\\n3 6') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 4\\n3 6') == '-1'\nassert solution('3\\n1 4\\n2 4\\n3 5') == '1 2\\n1 1\\n'\nassert solution('2\\n1 4\\n2 4\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 4\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 4\\n3 5') == '-1'\nassert solution('3\\n1 4\\n2 3\\n3 5') == '1 1\\n1 2\\n'\nassert solution('2\\n1 4\\n2 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 3\\n3 5') == '-1'\nassert solution('3\\n1 4\\n2 2\\n3 5') == '1 1\\n1 2\\n'\nassert solution('2\\n1 4\\n2 2\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 2\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 2\\n3 5') == '-1'\nassert solution('3\\n1 4\\n2 1\\n3 5') == '1 1\\n1 2\\n'\nassert solution('2\\n1 4\\n2 1\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n2 1\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n2 1\\n3 5') == '-1'\nassert solution('3\\n1 4\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('2\\n1 4\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 4\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 4\\n1 3\\n3 5') == '-1'\nassert solution('3\\n1 3\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('2\\n1 3\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('1\\n1 3\\n1 3\\n3 5') == '1 1\\n1 1\\n'\nassert solution('4\\n1 3\\n1 3\\n3 5') == '-1'\nassert solution('3\\"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '-1' # Solution not possible\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '1 2\\n2 1\\n1 2' # Solution not possible\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '1 2\\n2 1\\n1 2' # Solution not possible\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '1 2\\n2 1\\n1 2' # Solution not possible\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '1 2\\n2 1\\n1 2' # Solution not possible\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '1 2\\n2 1\\n1 2' # Solution not possible"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(8) == \"4\"\nassert solution(5) == \"1\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(2) == \"2\"\nassert solution(1) == \"1\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2 1\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(8) == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2 1\", \"The expected output is 2 1\"\nassert solution(4) == \"4\", \"The expected output is 4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '2\\n1\\n'\nassert solution('8\\n') == '4\\n'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n', \"Test case 1 should output 1\"\nassert solution('2\\n') == '2\\n', \"Test case 2 should output 2\"\nassert solution('3\\n') == '2 1\\n', \"Test case 3 should output 2 1\"\nassert solution('8\\n') == '4\\n', \"Test case 4 should output 4\"\nassert solution('5\\n') == '1\\n', \"Test case 5 should output 1\"\nassert solution('6\\n') == '2\\n', \"Test case 6 should output 2\"\nassert solution('7\\n') == '2 1\\n', \"Test case 7 should output 2 1\"\nassert solution('8\\n') == '4\\n', \"Test case 8 should output 4\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"abc\", \"Testcase 1\"\nassert solution(\"aabbcc\") == \"aba\", \"Testcase 2\"\nassert solution(\"12345\") == \"2\", \"Testcase 3\"\nassert solution(\"0rTrT022\") == \"1\", \"Testcase 4\"\nassert solution(\"aA\") == \"2\", \"Testcase 5\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(8, \"0rTrT022\") == [\"02TrrT20\", \"20TrrT02\", \"02rTrT00\", \"22rTrT02\", \"0rTrT22\", \"22rTrT00\"]\nassert solution(2, \"aA\") == [\"a A\", \"A A\"]"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aabaac') == 'aba aca'\nassert solution('0rTrT022') == '02TrrT20'\nassert solution('aA') == 'a A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"aba aca\", \"Test failed\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0rTrT022') == '1002TrrT20'\nassert solution('aA') == '2a A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabaac\") == \"2\"\nassert solution(\"0rTrT022\") == \"1\"\nassert solution(\"aA\") == \"2\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"2\\naba aca\"\nassert solution(2) == \"2\\naba aca\"\nassert solution(3) == \"2\\naba aca\"\nassert solution(4) == \"2\\naba aca\"\nassert solution(5) == \"2\\naba aca\"\nassert solution(6) == \"2\\naba aca\"\nassert solution(7) == \"2\\naba aca\"\nassert solution(8) == \"2\\naba aca\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a**d\\n2\\nabcd\\nacbd\\n\") == 2\nassert solution(\"lo*er\\n2\\nlover\\nloser\\n\") == 0\nassert solution(\"a*a\\n2\\naaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2\\n'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0\\n'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1\\n'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a**d\") == \"2\", \"Expected output: 2, but got: {}\".format(solution(\"a**d\"))\nassert solution(\"abcd\") == \"2\", \"Expected output: 2, but got: {}\".format(solution(\"abcd\"))\nassert solution(\"acbd\") == \"0\", \"Expected output: 0, but got: {}\".format(solution(\"acbd\"))\nassert solution(\"lo*er\") == \"0\", \"Expected output: 0, but got: {}\".format(solution(\"lo*er\"))\nassert solution(\"a*a\") == \"1\", \"Expected output: 1, but got: {}\".format(solution(\"a*a\"))"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a**d\") == \"2\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"acbd\") == \"2\"\nassert solution(\"lo*er\") == \"0\"\nassert solution(\"a*a\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a**d\", \"2\\nabcd\\nacbd\\n\") == \"2\", \"First example\"\nassert solution(\"lo*er\", \"2\\nlover\\nloser\\n\") == \"0\", \"Second example\"\nassert solution(\"a*a\", \"2\\naaa\\naba\\n\") == \"1\", \"Third example\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\na**d\\n2\\nabcd\\nacbd\\n') == '2', 'Expected output: 2'\nassert solution('5\\nlo*er\\n2\\nlover\\nloser\\n') == '0', 'Expected output: 0'\nassert solution('3\\na*a\\n2\\naaa\\naba\\n') == '1', 'Expected output: 1'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\na**d\n2\nabcd\nacbd\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\nlo*er\n2\nlover\nloser\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\na*a\n2\naaa\naba\n\"\"\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\nassert solution(\"5 1 1\\n1 0 0 0 4\\n5 1 1\\n1 0 0 0 4\\n5 1 1\\n1 0 0 0 4\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output\\n1'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"40\"\nassert solution(1) == \"40\"\nassert solution(1) == \"40\"\nassert solution(1) == \"40\"\nassert solution(1) == \"40\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == \"40\"\nassert solution(1, 42) == \"1\"\nassert solution(6, 4) == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1') == 40, \"Expected 40, got {}\".format(solution('1 1'))\nassert solution('1 42') == 1, \"Expected 1, got {}\".format(solution('1 42'))\nassert solution('6 4') == 172, \"Expected 172, got {}\".format(solution('6 4'))\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1,1) == 40\nassert solution(1,42) == 1\nassert solution(6,4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\"\nassert solution(42) == \"1\"\nassert solution(100) == \"40\"\nassert solution(42) == \"1\"\nassert solution(64) == \"172\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"The output '{solution(input())}' is incorrect. The expected output is '{output()}'\\n\"\nprint(solution(input()))"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: got '{solution(stdin)}', expected '{expected}'\" for i, (stdin, expected) in enumerate(tests)"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 1 4\\n\") == \"5\"\nassert solution(\"2\\n1 4\\n4\\n\") == \"6\"\nassert solution(\"4\\n3 1 4 4\\n1\\n\") == \"6\"\nassert solution(\"4\\n3 1 4 1\\n1\\n\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\\n1\\n\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\", \"The output is incorrect.\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\"\nassert solution(open(\"input1.txt\", \"r\")) == \"6\"\nassert solution(open(\"input2.txt\", \"r\")) == \"6\"\nassert solution(open(\"input3.txt\", \"r\")) == \"6\"\nassert solution(open(\"input4.txt\", \"r\")) == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"5\\n6\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n\n\"\"\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\", \"Test case 1 failed\"\n\nassert solution() == \"6\\n\", \"Test case 2 failed\"\n\nassert solution() == \"6\\n\", \"Test case 3 failed\"\n\nassert solution() == \"11\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"6\"\nassert solution(\"4\\n3 1 4 1\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input}\\nOutput: {solution_output}\\nExpected: {solution_output}\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 0 -1\\n2 1 -1\\n\") == \"1\"\nassert solution(\"100000 100000 100000 100000\\n\") == \"100000\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nprint(\"Test passed\")"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\"\nassert solution(stdin) == \"2\\n\", \"Expected output: 2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 0 -1\") == 1\nassert solution(\"2 1 -1\") == 2"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == output, f\"Test failed with input {stdin}, output {output}\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 -1\\n\") == \"2\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\n\nstdin = \"1\\n0 0 -1\\n\"\nassert solution(stdin) == \"1\\n\"\n\nstdin = \"2\\n1 -1\\n\"\nassert solution(stdin) == \"2\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\nassert solution() == 2"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2 0 0\n1 2\n2 3''') == '2\\n'\nassert solution('''2 1 0\n1 2\n2 2''') == '0\\n'\nassert solution('''2 5 7\n3 4\n14 4''') == '1\\n'\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 0 0\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 1 0\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2 5 7\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3 4 14\n    8 4 5\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 0 0\n1 2\n2 3''') == '2'\nassert solution('''2 1 0\n1 2\n2 2''') == '0'\nassert solution('''2 5 7\n3 4\n14 4''') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n1 3\") == \"12\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n1 3\\n2 4\") == \"20\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n1 3\\n2 4\\n3 5\") == \"60\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\", \"The output should be '6'.\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"3\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"2\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"1\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"0\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"5\"\nassert solution(\"1 2\\n01001\\n2 4\\n3 5\") == \"4\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\nassert solution(\"5 1\\n0110\\n3 4\\n\") == \"5\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13\n\nsolution = '''\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1 1 1') == '6\\n'\nassert solution('1 2 1 2 1 2') == '13\\n'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6\\n', 'Expected output is \"6\\n\", but got \"%s\"' % solution()"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '13\\n'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1, 1, 1, 1, 1) == 6\nassert solution(1, 2, 1, 2, 1, 2) == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\", \"Expected output: 6\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 3 4 6 9\\n') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10\\n') == '4\\n'\n\nsolution(input())"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\"\n\nsolution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nsolution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"DONE\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'SURGERY COMPLETE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'SURGERY COMPLETE'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nSURGERY COMPLETE\\nSURGERY FAILED\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"3\\n4\\nE 1 E 2 E 3 E\\n1 2 3 4 5\\nE 1 2 3 4 5\\n2 3 4 5 6\\nDONE\") == \"DONE\"\nassert solution(\"1\\n1\\n
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"DONE\"\nassert solution(input()) == \"SURGERY COMPLETE\"\n\nimport bisect"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nE T R r\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Input 9 2 5\"\nassert solution(\"3 2 1\") == \"1 2 3 \", \"Input 3 2 1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3\"\n\nassert solution(\"3 3 1\\n\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"The given permutation should be 6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3 \", \"The given permutation should be 1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(9, 2, 5) == [-1, -1, -1, -1, -1, -1, -1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Testcase 1\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"Testcase 2\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 3 1\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n3 2 1') == '3'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'\nassert solution('3 2\\n1 0 1') == '2'\nassert solution('4 4\\n2 8 4 1') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 2 1\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == 5000000000\nassert solution(\"3 2\\n1 0 1\") == 2\nassert solution(\"4 4\\n2 8 4 1\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3,2)==3\nassert solution(3,2,1)==3\nassert solution(5,1)==5000000000\nassert solution(3,2,1,0,1)==2\nassert solution(4,4,2,8,4,1)==4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"The solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 2\n3 2 1''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000''') == '5000000000'\nassert solution('''3 2\n1 0 1''') == '2'\nassert solution('''4 4\n2 8 4 1''') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n3 2 1') == '3'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'\nassert solution('3 2\\n1 0 1') == '2'\nassert solution('4 4\\n2 8 4 1') == '4'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('bwwwbwwbw') == 5\nassert solution('bwwbwwb') == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"The first example should give the answer equal to 5\"\nassert solution(\"bwwbwwb\") == \"3\", \"The second example should give the answer equal to 3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('bwwwbwwbw') == 5\nassert solution('bwwbwwb') == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bwwwbwwbw') == 5, \"The solution is incorrect\"\nassert solution('bwwbwwb') == 3, \"The solution is incorrect\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output', 'The function should return the correct output.'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0, \"Test 1\"\nassert solution(\"1\") == 1, \"Test 2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == 1, \"Test 3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == 1, \"Test 4\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == 1, \"Test 5\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 10, \"Your solution is not correct\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10, \"Test failed\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7, \"Test failed\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\\n6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\\n2\"\nassert solution() == \"Output\\n2\"\nassert solution() == \"Output\\n2\"\nassert solution() == \"Output\\n2\"\nassert solution() == \"Output\\n2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 2 2') == '2'\nassert solution('6\\n1 2 4 4 4 9') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n2\\n2\") == \"2\"\nassert solution(\"1\\n2\\n4\\n4\\n4\\n9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1\\naba\\n\") == \"7\"\nassert solution(\"4 1 1\\nabcd\\n\") == \"4\"\nassert solution(\"4 10 1\\naaaa\\n\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 7\nassert solution(4) == 4\nassert solution(4) == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\n\nfrom collections import deque"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1', \"Please provide the correct input.\"\nprint(1)"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 1\") == \"1\\n1\\n\"\nassert solution(\"4 1\") == \"1\\n1\\n1\\n\"\nassert solution(\"5 1\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"6 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\\n\"  # Sample Output"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"4 2\\n\") == \"3\"\nassert solution(\"5 2\\n\") == \"4\"\nassert solution(\"6 3\\n\") == \"5\"\nassert solution(\"7 4\\n\") == \"6\"\nassert solution(\"8 5\\n\") == \"7\"\nassert solution(\"9 6\\n\") == \"8\"\nassert solution(\"10 7\\n\") == \"9\"\nassert solution(\"11 8\\n\") == \"10\"\nassert solution(\"12 9\\n\") == \"11\"\nassert solution(\"13 10\\n\") == \"12\"\nassert solution(\"14 11\\n\") == \"13\"\nassert solution(\"15 12\\n\") == \"14\"\nassert solution(\"16 13\\n\") == \"15\"\nassert solution(\"17 14\\n\") == \"16\"\nassert solution(\"18 15\\n\") == \"17\"\nassert solution(\"19 16\\n\") == \"18\"\nassert solution(\"20 17\\n\") == \"19\"\nassert solution(\"21 18\\n\") == \"20\"\nassert solution(\"22 19\\n\") == \"21\"\nassert solution(\"23 20\\n\") == \"22\"\nassert solution(\"24 21\\n\") == \"23\"\nassert solution(\"25 22\\n\") == \"24\"\nassert solution(\"26 23\\n\") == \"25\"\nassert solution(\"27 24\\n\") == \"26\"\nassert solution(\"28 25\\n\") == \"27\"\nassert solution(\"29 26\\n\") == \"28\"\nassert solution(\"30 27\\n\") == \"29\"\nassert solution(\"31 28\\n\") == \"30\"\nassert solution(\"32 29\\n\") == \"31\"\nassert solution(\"33 30\\n\") == \"32\"\nassert solution(\"34 31\\n\") == \"33\"\nassert solution(\"35 32\\n\") == \"34\"\nassert solution(\"36 33\\n\") == \"35\"\nassert solution(\"37 34\\n\") == \"36\"\nassert solution(\"38 35\\n\") == \"37\"\nassert solution(\"39 36\\n\") == \"38\"\nassert solution(\"40 37\\n\") == \"39\"\nassert solution(\"41 38\\n\") == \"40\"\nassert solution(\"42 39\\n\") == \"41\"\nassert solution(\"43 40\\n\") == \"42\"\nassert solution(\"44 41\\n\") == \"43\"\nassert solution(\"45 42\\n\") == \"44\"\nassert solution(\"46 43\\n\") == \"45\"\nassert solution(\"47 44\\n\") == \"46\"\nassert solution(\"48 45\\n\") == \"47\"\nassert solution(\"49 46\\n\") == \"48\"\nassert solution(\"50 47\\n\") == \"49\"\nassert solution(\"51 48\\n\") == \"50\"\nassert solution(\"52 49\\n\") == \"51\"\nassert solution(\"53 50\\n\") == \"52\"\nassert solution(\"54 51\\n\") == \"53\"\nassert solution(\"55 52\\n\") == \"54\"\nassert solution(\"56 53\\n\") == \"55\"\nassert solution(\"57 54\\n\") == \"56\"\nassert solution(\"58 55\\n\") == \"57\"\nassert solution(\"59 56\\n\") == \"58\"\nassert solution(\"60 57\\n\") == \"59\"\nassert solution(\"61 58\\n\") == \"60\"\nassert solution(\"62 59\\n\") == \"61\"\nassert solution(\"63 60\\n\") == \"62\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"Test Case 1 failed!\"\nassert solution(input()) == \"1\\n\", \"Test Case 2 failed!\"\nassert solution(input()) == \"1\\n\", \"Test Case 3 failed!\"\nassert solution(input()) == \"1\\n\", \"Test Case 4 failed!\"\nassert solution(input()) == \"1\\n\", \"Test Case 5 failed!\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"The given input does not satisfy the constraints\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3\") == \"8\\n\\n3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, -3) == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: solution({input_data})!= {output_data}\"\nfor input_data, output_data in zip(input_data_list, output_data_list):\n    assert solution(input_data) == output_data, f\"Test failed: solution({input_data})!= {output_data}\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    4 2\n    2 2 2 2\n    ''') == '8\\n'\n\nassert solution('''\n    4 -3\n    3 -6 -3 12\n    ''') == '3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output: 8\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Output: 11\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11\\n'\nassert solution('4 2 1 300 1000\\nA A\\nA aa\\nAA a\\n') == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Input:\\n{input_str}\\nOutput:\\n{output_str}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nAA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The function should return {output}, but it returns {solution(input())}.\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected {expected}\"\nfor test_case in tests:\n    assert solution(test_case[0]) == test_case[1], f\"Test failed for input {test_case[0]}, expected {test_case[1]}\"\nprint(\"All test cases pass\")\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nAaa aa\\n\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA aa\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 1 4') == 'YES'\nassert solution('5\\n1 1 5 2 1') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\") == \"YES\"  # correct output\nassert solution(\"Input\") == \"NO\"  # incorrect output"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, output {output}\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"\n\nfor i in range(1, 25):\n    for j in range(1, 5):\n        for k in range(1, 5):\n            for l in range(1, 5):\n                c_ij = int(input())\n                c_kl = int(input())\n                c_ll = int(input())\n                if c_ij + c_kl + c_ll > 0 and solution(stdin=f\"{c_ij} {c_kl} {c_ll}\") == \"YES\":\n                    print(\"YES\")\n                    break\n                elif c_ij + c_kl + c_ll <= 0:\n                    print(\"NO\")\n                    break"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed.\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-15\\n\\n1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1 1 1') == '-5'\nassert solution('3\\n5 1 -5') == '-5'\nassert solution('2\\n900 1000') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-15\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output\\nExpected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1100\", \"The code is not correct.\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\" # expected output: \"YES\"\nassert solution() == \"YES\" # expected output: \"YES\"\nassert solution() == \"NO\" # expected output: \"NO\"\nassert solution() == \"YES\" # expected output: \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\" # Test case 1\nassert solution(\"3\\n1 2\\n2 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\" # Test case 2\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\" # Test case 3\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\" # Test case 4\nassert solution(\"1\\n1 2\\n\") == \"YES\" # Test case 5\nassert solution(\"2\\n1 2\\n2 3\\n1 2\\n2 3\\n\") == \"NO\" # Test case 6\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\" # Test case 7"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n3\\n2 3\\n4\\n5\\n6\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\nassert solution(\"7\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"8\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\" # expected output: \"YES\"\nassert solution() == \"NO\" # expected output: \"NO\"\nassert solution() == \"YES\" # expected output: \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3\n    2\n    2 6\n    \"\"\"\n) == \"1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    2 6\n    \"\"\"\n) == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == expected, f\"Expected {expected}, got {solution(open('input.txt', 'r'))}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n2\\n0\\n', \"Testcase 1 failed\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Wrong output: {output}, expected {stdin}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\\n\") == \"1\\n2 6\\n\"\nassert solution(\"2\\n2 6\\n\") == \"0\\n6\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nInput\\n2\\n2 6\\n\\nOutput\\n1\\n2 6\\n\") == [\"1\"]\nassert solution(\"Input\\n3\\n1 2 3\\n\\nInput\\n2\\n2 6\\n\\nOutput\\n0\\n\") == [\"0\"]"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1]\nassert solution(2) == [0]"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\ncab\\n\") == \"6\"\nassert solution(\"5\\nabc\\nxyz\\n\") == \"14\"\nassert solution(\"6\\nabc\\nxyz\\n\") == \"26\"\nassert solution(\"7\\nabc\\nxyz\\n\") == \"46\"\nassert solution(\"8\\nabc\\nxyz\\n\") == \"66\"\nassert solution(\"9\\nabc\\nxyz\\n\") == \"88\"\nassert solution(\"10\\nabc\\nxyz\\n\") == \"108\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\naab\\nccc\") == \"6\"\nassert solution(\"4\\nbbbb\\nccc\") == \"12\"\nassert solution(\"5\\naabb\\ncddd\\neeee\") == \"120\"\nassert solution(\"6\\naaaa\\nbbbb\\ncddd\\neeee\") == \"11985\"\nassert solution(\"7\\naaaaa\\nbbbb\\ncccc\\ndddd\") == \"90017\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"5\\naab\\nabb\") == \"2\\n\"\nassert solution(\"4\\naab\\nabb\\nccc\") == \"2\\n\"\nassert solution(\"6\\naab\\nabb\\nccc\\nddd\") == \"2\\n\"\nassert solution(\"1\\naab\\nabb\\nccc\\nddd\\n\") == \"0\\n\"\nassert solution(\"7\\naab\\nabb\\nccc\\nddd\\n\") == \"0\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\ncco\\n\") == \"6\"\nassert solution(\"5\\nabc\\ndef\\nghi\\n\") == \"12\"\nassert solution(\"1\\nabc\\n\") == \"1\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"3\\naab\\nccb\\n\") == \"6\\n\", \"Test 1 Failed\"\n\nassert solution(b\"3\\naabbcc\\nccddee\\n\") == \"24\\n\", \"Test 2 Failed\"\n\nassert solution(b\"3\\naabbccddd\\nccddee\\n\") == \"25\\n\", \"Test 3 Failed\"\n\nassert solution(b\"3\\naabbccdddde\\nccddee\\n\") == \"26\\n\", \"Test 4 Failed\"\n\nassert solution(b\"3\\naabbccddddee\\nccddee\\n\") == \"27\\n\", \"Test 5 Failed\"\n\nassert solution(b\"3\\naabbccddddee\\nccddee\\n\") == \"10\\n\", \"Test 6 Failed\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\naab\\nccb\\n') == '6'\nassert solution('5\\naabbcc\\ndddd\\n') == '10'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\naab\\nccb') == '6'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\", \"The given sequence occurs in table G\"\nassert solution(stdin) == \"YES\", \"The given sequence occurs in table G\"\nassert solution(stdin) == \"NO\", \"The given sequence doesn't occur in table G\"\nassert solution(stdin) == \"NO\", \"The given sequence doesn't occur in table G\"\nassert solution(stdin) == \"YES\", \"The given sequence occurs in table G\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n'\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\n\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"10 2\n4 1 5 10\n1 4 10 5\"\"\") == \"4\"\nassert solution(\"\"\"7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\"\"\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\n\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\"\n\nassert solution(\"1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\nassert solution() == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '4'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'no'\nassert solution(2) == 'yes'\nassert solution(3) == 'yes'\nassert solution(4) == 'no'\nassert solution(5) == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\"\nassert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected {output}, got {solution(input())}\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nno\\nno\\nno\\nno\\n'\nassert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nno\\nno\\nno\\nno\\n'\nassert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nno\\nno\\nno\\nno\\n'\nassert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nno\\nno\\nno\\nno\\n'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\\n\"\nassert solution() == \"yes\\n\"\nassert solution() == \"no\\n\"\nassert solution() == \"no\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"2\n1 0 2 1 0\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\n\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {input()}!= {output()}\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n1 3\n2 5\n4 5\n''') == '''2\n1 0 2 1 0\n'''\n\nassert solution('''\n4 2\n1 4\n2 4\n''') == '''3\n5 2 0 1\n'''\n\nassert solution('''\n3 4\n0 3\n1 2\n2 3\n3 1\n4 0\n5 1\n6 2\n7 3\n8 4\n9 5\n10 6\n11 7\n12 8\n13 9\n14 10\n15 11\n16 12\n17 13\n18 14\n19 15\n20 16\n21 17\n22 18\n23 19\n24 20\n25 21\n26 22\n27 23\n28 24\n29 25\n30 26\n31 27\n32 28\n33 29\n34 30\n35 31\n36 32\n37 33\n38 34\n39 35\n40 36\n41 37\n42 38\n43 39\n44 40\n45 41\n46 42\n47 43\n48 44\n49 45\n50 46\n51 47\n52 48\n53 49\n54 50\n55 51\n56 52\n57 53\n58 54\n59 55\n60 56\n61 57\n62 58\n63 59\n64 60\n65 61\n66 62\n67 63\n68 64\n69 65\n70 66\n71 67\n72 68\n73 69\n74 70\n75 71\n76 72\n77 73\n78 74\n79 75\n80 76\n81 77\n82 78\n83 79\n84 80\n85 81\n86 82\n87 83\n88 84\n89 85\n90 86\n91 87\n92 88\n93 89\n94 90\n95 91\n96 92\n97 93\n98 94\n99 95\n100 96\n'''\n\nassert solution('''\n10 2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\\n3\\n5 2 0 1\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n3 5\\n4 10\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\n\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''2\n1 0 2 1 0'''"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == \"YES\" # 1\nassert solution(open('input.txt').read()) == \"NO\" # 2"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\\nOutput\\nNO\\nInput\\n3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\\nOutput\\nYES\\nInput\\n3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\\nOutput\\nNO\") == \"YES\\nNO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\"\"\") == \"NO\"\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\"\"\") == \"YES\"\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\"\"\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(())((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"(((#)((#)\n\nOutput\n1\n2\n\nInput\n()((#((#(#()\n\nOutput\n2\n2\n1\nInput\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"()((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('#()') == '-1\\n'\nassert solution('#(#)())') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"()\") == \"0\"\nassert solution(\"((#)\") == \"2\"\nassert solution(\"(())\") == \"0\"\nassert solution(\"(###())\") == \"2\"\nassert solution(\"((#))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\")) == \"2\"\nassert solution(\"((#)))\") == \"1\"\nassert solution(\"())(())\") == \"0\"\nassert solution(\"((#((#)))\") == \"2\"\nassert solution(\"())((#((#(#()()\"))"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"()\") == \"0\"\nassert solution(\"()#\") == \"1\"\nassert solution(\"()#(())#\") == \"2\"\nassert solution(\"()#(())#(())#\") == \"2\"\nassert solution(\"()#(())#(())#()#\") == \"2\"\nassert solution(\"()#(())#(())#()#()#\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()()#()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()()()#()()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()()()#()()()()#()()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()()#()()()#()()()#()()()\") == \"2\"\nassert solution(\"()#(())#(())#()#()#()#()#()#()#()#()#()#()#()#()#()#()()\") == \"2\"\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())(())()\") == \"1\"\nassert solution(\"(())((())(())()\") == \"1\"\nassert solution(\"(())(())()(()\") == \"1\"\nassert solution(\"((#)((#)\")) == \"1\"\nassert solution(\"()((#((#(#()\")) == \"2\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(#)\") == \"-1\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n(((#)((#)\n''') == 1\nassert solution('''\n()((#((#(#()\n''') == 2\nassert solution('''\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''(((#)((#)"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1\\n2\\n1\\n2\\n'\nassert solution(input()) == '2\\n2\\n1\\n2\\n'\nassert solution(input()) == '-1\\n-1\\n'\nassert solution(input()) == '-1\\n'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == -1, \"Output: -1\"\nassert solution(\"4 0\") == 16, \"Output: 16\"\nassert solution(\"0 4\") == -16, \"Output: -16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"12345\") == \"oooxox\"\nassert solution(b\"67890\") == \"oxxoxo\"\nassert solution(b\"123456\") == \"oooxox\"\nassert solution(b\"1234567\") == \"oooxox\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\noo\"\nassert solution(\"0 4\") == \"-16\\nx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\"\nfor _ in range(test_cases):\n    a, b = map(int, input().split())\n    output = solution(input())\n    assert output == output, f\"Incorrect output. Expected: {output}, Received: {output}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"xoxox\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\noooo\"\nassert solution(\"0 4\") == \"-16\\nxxxx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == -1, \"Expected -1, got {}\".format(solution(\"2 3\"))\nassert solution(\"4 0\") == 16, \"Expected 16, got {}\".format(solution(\"4 0\"))\nassert solution(\"0 4\") == -16, \"Expected -16, got {}\".format(solution(\"0 4\"))"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test cases do not match.\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '-1'\nassert solution(2, 3) == 'xoxox'\nassert solution(4, 0) == '16'\nassert solution(0, 4) == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"17\\n\", \"The answer is incorrect\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '17\\n', \"Test Case Failed\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4') == '2 3\\n3 2 \\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3\\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected {expected}\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(input()) == \"2 3 \\n3 2 \\n\"\nassert solution(input()) == \"2 2 \\n3 2 \\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 2 2\\n2 2 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2 2 2\n2 2 2\n\"\"\"\n\nassert solution(stdin) == \"\"\"2 3\n3 2\n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3\\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received output: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"332748119\\n332748119\\n\"\nassert solution(open('input1.txt', 'r')) == \"3\\n\"\nassert solution(open('input2.txt', 'r')) == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '332748119'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected {expected}, got {solution(input())}\"\n\ninput_data = \"\"\"\n2 1\n0 1\n2 1\n\"\"\"\n\nexpected_output = \"\"\"\n332748119\n332748119\n\"\"\"\n\ninput_data, expected_output = [int(x) for x in input_data.strip().split()]\nexpected_output = [int(x) for x in expected_output.strip().split()]"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 1\n0 1\n2 1\n\"\"\") == \"\"\"\n332748119\n332748119\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2\n1\n1\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\n\"\"\"\n3 3\n0 1 1\n4 3 5\n\"\"\") == \"\"\"\n160955686\n185138929\n974061117\n\"\"\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5''') == '160955686\\n185138929\\n974061117'\n\nfrom math import gcd"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"332748119\\n332748119\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1 5 2 6\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1 5 2 6') == '11'\nassert solution('5\\n1 2 3 4 5') == '6'\nassert solution('5\\n1 100 101 100 1') == '102'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nprint(f\"The maximum number of points Artem can get as he plays this game is {output()}\")"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '11', \"Test failed\"\n\nassert solution() == '6', \"Test failed\"\n\nassert solution() == '102', \"Test failed\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 5 2 6') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n100\\n101\\n100\\n1') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n100\\n101\\n100\\n1') == '102\\n'\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 11, \"Expected 11, got {}\".format(solution())  # Correctness Check\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\\n\", \"Test Failed\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input_string)}'\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes\\n'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Error: {solution(input())} should be {expected}\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3,3)==1\nassert solution(4,2)==-1\nassert solution(4,5)==2\nassert solution(2,1)==-1\nassert solution(3,5)==0"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n.#.\n###\n##.\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"4 2\n##\n.#\n.#\n##\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"4 5\n....#\n####.\n.###.\n.#...\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\") == \"1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed: {solution(input_data)}!= {expected_output}\"\nfor test_case in range(1, 6):\n    input_data, expected_output = get_input(test_case)\n    assert solution(input_data) == expected_output, f\"Test case {test_case} failed: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##. \\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.\\n.###.\\n.#...\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\n#\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n.#.\n###\n##.\"\"\") == \"1\"\nassert solution(\"\"\"4 2\n##\n.#\n.#\n##\"\"\") == \"-1\"\nassert solution(\"\"\"4 5\n....#\n####.\n.###.\n.#...\"\"\") == \"2\"\nassert solution(\"\"\"2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output\nprint(\"Test Passed\")"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Incorrect solution: 1\"\nassert solution() == 1, \"Incorrect solution: 2\"\nassert solution() == 0, \"Incorrect solution: 3\"\nassert solution() == 0, \"Incorrect solution: 4\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4 3\\n1 0 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nInput\\n3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\"\nassert solution(\"Input\\n4 3\\n1 0 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nInput\\n3 5\\n0 0 0\\n\") == \"YES\\n10 10 10\"\nassert solution(\"Input\\n4 3\\n1 0 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nInput\\n3 5\\n0 0 0\\n\") == \"NO\"\nassert solution(\"Input\\n4 3\\n1 0 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nInput\\n3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\\n3 10\\n10 10 10\\n\\n5 6\\n6 5 6 2 2\\n\\n3 5\\n0 0 0\\n\\nYES\\n5 4 2\") == \"YES\\n10 10 10\\n\\nYES\\n5 4 2\\n\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2'\nassert solution() == 'YES\\n1 2 2 3\\nYES\\n10 10 10\\nNO\\n0 0 0'\nassert solution() == 'YES\\n10 10 10\\nYES\\n5 4 2\\nNO\\n0 0 0'\nassert solution() == 'NO\\n5 4 2'\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, actual output: {solution}\"\n\ntest_cases = [\n    (4, 3, [\"YES\", \"1 2 2 3\"]),\n    (3, 10, [\"YES\", \"10 10 10\"]),\n    (5, 6, [\"NO\"]),\n    (3, 5, [\"YES\", \"5 4 2\"]),\n]\n\nfor n, q, expected_output in test_cases:\n    test_case += 1\n    solution(f\"Input\\n{n} {q}\\n\")\n    solution(f\"Output\\n{expected_output}\\n\")"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n6 5 6 2 2\") == \"YES\\n5 4 2\"\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\"\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\") == \"YES\\n10 10 10\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\n\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\n\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 0 2 3\\n') == 'YES\\n1 2 2 3\\n'\nassert solution('3 10\\n10 10 10\\n') == 'YES\\n10 10 10 \\n'\nassert solution('5 6\\n6 5 6 2 2\\n') == 'NO\\n'\nassert solution('3 5\\n0 0 0\\n') == 'YES\\n5 4 2\\n'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 2 2 3\"\nassert solution() == \"YES\\n10 10 10\"\nassert solution() == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Test failed for input: 4\"\nassert solution(\"1\\n42\") == \"42\", \"Test failed for input: 1\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Test failed for input: 2\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Test failed for GCD table solution\"\nassert solution(\"1\\n42\") == \"42  \", \"Test failed for single integer solution\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Test failed for multiple integer solution\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4 3 6 2\\n42\\n1 1\\n1 1', \"Test 1 failed.\"\nassert solution(stdin) == '1 1\\n1', \"Test 2 failed.\"\nassert solution(stdin) == '42\\n42\\n42', \"Test 3 failed.\"\nassert solution(stdin) == '2 1 1 1\\n1 1', \"Test 4 failed.\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == '4 3 6 2'\nassert solution('1\\n42') == '42  '\nassert solution('2\\n1 1 1 1') == '1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 1 1 1\") == \"1 1\\n\"\nassert solution(\"1\\n42\") == \"42\\n\"\nassert solution(\"2\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"2 1 2 3 4 6\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 3 6 2\", \"Test 1 failed\"\nassert solution() == \"42\", \"Test 2 failed\"\nassert solution() == \"1 1\", \"Test 3 failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Test 1 failed\"\nassert solution(\"1\\n42\") == \"42\", \"Test 2 failed\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Test 3 failed\"\n\nsolution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\")\nsolution(\"1\\n42\")\nsolution(\"2\\n1 1 1 1\")"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4 3 6 2\\n42\"\nassert solution(input()) == \"1 1\\n1 1\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4 3 6 2\\n42\\n1 1'\nassert solution() == '4 3 6 2\\n42\\n1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\"\nassert solution(\"1\\n42\") == \"42  \\n\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(4) == \"6\\n\"\nassert solution(5) == \"6\\n\"\nassert solution(6) == \"12\\n\"\nassert solution(7) == \"15\\n\"\nassert solution(8) == \"18\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6'\n\nfrom typing import List"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\n5\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n') == '3\\n'\nassert solution('3\\n1 1\\n1 2\\n1 3\\n\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\n5\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\n5\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n') == '6\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\n5\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"Incorrect output for the first example.\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"Incorrect output for the second example.\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"Incorrect output for the third example.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '3\\n'\nassert solution('4') == '6\\n'\nassert solution('5') == '6\\n'\n\nsolution"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Test 1 failed\"\nassert solution() == \"6\", \"Test 2 failed\"\nassert solution() == \"6\", \"Test 3 failed\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'test_case_1'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == '3\\n'\nassert solution('1 1\\n2 1\\n3 1\\n') == '6\\n'\nassert solution('2 1\\n2 2\\n3 1\\n3 2\\n') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed: expected '{output}', got '{solution(input)}'.\"\nfor i in range(5):\n    input_data = input(f\"Input {i+1}\")\n    output_data = solution(input_data)\n    print(output_data)\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n.E.\nE.E\n.E.\n\"\"\") == \"1 1\\n2 2\\n3 3\"\n\nassert solution(\"\"\"\n3\nEEE\nE..\nE.E\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Output mismatch\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n\\n3\\nEEE\\nE..\\nE.E\\n\\n5\\nEE.EE\\nE.EE. \\nE...E\\n.EE.E\\nEE.EE\\n') == '1 1\\n2 2\\n3 3\\n\\n'\n\nassert solution('3\\nEEE\\nE..\\nE.E\\n\\n5\\nEE.EE\\nE.EE. \\nE...E\\n.EE.E\\nEE.EE\\n') == '-1\\n'\n\nassert solution('3\\nEE.EE\\nE.EE. \\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '''\n1 1\n2 2\n3 3\n'''\n\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '''\n-1\n'''\n\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''\n3 3\n1 3\n2 2\n4 4\n5 3\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.''') == '''1 1\n2 2\n3 3'''\n\nassert solution('''3\nEEE\nE..\nE.E\n''') == '''-1'''\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '''3 3\n1 3\n2 2\n4 4\n5 3'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E.\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"32\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"32\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"32\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"32\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"32\\n\", \"Output incorrect\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 2\\n1 1 1') == '3'\nassert solution('4 2 3\\n1 2 4 8') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output: 3\\n\"\nassert solution(input()) == \"Output: 79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\"\nassert solution(\"5 1 2\\n1 1 1 1\") == \"3\"\nassert solution(\"6 2 3\\n1 2 4 8 16\") == \"137\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1, 2) == 3\nassert solution(4, 2, 3) == 79\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n4\\n7\\n7\\n\"\nassert solution(\"4 4\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 1\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"2 4\\n\") == \"1\\n1\\n1\\n1\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 5\\n\") == \"11\\n5\\n11\\n11\\n5\\n\"\nassert solution(\"3 2\\n\") == \"7\\n7\\n\"\nassert solution(\"6 1\\n\") == \"0\\n0\\n\"\nassert solution(\"6 2\\n\") == \"0\\n0\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 5\") == \"11\\n11\\n12\\n11\\n11\\n\"\nassert solution(\"10 10\") == \"126\\n126\\n129\\n126\\n126\\n\"\nassert solution(\"10 15\") == \"126\\n126\\n130\\n126\\n126\\n\"\nassert solution(\"10 20\") == \"126\\n126\\n131\\n126\\n126\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\", \"Test case 1 failed\"\n\nassert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\", \"Test case 2 failed\"\n\nassert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\", \"Test case 3 failed\"\n\nassert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\", \"Test case 4 failed\"\n\nassert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == 7, \"Incorrect Output\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('2 3\\n') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('3 4\\n') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('2 2\\n') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('3 3\\n') == '7\\n7\\n4\\n7\\n7\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. The expected output is: {output}, but it is: {solution(input())}\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\", \"Incorrect output\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\\n\", \"Incorrect output\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9'\nprint('All tests passed!')"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example.in\", \"r\").read()) == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0010100\") == \"3\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0010100\") == \"3\"\nassert solution(\"111\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"331\" # add the correct solution here"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n1\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n3 2 3 4\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution() == \"6\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"24\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"2 3\n2 1 2\n2 2 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"1 3\n3 1 2 3\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"2 4\n2 1 2\n3 2 3 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"2 2\n3 2 2 1\n2 1 2\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"3 7\n2 1 2\n2 3 4\n3 5 6 7\n\"\"\"\n) == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 3\nassert solution(4) == 6"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 5 4 7') == '6'\nassert solution('5\\n1 4 2 3 1') == '3'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n6\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == '3\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed. Expected output: {output}, got {solution(input())}\"\nfor t, input in enumerate([\n    [5, 1, 4, 2, 3, 1],\n    [4, 1, 5, 4, 7],\n]):\n    output = solution(input)\n    assert output == expected[t], f\"Test case {t+1} failed. Expected output: {expected[t]}, got {output}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 5 4 7\\n') == '6' # correct output\nassert solution('5\\n1 4 2 3 1\\n') == '3' # correct output"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\\n\") == \"3\\n6\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\"\nassert solution(\"5\\n1 2 3 1\\n\\n4\\n1 5 4 7\\n\") == \"3\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"3\"\nassert solution(4) == \"6\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 4\nassert solution(4) == 20\nassert solution(5) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"20\", \"Test 1 failed\"\nassert solution() == \"4\", \"Test 2 failed\"\nassert solution() == \"62\", \"Test 3 failed\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 4\nassert solution(4) == 20\nassert solution(5) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 4\nassert solution(3) == 4\nassert solution(4) == 20\nassert solution(5) == 62"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 7, \"Solution is incorrect\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\\n\"\nassert solution(\"1\\n5 6\") == \"7\\n\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15\\n'\nassert solution('1\\n5 6\\n') == '7\\n'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"15\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15\\n'\nassert solution('1\\n5 6\\n') == '7\\n'\nassert solution('') == ''"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output: 15\\n\"\nassert solution(stdin) == \"Output: 7\\n\"\nassert solution(stdin) == \"Output: 11\\n\"\nassert solution(stdin) == \"Output: 16\\n\"\nassert solution(stdin) == \"Output: 15\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6\nassert solution(4) == 15\nassert solution(1) == 7\nassert solution(5) == 7\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n2\\n\\n2\\n1\\n4 4\\n2\\n\\n3\\n3 3\\n10 10 10\\n17\\n') == '1\\n'\nassert solution('2\\n1\\n4 4\\n2\\n\\n3\\n3 3\\n10 10 10\\n17\\n') == '3\\n'\nassert solution('3\\n3 3\\n10 10 10\\n17\\n') == '6\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\na_1\\na_2\\na_3\\nb_1\\nb_2\\nb_3') == '1'\nassert solution('2\\na_1\\na_2\\nb_1\\nb_2\\nb_3\\nm_1') == '1'\nassert solution('2\\na_1\\na_2\\nb_1\\nb_2\\nb_3\\nm_2') == '3'\nassert solution('3\\na_1\\na_2\\na_3\\nb_1\\nb_2\\nb_3\\nm_1\\nm_2') == '6'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == '1'\nassert solution(solution) == '3'\nassert solution(solution) == '6'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"Incorrect solution. Expected 1, got {}.\".format(solution)"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"1\"\nassert solution() == \"3\", \"3\"\nassert solution() == \"6\", \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n\", \"Expected: 0\\nActual: %s\" % solution()"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == \"10\\n\"\nassert solution(open('input2.txt').read()) == \"0\\n\"\nassert solution(open('input3.txt').read()) == \"0\\n\"\nassert solution(open('input4.txt').read()) == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 3 100\\n1 1 1\\n') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3\\n') == '0'\nassert solution('3 5 6 11\\n1 2 1\\n') == '0'\n\nfrom bisect import bisect_left"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njkmnoqrstu\\nvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nprint(\"YES\")\n\nassert solution() == \"NO\"\nprint(\"NO\")\n\nassert solution() == \"YES\"\nprint(\"YES\")\n\nassert solution() == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nt to be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\n the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"intel\") == \"YES\"\nassert solution(\"code\") == \"YES\"\nassert solution(\"ch allenge\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"Input\\n4\\n13 11 15 15\\ntis nobler in the mind to suffer\\nor to take arms against a sea of troubles\\nor to be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstu\\nuvwxyz\\n\") == \"NO\"\nassert solution(\"Input\\n4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"26\\n\", \"Input 3\\nExpected output 26\\nActual output:\", solution(3)\n\nassert solution(1) == \"10\\n\", \"Input 1\\nExpected output 10\\nActual output:\", solution(1)\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 5') == '26'\nassert solution('1\\n10') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"Expected output: 26\\n, but got: \" + solution(\"3\\n3 1 5\")"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution('1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n')\nassert solution(stdin) == solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n')\nassert solution(stdin) == solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n')\nassert solution(stdin) == solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n')"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 4 5 6 7 8 9\"\nassert solution() == \"1 2 4\"\nassert solution() == \"1 2 3\"\nassert solution() == \"1 4 5\"\nassert solution() == \"1 2 3\"\nassert solution() == \"1 3 4\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11''') == '1 4 5 6 7 8 9'\n\nassert solution('''5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5''') == '1 2 4'\n\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '1 2'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9\\n', \"Test case 1 failed\"\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4\\n', \"Test case 2 failed\"\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n', \"Test case 3 failed\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed: got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == \"1 2\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input '{stdin}' and expected output '{expected}'.\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\", \"The expected output is 1.\"\nassert solution(input()) == \"0\", \"The expected output is 0.\"\nassert solution(input()) == \"2\", \"The expected output is 2.\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\n1 5.0\n2 5.5\n3 6.0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"Your solution is not correct.\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Received: {solution(input())}, expected: {expected_output}\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\nassert solution(\"10 2\\n4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"2 2\\n1 1\") == \"2\\n\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"2 1\\n3 4 5 6 7\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\nassert solution(\"7 3\\n1 2 3 4 5 6 7\") == \"7\\n\"\nassert solution(\"9 4\\n1 2 3 4 5 6 7 8 9\") == \"9\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"7 3\\n4 5 6 7 8 9\") == \"2\"\nassert solution(\"9 1\\n10 11 12\") == \"1\"\nassert solution(\"5 1\\n2 3 4 5 6 7 8 9\") == \"1\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\" # expected output: \"3\"\nassert solution(\"4 2\\n2 3 6 5 4 10\") == \"2\" # expected output: \"2\"\nassert solution(\"6 3\\n2 3 6 5 4 10\") == \"3\" # expected output: \"3\"\nassert solution(\"4 3\\n2 3 6 5 4 10\") == \"2\" # expected output: \"2\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"5 3\\n2 3 6 5 4 10\") == \"1\"\nassert solution(\"8 10\\n1 2 3 4 5 6 7 8 9\") == \"3\"\nassert solution(\"3 3\\n1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"9 2\\n1 2 3 4 5 6 7 8 9\") == \"2\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test 2 failed\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test 3 failed\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"10\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(2), \"Alex doesn't like boredom\"\n\nassert solution(str(input())) == str(4), \"One long winter evening he came up with a game and decided to play it\"\n\nassert solution(str(input())) == str(10), \"Alex is a perfectionist, so he decided to get as many points as possible\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\nassert solution('1') == '1'\nassert solution('2 2 2 2') == '2'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"10\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test case 3 failed\"\n\nsolution = input().split()\nn = int(solution[0])\na = list(map(int, solution[1:]))\n\npoints = 0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if a[i] + 1 == a[j] and a[i] - 1 == a[j]:\n            points += 1\n\nprint(points)"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('3\\n1 2 3\\n') == '4\\n'\nassert solution('9\\n1 2 1 3 2 2 2 2 3\\n') == '10\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 3\\n') == '10'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', \"Output must be '4'.\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2\\n\") == \"4\\n\"\nassert solution(stdin=\"10\\n\") == \"1\\n\"\nassert solution(stdin=\"100\\n\") == \"1\\n\"\nassert solution(stdin=\"1000\\n\") == \"1\\n\"\nassert solution(stdin=\"10000\\n\") == \"1\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'2') == '4\\n'\nassert solution(b'10') == '1000000000000\\n'\nassert solution(b'5') == '14\\n'\nassert solution(b'1') == '1\\n'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Output: 4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\", \"The count modulo 10^9+7 is incorrect.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '4\\n', \"The result should be 4, but got {}\".format(solution(input()))"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Test 1 failed\"\n\nimport itertools\n\nn = int(stdin.readline())\n\ncount = 0\nfor i in range(1, n+1):\n    if i == 1 or i == n:\n        continue\n    for j in range(i+1, n+1):\n        if j == i or j == n:\n            continue\n        for k in range(i+1, j):\n            if k == i or k == j or k == n:\n                continue\n            a_i = i\n            a_j = j\n            a_k = k\n            while a_i < a_j < a_k:\n                a_i += 1\n                a_j += 1\n                a_k += 1\n            if a_i == a_j == a_k:\n                count += 1\n\nprint(count)"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"2\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are not as expected.\"\nassert solution(b\"3\\n\") == \"0\\n\", \"The four sequences that satisfy the conditions are not as expected.\"\nassert solution(b\"4\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are not as expected.\"\nassert solution(b\"5\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are not as expected.\"\nassert solution(b\"6\\n\") == \"0\\n\", \"The four sequences that satisfy the conditions are not as expected.\"\nassert solution(b\"7\\n\") == \"0\\n\", \"The four sequences that satisfy the conditions are not as expected.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect solution\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"6\"\nassert solution(\"1 5\\n1 4\") == \"2\"\nassert solution(\"5 6\\n1 4\") == \"3\"\nassert solution(\"5 6\\n1 4 1 2 3 4\") == \"1\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"5 6\\n2 3 4 5 6\") == \"6\"\nassert solution(\"3 2\\n1 2 3 4\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4\") == \"2\"\nassert solution(\"2 3\\n1 2 3 4\") == \"3\"\n\nfrom typing import List\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"5 3\\n3 2 2 2\\n\") == \"8\"\nassert solution(\"2 4\\n5 1 4 4\\n\") == \"7\"\nassert solution(\"1 2\\n1 1 1 1\\n\") == \"6\"\nassert solution(\"1 1\\n1 1 1 1\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5\\n'\nassert solution('5 2\\n1 5 1 4\\n') == '5\\n'\nassert solution('5 6\\n1 5 1 4\\n') == '10\\n'\nassert solution('3 6\\n1 5 1 4\\n') == '8\\n'\nassert solution('1 5 1 4\\n1 5 1 4\\n') == '1\\n'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\\n1 2 1 3\\n\") == \"7\"\nassert solution(\"4 6\\n1 5 1 4\\n1 2 1 3\\n1 2 1 3\\n\") == \"8\"\nassert solution(\"4 6\\n1 5 1 4\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n1 2 1 3\\n\") == \"9\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"3 2\\n1 2 3 "
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"1 3 5 7\\n1 2 3 4\\n\") == \"3\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n\ninput_str = '''+-+-+'''\noutput_str = '1'\n\ninput_str = input_str.replace('+', '-')\n\nassert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\") == \"3\", \"Right now the police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\" # Test case 1\nassert solution(stdin) == \"3\\n\" # Test case 2"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('---') == '3'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"\nassert solution(\"---\") == \"3\\n\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"\nassert solution(\"---\") == \"3\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+-+-+') == 1\nassert solution('---') == 3"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test {test_num} failed\"\nfor test_num, (input_str, expected_output) in enumerate(\n    [\n        (\"10\", \"10110\"),\n        (\"11\", \"10110\"),\n        (\"20\", \"10110\"),\n        (\"21\", \"10110\"),\n        (\"30\", \"10110\"),\n        (\"31\", \"10110\"),\n        (\"40\", \"10110\"),\n        (\"41\", \"10110\"),\n        (\"50\", \"10110\"),\n        (\"51\", \"10110\"),\n        (\"60\", \"10110\"),\n        (\"61\", \"10110\"),\n        (\"70\", \"10110\"),\n        (\"71\", \"10110\"),\n        (\"80\", \"10110\"),\n        (\"81\", \"10110\"),\n        (\"90\", \"10110\"),\n        (\"91\", \"10110\"),\n    ]\n):\n    assert solution(input_str) == expected_output, f\"Test {test_num} failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"The output does not match the expected output.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\" # correct output"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3'\n\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n1 3\\n\"\nassert solution(input()) == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"2\n1 3\n\"\"\"\n\nassert solution(stdin) == \"\"\"2\n1 2\n\"\"\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\n\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n1 3\"\nprint(solution(stdin))"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, \"Test case not passed.\"\n\nn, m, k = map(int, input().split())\nc = list(map(int, input().split()))\n\ngraph = [(i, c[i], []) for i in range(n)]\ngraph += [(c[i], j, [i]) for i, j in [(j, i) for i in range(n) for j in range(i+1, n) if i!= j]]"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2\\n1 2\\n2 3\") == \"0\"\nassert solution(\"4 1 2\\n1 3\\n1 2\\n2 3\") == \"2\"\nassert solution(\"4 1 1\\n1 2\\n2 3\") == \"2\"\nassert solution(\"4 1 2\\n1 3\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}\\nOutput: {output}\\nSolution: {solution(input)}\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution() == '0'\nassert solution() == '2'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO\" # Add your solution here"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '2'\n\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n') == '0'\n\nassert solution('1 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n3 2\\n1 2\\n2 3\\n') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'\n\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'\n\nfrom collections import deque"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n3\\n\\n4') == '3\\n'\nassert solution('4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\\n1\\n') == '1\\n'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n6\n10 2 3 5 4 2\n\n''') == '3'\nassert solution(r'''\n4\n100 100 100 100\n\n''') == '1'\nassert solution(r'''\n8\n7 6 5 4 3 2 2 3\n\n''') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test case failed\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('4\\n100 100 100 100') == '1'\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\") == \"3\\n\\n1\\n\\n4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\") == \"No\"\nassert solution(\"7 1 3 2 5 4 1\\n2 1 3 1\\n1 2 4 5 6\\n2 1 3 1\\n1 2 3 1\\n2 3 4 5 6\\n\") == \"Yes\\n1\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Input {input}, Output {output}\" for input, output in zip(inputs, outputs)\n\ninputs = [\n    [\"4 3\"],\n    [\"6 5\"],\n    [\"4 3\"],\n]\noutputs = [\n    [\"Yes\"],\n    [\"No\"],\n    [\"No\"],\n]\n\ninputs = [\n    [\"1 2\"],\n    [\"1 1\"],\n    [\"3 1 3 2\"],\n    [\"2 1 1\"],\n]\noutputs = [\n    [\"Yes\"],\n    [\"No\"],\n    [\"No\"],\n    [\"No\"],\n]"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\\n\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"No\\n0\\n\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3 '\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'No'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '20\\n0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\", \"Test failed\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 20\nassert solution(5) == 0\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(8) == 4\nassert solution(9) == 3"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 20\nassert solution(10) == 60\nassert solution(15) == 120\nassert solution(20) == 200\nassert solution(25) == 280\nassert solution(30) == 360\nassert solution(35) == 440\nassert solution(40) == 520\nassert solution(45) == 600\nassert solution(50) == 680\nassert solution(55) == 760\nassert solution(60) == 840\nassert solution(65) == 920\nassert solution(70) == 1000\nassert solution(75) == 1080\nassert solution(80) == 1160\nassert solution(85) == 1240\nassert solution(90) == 1320\nassert solution(95) == 1400\nassert solution(100) == 1480\nassert solution(105) == 1560\nassert solution(110) == 1640\nassert solution(115) == 1720\nassert solution(120) == 1800\nassert solution(125) == 1880\nassert solution(130) == 1960\nassert solution(135) == 2040\nassert solution(140) == 2120\nassert solution(145) == 2200\nassert solution(150) == 2280\nassert solution(155) == 2360\nassert solution(160) == 2440\nassert solution(165) == 2520\nassert solution(170) == 2600\nassert solution(175) == 2680\nassert solution(180) == 2760\nassert solution(185) == 2840\nassert solution(190) == 2920\nassert solution(195) == 3000\nassert solution(200) == 3080"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\"\nassert solution(5) == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\" # pass\nassert solution(5) == \"20\\n0 1 3 2 4\" # pass\nassert solution(6) == \"20\\n0 1 4 3 2\" # pass\nassert solution(7) == \"20\\n0 3 2 4 1\" # pass\nassert solution(8) == \"20\\n0 3 1 2 4\" # pass\nassert solution(9) == \"20\\n0 4 2 3 1\" # pass\nassert solution(10) == \"20\\n0 4 1 3 2\" # pass\nassert solution(11) == \"20\\n1 3 0 4 2\" # pass\nassert solution(12) == \"20\\n1 3 2 4 0\" # pass\nassert solution(13) == \"20\\n1 4 0 2 3\" # pass\nassert solution(14) == \"20\\n1 4 2 3 0\" # pass\nassert solution(15) == \"20\\n2 3 1 0 4\" # pass\nassert solution(16) == \"20\\n2 3 0 1 4\" # pass\nassert solution(17) == \"20\\n2 4 1 0 3\" # pass\nassert solution(18) == \"20\\n2 4 0 1 3\" # pass\nassert solution(19) == \"20\\n3 1 0 2 4\" # pass\nassert solution(20) == \"20\\n3 1 4 2 0\" # pass"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\nassert solution(10) == \"144\\n1 3 2 4 5 6 7 8 9\"\nassert solution(100) == \"101248\\n0 2 4 6 8 10 12 14 16 18\"\nassert solution(1000) == \"10730368\\n0 3 6 9 12 15 18 21 24 27 30\"\nassert solution(10000) == \"11631156521\\n0 4 7 10 13 16 19 22 25 28 31 34\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4) == \"YES\", \"Please provide the input correctly.\"\nprint(\"YES\")\n\ninput = \"\"\"\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'YES\\n'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO\\n'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\"\"\") == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\\n\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\\n\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\\n\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\\n\"\n\nprint(\"PASSED\")"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\ninput_data = [\n    '3 4\\n',\n    '0 0\\n',\n    '0 2\\n',\n    '2 0\\n',\n    '0 2\\n',\n    '2 2\\n',\n    '2 0\\n',\n    '0 0\\n',\n    '1 1\\n',\n]\n\nexpected_output = ['YES', 'NO']\n\nfor input_line, expected_output_line in zip(input_data, expected_output):\n    assert solution(input_line) == expected_output_line, f\"Expected output: {expected_output_line}, Received: {solution(input_line)}\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n1\n1\n''') == '1\\n3\\n7\\n'\n\nassert solution('''\n5\n1\n0\n1\n0\n1\n''') == '1\\n4\\n10\\n22\\n43\\n'\n\nassert solution('''\n9\n1\n1\n0\n0\n0\n1\n1\n0\n1\n''') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Failed\"\nprint(\"Passed\")"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n10\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n4\\n22\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n51\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n4\\n109\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n213\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n4\\n421\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\"\nassert solution(\"10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"Input\\n5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"Input\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n1\\n1\\n') == '1\\n3\\n7\\n'\nassert solution('5\\n1\\n0\\n1\\n0\\n1\\n') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n1\\n1\\n') == '1\\n3\\n7\\n'\nassert solution('5\\n1\\n0\\n1\\n0\\n1\\n') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst\\n'\n\nfrom typing import List"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution() == \"First\\nSecond\"\nassert solution()"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n') == 'First\\nSecond'\nprint(\"All test cases pass\")"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\"\nassert solution(r\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"Second\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"First\\nSecond\\nFirst\\n\"\n\nassert solution(stdin=\"1\\n3\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\"\n\nassert solution(stdin=\"2\\n3\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"Second\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\nassert solution(\"3\\n1 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"Second\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution =="
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\\n\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Mike\\nAnn\\nAnn\"\nassert solution() == \"Mike\\nMike\\nMike\"\nassert solution() == \"Mike\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcdef\") == \"Mike\"\nassert solution(\"abcd\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcb\") == \"Ann\"\nassert solution(\"abc\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n7 4\n\"\"\"\n) == \"ababacd\"\n\nassert solution(\n    \"\"\"\n4 7\n\"\"\"\n) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\", \"The output should be 4.\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n1 2 1 2\\n\") == \"Output\\n4\\n\"\n\nassert solution(\"Input\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"Output\\n9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9\\n'\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 5, \"Solution should return 5.\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\nassert solution(\"1000\\n1 2 1 2 3 3 2 2 2 1\") == 1\nassert solution(\"1000\\n1 1 2 2 2 1 1 2 2 1\") == 9\nassert solution(\"1000\\n1 1 1 1 1 1 1 1 1 1\") == 1"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"2\\n-\"\n\nassert solution(\n    \"\"\"\n    6 6 3\n    \"\"\"\n) == \"6\\n++-\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2 1\n    1 1 2\n    2 2 1\n    \"\"\"\n) == \"\"\"\n    2\n    2\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    6 6 3\n    2 2 6\n    1 4 5\n    2 3 4\n    1 4 1\n    1 3 1\n    2 2 3\n    \"\"\"\n) == \"\"\"\n    6\n    2\n    2\n    2\n    2\n    2\n    \"\"\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == 2\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == 6\nassert solution('1 2\\n1 3\\n2 3\\n2 4') == 1\nassert solution('5 4\\n3 2\\n3 4\\n4 3\\n4 5\\n4 6\\n5 6\\n6 6') == 5"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == 2\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == 6"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test case 1 failed\"\nassert solution(\"18906\") == \"18690\", \"Test case 2 failed\"\nassert solution(\"1\") == \"0\", \"Test case 3 failed\"\nassert solution(\"123\") == \"0\", \"Test case 4 failed\"\nassert solution(\"111\") == \"0\", \"Test case 5 failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1689') == '1869', \"Test case 1 failed\"\nassert solution('18906') == '18690', \"Test case 2 failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter a number: \")) == output(\"18690\")"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1689') == '1869', 'Test 1 failed'\nassert solution('18906') == '18690', 'Test 2 failed'\nassert solution('101') == '11010', 'Test 3 failed'\nassert solution('10101') == '110101', 'Test 4 failed'\nassert solution('101001') == '1101001', 'Test 5 failed'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test Case 1 Failed\"\nassert solution(\"18906\") == \"18690\", \"Test Case 2 Failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\", \"Incorrect output\"\nassert solution(\"18906\") == \"18690\", \"Incorrect output\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 2\n2 3\n3 4\n\"\"\") == \"0\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\") == 2\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\") == -1\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\") == 3\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n1 4\\n3 1') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n6 3\\n1 3\\n\\n1 4\\n2 1') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n2 3\\n3 4\\n4 1') == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution() == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 7\\n') == '3'\nassert solution('3\\n4 3 1\\n') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\nassert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\nassert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n7') == '3'\nassert solution('3\\n4 3 1') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n4 7\\n') == '3'\nassert solution('3\\n4 3 1\\n') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\"\nassert solution(\"4\\n4 7\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3') == '9'\nassert solution(stdin='5') == '2'\nassert solution(stdin='4') == '0'\nassert solution(stdin='1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n4 8 5\\n') == '9'\nassert solution('5\\n3 10 2 1 5\\n') == '2'\nassert solution('4\\n0 5 15 10\\n') == '0'\nassert solution('1\\n1\\n') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4 5') == '3'\nassert solution('13 4 5') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed. Expected output: '{expected_output}', got: '{solution(input_data)}'.\" for test_case, input_data, expected_output in [\n    (0, \"10 4 5\", 3),\n    (1, \"13 4 5\", 1),\n]"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4 5\\n3 5 7 10') == '3'\nassert solution('13 4 5\\n7 8 9 10') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(4) == 4\nassert solution(6) == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5\\n2 4\\n5 3\\n4 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n2 4\\n5 3\\n4 2\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2\nassert solution == 4\nassert solution == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == 2\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == 4\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed!\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the number of lights: \")) == \"2\"\nassert solution(input(\"Enter the number of lights: \")) == \"4\"\nassert solution(input(\"Enter the number of lights: \")) == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"1111\\n\"\nassert solution(\"5 3\") == \"01010\\n\"\nassert solution(\"7 3\") == \"1011011\\n\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234\") == \"1234\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"1234567\") == \"1234567\"\nassert solution(\"12345678901234567890\") == \"12345678901234567890\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nfor n in [4, 5, 7]:\n    for k in [4, 5, 7, 9]:\n        assert solution(f\"{n} {k}\") == f\"{n} {k}\"\n\nassert solution(input()) == output()"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\nassert solution(\"4 4\") == \"1111\"\nassert solution(\"5 5\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"3 3\") == \"1111\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"0 2\") == \"\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1111'\nassert solution(open('input.txt', 'r').read()) == '01010'\nassert solution(open('input.txt', 'r').read()) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\nassert solution(\"4 5\") == \"Error: No unique minimal substring of length 4\"\nassert solution(\"5 4\") == \"Error: No unique minimal substring of length 5\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '01010'\nassert solution(open('input2.txt').read()) == '1111'\nassert solution(open('input3.txt').read()) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1111\", \"Test failed\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n') == '1111\\n'\nassert solution('5 3\\n') == '01010\\n'\nassert solution('7 3\\n') == '1011011\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Input and Output not matching.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n\\n3\\n1 1 1\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1/2'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0/1\"\nassert solution(1) == \"1/2\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1/2\", \"The output does not match the expected output.\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n4 3 2 1 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Expected: {output}\\nActual: {solution(input)}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed. Output: {solution(input_str)}, Expected output: {expected_output}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"1 0 1 0 0\"\"\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"\"\"4 3 2 1 0\"\"\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n4 3 2 1 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n0\\n0\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2\\n1 2\\n') == '0\\n2\\n11\\n11'\nassert solution('3\\n1 1 1\\n') == '1\\n0\\n11\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin}, expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 5 1 7 4\n''') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('''\n2\n1 2\n''') == '0\\n2\\n11\\n11'\nassert solution('''\n3\n1 1 1\n''') == '1\\n0\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n5\\n4 5 1 7 4\\n\\nInput\\n2\\n1 2\\n\\nInput\\n3\\n1 1 1\\n\\nOutput\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\") == \"Output\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case failed: {stdin}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\", \"The cube below can be constructed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 2\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 3\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 4\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 5\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 6\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 7\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 8\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 9\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 10\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 11\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 12\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 13\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 14\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 15\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 16\nassert solution(\"6\\n0 1 2"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\nassert solution(\"7\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"2\\n\"\nassert solution(\"8\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"3\\n\"\nassert solution(\"9\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"4\\n\"\nassert solution(\"10\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"5\\n\"\nassert solution(\"11\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"6\\n\"\nassert solution(\"12\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"7\\n\"\nassert solution(\"13\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"8\\n\"\nassert solution(\"14\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"9\\n\"\nassert solution(\"15\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"10\\n\"\nassert solution(\"16\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"11\\n\"\nassert solution(\"17\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"12\\n\"\nassert solution(\"18\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"13\\n\"\nassert solution(\"19\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"14\\n\"\nassert solution(\"20\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\n\nHere is the code to test the correctness of the solution:\n\n```python\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1, \"The cube below can be constructed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\n''') == '1'\n"
    }
]