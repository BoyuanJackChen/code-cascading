[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\", \"Solution not correct.\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == 5, \"Expected 5, got {}\".format(solution(\"2 3\"))\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == 9, \"Expected 9, got {}\".format(solution(\"8 ( 2 ( 2 1 ) ) 3\"))\nassert solution(\"4 ( 12 3 )\") == 36, \"Expected 36, got {}\".format(solution(\"4 ( 12 3 )\"))\nassert solution(\"6 ( 2 ) ( 3 )\") == 5, \"Expected 5, got {}\".format(solution(\"6 ( 2 ) ( 3 )\"))\nassert solution(\"6 ( ( 2 3 ) )\") == 5, \"Expected 5, got {}\".format(solution(\"6 ( ( 2 3 ) )\"))\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Expected {} but got {}\".format(output, solution(input()))\n\ninput_1 = \"\"\"\n2\n2 3\n\"\"\"\noutput_1 = \"\"\"\n5\n\"\"\"\n\ninput_2 = \"\"\"\n8\n( 2 ( 2 1 ) ) 3\n\"\"\"\noutput_2 = \"\"\"\n9\n\"\"\"\n\ninput_3 = \"\"\"\n4\n( 12 3 )\n\"\"\"\noutput_3 = \"\"\"\n36\n\"\"\"\n\ninput_4 = \"\"\"\n6\n( 2 ) ( 3 )\n\"\"\"\noutput_4 = \"\"\"\n5\n\"\"\"\n\ninput_5 = \"\"\"\n6\n( ( 2 3 ) )\n\"\"\"\noutput_5 = \"\"\"\n5\n\"\"\"\n\ninput_list = [input_1, input_2, input_3, input_4, input_5]\noutput_list = [output_1, output_2, output_3, output_4, output_5]\n\nfor i, inp in enumerate(input_list):\n    assert solution(inp) == output_list[i], \"Input {} does not match output {}\".format(inp, output_list[i])"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == 5\nassert solution(sample_input_2) == 9\nassert solution(sample_input_3) == 36\nassert solution(sample_input_4) == 5\nassert solution(sample_input_5) == 5"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\\n\") == 5\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == 9\nassert solution(\"4\\n( 12 3 )\\n\") == 36\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == 5\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == 5"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"0\"\nassert solution(\"009990001\") == \"3\", \"009990001\"\nassert solution(\"29998\") == \"5\", \"29998\"\nassert solution(\"610\") == \"4\", \"610\"\nassert solution(\"981\") == \"2\", \"981\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0') == '0', \"The minimum number of wheel advances required to produce a palindrome is 0\"\nassert solution('009990001') == '3', \"The minimum number of wheel advances required to produce a palindrome is 3\"\nassert solution('29998') == '5', \"The minimum number of wheel advances required to produce a palindrome is 5\"\nassert solution('610') == '4', \"The minimum number of wheel advances required to produce a palindrome is 4\"\nassert solution('981') == '2', \"The minimum number of wheel advances required to produce a palindrome is 2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Sample Input 1\"\nassert solution(\"009990001\") == \"3\\n\", \"Sample Input 2\"\nassert solution(\"29998\") == \"5\\n\", \"Sample Input 3\"\nassert solution(\"610\") == \"4\\n\", \"Sample Input 4\"\nassert solution(\"981\") == \"2\\n\", \"Sample Input 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"0\\n\") == \"0\\n\"\nassert solution(stdin=\"009990001\\n\") == \"3\\n\"\nassert solution(stdin=\"29998\\n\") == \"5\\n\"\nassert solution(stdin=\"610\\n\") == \"4\\n\"\nassert solution(stdin=\"981\\n\") == \"2\\n\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='0') == '0\\n', \"Test case 1 failed\"\nassert solution(stdin='009990001') == '3\\n', \"Test case 2 failed\"\nassert solution(stdin='29998') == '5\\n', \"Test case 3 failed\"\nassert solution(stdin='610') == '4\\n', \"Test case 4 failed\"\nassert solution(stdin='981') == '2\\n', \"Test case 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {stdin}, expected output {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\", \"Sabotage!\"\nassert solution(\"009990001\") == \"3\", \"Vandalism, perhaps. Nothing's actually been damaged.\"\nassert solution(\"29998\") == \"5\", \"It's a palindrome.\"\nassert solution(\"610\") == \"4\", \"No.\"\nassert solution(\"981\") == \"2\", \"Palindrome.\"\n\nfrom typing import List"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\n\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\n\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n\nassert solution('''\n2\n2013 1 0\n2013 2 0\n''') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution(stdin) == output\nassert solution"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\n\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\n\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\n\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(4) == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) =='seems legit'\nassert solution(4) =='seems legit'\nassert solution(5) =='seems legit'\nassert solution(1) =='seems legit'\nassert solution(2) == 'insufficient service'\nassert solution(6) == 'tampered odometer'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\nSample Output 1\\n3\\n\\nSample Input 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\\nSample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\") == \"3\\n2\\n\\n2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1:\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\nSample Output 1:\\n3\\n\") == \"3\\n\"\nassert solution(\"Sample Input 2:\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\nSample Output 2:\\n2\\n\") == \"2\\n\"\nassert solution(\"Sample Input 3:\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\nSample Output 3:\\n2\\n\") == \"2\\n\"\nassert solution(\"Sample Input 4:\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\nSample Output 4:\\n4\\n\" ) == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n') == '4'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor i, (c, a, b) in enumerate(stdin.split('\\n')):\n    assert len(c) <= 10, f\"Invalid color {c}\"\n    assert 1 <= int(a) <= 10000, f\"Invalid section {a}\"\n    assert 1 <= int(b) <= 10000, f\"Invalid section {b}\"\nprint(solution(stdin))"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr\"2\nBLUE 1 5000\nRED 5001 10000\"\n) == \"2\"\n\nassert solution(\nr\"3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\"\n) == \"3\"\n\nassert solution(\nr\"4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\nr\"2\nBLUE 1 4000\nRED 4002 10000\"\n) == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Sample Input 1:\\n2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1:\\n2\\n') == '2\\n'\nassert solution('Sample Input 2:\\n3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2:\\n3\\n') == '3\\n'\nassert solution('Sample Input 3:\\n4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3:\\nIMPOSSIBLE\\n') == 'IMPOSSIBLE\\n'\nassert solution('Sample Input 4:\\n2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4:\\nIMPOSSIBLE\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input(1)) == '2'\nassert solution(sample_input(2)) == '3'\nassert solution(sample_input(3)) == 'IMPOSSIBLE'\nassert solution(sample_input(4)) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"IMPOSSIBLE\"\nassert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"The output should be 6, but got: {}\".format(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == \"1\", \"The output should be 1, but got: {}\".format(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == \"5\", \"The output should be 5, but got: {}\".format(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == \"6\", \"The output should be 6, but got: {}\".format(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('PRATTATTATTIC') == 6, \"Invalid output\"\nassert solution('GGGGGGGGG') == 1, \"Invalid output\"\nassert solution('PRIME') == 5, \"Invalid output\"\nassert solution('BABBABABBABBA') == 6, \"Invalid output\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected output: 6, actual output: \" + str(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected output: 1, actual output: \" + str(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == \"5\", \"Expected output: 5, actual output: \" + str(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected output: 6, actual output: \" + str(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1: PRATTATTATTIC\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2: GGGGGGGGGG\"\nassert solution(\"PRIME\") == \"5\", \"Test 3: PRIME\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4: BABBABABBABBA\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test case 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test case 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Test case 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test case 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Solution is incorrect.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Solution is incorrect.\"\nassert solution(\"PRIME\") == \"5\", \"Solution is incorrect.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Solution is incorrect.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Input 1 incorrect\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Input 2 incorrect\"\nassert solution(\"PRIME\") == \"5\", \"Input 3 incorrect\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Input 4 incorrect\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected output: 6, actual output: \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected output: 1, actual output: \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Expected output: 5, actual output: \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected output: 6, actual output: \" + solution(\"BABBABABBABBA\")"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\", \"Your solution is incorrect.\"\nassert solution(input()) == \"1\", \"Your solution is incorrect.\"\nassert solution(input()) == \"0\", \"Your solution is incorrect.\"\nassert solution(input()) == \"0\", \"Your solution is incorrect.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\", \"The first example is incorrect.\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\", \"The second example is incorrect.\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\", \"The third example is incorrect.\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"The fourth example is incorrect.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case failed!\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\", \"Test 1 failed\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\", \"Test 4 failed\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE') == '0\\n', 'Test case 1 failed.'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1\\n', 'Test case 2 failed.'\nassert solution('I 1 X\\nD 1\\nE\\nE') == '0\\n', 'Test case 3 failed.'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0\\n', 'Test case 4 failed.'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 300, \"Expected output: 300, got: {}\".format(solution())\n\nassert solution() == 1900, \"Expected output: 1900, got: {}\".format(solution())\n\nassert solution() == 2300, \"Expected output: 2300, got: {}\".format(solution())\n\nassert solution() == 399, \"Expected output: 399, got: {}\".format(solution())"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\"\nassert solution(input4) == output4, \"Test 4 failed\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0 1 0 0 0') == '300\\n', \"Incorrect output for Sample Input 1\"\nassert solution('5 0 1 0 1 0') == '1900\\n', \"Incorrect output for Sample Input 2\"\nassert solution('6 0 1 1 0 0') == '2300\\n', \"Incorrect output for Sample Input 3\"\nassert solution('10 399 0 0 0 0') == '399\\n', \"Incorrect output for Sample Input 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"4 0 0 0 0 0\") == \"0\"\nassert solution(\"4 0 1 0 0 1\") == \"300\"\nassert solution(\"4 0 0 0 1 0\") == \"0\"\nassert solution(\"4 0 0 0 0 1\") == \"0\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output a single integer: the maximum amount of Bling Johan can have after playing 4 days.\"\nassert solution(input()) == \"Output a single integer: the maximum amount of Bling Johan can have after playing 5 days.\"\nassert solution(input()) == \"Output a single integer: the maximum amount of Bling Johan can have after playing 6 days.\"\nassert solution(input()) == \"Output a single integer: the maximum amount of Bling Johan can have after playing 10 days.\"\nassert solution(input()) == \"Output a single integer: the maximum amount of Bling Johan can have after playing 300 days.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12''') == '2'\nassert solution('''2 10\n1 5\n1 4''') == '2'\nassert solution('''2 10\n1 5\n4 1''') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 10\n    1 12\n    1 13\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 12\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 4\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() # check if the solution matches the output"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but returned '{solution(input())}'.\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\"\n) == \"28\\n\"\n\nassert solution(\n\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\"\n) == \"36.2842712475\\n\"\n\nassert solution(\n\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\"\n) == \"28.970562748\\n\"\n\nassert solution(\n\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\"\n) == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28\\n'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475\\n'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748\\n'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32\\n'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == 32\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n    \"\"\"\n) == \"36.2842712475\"\n\nassert solution(\n    \"\"\"6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n    \"\"\"\n) == \"28.970562748\"\n\nassert solution(\n    \"\"\"8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    99 6 -8\n    \"\"\"\n) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == \"28\", \"Expected 28, got {}\".format(solution(input_1))\nassert solution(input_2) == \"36.2842712475\", \"Expected 36.2842712475, got {}\".format(solution(input_2))\nassert solution(input_3) == \"28.970562748\", \"Expected 28.970562748, got {}\".format(solution(input_3))\nassert solution(input_4) == \"32\", \"Expected 32, got {}\".format(solution(input_4))"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Input should be (3, 2)\\n\"\nassert solution() == \"-1\\n\", \"Input should be (3, 5, 1, 7)\\n\"\nassert solution() == \"1\\n\", \"Input should be (2, 4, 10, 8)\\n\"\nassert solution() == \"1\\n\", \"Input should be (3, 1, 6, 5, 2, 5, 4, 2)\\n\"\nassert solution() == \"1\\n\", \"Input should be (5, 1, 7, 7)\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\"\nassert solution(\"1\\n3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\"\nassert solution(\"1\\n3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\"\nassert solution(\"1\\n2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\", \"Solution not provided\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n1\\n1\\n1\\n\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Input Error\"\nassert solution(\"\") == \"Input Error\"\nassert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"2\"\nassert solution(\"5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\"\nassert solution(\"5 5 5 5\\n4 4 4 4\") == \"-1\"\nassert solution(\"5 5 5 5\\n5 5 5 5\") == \"-1\"\nassert solution(\"5 5 5 5\\n4 4 4 4\") == \"-1\"\nassert solution(\"5 5 5 5\\n3 3 3 3\") == \"0\"\nassert solution(\"5 5 5 5\\n5 5 5 5\") == \"0\"\nassert solution(\"5 5 5 5\\n4 4 4 4\") == \"0\"\nassert solution(\"5 5 5 5\\n3 3 3 3\") == \"0\"\nassert solution(\"5 5 5 5\\n2 2 2 2\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\nassert solution(\"5 5 5 5\\n1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1:\\n3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\nSample Output 1:\\n3\\n\") == \"3\\n\"\nassert solution(\"Sample Input 2:\\n3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\nSample Output 2:\\n1\\n\") == \"1\\n\"\nassert solution(\"Sample Input 3:\\n3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\nSample Output 3:\\n1\\n\") == \"1\\n\"\nassert solution(\"Sample Input 4:\\n2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\nSample Output 4:\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 10, \"Sample Input 1\"\nassert solution(55) == 55, \"Sample Input 2\"\nassert solution(101) == -1, \"Sample Input 3\"\nassert solution(1234321) == 94708, \"Sample Input 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10, \"Test 1 failed\"\nassert solution(55) == 55, \"Test 2 failed\"\nassert solution(101) == -1, \"Test 3 failed\"\nassert solution(1234321) == 94708, \"Test 4 failed\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 10, \"Test case 1 failed\"\nassert solution(55) == 55, \"Test case 2 failed\"\nassert solution(101) == -1, \"Test case 3 failed\"\nassert solution(1234321) == 94708, \"Test case 4 failed\"\n\nfrom typing import List\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n2\\n4\\n0\\n\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"input_3.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"input_4.txt\", \"r\").read()) == \"0\\n\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0\n\nfrom typing import List"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n2\\n4\\n0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"(-1.26167861, 3.88425357)\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n\nfrom typing import List"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\\n\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\\n\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\\n\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\\n\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n0.5 -5.301 3.098\n''') == '''\n-1.26167861 3.88425357\n'''\n\nassert solution('''\n0.5 8 8\n''') == '''\n9.21068947 2.56226688\n'''\n\nassert solution('''\n1 8 8\n''') == '''\n6.22375968 -0.31921472\n'''\n\nassert solution('''\n0.5 -8 8\n''') == '''\n-4.36385220 9.46891588\n'''"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\\n\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\\n\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\\n\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\\n\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output the x, y coordinates of the point on the spiral where the avatar should leave the spiral, continue in the direction it is moving, and hit the target without intersecting the spiral.\\n\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1.26167861 3.88425357\\n6.22375968 -0.31921472\\n-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"0.32733536 0.38561739\"\nassert solution(\"0.5 8 8\") == \"12.44751925 5.60354534\"\nassert solution(\"1 8 8\") == \"7.36224119 -1.04601137\"\nassert solution(\"0.5 -8 8\") == \"-7.11683114 14.00499317\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"0\n0\n\n\"\"\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"\"\"1\n2\n\n\"\"\"\nassert solution(open(\"input_3.txt\", \"r\").read()) == \"\"\"0\n0\n\n\"\"\"\nassert solution(open(\"input_4.txt\", \"r\").read()) == \"\"\"2\n4\n5\n\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 2\n1 2\n2 1\n\"\"\") == \"\"\"1\n2\n\"\"\"\n\nassert solution(\"\"\"3 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\"1\n1\n\"\"\"\n\nassert solution(\"\"\"4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\"\"\") == \"\"\"0\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"0\n2\n\"\"\"\n\nassert solution() == \"\"\"1\n2\n\"\"\"\n\nassert solution() == \"\"\"1\n1\n\"\"\"\n\nassert solution() == \"\"\"0\n2\n4\n5\n\"\"\"\n\nassert solution() == \"\"\"2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n0\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n2\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n0\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"11\\n\"\nassert solution(\"\"\"\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\\n\"\nassert solution(\"\"\"\n2 1 0 1\n0 1 2\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n\"\"\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '11\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"18\\n\"\nassert solution(open(\"sample_input4.txt\", \"r\").read()) == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1, \"Expected output1: {}, got {}\".format(expected_output1, solution(sample_input1))\nassert solution(sample_input2) == expected_output2, \"Expected output2: {}, got {}\".format(expected_output2, solution(sample_input2))\nassert solution(sample_input3) == expected_output3, \"Expected output3: {}, got {}\".format(expected_output3, solution(sample_input3))\nassert solution(sample_input4) == expected_output4, \"Expected output4: {}, got {}\".format(expected_output4, solution(sample_input4))\n\nsample_input1 = \"\"\"4 2 1 2 1\"\"\"\nexpected_output1 = \"\"\"6\"\"\"\nsample_input2 = \"\"\"3 3 1 1\"\"\"\nexpected_output2 = \"\"\"0\"\"\"\nsample_input3 = \"\"\"3 2 2 3\"\"\"\nexpected_output3 = \"\"\"18\"\"\"\nsample_input4 = \"\"\"3 1 2 3\"\"\"\nexpected_output4 = \"\"\"12\"\"\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\", \"Test case 1 failed\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\", \"Test case 2 failed\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\", \"Test case 3 failed\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\", \"Test case 4 failed\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == 6, 'Test Case 1'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == 0, 'Test Case 2'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == 18, 'Test Case 3'\nassert solution('3 1 2 3\\n2 1 2\\n0') == 12, 'Test Case 4'\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\", \"Baby Timmy has a pool of balls that he plays with. The pool is made up of balls with 4 different colors with a certain number of each color. Baby Timmy finds it interesting to order these balls in a line given certain conditions he made. Timmy has two conditions when playing his own game: - Balls of certain colors may not be next to each other - One particular sequence of colors which Timmy likes most must appear as many times as possible.\n\nCan you compute the total number of different ways in which Timmy can arrange his balls?\n\nFor instance, suppose Timmy has 2 red, 1 yellow, 2 green, and 1 blue ball(s). He doesn\u2019t like for red or yellow balls to be next to each other, and his favorite sequence is \"green blue\". The following 6 arrangements meet the requirements:\n\nred green blue red green yellow \nred green blue yellow green red \nred green red green blue yellow \nred green yellow green blue red \nyellow green blue red green red \nyellow green red green blue red \n\nThis arrangement corresponds to Sample Input 1.\n\nNote that Timmy insists on including his favorite sequence as often as the available balls allow, even if that means not being able to complete the arrangement of balls at all.\n\n-----Input-----\nThe input consists of a single test case with three lines. The first line contains an integer $n$ ($2 \\le n \\le 50$), which describe the number of different colors. The remaining $n$ integers on that line denote how many balls Timmy has of each color (colors are numbered $1$ through $n$ and their frequencies appear in order). The number of balls he has of each color is between $1$ and $50$, inclusive.\n\nThe second line of input describes which colors Timmy does not want next to each other. The first integer $k$ ($0 \\le k \\le n$) gives the number of colors. This is followed by $k$ integers $c_ i$ ($1 \\le c_ i \\le n$) denoting the colors that prevent balls having any of these colors from being next to each other. Each $c_ i$ is unique.\n\nThe third line of input describes the sequence Timmy likes most. This first integer $l$ ($0 \\le l \\le n$) describes the length of this sequence, and the following $l$ integers $s_ i$ ($1 \\le s_ i \\le n$) describe the sequence that must appear as often as possible in the arrangement. Each $s_ i$ is unique and the sets $\\{ c_ i \\} $ and $\\{ s_ i \\} $ do not intersect.\n\n-----Output-----\nOutput the number of arrangements Timmy can make that satisfy the given conditions. Since the number can be large, output its value modulo $1000000007$.\n\n-----Examples-----\nSample Input 1:\n4 2 1 2 1\n2 1 2\n2 3 4\nSample Output 1:\n6\n\nSample Input 2:\n3 3 1 1\n1 1\n2 2 3\nSample Output 2:\n0\n\nSample Input 3:\n3 2 2 3\n1 1\n2 2 3\nSample Output 3:\n18\n\nSample Input 4:\n3 1 2 3\n2 1 2\n0\nSample Output 4:\n12"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\", \"The output is incorrect\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\", \"Test Case 1\"\nassert solution() == \"0\", \"Test Case 2\"\nassert solution() == \"18\", \"Test Case 3\"\nassert solution() == \"12\", \"Test Case 4\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"468559\"\nassert solution(sample_input_2) == \"49401\"\nassert solution(sample_input_3) == \"20\"\nassert solution(sample_input_4) == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin) # remove the comment to pass the test"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed.\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1000000 1\") == \"468559\"\nassert solution(stdin=\"1000000 5\") == \"49401\"\nassert solution(stdin=\"1000000 16\") == \"20\"\nassert solution(stdin=\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 9]) == '1\\n'\nassert solution([4, 13]) == '3\\n'\nassert solution([18, 90]) == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 3 4 5') == '1'\nassert solution('13 12\\n2 2 2 2 2 2 2') == '3'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '1\\n', \"Test 1 failed\"\nassert solution(sample_input_2) == '3\\n', \"Test 2 failed\"\nassert solution(sample_input_3) == '12\\n', \"Test 3 failed\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\"\nassert solution(\"3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 7 8 9\\n\") == \"3\\n\"\nassert solution(\"2 2\\n3 4\\n\") == \"1\\n\"\nassert solution(\"5 4\\n6 5\\n7 8\\n\") == \"2\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"0\\n\"\nassert solution(\"2 3\\n4 6\\n\") == \"0\\n\"\nassert solution(\"2 4\\n5 7\\n\") == \"1\\n\"\nassert solution(\"4 6\\n8 10\\n\") == \"1\\n\"\nassert solution(\"3 4\\n6 8\\n10 12\\n\") == \"2\\n\"\nassert solution(\"2 3\\n5 7\\n9 11\\n\") == \"1\\n\"\nassert solution(\"3 4\\n7 9\\n11 13\\n\") == \"2\\n\"\nassert solution(\"3 6\\n8 10\\n14 16\\n\") == \"1\\n\"\nassert solution(\"2 4\\n6 8\\n10 12\\n14 16\\n\") == \"2\\n\"\nassert solution(\"4 8\\n12 16\\n20 24\\n\") == \"2\\n\"\nassert solution(\"2 4\\n6 8\\n10 12\\n14 16\\n28 32\\n\") == \"1\\n\"\nassert solution(\"2 5\\n7 9\\n11 13\\n15 17\\n31 33\\n\") == \"2\\n\"\nassert solution(\"5 9\\n12 18\\n19 25\\n30 36\\n41 47\\n\") == \"1\\n\"\nassert solution(\"3 6\\n9 12\\n15 18\\n21 24\\n27 30\\n\") == \"1\\n\"\nassert solution(\"2 4\\n7 10\\n11 14\\n15 19\\n21 25\\n\") == \"1\\n\"\nassert solution(\"4 8\\n12 16\\n20 24\\n28 32\\n36 40\\n\") == \"2\\n\"\nassert solution(\"4 8\\n12 16\\n20 24\\n28 32\\n36 40\\n\") == \"1\\n\"\nassert solution(\"5 9\\n12 18\\n19 25\\n30 36\\n41 47\\n\") == \"2\\n\"\nassert solution(\"4 9\\n13 17\\n21 25\\n29 33\\n37 41\\n\") == \"2\\n\"\nassert solution(\"5 8\\n13 17\\n21 25\\n29 33\\n37 41\\n\") == \"1\\n\"\nassert solution(\"5 9\\n12 18\\n19 25\\n30 36\\n41 47\\n\") == \"1\\n\"\nassert solution(\"2 5\\n7 10\\n11 14\\n15 19\\n21 25\\n\") == \"2\\n\"\nassert solution(\"3 4\\n6 8\\n10 12\\n14 16\\n28 32\\n\") == \"1\\n\"\nassert solution(\"3 4\\n7 9\\n11 13\\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'output.txt'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output the maximum revenue you can achieve by selling all 5 pieces of data.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\" # Expected output: 0"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == 0\nassert solution(\"3\\n4 7 8\\n\") == 3\nassert solution(\"5\\n2 3 4 5 8\\n\") == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0', \"Output not correct\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n' == '0\\n') == True\nassert solution('3\\n4 7 8\\n' == '3\\n') == True\nassert solution('5\\n2 3 4 5 8\\n' == '5\\n') == True"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed: solution() = {solution(stdin=input())}, expected_output = {expected_output}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"3\"\nassert solution(sample_input_3) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == 0\nassert solution(\"3\\n4 7 8\\n\") == 3\nassert solution(\"5\\n2 3 4 5 8\\n\") == 5"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\", \"Drat! cursed Charles. This stupid carry bar is not working in my Engine! I just tried to calculate the square of a number, but it's wrong; all of the carries are lost.\"\nassert solution(\"149\") == \"17\", \"Hmm, Ada, arithmetic without carries! I wonder if I can figure out what your original input was, based on the result I see on the Engine.\"\nassert solution(\"123476544\") == \"11112\", \"Given N, find the smallest positive integer a such that a^a = N.\"\n\nfrom typing import List"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed: expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6\n    149\n    123476544\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    100\n    \"\"\"\n) == \"-1\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    65\n    75\n    85\n    95\n    \"\"\"\n) == \"75\\n\"\n\nassert solution(\n    \"\"\"\n    9\n    18\n    27\n    36\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    0\n    1\n    2\n    3\n    4\n    5\n    6\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == 4\nassert solution(\"149\") == 17\nassert solution(\"123476544\") == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'adcb', 'IMPOSSIBLE'\n\nassert solution(stdin) == 'AMBIGUOUS', 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\nca\\nabd\\nabcd\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbac\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\") == \"9\\n\"\nassert solution(\"10 20 0 0\") == \"10\\n\"\nassert solution(\"100 20 543 12\") == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"164\", \"Expected output: 164, but got: \" + solution(stdin)"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3\\n10 20 0 0\\n100 20 543 12') == 9, \"Your solution is incorrect.\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 9, \"Test 1 failed\"\nassert solution(10) == 10, \"Test 2 failed\"\nassert solution(100) == 164, \"Test 3 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output for sample input 2\"\nassert solution(sample_input3) == sample_output3, \"Incorrect output for sample input 3\"\n\nsample_input1 = \"2 3 3 3\"\nsample_output1 = \"9\"\n\nsample_input2 = \"10 20 0 0\"\nsample_output2 = \"10\"\n\nsample_input3 = \"100 20 543 12\"\nsample_output3 = \"164\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == 'yes'\nassert solution(input2) == 'no'\nassert solution(input3) == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes\\n'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no\\n'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes\\n'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Your solution is not correct\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Your solution is not correct\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Your solution is not correct\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\") == \"yes\"\n\nassert solution(\"\"\"\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n\"\"\") == \"no\"\n\nassert solution(\"\"\"\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n\"\"\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\", \"Invalid Output 1\"\nassert solution(\"12121131221\") == \"7\", \"Invalid Output 2\"\nassert solution(\"123456789\") == \"1\", \"Invalid Output 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\", \"Test case 1 failed\"\nassert solution(\"12121131221\") == \"7\", \"Test case 2 failed\"\nassert solution(\"123456789\") == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\", \"sample case 1\"\nassert solution(\"12121131221\") == \"7\", \"sample case 2\"\nassert solution(\"123456789\") == \"1\", \"sample case 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output a single integer, indicating the maximum amount of gold that the bandits can purloin and still get safely home.\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3 3\n    1\n    1 2\n    2 3\n    1 3\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    4 4\n    24 10\n    1 3\n    2 3\n    2 4\n    1 4\n    '''\n) == '24\\n'\n\nassert solution(\n    '''\n    6 8\n    100 500 300 75\n    1 3\n    1 4\n    3 6\n    4 5\n    3 5\n    4 6\n    2 5\n    2 6\n    '''\n) == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", \"The maximum amount of gold that the bandits can purloin and still get safely home is 0.\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"24\"\nassert solution(sample_input_3) == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution returned {solution(stdin)} instead of {expected}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    4 4\n    24 10\n    1 3\n    2 3\n    2 4\n    1 4\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    6 8\n    100 500 300 75\n    1 3\n    1 4\n    3 6\n    4 5\n    3 5\n    4 6\n    2 5\n    2 6\n    \"\"\"\n) == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output the maximum amount of gold that the bandits can purloin and still get safely home.\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\") == [\"1\", \"4\"]\nassert solution(\"5\\n1 2 3 4 5\") == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(\"4\\n2 1 4 3\") == [\"-1\"]"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == [\"1\", \"4\"]\nassert solution(\"5\\n1 2 3 4 5\\n\") == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(\"4\\n2 1 4 3\\n\") == [\"-1\"]\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5)) == ['1', '2', '3', '4', '5']\nassert solution(str(4)) == ['1', '2', '3', '4']\nassert solution(str(2)) == ['2']\nassert solution(str(1)) == ['1']\nassert solution(str(10)) == ['1', '2', '3', '4', '5']"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(1) == \"1\"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(10) == \"1 2 3 4 5 10\"\nassert solution(15) == \"1 2 3 4 5 10 15\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for function solution. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 8\nassert solution() == 8\nassert solution() == 1"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '8', 'Expected Output 8, Actual Output:'+ solution(stdin)"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == \"8\"\nassert solution(r\"3 3\\n...\\n.#.\\n...\\n\") == \"1\"\nassert solution(r\"2 6\\n.#####\\n#####.\\n\") == \"5\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Incorrect solution\"\nassert len(solution(stdin)) == output, \"Incorrect length of output\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 8\nassert solution(open('sample_input1.txt', 'r')) == 8\nassert solution(open('sample_input2.txt', 'r')) == 1\nassert solution(open('sample_input3.txt', 'r')) == 5\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8\", \"Incorrect output.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"..#..#..\") == 8\nassert solution(\"..#..#..\") == 8\nassert solution(\"..#..#..\") == 8\nassert solution(\"..#..#..\") == 8\nassert solution(\"..#..#..\") == 8\n"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\\ndef solution(stdin: str) -> str:    pass\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"3 3 3\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(open('input2.txt', 'r').read()) == \"2 2\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(open('input3.txt', 'r').read()) == \"-1\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"19 12 2 18 5 5\"\nassert solution() == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution() == \"13\"\nassert solution() == \"10 7 6 5 4\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution() == \"5\"\nassert solution()"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"6\\n19 12 2 18 5 5\\n\", \"Sample Input 1\"\nassert solution(input2) == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\", \"Sample Input 2\"\nassert solution(input3) == \"-1\\n\", \"Sample Input 3\"\n\nfrom typing import List"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5\\n'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nGot output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution returned {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4') == '5 1'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4') == '1 5'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3') == '3 2'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n') == '5 1\\n'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n') == '1 5\\n'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n') == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\\n\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"jumping_paths.txt\", \"r\").read()) == \"5 1\"\nassert solution(open(\"jumping_paths_2.txt\", \"r\").read()) == \"1 5\"\nassert solution(open(\"jumping_paths_3.txt\", \"r\").read()) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Test Case #1:\\n5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\nTest Case #2:\\n5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\nTest Case #3:\\n4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\nTest Case #4:\\n3\\n2\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"5\"\nassert solution() == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\", \"Expected Output: 1\\n, Actual Output: \" + solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\")"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(5) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5]) == \"1\"\nassert solution([5,3,3,3,3,3,4]) == \"5\"\nassert solution([6,3,1,1,2,1,3,4,5]) == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"4\n3\n4\n5\n6\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2') == '4\\n3\\n4\\n5\\n6'\nassert solution('8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1') == '0\\n'\nassert solution('9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2') == '5\\n1\\n2\\n3\\n6\\n7'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n6\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\nassert solution(open('input1.txt', 'r')) == '4\\n3\\n4\\n5\\n6\\n'\nassert solution(open('input2.txt', 'r')) == '0\\n'\nassert solution(open('input3.txt', 'r')) == '5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    8\n    1 3 1\n    2 3 1\n    3 4 3\n    4 5 4\n    5 6 3\n    6 7 2\n    6 8 2\n''') == '''\n4\n3\n4\n5\n6\n6\n'''\n\nassert solution('''\n    8\n    1 2 2\n    1 3 1\n    2 4 3\n    2 7 1\n    3 5 2\n    5 6 2\n    7 8 1\n''') == '''\n0\n'''\n\nassert solution('''\n    9\n    1 2 2\n    1 3 1\n    1 4 5\n    1 5 5\n    2 6 3\n    3 7 3\n    4 8 1\n    5 9 2\n''') == '''\n5\n1\n2\n3\n6\n7\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"30\", \"Sample Output 3 is incorrect\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == 5\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == 6\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Solution for sample input 1 is 5\\n\"\nassert solution(input()) == \"Solution for sample input 2 is 6\\n\"\nassert solution(input()) == \"Solution for sample input 3 is 30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed: expected {expected_output}, got {solution(input())}\"\n\nfor case_num, input_str, expected_output in [\n    (1, \"1 2\\nV1 V2 V1 V1 V2\\n\", 5),\n    (2, \"2 1\\nV1 V2 V1 V1 V2\\n\", 6),\n    (3, \"1 2\\nR10 V1 V2 V1 E\\n\", 30),\n]:\n    assert solution(input_str) == expected_output, f\"Test case {case_num} failed\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}, Expected: {output()}\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\") == \"5\\n\", \"Sample Output 1\"\nassert solution(\"Sample Input 2\") == \"6\\n\", \"Sample Output 2\"\nassert solution(\"Sample Input 3\") == \"30\\n\", \"Sample Output 3\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\n\\nSample Input 2: 2 1\\nV1 V2 V1 V1 V2\\nSample Output 2: 6\\n\\nSample Input 3: 1 2\\nR10 V1 V2 V1 E\\nSample Output 3: 30\") == \"5\\n6\\n30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is incorrect. Expected output: '{expected_output}'.\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\"\nassert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution mismatch. Received: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 24) == 38\nassert solution(3, 16) == 16\nassert solution(3, 80) == 16\nassert solution(3, 216) == 546\nassert solution(3, 10**9) == \"impossible\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input_1.txt').read()) == '38'\nassert solution(open('sample_input_2.txt').read()) == 'impossible'\nassert solution(open('sample_input_3.txt').read()) == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"38\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\", \"Expected Output: 38\"\nassert solution(\"10 11\") == \"impossible\", \"Expected Output: impossible\"\nassert solution(\"9 216\") == \"546\", \"Expected Output: 546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == 466.662\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == 10.00005\nassert solution('3 4 1 0\\n0 2 0.25 8') == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    20 60 2 1\n    5 15 0.33333 30\n    22 60 0.66666 70\n    0 10\n    \"\"\"\n) == \"466.662\"\n\nassert solution(\n    \"\"\"\n    3 4 2 1\n    1 3 0.25 8\n    2 4 0.66667 15\n    1 2\n    \"\"\"\n) == \"10.00005\"\n\nassert solution(\n    \"\"\"\n    3 4 1 0\n    0 2 0.25 8\n    \"\"\"\n) == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed: expected {expected}, got {solution(input)}\"\nprint(solution(input))\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\\n\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\\n\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0.000000000000000', 'Test case 3 failed'\nprint('Test case 3 passed')\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\\n3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\nSample Output 1\\n1.500000000000000\\nSample Input 2\\nblue red 1.0\\nred pink 1.5\\nSample Output 2\\n0.000000000000000\\nSample Input 3\\nblue green 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nSample Output 3\\n10.000000000000000\\n\") == \"1.500000000000000\\n\"\nassert solution(\"Sample Input 2\\nblue red 1.0\\nred pink 1.5\\nSample Output 2\\n0.000000000000000\\nSample Input 3\\nblue green 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nSample Output 3\\n0.000000000000000\\n\") == \"0.000000000000000\\n\"\nassert solution(\"Sample Input 3\\nblue green 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nSample Output 3\\n10.000000000000000\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000\\n'\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == '0.000000000000000\\n'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000\\n'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution failed for {input()}\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"blue pink 1.0\") == \"1.5\"\nassert solution(\"red pink 1.5\") == \"1.0\"\nassert solution(\"blue red 1.0\") == \"0.0\"\nassert solution(\"orange pink 1.9\") == \"1.0\"\nassert solution(\"yellow orange 1.9\") == \"1.0\"\nassert solution(\"green yellow 1.9\") == \"1.0\"\nassert solution(\"blue green 1.9\") == \"1.0\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"1.5000000000000000\"\nassert solution(sample_input2) == \"0.0000000000000000\"\nassert solution(sample_input3) == \"10.0000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"blue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test {test_num} failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Output: {solution(stdin)}, Expected: {expected}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"too many\" # your solution here"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"180\\n\"\nassert solution(input2) == \"22\\n\"\nassert solution(input3) == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"180\"\nassert solution(sample_input2) == \"22\"\nassert solution(sample_input3) == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"todo\"\nassert \"todo\" == \"too many\"\nassert \"too many\" == \"too many\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\") == 20, \"Sample Input 1\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\") == 17, \"Sample Input 2\"\nassert solution(\"3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\") == -1, \"Sample Input 3\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == ('20 20\\n17 17\\n',)"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\\n17 17\\n\"\n\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\\n17 17\\n\"\n\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 20, \"Expected result: 20, but got: {}.\".format(solution())\nassert solution() == 17, \"Expected result: 17, but got: {}.\".format(solution())\nassert solution() == -1, \"Expected result: -1, but got: {}.\".format(solution())"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\n\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n### Solution ###\\n\\ndef solution(stdin: str) -> str: \\n    h, w, n = map(int, stdin.split())\\n    pattern = list(input())\\n    board = [['.'] * w for _ in range(h)]\\n    commands = []\\n    for _ in range(n):\\n        direction, distance = map(str.strip, stdin.split())\\n        if direction == 'up':\\n            commands.append((0, -distance, direction, w))\\n        elif direction == 'down':\\n            commands.append((0, distance, direction, w))\\n        elif direction == 'left':\\n            commands.append((-distance, 0, direction, h))\\n        elif direction == 'right':\\n            commands.append(distance, 0, direction, h)\\n        else:\\n            raise ValueError('Invalid direction')\\n    min_time = max_time = float('inf')\\n    for i in range(h):\\n        for j in range(w):\\n            if board[i][j] == '#':\\n                continue\\n                # can run dry at timestep 0\\n            for command in commands:\\n                if 0 <= i + command[0] < h and 0 <= j + command[1] < w:\\n                    board[i + command[0]][j + command[1]] = pattern[i + command[0]][j + command[1]]\\n                    if board[i + command[0]][j + command[1]] == pattern[i + command[0]][j + command[1]]:\\n                        min_time = min(min_time, i + command[0])\\n                        max_time = max(max_time, i + command[0] + command[2])\\n\\n    if max_time == float('inf'):\\n        return -1, -1\\n    return min_time, max_time, board\\n\\n### Test ###\\n\\nassert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\n\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\n\\n\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output "
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n### Solution ###\\n\\nThe earliest and latest time that the marker can dry out is at timestep 20. This is because the marker will dry out at timestep 20, but it will not dry out until timestep 22. The maximum time that can pass before the marker can dry out is at timestep 20. This is because the marker will dry out at timestep 22, and the marker can dry out at timestep 22 before it reaches the end of the drawing, which is timestep 22. The target drawing is at timestep 22. Therefore, the output is 20, 22, and 22, which is the minimum and maximum time that can pass before the marker can dry out, respectively."
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"20 20\\n17 17\\n\"\n\nassert solution(\"3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1\nprint(\"Success\")"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"impossible\"\nassert solution(sample_input2) == \"300\"\nassert solution(sample_input3) == \"88\"\n\nsample_input1 = \"\"\"371\n3\n2 40 65\n2 100 150\n2 300 320\"\"\"\n\nsample_input2 = \"\"\"310\n3\n2 40 65\n2 100 150\n2 300 320\"\"\"\n\nsample_input3 = \"\"\"90\n2\n2 20 35\n2 88 200\"\"\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible', 'Sample Input 1'\n\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300', 'Sample Input 2'\n\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88', 'Sample Input 3'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\"\\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    371\n    3\n    2 40 65\n    2 100 150\n    2 300 320''') == 'impossible'\n\nassert solution('''\n    310\n    3\n    2 40 65\n    2 100 150\n    2 300 320''') == '300'\n\nassert solution('''\n    90\n    2\n    2 20 35\n    2 88 200''') == '88'\n\nfrom typing import List"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n\n......\n......\n######\n......\n......\n......\n......\n\n......\n......\n######\n......\n......\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n......\n######\n......\n......\n......\n\n......\n......\n######\n......\n......\n......\n......\n\n......\n......\n######\n......\n......\n......\n......\n''') == 'cannot fold'\n\nassert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n\n..##..\n...#..\n..##..\n...#..\n......\n......\n\n..##..\n...#..\n..##..\n...#..\n......\n......\n\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"....\\n....\\n######\\n....\\n....\\n....\") == \"can fold\"\nassert solution(\"...#..\\n....\\n..##..\\n....\\n....\\n....\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"...#..\\n...#..\\n...#..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\") == \"can fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..#....\\n..#....\\n........\\n........\\n........\\n........\\n\") == \"can fold\"\nassert solution(\"...##...\\n...##...\\n...#....\\n...#....\\n...##...\\n...##...\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n') == 'cannot fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n') == 'cannot fold'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Sample Input 1: abcefgabc\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Sample Input 2: abcbabcba\"\nassert solution(\"aaaa\") == \"aaa\", \"Sample Input 3: aaaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test Input 1\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Test Input 2\"\nassert solution(\"aaaa\") == \"aaa\", \"Test Input 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, f\"Expected: {expected_solution}, Received: {solution}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution() == \"6\"\nassert solution() == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"6\"\nassert solution(3) == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}, expected output: {expected}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4'\nassert solution('2\\n1 4\\n2 10005\\n') == '6'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected_output, \"Solution does not match the expected output\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4', 'Test 1 failed'\nassert solution() == '6', 'Test 2 failed'\nassert solution() == '4', 'Test 3 failed'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2\\n'\nassert solution('3\\n7 7 7') == '3\\n'\nassert solution('5\\n1 2 3 2 1') == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == 2\nassert solution(sample_input(2)) == 3\nassert solution(sample_input(3)) == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n1 2 3 4 5') == '0'\nassert solution('7\\n2 3 4 4 8 12 24') == '2'\nassert solution('3\\n7 7 7') == '3'\nassert solution('5\\n1 2 3 2 1') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"The correct output is not given.\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed: Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"7\\n\") == \"1\"\nassert solution(\"2\\n\") == \"1\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(5) == 0\nassert solution(6) == 2\nassert solution(7) == 3\nassert solution(8) == 2\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\nassert solution(104) == 1\nassert solution(105) == 1\nassert solution(106"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == 3\nassert solution(\"1 2 1\\nGS\\n\") == 1\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\n\nassert solution('''\n1 2 1\nGS\n''') == '1'\n\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == 3\nassert solution('1 2 1\\nGS') == 1\nassert solution('2 2 10\\nS#') == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3\\n'\nassert solution('1 2 1\\nGS\\n') == '1\\n'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"Your code is incorrect\"\n\nfrom collections import deque"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\nfrom typing import List"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\n\nassert solution('''\n1 2 1\nGS\n''') == '1'\n\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..#\\n.#.G\\n..G\\nDRRDD\\n\") == 1\nassert solution(\"3 7\\n.......#\\n.G.##S#\\n.......#\\nLDLDLLDR\\n\") == 1\nassert solution(\"3 7\\n.#.....#\\n.G.##S#\\n.......#\\nLDLDLLDR\\n\") == 2"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..#\\n.#.G\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......S.G.#.\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....S.G.##\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nS..#\\n.#.G\\n..GDRRDD\\n3 7\\n.......#\\n.G.##S.\\n.......#\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.......#\\n.G.##S.\\n.......#\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.......#\\n.G.##S.\\n.......#\\nLDLDLLDR\\n3 7\\n.......#\\n.G.##S.\\n.......#\\nLDLDLLDR') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\"\n) == \"1\"\n\nassert solution(\n    \"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\"\n) == \"1\"\n\nassert solution(\n    \"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\"\n) == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n') == '1\\n'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n') == '1\\n'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\"\n) == \"1000200 799\\n\"\n\nassert solution(\n\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\"\n) == \"uncertain\\n\"\n\nassert solution(\n\"\"\"\n2\n100 0 100\n0 200 199\n\"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '1000200 799\\n'\nassert solution(open('input2.txt', 'r')) == 'uncertain\\n'\nassert solution(open('input3.txt', 'r')) == 'impossible\\n'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1000200 799\\nuncertain\\nimpossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1000200 799\"\nassert solution(stdin) == \"uncertain\"\nassert solution(stdin) == \"impossible\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == ['2', '1']\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == ['1', '2']\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17') == ['syntax error']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == \"1\\n2\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n2"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == ['2']\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == ['1']\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') == ['syntax error']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 1\nassert solution() == 2"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"many\\n\", \"Test 2 failed\"\nassert solution(stdin) == \"8640\\n\", \"Test 3 failed\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\" _ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"1\", \"Incorrect output for sample input 2\"\nassert solution(sample_input_3) == \"8640\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution should return '{expected_output}', but instead it returns '{solution(stdin)}'.\" for stdin, expected_output in [\n    (\"_ 90 22 _ 6 _ _ _ _ 81\", \"1\"),\n    (\"_ 40 _ _ _ 12 60 _ 90 _\", \"1\"),\n    (\"85 55 _ 99 51 _ _ _ _ _\", \"1\"),\n    (\"_ _ _ _ _ _ _ 85 63 153\", \"1\"),\n    (\"160 _ _ 136 _ _ _ _ _ 170\", \"8640\"),\n]"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed. Input: {input()}, Output: {output}, Expected output: {output}\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"many\" # Replace this line with your solution"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"8\\n\"\nassert solution() == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Incorrect Output\\nExpected: {output()}\\nActual: {solution(input())}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '2\\n'\nassert solution(sample_input_2) == '8\\n'\nassert solution(sample_input_3) == '24\\n'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2', 'Sample Input 1'\nassert solution(input()) == '8', 'Sample Input 2'\nassert solution(input()) == '24', 'Sample Input 3'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Expected: {output1}\\nGot: {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected: {output2}\\nGot: {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected: {output3}\\nGot: {solution(input3)}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1}:\\nExpected Output: {output}\\nGot Output: {solution(input())}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\", \"First example\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\", \"Second example\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\", \"Third example\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test Failed for the given input.\\nInput: {input()}\\nOutput: {output}\\nSolution: {solution(input())}\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessageboot\") == \"essa\"\nassert solution(\"treetreetreetreewood\") == \"3\"\nassert solution(\"orangesapples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('secretmessage') == 'essa', 'Test 1 failed'\nassert solution('treetreetreetree') == '3', 'Test 2 failed'\nassert solution('oranges') == '0', 'Test 3 failed'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Your solution is not correct.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Your solution is not correct.\"\nassert solution(\"oranges\") == \"0\", \"Your solution is not correct.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessageboot\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"orangesapples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"essa\\n\"\nassert solution(open(\"input2.txt\").read()) == \"3\\n\"\nassert solution(open(\"input3.txt\").read()) == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\"\nassert solution(\"4\\nv<^> \\n####\\n#.R# \\n#..# \\n####\\n\") == \"4\"\nassert solution(\"4\\n<<< \\n####\\n#.R# \\n#..# \\n####\\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n').strip() == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n').strip() == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n').strip() == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\nassert solution(stdin) == '4'\n\nassert solution(stdin) == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"4\"\nassert solution() == \"1\"\nsolution()\nsolution()"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n6\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n') == 2\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == 4\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == '1'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '13'\nprint('All test cases passed.')"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == {\n    \"def solution(stdin: str) -> str:\n        pass\",\n    \"assert solution == {\",\n    \"    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"    assert solution == {\",\n    \"        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"        assert solution == {\",\n    \"            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"            assert solution == {\",\n    \"                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                assert solution == {\",\n    \"                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                    assert solution == {\",\n    \"                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                        assert solution == {\",\n    \"                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                            assert solution == {\",\n    \"                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                assert solution == {\",\n    \"                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                    assert solution == {\",\n    \"                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                        assert solution == {\",\n    \"                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                            assert solution == {\",\n    \"                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                assert solution == {\",\n    \"                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                    assert solution == {\",\n    \"                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                        assert solution == {\",\n    \"                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                            assert solution == {\",\n    \"                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                assert solution == {\",\n    \"                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                    assert solution == {\",\n    \"                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                        assert solution == {\",\n    \"                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                            assert solution == {\",\n    \"                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                assert solution == {\",\n    \"                                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                    assert solution == {\",\n    \"                                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                        assert solution == {\",\n    \"                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                            assert solution == {\",\n    \"                                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                assert solution == {\",\n    \"                                                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                    assert solution == {\",\n    \"                                                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                        assert solution == {\",\n    \"                                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                            assert solution == {\",\n    \"                                                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                assert solution == {\",\n    \"                                                                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                    assert solution == {\",\n    \"                                                                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                        assert solution == {\",\n    \"                                                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                            assert solution == {\",\n    \"                                                                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                assert solution == {\",\n    \"                                                                                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                    assert solution == {\",\n    \"                                                                                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                        assert solution == {\",\n    \"                                                                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                            assert solution == {\",\n    \"                                                                                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                assert solution == {\",\n    \"                                                                                                                                                    \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                    assert solution == {\",\n    \"                                                                                                                                                        \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                        assert solution == {\",\n    \"                                                                                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                            assert solution == {\",\n    \"                                                                                                                                                                \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                                assert solution == {\",\n    \"                                                                                                                                                            \\\"def solution(stdin: str) -> str:\\\"\",\n    \"                                                                                                                                                            assert solution == {\",\n    \"                                                                                                                                                                \\\"def solution(stdin: str) ->"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"11\"\nassert solution(stdin) == \"32\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == '3'\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1''') == '6'\nassert solution('''2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7''') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output a single integer, the total number of fogs that are missed.\", \"Test failed\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\"\n) == \"11\\n\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Test 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Test 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Test 3 failed\"\n\nfrom math import sqrt"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"168.7916512460\"\nassert solution(sample_input2) == \"163.5274740179\"\nassert solution(sample_input3) == \"3.7320508076\"\n\nfrom math import sqrt"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '168.7916512460'\nassert solution(open('input_2.txt', 'r')) == '163.5274740179'\nassert solution(open('input_3.txt', 'r')) == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Test case 1 failed\"\n\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Test case 2 failed\"\n\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Test case 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Test case 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Test case 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"rarity\"\nassert solution(stdin) == \"canterlot\"\nassert solution(stdin) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\", \"Sample Output 1\") == \"rarity\"\nassert solution(\"Sample Input 2\", \"Sample Output 2\") == \"canterlot\"\nassert solution(\"Sample Input 3\", \"Sample Output 3\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"madam\"\nassert solution(1) == \"rarity\"\nassert solution(6) == \"defied\"\nassert solution(8) == \"canterlot\"\nassert solution(7) == \"defied\"\nassert solution(10) == \"defied\"\nassert solution(13) == \"defied\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"rarity\"\nassert solution() == \"canterlot\"\nassert solution() == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"def\"\nassert solution(6) == \"madam\"\nassert solution(12) == \"rarity\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"IMPOSSIBLE\"  # incorrect code"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 5, 5) == \"madam\"\nassert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\"\nassert solution(5, 3, 4) == \"IMPOSSIBLE\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"rarity\"\nassert solution(2) == \"canterlot\"\nassert solution(3) == \"madam\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"6 3 3\") == \"rarity\"\nassert solution(\"7 6 2\") == \"defied\"\nassert solution(\"10 8 2\") == \"defied\"\nassert solution(\"8 3 1\") == \"defied\"\nassert solution(\"6 1 2\") == \"defied\"\nassert solution(\"5 6 1\") == \"defied\"\nassert solution(\"7 6 4\") == \"defied\"\nassert solution(\"10 8 3\") == \"defied\"\nassert solution(\"8 3 2\") == \"defied\"\nassert solution(\"6 1 3\") == \"defied\"\nassert solution(\"5 6 2\") == \"defied\"\nassert solution(\"7 6 5\") == \"defied\"\nassert solution(\"10 8 4\") == \"defied\"\nassert solution(\"8 3 3\") == \"defied\"\nassert solution(\"6 1 4\") == \"defied\"\nassert solution(\"5 6 3\") == \"defied\"\nassert solution(\"7 6 6\") == \"defied\"\nassert solution(\"10 8 5\") == \"defied\"\nassert solution(\"8 3 4\") == \"defied\"\nassert solution(\"6 1 5\") == \"defied\"\nassert solution(\"5 6 4\") == \"defied\"\nassert solution(\"7 6 7\") == \"defied\"\nassert solution(\"10 8 6\") == \"defied\"\nassert solution(\"8 3 5\") == \"defied\"\nassert solution(\"6 1 6\") == \"defied\"\nassert solution(\"5 6 5\") == \"defied\"\nassert solution(\"7 6 8\") == \"defied\"\nassert solution(\"10 8 7\") == \"defied\"\nassert solution(\"8 3 6\") == \"defied\"\nassert solution(\"6 1 7\") == \"defied\"\nassert solution(\"5 6 6\") == \"defied\"\nassert solution(\"7 6 9\") == \"defied\"\nassert solution(\"10 8 8\") == \"defied\"\nassert solution(\"8 3 7\") == \"defied\"\nassert solution(\"6 1 8\") == \"defied\"\nassert solution(\"5 6 7\") == \"defied\"\nassert solution(\"7 6 10\") == \"defied\"\nassert solution(\"10 8 9\") == \"defied\"\nassert solution(\"8 3 8\") == \"defied\"\nassert solution(\"6 1 9\") == \"defied\"\nassert solution(\"5 6 8\") == \"defied\"\nassert solution(\"7 6 11\") == \"defied\"\nassert solution(\"10 8 10\") == \"defied\"\nassert solution(\"8 3 9\") == \"defied\"\nassert solution(\"6 1 10\") == \"defied\"\nassert solution(\"5 6 9\") == \"defied\"\nassert solution(\"7 6 12\") == \"defied\"\nassert solution(\"10 8 11\") == \"defied\"\nassert solution(\"8 3 10\") == \"defied\"\nassert solution(\"6 1 11\") == \"defied\"\nassert solution(\"5 6 10\") == \"defied\"\nassert solution(\"7 6 13\") == \"defied\"\nassert solution(\"10 8 12\") == \"defied\"\nassert solution(\"8 3 11\") == \"defied\"\nassert solution(\"6 1 12\") == \"defied\"\nassert solution(\"5 6 11\") == \"defied\"\nassert solution(\"7 6 14\") == \"defied\"\nassert solution(\"10 8 13\") == \"defied\"\nassert solution(\"8 3 12\") == \"defied\"\nassert solution(\"6 1 13\") == \"defied\"\nassert solution(\"5 6 12\") == \"defied\"\nassert solution(\"7 6 15\") == \"defied\"\nassert solution(\"10 8 14\") == \"defied\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. Definitive Edition.\") == \"International contest- motivation high Programmers have fun!. Definitive Edition.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\" + \"\\n\" + \"Leaves, glowing in autumn sun, \" + \"\\n\" + \"fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\" + \"\\n\" + \"contest- motivation high\" + \"\\n\" + \"Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == '''\nBlue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.\n'''\n\nassert solution('Who would know if we had too few syllables?') == '''\nWho would know if we had too few syllables?\n'''\n\nassert solution('International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\\n    pass') == '''\nInternational\ncontest- motivation high\nProgrammers have fun!.\n'''\n\nassert solution('') == ''\n\nassert solution('This is a test. Another test.') == 'This is a test. Another test.'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun,fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!. Definitive edition.') == 'International contest- motivation high Programmers have fun!. Definitive edition.'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\") == \"International contest- motivation high Programmers have fun.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International \\ncontest- motivation high \\nProgrammers have fun!. \\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ThoreHusfeldt\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore is awesome\"\nassert solution(\"ThoreHusfeldt\\nThoreHusfeldter\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\") == \"Thore sucks\"\nassert solution(\"ThoreHusfeldt\\nThoreHusfeldter\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\nThoreHusfeldt\\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=r\"\"\"\n2\nThoreTiemann\nThoreHusfeldt\n\"\"\") == \"ThoreH\\n\"\n\nassert solution(stdin=r\"\"\"\n2\nThoreHusfeldt\nJohanSannemo\n\"\"\") == \"Thore is awesome\\n\"\n\nassert solution(stdin=r\"\"\"\n2\nThoreHusfeldter\nThoreHusfeldt\n\"\"\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Thore is awesome\\n\"\nassert solution(open(\"input_2.txt\").read()) == \"Thore is awesome\\n\"\nassert solution(open(\"input_3.txt\").read()) == \"Thore is awesome\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"Thore is awesome\"\nassert solution(4) == \"Thore sucks\"\nassert solution(5) == \"ThoreH\"\nassert solution(6) == \"Thore is awesome\"\nassert solution(7) == \"Thore is awesome\"\nassert solution(8) == \"Thore sucks\"\nassert solution(9) == \"Thore is awesome\"\nassert solution(10) == \"Thore is awesome\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"2\nThoreTiemann\nThoreHusfeldt\n\"\"\") == \"ThoreH\"\n\nassert solution( \"\"\"2\nThoreHusfeldt\nJohanSannemo\n\"\"\") == \"Thore is awesome\"\n\nassert solution( \"\"\"2\nThoreHusfeldter\nThoreHusfeldt\n\"\"\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input(1)) == \"ThoreH\"\nassert solution(sample_input(2)) == \"Thore is awesome\"\nassert solution(sample_input(3)) == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\\n\", \"Test Case 1 failed.\"\nassert solution(\"L*R\") == \"25\\n\", \"Test Case 2 failed.\"\nassert solution(\"**\") == \"33\\n\", \"Test Case 3 failed.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output for 'P*P'.\"\nassert solution(\"L*R\") == 25, \"Incorrect output for 'L*R'.\"\nassert solution(\"**\") == 33, \"Incorrect output for '**'.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output for sample input 1\"\nassert solution(\"L*R\") == 25, \"Incorrect output for sample input 2\"\nassert solution(\"**\") == 33, \"Incorrect output for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"The value of the given set of walks is incorrect\"\nassert solution(\"L*R\") == 25, \"The value of the given set of walks is incorrect\"\nassert solution(\"**\") == 33, \"The value of the given set of walks is incorrect\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect output for sample input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect output for sample input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6, \"The output should be 6, but it is {}\".format(solution(\"P*P\"))\nassert solution(\"L*R\") == 25, \"The output should be 25, but it is {}\".format(solution(\"L*R\"))\nassert solution(\"**\") == 33, \"The output should be 33, but it is {}\".format(solution(\"**\"))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == 6, \"Expected: 6\\nActual: \" + str(solution(\"P*P\"))\nassert solution(\"L*R\") == 25, \"Expected: 25\\nActual: \" + str(solution(\"L*R\"))\nassert solution(\"**\") == 33, \"Expected: 33\\nActual: \" + str(solution(\"**\"))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test Case 1 failed\"\nassert solution(\"L*R\") == \"25\", \"Test Case 2 failed\"\nassert solution(\"**\") == \"33\", \"Test Case 3 failed\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\\n\"\n\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\\n\"\n\nassert solution(\"moo not foo\") == \"yes\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ulf is lukas') == 'yes'\nassert solution('herp is derp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nderp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\npoptart is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'yes'\nassert solution(1) == 'yes'\nassert solution(2) == 'wait what?'\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('herp is derp') == 'yes'\nassert solution('derp is herp') == 'yes'\nassert solution('herp is herp') == 'yes'\nassert solution('derp is derp') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes\\n'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?\\n'\nassert solution('1\\nmoo not foo\\n') == 'yes\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nAACCMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    AAACCMMAA\n    ACA\n    MM\n    ACMAA\n    AA\n    A\n    \"\"\"\n) == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\"\n\nassert solution(\n    \"\"\"\n    3\n    ACMA\n    ACM\n    ACA\n    AMA\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1\n    AM\n    MA\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n        AACCMMAA\n        ACA\n        MM\n        ACMAA\n        AA\n        A\n        ''') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\n\nassert solution('''\n    3\n        ACMA\n        ACM\n        ACA\n        AMA\n        ''') == 'impossible\\n'\n\nassert solution('''\n    1\n        AM\n        MA\n        ''') == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(open('input.txt', 'r').read())}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nAACCMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\nACA\\nAMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\\n3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\nMA\\n\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nAACCMMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCMMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nAACCAC\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\nACM\\nACA\\nAMA\\n\") == \"impossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\nAACC\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACC\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\nACM\\nACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == 'impossible'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3.000000000000\"\nassert round(solution(), 6) == 18.9029850746"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\n\nassert solution('''2 4 1\n1 0.5 5''') == '3'\n\nassert solution('''10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"124\", \"Sample Input 1\"\nassert solution(stdin) == \"3\", \"Sample Input 2\"\nassert solution(stdin) == \"18.9029850746\", \"Sample Input 3\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n\"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"\n2 4 1\n1 0.5 5\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n\"\"\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == 124\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == 3\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == 18.9029850746"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2') == '124'\nassert solution('2 4 1\\n1 0.5 5') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"18.9029850746\", \"Expected output not found.\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(100, 111, 5) == 124\nassert solution(20, 0.5, 10) == 40\nassert solution(80, 0.5, 2) == 18.9\nassert solution(85, 0.5, 2) == 18.8\nassert solution(90, 0.5, 2) == 18.7\nassert solution(95, 0.5, 2) == 18.6"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\") == \"2 1 4\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Sample Input 1\\n4 3\\nSample Output 1\\n2 1 2\\n\\nSample Input 2\\n2 1\\nSample Output 2\\n1\\n\\nSample Input 3\\n5 22\\nSample Output 3\\n4 3 4 2') == 'Sample Output 3\\n4 3 4 2'\nassert solution('Sample Input 1\\n4 3\\nSample Output 1\\n2 1 2\\n\\nSample Input 2\\n2 1\\nSample Output 2\\n1\\n\\nSample Input 3\\n5 22\\nSample Output 3\\n4 3 4 2\\nSample Input 4\\n5 22\\nSample Output 4\\n1 1 1 1') == 'Sample Output 4\\n1 1 1 1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {stdin}, expected output: {expected_output}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"n: \")) == \"1 2 1\"\nassert solution(input(\"n: \")) == \"2 1 1\"\nassert solution(input(\"n: \")) == \"1 1 1\"\nassert solution(input(\"n: \")) == \"1 1 1\"\nassert solution(input(\"n: \")) == \"1 1 1\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n2 1\\n5 22\\n') == '2 1 4 3'\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\n2\\n1\\n3\\n4\\n1\\n3\\n5\\n6\\n7\\n1\\n2\\n2\\n2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n2"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"0\\n\", \"Your solution is incorrect. The expected output is 0.\"\nassert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"2\\n\", \"Your solution is incorrect. The expected output is 2.\"\nassert solution(stdin) == \"0\\n\", \"Your solution is incorrect. The expected output is 0.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test case {case} failed: {output}!= {solution(stdin)}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", \"Sample Output 1\"\nassert solution(stdin) == \"2\\n\", \"Sample Output 2\"\nassert solution(stdin) == \"0\\n\", \"Sample Output 3\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2\\n'\n\nassert solution(r'''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2\\n'\n\nassert solution(r'''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed: expected {expected_output}, got {solution(input_data)}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"20.00000000\", \"Your solution is incorrect. It should return the correct value.\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\\n\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"20.00000000\", \"Test Input 1\"\nassert solution(stdin) == \"3.14159265\", \"Test Input 2\"\nassert solution(stdin) == \"28.26445910\", \"Test Input 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\", \"Example 1\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\", \"Example 2\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\", \"Example 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    20 0\n    1.00 0.10\n    \"\"\"\n) == \"20.00000000\"\n\nassert solution(\n    \"\"\"\n    -10 10\n    10.00 1.00\n    \"\"\"\n) == \"3.14159265\"\n\nassert solution(\n    \"\"\"\n    0 20\n    1.00 0.10\n    \"\"\"\n) == \"28.26445910\"\n\nfrom typing import List"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"170\"\"\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"170\"\nassert solution(sample_input2) == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 120\\n3 50\\n2 80') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"170\" # sample output 1\nassert solution() == \"150\" # sample output 2\n\nfrom typing import List"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 170"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\", \"Test 1 failed.\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == 170\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected Output: {expected_output_1}, Actual Output: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected Output: {expected_output_2}, Actual Output: {solution(sample_input_2)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output the length of the longest race path on a single line.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(r\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str: \\n    pass\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.04464286590522034\", \"Incorrect output\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0.500000'\n\nfrom typing import List"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.5\", \"Test Failed\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.5, \"The output should be 0.5, but it is {} instead\".format(solution())\nassert abs(solution() - 0.5) <= 1e-6, \"The output should be 0.5, but it is {} instead\".format(solution())"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"IMPOSSIBLE\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution for problem {problem_number} is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\nassert solution(input()) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Your solution is not correct\"\nassert solution(sample_input_2) == sample_output_2, \"Your solution is not correct\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received output: {solution(input())}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '''\n1 2 100\n'''\n\nassert solution('''\n2\n5 10 20 30 40 50\n2 28 27\n''') == '''\n10 20 28 27 30 40 50\n'''"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2 3\\n2 7\\n3 5\\n3 1\\n3 9\\n4 8\\n\") == \"1 2 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n\"\nassert solution(\"3\\n1 2\\n1 100\\n1 1\\n2 3\\n2 7\\n3 5\\n3 1\\n3 9\\n4 8\\n\") == \"1 2 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n1 1 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"1 2 100\"\nassert solution(sample_input2) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\\nSample Output 1: 2600\\n\\nSample Input 2: 3\\nAC 2 1\\nBC 2 1\\nSample Output 2: 506\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"2600\\n506\\n\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Sample Input 1\\n0\\nSample Output 1\\n2600\\n') == '2600'\nassert solution('Sample Input 2\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2\\n506\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \\'__main__\\':\\n    solution(stdin.readline())') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\\nSample Output 1: 2600\\n\") == 2600\nassert solution(\"3\\nAC 2 1\\nBC 2 1\\nSample Output 2: 506\\n\") == 506\nassert solution(\"0\\nSample Output 1: 2600\\nSample Output 2: 506\\n\") == 1300"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\\nSample Output 1: 2600\\n\\n0\\nSample Output 2: 506\\ndef solution(stdin: str) -> str:\\n    pass\") == 2600\nassert solution(\"3\\nA 1 1\\nB 2 1\\nC 2 1\\nSample Output 1: 506\\nSample Output 2: 506\\ndef solution(stdin: str) -> str:\\n    pass\") == 506\nassert solution(\"3\\nA 1 1\\nB 2 1\\nC 2 1\\nSample Output 1: 0\\nSample Output 2: 0\\ndef solution(stdin: str) -> str:\\n    pass\") == 0\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"2600\", \"Test 1\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\", \"Test 2\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed: solution function not working as expected. Input: {solution_input}, Output: {solution_output}\"\nfor i in range(1, 2):\n    solution_input = input(f\"Sample Input {i}: \")\n    solution_output = output_of_solution(solution_input)\n    if solution_output == output_expected[i]:\n        print(f\"Sample Output {i}: {output_expected[i]}\")\n    else:\n        print(f\"Test failed: solution function not working as expected. Input: {solution_input}, Output: {solution_output}\")"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\n\") == 506, \"Incorrect solution\"\nassert solution(\"1\\nAC 1 0\\nBC 1 0\\n\") == 48, \"Incorrect solution\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    0\n    1 2\n    1 1\n    2 1\n    1 1\n    2 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 0\n    0 0\n    0 1\n    0 2\n    1 0\n    1 "
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"(())()())\") == \"possible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"(()))\") == \"possible\"\nassert solution(\"(())()\") == \"possible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(())()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\", \"Test 1 failed.\"\nassert solution(\")))(\") == \"possible\", \"Test 2 failed.\"\nassert solution(\"())()\") == \"impossible\", \"Test 3 failed.\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()()\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"(()()()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'possible'\nassert solution('()))()))') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n(()\n())\n()()\n(()())\n(()(())\n(()()(\n(()(()\n(()())\n(()()))\n(()(()()))\n(()())))))\n(()(()()))))\n(()(()(()(())))\n(()(()(()(())))()))\n(()(()(()(())))())\n(()(()(()(())))()))\n(()(()(()(())))())))\n(()(()(()(())))())))())\n(()(()(()(())))())))()))\n(()(()(()(())))())))()))))\n(()(()(()(())))())))()))())))))\n(()(()(()(())))())))())))))))))\n(()(()(()(())))())))())))))))))))))))))\n(()(()(()(())))())))())))))))))))))))))))))))))))\n(()(()(()(())))())))())))))))))))))))))))))))))))))))))))))))))))\n(()(()(()(())))())))())))))))))))))))))))))))))))))))))))))))))))))))\n
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1800', 'Incorrect output'\nprint(\"Test Passed\")"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed: expected {output}, got {solution(input)}\"\nfor input, output in [(stdin, solution(stdin)) for stdin, output in zip(sample_inputs, sample_outputs)]:\n    assert output == expected_output, f\"Test failed: expected {expected_output}, got {output}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    1 1800 9000 1800\n    1 2000 9200 1600\n    1 2200 9400 1400\n    \"\"\"\n) == \"1800\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1800 3600 1800\n    1 1900 3600 1600\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1800'\nassert solution() == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"1800\"\nassert solution(sample_input2) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n1800\n'''"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1800', \"Incorrect output for test case 1.\"\n\nassert solution(stdin) == 'impossible', \"Incorrect output for test case 2.\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1800\\n\", \"Expected output 1, but got: {}\".format(solution())"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1800\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(3) +'' + str(2)) == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\n\nassert solution(str(2) +'' + str(3)) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n\nassert solution(str(2) +'' + str(3)) == \"A1-B1 A2-C1 B1-C2\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n\nassert solution(str(2) +'' + str(3)) == \"A1-B1 A2-C1 B1-C2\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 3\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed: {solution(input())}!= {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution: {solution(input())}\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''A1-B1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1'''.strip()  # The output is a list of lines separated by spaces"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution(open('sample_input2.txt', 'r')) == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == '''A1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n'''\n\nassert solution(2, 3) == '''A1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 2\\n..\\n..\") == 7\nassert solution(stdin=\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == 9\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"7\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == 7, \"Expected output 7 but got {} instead.\".format(solution(\"2 2\\n..\\n..\\n\"))\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n\") == 9, \"Expected output 9 but got {} instead.\".format(solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n\"))"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7\\n' # expected output: 7"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(open('input.txt', 'r'))\"\n\nfrom typing import List"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for the given input. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\", \"Incorrect output\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 600, \"Expected output: 600, got: {}\".format(solution())"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"600\", \"Test case 1 failed\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'2\\n3 3 2 2 100\\n1 1 1 1 500') == '600'\nassert solution(r'2\\n2 0 2 1 100\\n6 0 8 1 1') == '100'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"600\", \"The output should be 600, but it is: \" + solution(stdin)"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r')) == '600'\nassert solution(open('test_input.txt', 'r')) == '100'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(stdin=\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(361) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, \"361\") == 3\nassert solution(2, \"11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n361\\n2\\n11\\n\") == \"3\\n\"\nassert solution(stdin=\"10\\n123456\\n11\\n\") == \"356\\n\"\nassert solution(stdin=\"10\\n00001010\\n0001\\n\") == \"35\\n\"\nassert solution(stdin=\"10\\n123456\\n10001\\n\") == \"3456\\n\"\nassert solution(stdin=\"10\\n00001010\\n0000\\n\") == \"3\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed: Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Solution 1\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10\"\nassert solution(open(\"input2.txt\", \"r\")) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10', 'You need to implement the solution function'\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 10\n2 100\n1 10\n11 5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"3 10\n2 100\n1 10\n13 5\n\"\"\") == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == expected_output, f\"Solution {solution(str(input()))} does not match the expected output.\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    4 9\n    2 8\n    1 1\n    3 4\n    5 100\n    \"\"\") == \"1 8 9 9 100 101 108 109 109\"\n\nassert solution(\"\"\"\n    5 7\n    2 2\n    3 8\n    2 7\n    2 4\n    3 8\n    \"\"\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 8 9 9 100 101 108 109 109\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '''\n1 8 9 9 100 101 108 109 109\n'''\n\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '''\n0 7 8 11 15 16 19\n'''"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [\"1 8 9 9 100 101 108 109 109\"]\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == [\"1 8 9 9 100\", \"1 8 9 9 100\", \"1 8 9 9 100\", \"1 8 9 9 100\", \"1 8 9 9 100\"]\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == [\"0 7 8 11 15 16 19\"]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == 1\n\nassert solution(\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 0\n0 3\"\"\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\\n\"\nassert solution(\"1 5 5\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\\n\"\nassert solution(\"1 10 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\" for i, (input, output) in enumerate([\n    ([], 0),\n    ([3, -3, 3], 1),\n    ([3, -3, 3, 0, 3, -3], 2),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3], 2),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3], 3),\n    ([0, 0, 1], 1),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3], 3),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3], 3),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3], 3),\n    ([3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -3, 3, 0, 3, -"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Test 1 failed\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Test 2 failed\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\nassert solution() == 4\nassert solution() == 2\nassert solution() == 2\nassert solution() == 0"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'Sample Output 1:\\n4\\n4\\n2\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n0\\n0\\n0\\n0\"\nassert solution() == \"2\\n2\\n2\\n2\\n2\"\nassert solution() == \"2\\n2\\n2\\n2\\n2\"\nassert solution() == \"4\\n4\\n4\\n4\\n4\"\nassert solution() == \"2\\n2\\n2\\n2\\n2\"\nassert solution() == \"2\\n2\\n2\\n2\\n2\"\nassert solution() == \"0\\n0\\n0\\n0\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\nSample Output 1:4\\n4\\n4\\n2\\n2\\n0\\n\\nSample Input 2:5 9\\n1\\n1\\n10\\n1\\n9\\nSample Output 2:2\\n0\\n0\\n2\\n0\\n0\\ndef solution(stdin: str) -> str:\\n\\tpass\") == \"4\\n4\\n2\\n2\\n0\\n\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(stdin)}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str: \\n    pass\\n\"\n\nHere, we are using the `assert` statement to check if the output is as expected. The first line of the assert statement checks if the expected output is obtained, while the second line of the assert statement checks if the output is correct for the given input.\n\nTo solve the problem, we will be using the KMP algorithm. The KMP algorithm is a search algorithm that finds the longest increasing subsequence (LIS) for a given pattern in a given string. The basic idea is to use a sliding window technique, where we slide the window over the string and keep track of the longest increasing subsequence. If we encounter a new character that is not in the subsequence, we can update our longest increasing subsequence.\n\nWe will use the `kmp` module from the `string` module in Python to implement the KMP algorithm. The `kmp` function takes two strings as input and returns the longest increasing subsequence for the pattern in the first string. The basic idea of the algorithm is to compare the last characters of each string and slide the window over the pattern until we find the common prefix of the two strings. If we encounter a new character that is not in the pattern, we update our longest increasing subsequence by removing the last character of the pattern and repeating the process until we find the common prefix.\n\nHere's the implementation:"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"NE\"\nassert solution(\"kava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nkava\") == \"NE\"\n\nprint(\"OK\")"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\") == \"NE\\n\"\nassert solution(\"4\\nkava\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\ne\") == \"NE\\n\"\nassert solution(\"4\\nkava\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'NE'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n'''\n) == '2\\n0\\n2\\n1\\n'\n\nassert solution(\n    '''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n'''\n) == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n0\\n2\\n1\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1\\n'\n\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == 2\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == 0\nassert solution(\"4 4 4\\n1 1 2\\n1 1 3\\n2 2 4\\n3 3 4\") == 2\nassert solution(\"1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == 0"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n0\\n2\\n1\\n\"\nassert solution(stdin) == \"0\\n0\\n3\\n2\\n\"\nassert solution(stdin) == \"0\\n0\\n0\\n\"\nassert solution(stdin) == \"0\\n0\\n0\\n0\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2\n\nfrom typing import List"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == '2'\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == '1'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The solution should return 2.\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n\") == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 2\nassert solution(open(\"input2.txt\", \"r\").read()) == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\", \"Test case 1 failed.\"\nassert solution(sample_input_2) == \"1\", \"Test case 2 failed.\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Testcase failed with input {stdin} and expected output {expected}\"\nfor i, (n, m, s, f, t) in enumerate(testcases):\n    testcases[i] = (n, m, s, f, t)\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n1 3 2\\n1 2 2\\n1 3 3\") == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"40.500000000\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"40.500000000\", \"The solution for sample input 1 should be '40.500000000', but it is '\"+str(solution(stdin))+\"'\"\n\nassert solution(stdin) == \"49.000000000\", \"The solution for sample input 2 should be '49.000000000', but it is '\"+str(solution(stdin))+\"'\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"40.500000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 40.5\nassert solution() == 49.0"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1:40.500000000\\n\\nSample Input 2:3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2:49.000000000\\n\\ndef solution(stdin: str) -> str:') == '40.500000000\\n\\n49.000000000\\n\\nimpossible\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"40.500000000\", \"Test case 1 failed.\"\n\nassert solution() == \"49.000000000\", \"Test case 2 failed.\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\"\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\", \"The solution is incorrect\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == [5, 4, 9, 3, 1, 10, 7, 6, 2]\nassert solution(sample_input_2) == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(stdin) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00:00\") == \"3\", \"Incorrect answer 1\"\nassert solution(\"01:01\") == \"3\", \"Incorrect answer 2\"\nassert solution(\"00:08\") == \"3\", \"Incorrect answer 3\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('00:00') == 3, \"First case failed\"\nassert solution('01:01') == 3, \"Second case failed\"\nassert solution('00:08') == 3, \"Third case failed\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"3\", \"00:00 should output 3\"\nassert solution(\"01:01\") == \"3\", \"01:01 should output 3\"\nassert solution(\"00:08\") == \"3\", \"00:08 should output 3\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\", \"00:00\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\", \"00:08\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('01:00') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the original time: \")) == \"3\\n00:00\\n01:00\\n01:01\", \"Your solution is incorrect.\"\nassert solution(input(\"Enter the current time: \")) == \"3\\n00:08\\n00:09\\n00:00\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    00:00\n    01:01\n    \"\"\"\n) == \"3\\n00:00\\n01:00\\n01:01\"\n\nassert solution(\n    \"\"\"\n    00:08\n    00:00\n    \"\"\"\n) == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('00:00') == '3', 'Sample Input 1 failed'\nassert solution('01:01') == '3', 'Sample Input 2 failed'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(a)\") == \"4,8:8,8:\"\nassert solution(\"(ab)\") == \"4,12:12,12:\"\nassert solution(\"(ab)\") == \"4,12:12,12:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,12:12,12:3,12:3:\"\nassert solution(\"(a(b)c)\") == \"4,1"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(()())') == '4,8:8,8:'\nassert solution('()(()))') == '4,8:8,8:'\nassert solution('())') == '4,4:'\nassert solution('(a)b') == '4,12:12,12:'\nassert solution('(a(b(c)))d') == '4,18:18,18:'\nassert solution('(a(b(c))d)') == '4,22:22,22:'\nassert solution('(a(b(c))d(e))') == '4,26:26,26:'\nassert solution('((a(b(c)))d)') == '4,30:30,30:'\nassert solution('((a(b(c))d))') == '4,34:34,34:'\nassert solution('(a(b(c))d(e))') == '4,38:38,38:'\nassert solution('())') == '4,4:'\nassert solution('()()') == '4,4:'\nassert solution('(()())()') == '4,8:8,8:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('(()(())())') == '4,8:8,8:'\nassert solution('(()(())())(())') == '4,8:8,8:'\nassert solution('(())(())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(())') == '4,8:8,8:'\nassert solution('()(())(())(())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()()))') == '4,8:8,8:'\nassert solution('()(())(())(())(()()))') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())(()())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())(()())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())(()())(())') == '4,8:8,8:'\nassert solution('(())(())(())(())(()())(())(())(()())(())(())(()())(())(()())(())(()())(())(()())') == '4,8"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"(())\"\"\") == \"4,8:8,8:\"\nassert solution(\"\"\"()\"\"\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(a)\") == \"4,4:a\"\nassert solution(\"()b\") == \"4,4:b\"\nassert solution(\"(a)(b)\") == \"4,8:8,8:a,b\"\nassert solution(\"(a)(b)c\") == \"4,12:12,12:a,b,c\"\nassert solution(\"(a)(b)c(d)\") == \"4,16:16,16:a,b,c,d\"\nassert solution(\"()()\") == \"4,4:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()()()\") == \"4,4:\"\nassert solution(\"())()()\") == \"4,4:\"\nassert solution(\"(a)()()()\") == \"4,8:8,8:a\"\nassert solution(\"(())(())()\") == \"4,8:8,8:\"\nassert solution(\"(()(())())\") == \"4,16:16,16:\"\nassert solution(\"(()()())\") == \"4,8:8,8:\"\nassert solution(\"(()(())())(())(())\") == \"4,8:8,8:(),(),(),(),()\"\nassert solution(\"(()()())(())(())(())\") == \"4,16:16,16:(),(),(),(),(),()\"\nassert solution(\"(()(())())(())(())(())\") == \"4,8:8,8:(),(),(),(),(),(),(),(),(),()\"\nassert solution(\"(()()())(())(())(())(())(())\") == \"4,16:16,16:(),(),(),(),(),(),(),(),(),(),(),(),(),(),(),(),(),()\"\nassert solution
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '5', \"sample_input1 is incorrect\"\nassert solution(sample_input2) == '185', \"sample_input2 is incorrect\"\nassert solution(sample_input3) == '5', \"sample_input3 is incorrect\"\nassert solution(sample_input4) == '5', \"sample_input4 is incorrect\"\nassert solution(sample_input5) == '-1', \"sample_input5 is incorrect\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n185\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 2\\n26 02 03 03 3\\n1 1\\n26 02 03 03 3\\n26 02 03 03 4\\n1 1\\n26 02 03 03 4\\n26 02 03 03 5\\n1 1\\n26 02 03 03 5\\n26 02 03 03 6\\n1 1\\n26 02 03 03 6\\n26 02 03 03 7\\n1 1\\n26 02 03 03 7\\n26 02 03 03 8\\n1 1\\n26 02 03 03 8\\n26 02 03 03 9\\n1 1\\n26 02 03 03 9\\n26 02 03 03 10\\n1 1\\n26 02 03 03 10\\n26 02 03 03 11\\n1 1\\n26 02 03 03 11\\n26 02 03 03 12\\n1 1\\n26 02 03 03 12\\n26 02 03 03 13\\n1 1\\n26 02 03 03 13\\n26 02 03 03 14\\n1 1\\n26 02 03 03 14\\n26 02 03 03 15\\n1 1\\n26 02 03 03 15\\n26 02 03 03 16\\n1 1\\n26 02 03 03 16\\n26 02 03 03 17\\n1 1\\n26 02 03 03 17\\n26 02 03 03 18\\n1 1\\n26 02 03 03 18\\n26 02 03 03 19\\n1 1\\n26 02 03 03 19\\n26 02 03 03 20\\n1 1\\n26 02 03 03 20\\n26 02 03 03 21\\n1 1\\n26 02 03 03 21\\n26 02 03 03 22\\n1 1\\n26 02 03 03 22\\n26 02 03 03 23\\n1 1\\n26 02 03 03 23\\n26 02 03 03 24\\n1 1\\n26 02 03 03 24\\n26 02 03 03 25\\n1 1\\n26 02 03 03 25\\n26 02 03 03 26\\n1 1\\n26 02 03 03 26\\n26 02 03 03 27\\n1 1\\n26 02 03 03 27\\n26 02 03 03 28\\n1 1\\n26 02 03 03 28\\n26 02 03 03 29\\n1 1\\"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\\n\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\\n\"\nassert solution(\"1 1\\n26 02 03 04 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == 5, \"Test case 1 failed\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == 185, \"Test case 2 failed\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5', \"The solution is incorrect.\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '5'\nassert solution(open('sample_input2.txt', 'r')) == '185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"-1\" # Correct solution"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\nSample Output 1: 5 6 1 2 3 4\\n\\nSample Input 2: 4 2\\n3 4 1 2\\nSample Output 2: 2 3 4 1') == '5 6 1 2 3 4\\n\\n2 3 4 1'\nassert solution('4 2\\n3 4 1 2\\nSample Output 2: 2 3 4 1') == '2 3 4 1'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data}, expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: {solution(input())}, expected {expected}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6 2\n3 4 5 6 1 2\"\"\") == \"\"\"5 6 1 2 3 4\"\"\"\nassert solution(\"\"\"4 2\n3 4 1 2\"\"\") == \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Impossible\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n5 6 1 2 3 4\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5 6 1 2 3 4\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: expected '{output}', got '{solution(input())}'\"\nfor i, (n, k) in enumerate(test_cases):\n    output = solution(n)\n    assert output == expected[i], f\"Test {i+1} failed: expected '{expected[i]}', got '{output}'\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nn, k = map(int, input().split())\nexpected = int(''.join([str(i) for i in range(10)] * n))"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected_output"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1374 2\\n210 1\\n\") == \"7413\\n201\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.666666666666667\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"0.733333333333333\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0.733333333333333\\n\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"0.733333333333333\\n\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"0.733333333333333\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.666666666666667\", \"Test Case 1\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"0 0\\n1 1\\n2 0\") == \"0.733333333333333\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"To provide wireless network coverage for an entire office floor plan, you need to install a wireless network and a cellular hub for every corridor. The minimum total cost to set up a wireless network that covers every corridor is $9$."
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\n\nfrom typing import List"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\nassert solution() == 21"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '9', \"Your solution is incorrect!\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n        2 3 4\n        10 1 3\n        0 1 20\n        ''') == '9'\n\nassert solution('''\n        2 3 100\n        10 1 10\n        10 1 10\n        ''') == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'output', 'Your solution is incorrect.'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\\n\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == 2\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\nSample Input 1:8 2 7 -\\n1 1 1 2\\nSample Output 1:2\\n\\nSample Input 2:9 2 7 -\\n1 1 1 2\\nSample Output 2:4\\n\") == \"2\\n4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == 2\nassert solution(\"9 2 7 -\\n1 1 1 2\") == 4"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\\n\", \"Test case 1 failed.\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\", \"Test case 2 failed.\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\\n\", \"Test case 3 failed.\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n') == '3\\n4\\n3\\n2\\n1\\n'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n') == '2\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\\n0\\n0\\n0\\n\", \"Solution should return 1.\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n2\\n\", \"Solution should return 3.\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\", \"Solution should return 2.\"\nassert solution(\"4 5\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n1 6 8\\n\") == \"1\\n1\\n0\\n0\\n\", \"Solution should return 1.\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n2\n3\n2\n1\n\"\"\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: {solution(input())}, Expected: {output}\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\n\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [\"3\\n4\\n3\\n2\\n1\"]"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 1') == '6\\n'\nassert solution('3 4\\n2 3 1') == '24\\n'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1\") == 6\nassert solution(\"3 4\\n2 3 1\") == 24\n\nfrom typing import List"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"24\", \"Solution is not correct\"\nprint(\"Correct!\")"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"  # Test case 1\nassert solution(\"3 4\\n2 3 1\") == \"24\"  # Test case 2"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 1') == 6\nassert solution('3 4\\n2 3 1') == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 3\\n2 1\\n') == 6\nassert solution(stdin='3 4\\n2 3 1\\n') == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1\") == 6\nassert solution(\"3 4\\n2 3 1\") == 24"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\nSample Input 2\\n5\\n3 4 5 1 2\\nSample Output 2: 1\\n\") == \"2\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\", \"Test 2\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 4 5 1 2') == '1\\n'\nassert solution('2\\n1 2') == '2\\n'\nassert solution('10\\n1 1 2 3 4 5 6 7 8 9') == '2\\n'\nassert solution('5\\n1 1 1 1 1') == '10\\n'\nassert solution('7\\n1 2 3 4 5') == '20\\n'\nassert solution('3\\n1 1 2 3') == '6\\n'\nassert solution('1\\n1') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output: 2\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3 4 5 1 2\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('5\\n3 4 5 1 2\\n') == '1'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\") == 9\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 Failed: {input_1}\"\nassert solution(input_2) == output_2, f\"Test 2 Failed: {input_2}\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 9\nassert solution(sample_input_2) == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(SampleInput1) == \"9\"\nassert solution(SampleInput2) == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=solution()) == \"6\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '6\\n'\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Solution: {solution(stdin)}!= {output}\" for stdin, output in [\n    (\"\\n\".join(map(str, [4, 2, 1, 3, 4])), \"6\"),\n    (\"\\n\".join(map(str, [4, 3, 4, 5, 6])), \"3\"),\n]"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    input()\n) == \"6\", \"Test case 1 failed\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"The output is incorrect.\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\", \"Sample Input 1\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\", \"Sample Input 2\"\nassert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\", \"Sample Input 1\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\", \"Sample Input 2\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"18\\n8\"\nassert solution(sample_input_2) == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_file) == output_file, f\"Test failed for {input_file} and {output_file}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'\n\nfrom typing import List"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 10\n    5 8\n    \"\"\"\n) == \"18\\n8\"\n\nassert solution(\n    \"\"\"\n    3\n    17 144\n    121 121\n    89 98\n    \"\"\"\n) == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Input {stdin} should return {output}, but it returned {solution(stdin)}\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\", \"Test 1 failed\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\", \"Test 2 failed\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.50000000\", \"Test case 1\"\nassert solution(stdin) == \"12.50000000\", \"Test case 2\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Incorrect output: {solution(input_str)}!= {expected_output}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.5'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.5'"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\nSample Input 1:4 1 3\\n0 1\\n1 2\\n2 3\\n1\\nSample Output 1:2\\nSample Input 2:4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\nSample Output 2:1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\nSample Input 2:4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\nSample Output 2:1\\n\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Please modify the solution function to return the desired output.\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\", \"Expected an empty string input, but got '{}' instead\".format(solution(\"\"))"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Output should be '2'.\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"The expected output is not correct.\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4 1 3\n    0 1\n    1 2\n    2 3\n    1\n    ''') == '2'\n\nassert solution('''\n    4 0 4\n    0 2\n    0 1\n    2 1\n    2 3\n    ''') == '1'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output the number of different possible arrangements of delivery, modulo a prime number 10^9+7. If there is no such order, output 0.'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected output: {expected}, actual output: {solution(input())}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\", \"Test Case 1 failed\"\nprint(\"Test Case 1 passed\")\n\nassert solution(stdin) == \"30\", \"Test Case 2 failed\"\nprint(\"Test Case 2 passed\")"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6', 'Invalid solution'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2020 2020 2020\\n\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2020 2020 2020\n2\n1 9999999\n''') == '2021 2020 2020'\nassert solution('''\n2\n1 9999999\n''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2021 2020 2020'\nassert solution() == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n3\n2020 2020 2020\n''') == r'''\n2021 2020 2020\n'''\n\nassert solution(r'''\n2\n1 9999999\n''') == r'''\nimpossible\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example1.in', 'r')) == '2021 2020 2020\\n'\nassert solution(open('example2.in', 'r')) == 'impossible\\n'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('30 70') == '11','sample input 1 failed'\nassert solution('66 69') == '2','sample input 2 failed'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 10\") == \"0\"\nassert solution(\"9 8 7 6 5 4 3 2 1\") == \"1\"\nassert solution(\"1000000000\") == \"0\"\nassert solution(\"1000000001\") == \"1\"\nassert solution(\"1000000002\") == \"1\"\nassert solution(\"1000000003\") == \"1\"\nassert solution(\"1000000004\") == \"1\"\nassert solution(\"1000000005\") == \"1\"\nassert solution(\"1000000006\") == \"1\"\nassert solution(\"1000000007\") == \"1\"\nassert solution(\"1000000008\") == \"1\"\nassert solution(\"1000000009\") == \"1\"\nassert solution(\"1000000010\") == \"1\"\nassert solution(\"1000000011\") == \"1\"\nassert solution(\"1000000012\") == \"1\"\nassert solution(\"1000000013\") == \"1\"\nassert solution(\"1000000014\") == \"1\"\nassert solution(\"1000000015\") == \"1\"\nassert solution(\"1000000016\") == \"1\"\nassert solution(\"1000000017\") == \"1\"\nassert solution(\"1000000018\") == \"1\"\nassert solution(\"1000000019\") == \"1\"\nassert solution(\"1000000020\") == \"1\"\nassert solution(\"1000000021\") == \"1\"\nassert solution(\"1000000022\") == \"1\"\nassert solution(\"1000000023\") == \"1\"\nassert solution(\"1000000024\") == \"1\"\nassert solution(\"1000000025\") == \"1\"\nassert solution(\"1000000026\") == \"1\"\nassert solution(\"1000000027\") == \"1\"\nassert solution(\"1000000028\") == \"1\"\nassert solution(\"1000000029\") == \"1\"\nassert solution(\"1000000030\") == \"1\"\nassert solution(\"1000000031\") == \"1\"\nassert solution(\"1000000032\") == \"1\"\nassert solution(\"1000000033\") == \"1\"\nassert solution(\"1000000034\") == \"1\"\nassert solution(\"1000000035\") == \"1\"\nassert solution(\"1000000036\") == \"1\"\nassert solution(\"1000000037\") == \"1\"\nassert solution(\"1000000038\") == \"1\"\nassert solution(\"1000000039\") == \"1\"\nassert solution(\"1000000040\") == \"1\"\nassert solution(\"1000000041\") == \"1\"\nassert solution(\"1000000042\") == \"1\"\nassert solution(\"1000000043\") == \"1\"\nassert solution(\"1000000044\") == \"1\"\nassert solution(\"1000000045\") == \"1\"\nassert solution(\"1000000046\") == \"1\"\nassert solution(\"1000000047\") == \"1\"\nassert solution(\"100"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"11\", \"Sample Input 1\"\nassert solution(stdin) == \"2\", \"Sample Input 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('>~') == '2\\n'\nassert solution('>>@<<') == '4\\n'\nassert solution('>~#~<') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 2 0\n    >@\n    >~\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 5 1\n    >>@<<\n    >~#~<\n    >>>@>>>>\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\") == \"5+025=30\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('143175=120\\n5025=30') == '14+31+75=120\\n5+025=30'\nassert solution('143175=120\\n5025=30\\n5025=30') == '14+31+75=120\\n5+025=30\\n5+025=30'\nassert solution('143175=120\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n5025=30\\n502"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120', \"Failed for test case 1\"\nassert solution('5025=30') == '5+025=30', \"Failed for test case 2\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('143175=120') == '14+31+75=120', 'Test 1 failed'\nassert solution('5025=30') == '5+025=30', 'Test 2 failed'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == '1 2', \"sample_input_1 does not match\"\nassert solution(sample_input_2) == '-1', \"sample_input_2 does not match\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'1\\n3\\n2\\n4\\n1\\n5\\n2\\n4') == '1 2\\n'\nassert solution(r'8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == \"__main__\":\\n    solution(stdin.read())') == '1 2\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2\\n'\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0\n"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == \"1\", \"1\"\nassert solution(\"1\") == \"0\", \"2\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"1\") == \"0\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output 1\\n0\\n2'\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n0\\n2\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr\"\"\"\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"1\\n0\\n2\\n\"\n\nassert solution(\nr\"\"\"\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n\"\"\") == \"3\\n\"\n\nassert solution(\nr\"\"\"\n5 4\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n26 27 28 29 30\n31 32 33 34 35\nSample Input 3:\n6 5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n26 27 28 29 30\n31 32 33 34 35\nSample Output 3:\n5\n\"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, 3, 1, 3, 1, 3, 1, 2, 2, 1, 3, 3, 1, 3, 1, 2, 2, 1, 3, 3, 1, 3, 1, 2, 2, 1, 3, 3, 1, 3, 1) == \"1\\n0\\n2\"\nassert solution(2, 1, 4, 1, 6, 3, 6, 7, 3, 4, 2, 6, 5, 6, 1, 1, 2) == \"3\\n0\\n2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == 'Output:\\n1\\n0\\n2\\n\\nOutput:\\n3\\n\\n\\nOutput:\\n3\\n\\n'\nassert solution(stdin='3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == 'Output:\\n1\\n0\\n2\\n\\nOutput:\\n3\\n\\n\\nOutput:\\n3\\n\\n'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [\"1\", \"0\", \"2\"]"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''1\n0\n2\n'''\n\nfrom typing import List"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin)\nprint(solution(stdin))"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output here', \"Your solution should output 'Output here', but it's not.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1\\n1 2 3 4') == '4.000000'\nassert solution('4 2\\n2 4 3 4') == '3.666666'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the size of the array: \")) == \"4.000000\"\nassert solution(input(\"Enter the size of the array: \")) == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"4 1\n    1 2 3 4\"\"\"\n) == \"4.000000\"\n\nassert solution(\n    \"\"\"4 2\n    2 4 3 4\"\"\"\n) == \"3.666666\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.750, \"Test case 1 failed\"\n\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625, \"Test case 2 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == 0.750\n\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0.750"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\n\nsolution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\")"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == '0.750'\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\", \"Test Case 1 failed\"\n\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\", \"Test Case 2 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=solution.__doc__) == \"2\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3''') == '2'\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == 2\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == 37\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2', 'Test case 1 failed'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"Output 1: %s\" % solution(input())\nassert solution(input()) == \"37\\n\", \"Output 2: %s\" % solution(input())"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2\\n'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37\\n'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == ['10', '14', '18']\nassert solution(sample_input2) == ['1', '4', '9', '16']"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1234\n    1 4\n    1 4\n    1 4\n    \"\"\"\n) == '10\\n14\\n18\\n'\n\nassert solution(\n    \"\"\"\n    4 4\n    1234\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == '1\\n4\\n9\\n16\\n'\n\nassert solution(\n    \"\"\"\n    3 3\n    123\n    1 1\n    1 2\n    1 3\n    \"\"\"\n) == '1\\n3\\n9\\n27\\n'\n\nassert solution(\n    \"\"\"\n    3 4\n    1234\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == '1\\n4\\n12\\n24\\n'\n\nassert solution(\n    \"\"\"\n    4 3\n    1234\n    1 4\n    1 3\n    1 2\n    \"\"\"\n) == '12\\n18\\n24\\n'\n\nassert solution(\n    \"\"\"\n    4 4\n    1234\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == '1\\n16\\n24\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\n\ninput1 = '''\n4 3\n1234\n1 4\n1 4\n1 4\n'''\n\ninput2 = '''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n'''\n\noutput1 = '''\n10\n14\n18\n'''\n\noutput2 = '''\n1\n4\n9\n16\n'''"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5 lines of code to test the correctness of solution:\nLuka is not paying attention in class again, while the teacher is explaining redox reactions. Instead of paying attention, he is playing with analog dials.\n\nAn analog dial is a small device which always shows one digit between $0$ and $9$. It also contains a small button which increases the number by $1$ (unless it is $9$, in which case it is changed to $0$).\n\nLuka has $N$ such dials on his desk, numbered $1$ to $N$ left to right, and two sheets of paper for him to write on.\n\nLuka\u2019s game starts with him setting the dials in some starting configuration, which he then writes onto the first sheet. Luka then does the following $M$ times:\n - Choose two integers $A$ and $B$ ($1 \\le A \\le B \\le N$) and write them down on the first sheet.\n - Calculate the sum of numbers on dials between $A$ and $B$ (inclusive), and write the sum down on the second sheet.\n - Press the button once on all dials between $A$ and $B$.\n\nJust as he had finished his game, the teacher noticed him, and took away all his dials and the second sheet of paper.\n\nGiven the contents of the first sheet, help him calculate the numbers on the second sheet."
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\"\\"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Test failed\"\nassert solution() == 1, \"Test failed\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"2\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"The expected output is not provided.\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"yes\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no', \"Solution should return 'no', but it returned '{}'.\".format(solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0'))\n\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no', \"Solution should return 'no', but it returned '{}'.\".format(solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1'))"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no\\n'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no\\n'\n\nassert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'yes\\n'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'yes\\n'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\", \"sample input 1\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\", \"sample input 2\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"yes\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == \"yes\"\nassert solution(stdin=\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(stdin=\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3, 1, 2, 2, 3, 1, 3, 1, 4) == \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(4, 3, 1, 2, 1, 3, 1, 4) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution(open('input.txt', 'r')) == 'NO\\n\\n'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\", \"Your code is incorrect.\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(4, 3) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed\" for index, (input, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case} failed: got '{solution(input)}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n0 > 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n1 > 3\") == \"inconsistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n0 > 2\\n0 > 1\") == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"inconsistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"consistent\", \"Solution not implemented\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, \"Expected output: {}\\nGot output: {}\".format(output1, solution(input1))\nassert solution(input2) == output2, \"Expected output: {}\\nGot output: {}\".format(output2, solution(input2))\n\ninput1 = \"\"\"4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\"\"\"\n\ninput2 = \"\"\"4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\"\"\"\n\noutput1 = 1.57079633\noutput2 = 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1.57079633'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1.57079633\", \"Solution should be 1.57079633\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.57079633\", \"Test case 1 failed\"\nassert solution(stdin) == \"41938.65135885\", \"Test case 2 failed\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('Vera_Test_1.txt', 'r')) == '1.57079633'\nassert solution(open('Vera_Test_2.txt', 'r')) == '41938.65135885'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == 0"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='11\\nsabcabcfabc') == '3\\n'\nassert solution(stdin='18\\ntrutrutiktiktappop') == '4\\ndef solution(stdin: str) -> str:    pass\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11sabcabcfabc\") == \"3\", \"Error in Test case 1\"\nassert solution(\"18trutrutiktiktappop\") == \"4\", \"Error in Test case 2\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Ivana won the bet (Zvonko hadn\u2019t foreseen this and suspects that it is due to outside interference) and now Zvonko is waiting for her at the movies. While he is waiting, he is observing messages on a screen above him.\"\nassert solution() == \"4\", \"trutrutiktiktappop\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nsabcabcfabc\\n\") == \"3\\n\", \"Test 1\"\nassert solution(\"18\\ntrutrutiktiktappop\\n\") == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Test 2\"\nassert solution(\"\") == \"0\\n\", \"Test 3\"\nassert solution(\"11\\nsabcabcfabc\\n18\\ntrutrutiktiktappop\\n\") == \"3\\n4\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Test 4\"\nassert solution(\"11\\nsabcabcfabc\\n18\\ntrutrutiktiktappop\\n11\\nsabcabcfabc\\n18\\ntrutrutiktiktappop\\n11\\nsabcabcfabc\\n18\\ntrutrutiktiktappop\\n\") == \"3\\n4\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Test 5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {input()} and expected output {expected_output}\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test cases failed. Please check the output: {output()}, but got {solution(input())}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2\", \"Your code is not correct.\"\nassert solution(sample_input2) == \"5\", \"Your code is not correct.\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n2 3 1\\n3 1 2\\n') == '2\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"The function should return {expected_output}, but it returns {solution(input_data)}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4'\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == 4\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == 9"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4\\n'\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9\\n'\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n9\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output', 'Incorrect output'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\nSample Output 1:not equal\\n\\nSample Input 2:sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\nSample Output 2:equal\\ndef solution(stdin: str) -> str:pass\") == \"equal\"\nassert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nSample Output 1:not equal\\n\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nSample Output 2:equal\\ndef solution(stdin: str) -> str:pass\") == \"equal\"\nassert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nSample Output 1:not equal\\n\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nconcat(shuffle([1,2]),shuffle([1,2]))\\nSample Output 2:equal\\ndef solution(stdin: str) -> str:pass\") == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\", \"The given Balloon program is not equivalent to the sample solution.\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\", \"The given Balloon program is equivalent to the sample solution.\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\n\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal\\n'\nassert solution('def solution(stdin: str) -> str:\\n    pass') == 'not equal\\n'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\n\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\\n\\n\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no\\n'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1\\n'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"Oh no\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == 'Oh no'\nassert solution(sample_input2) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(\"Sample Input 2\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"3\"\nassert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example1.txt', 'r')) == \"3\\n\"\nassert solution(open('example2.txt', 'r')) == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n2 1 1 1 3'\n) == '2'\n\nassert solution(\n    '1\\n22'\n) == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\", \"Sample Input 1\"\nassert solution(\"1\\n22\\n\") == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\\n\"\nassert solution(\"1\\n22\\n\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2'\nassert solution('1\\n22\\n') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 1 3') == '2', \"Expected output: '2', got: '{}'\".format(solution('5\\n2 1 1 1 3'))\nassert solution('1\\n22') == '4', \"Expected output: '4', got: '{}'\".format(solution('1\\n22'))"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\\n\"\nassert solution(\"1\\n22\\n\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5\") == \"3\\n\"\nassert solution(\"4 1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 5') == '3\\n', \"Error: incorrect output for sample case 1\"\nassert solution('4 1 2 3 4') == '2\\n', \"Error: incorrect output for sample case 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Solution is incorrect.\"\nprint(\"3\")\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\\n\", \"Test case 1 failed\"\nassert solution(4) == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5\\n4\\n1 2 3 4') == '3\\n'\nassert solution('4\\n1 2 3 4') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\", \"Your solution is incorrect. Please check the provided examples.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"The output should be 3.\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n1 2 3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a+b-c\\na-b+d-c\\n') == '''- +d-'''\nassert solution('knuth-morris-pratt\\nknuthmorrispratt\\n') == '''<any> <empty>'''"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<any> <empty>\"]\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == [\"<any> <empty>\", \"def solution(stdin: str) -> str: pass\"]\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"a+b-c\"]\nassert solution(b\"knuth-morris-pratt\\knuthmorrispratt\") == [\"<any> <empty>\", \"def solution(stdin: str) -> str:\", \"pass\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == expected1, f\"Test failed for Input 1. Expected: {expected1}, Actual: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Test failed for Input 2. Expected: {expected2}, Actual: {solution(input2)}\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c') == ['- +d-']\nassert solution('a-b+d-c') == ['- +d-']\nassert solution('knuth-morris-pratt') == ['<any> <empty>']\nassert solution('knuthmorrispratt') == ['<any> <empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<any> <empty>\"]\nassert solution(\"knuth-morris-pratt\\nknothmorrispratt\") == [\"<any> <empty>\"]\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\\n\") == [\"- +d-\", \"def\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\\n\") == \"- +d-\", \"Invalid answer\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n\\n11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected output {output}.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test failed for input:\\n{}\\nExpected output:\\n{}\\nActual output:\\n{}\".format(input(), expected_output, solution(input()))"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '2\\n4 6'\nprint(solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1'))"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input {input()} has incorrect output: {output}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n\") == \"0\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '2\\n4 6'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == 2\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == 0"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 707\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(f\"\"\"\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"4\\n5\\n6\\n1\\n2\\n3\"\n\nassert solution(f\"\"\"\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n\"\"\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\n\nassert solution(\"2\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\"\n\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution, \"Test Case 1 is not provided.\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"4\\n5\\n6\\n1\\n2\\n3\\n\", \"Test 1 Failed\"\nassert solution(sample_input2) == \"1\\n2\\n3\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed.\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6') == '4\\n5\\n6\\n1\\n2\\n3'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(12) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(6) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CPCC') == '1', \"Invalid answer\"\nassert solution('PPPPCCCC') == '8', \"Invalid answer\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\\n\"\nassert solution(\"PPPPCCCC\") == \"8\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == 1, \"Test 1 failed\"\nassert solution(\"PPPPCCCC\") == 8, \"Test 2 failed\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\\n\"\nassert solution(\"PPPPCCCC\") == \"8\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n\nfrom typing import List"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(2) == \"3\"\nassert solution(1) == \"1 2\"\nassert solution(3, 2, 1) == \"1 2 3\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3 2 1\\n1 2\\n2 3\\n2\\n3\\n4\\n5\\n') == '1 2 3\\n3\\n'\nassert solution(stdin='3 2 1\\n1 3\\n2 3\\n3\\n4\\n5\\n') == '1 3 2\\n3\\n'\nassert solution(stdin='3 2 1\\n1 4\\n2 3\\n3\\n4\\n5\\n') == '1 3 2 4\\n3\\n'\nassert solution(stdin='3 2 1\\n1 5\\n2 3\\n3\\n4\\n5\\n') == '1 3 2 4 5\\n3\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == [1, 2, 3]\nassert solution(2) == [2, 3]\nassert solution(3) == [1, 2, 3]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Test case failed: {solution}!= {expected_output}\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == \"3\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == [\"1\"]\nassert solution(2) == [\"2\"]\nassert solution(3) == [\"1\", \"2\"]\nassert solution(4) == [\"2\", \"3\"]\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2 3\", \"Incorrect output\"\nassert solution() == \"3\", \"Incorrect output\"\nassert solution() == \"2 3\", \"Incorrect output\"\nassert solution() == \"1 3\", \"Incorrect output\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == [\"1 2 3\"]\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39\\n'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed.\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 4 2 3 4') == '39'\nassert solution('5 1\\n1 0 1 1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\", \"Sample Output 1\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\", \"Sample Output 2\"\n\nfrom typing import List"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"39\", \"Incorrect output\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nimport math"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\\n') == '1 1 2\\n2 4 3\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\"), \"Expected output: 1 1 2\\nGot: 1 1 3\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\"), \"Expected output: 1 1 2\\nGot: 1 1 3\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\n\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example_input.txt', 'r')) == '1 1 2\\n2 3 1\\n'\nassert solution(open('input.txt', 'r')) == '1 1 2\\n2 3 1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 1 2\\n2 3 1\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\"\n\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\"\n\nassert solution(\"\"\"2 0 1\n1 1 1\n0 0 0\n\"\"\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\"\n) == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 1 2\n    1 2 1\n    0 2 0\n    0 1 0\n    \"\"\") == \"indistinguishable\"\n\nassert solution(\"\"\"\n    2 0 1\n    1 1 1\n    0 0 0\n    \"\"\") == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {input()} failed. Expected output: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1111\\n0111\\n1110\\n1111\", \"Test 1 failed\"\n\nassert solution(\"0010\") == \"1111\", \"Test 2 failed\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"10000\"\nassert solution(\"1111\") == \"10000\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\\n\"\nassert solution(\"1111\") == \"+000-1\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\", \"Test case 1 failed\"\n\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == 9\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n\"\"\") == 9\n\nassert solution(\"\"\"\n2 1 1 1\n2 2\n1\n1\n1 2 1\n\"\"\") == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n\"\"\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2, \"Luka is bored in chemistry class yet again.\"\n\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7, \"Luka is bored in chemistry class yet again.\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Test 1 failed\"\n\nsolution = lambda: int(input())\nassert solution() == 7, \"Test 2 failed\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Test failed for sample input 1:\\n{input1}\\nExpected output: {output1}\\nActual output: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test failed for sample input 2:\\n{input2}\\nExpected output: {output2}\\nActual output: {solution(input2)}\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"7\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Testcase failed\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"You need to provide the input\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"The solution is incorrect. Expected: {expected}, Got: {solution(stdin)}\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\"\n\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == [\"NE\", \"NE\", \"NE\"]\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == [\"3\", \"1\", \"def solution(stdin: str) -> str:\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Sample Input {stdin}, Expected Output {expected}, Output: {solution(stdin)}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input(1)) == \"NE\\nNE\\nNE\"\nassert solution(sample_input(2)) == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    6\n    D 3 1\n    D 2 2\n    D 1 3\n    P 1\n    P 2\n    P 3\n    ''') == 'NE\\nNE\\nNE\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(\n    '''\n    6\n    D 8 8\n    D 2 4\n    D 5 6\n    P 2\n    D 6 2\n    P 4\n    ''') == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'NE\\nNE\\nNE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'NE'\nassert solution(input()) == 'NE'\nassert solution(input()) == 'NE'\nassert solution(input()) == '3'\nassert solution(input()) == '1'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"2\\n\"\nassert solution(open(\"sample_output.txt\").read()) == \"2\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"The solution is incorrect.\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the maximum number of points you could catch fish from.\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2.0000000000\\n', 'Output incorrect'\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The solution provided is incorrect. Please check the example inputs and provide the correct solution.\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.0000000000\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"Expected output: '2.0000000000', but got: '{}'\\n\".format(solution(stdin))\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.0000000000\\n\", \"The diameter of the smallest drill bit that would remove all the flaws should be 2.\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\nassert solution(\"2 3 5\\n5 6 7\") == \"2\\n3\\n5\"\nassert solution(\"100 20 30\") == \"1\\n0\\n1\"\nassert solution(\"5 5 5\") == \"5\\n5\\n5\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\\n1 100 10\\n\") == \"1\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\", \"Test 1 failed\"\nassert solution(\"1 100 10\") == \"9\\n19\", \"Test 2 failed\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n4 4 5 4\\n') == '7\\n4 4 2 4 4 1 4\\n'\nassert solution('2 2\\n1 2\\n1 1\\n') == '2\\n1 1\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"\"\"\n7\n4 4 2 4 4 1 4\n\"\"\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4'\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 "
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n1\\n'\nassert solution() == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\"\nassert solution(\"1 2\\n\") == \"\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\\n1\\n4\\n4 4 2 4 4 1 4\\n7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n1\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 10 3 2\\n10 10 5 0\\n\") == \"4\\n\"\nassert solution(stdin=\"10 10 5 0\\n\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nfor i in range(1, 6):\n    assert solution(f\"Input {i}\") == f\"Output {i}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"  # expected output: \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\"  # expected output: \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == 4\nassert solution(\"10 10 5 0\") == 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1') == '4'\nassert solution(stdin='2 10 3 2') == '4'\nassert solution(stdin='10 10 5 0') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([2, 10, 3, 2], [4]),\n    ([10, 10, 5, 0], [10]),\n]\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 20\\n0123456789') == 10, \"Test case 1 failed\"\nassert solution('6 100 9294\\n23689') == 111, \"Test case 2 failed\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 20\\n0123456789') == '10', 'Zvonko can make 10 multiples of X between 1 and 20'\nassert solution('6 100 9294\\n23689') == '111', 'Zvonko can make 111 multiples of X between 100 and 9294'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 20\\n0123456789') == 10\nassert solution('6 100 9294\\n23689') == 111\n\nfrom typing import List"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\", \"Test failed.\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.500000 2.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.6\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 3.6\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution =="
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''1.500000 2.666667'''"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1.500000, \"The output is incorrect\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.500000 2.666667\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.000000 0.000000\"  # correct solution\nassert solution() == \"1.500000 2.666667\"  # correct solution\nassert solution() == \"1.500000 3.666667\"  # correct solution\nassert solution() == \"0.000000 0.000000\"  # correct solution"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == 3\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001') == 3\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == 3\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == -1, \"There are no square killers in the memory.\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''-3 -1\n3 1'''\n\nassert solution() == '''3 4\n3 -1'''"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3 4\", \"Sample Output 2\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output\nprint(\"PASSED\")"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == \"3 4\\n3 -1\"\nassert solution(open('sample_input_1.txt', 'r')) == \"-3 -1\\n3 1\"\nassert solution(open('sample_input_2.txt', 'r')) == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''-3 -1\n3 1'''"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nfor i in range(1, n):\n    assert solution(stdin) == expected"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n') == '-3 -1\\n3 1\\n\\n3 4\\n3 -1'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '''\n2 5.086781\n'''\n\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '''\n1 12.715255\n'''\n\nassert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '''\n2 5.086781\n'''"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"2 5.086781\"\n\nassert solution(\n    \"\"\"\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Sample Output 1:\\n2 5.086781\\n\\nSample Output 2:\\n1 12.715255\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test Case Failed\"\nprint(\"Test Case Passed\")"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 5.086781\\n1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5''') == '''2 5.086781'''\n\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5''') == '''1 12.715255'''"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\\n\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8\\n'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 8"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\"\nassert solution(\"0 0 0 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('day05-trenches.txt', 'r')) == '8\\n'\nassert solution(open('day05-trenches-2.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"8\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 8\nassert solution(\"5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == 1"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 'impossible'\nassert solution(7) == '4 3'"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == (4, 3)\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"4 3\\n\"\nassert solution(\"1\\n10\\n\") == \"impossible\\n\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"impossible\"\nassert solution(10) == \"impossible\"\nassert solution(21) == \"impossible\"\nassert solution(100) == \"impossible\"\nassert solution(1000) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == (4, 3)\nassert solution(10) == \"impossible\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"impossible\"\nassert solution(\"10\\n\") == \"impossible\"\nassert solution(\"10\\n5\\n\") == \"impossible\"\nassert solution(\"9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n\") == \"impossible\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n5\\n5\\n5\\n5\\n5\\n\") == \"impossible\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\") == \"impossible\"\nassert solution(\"9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == 16\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == 109"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"16\", \"Test 1\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"16\\n\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '16\\n'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"109\\n\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\"\nassert solution(\"2\\n1\\n3\\n\") == \"16\"\nassert solution(\"1\\n\") == \"001\"\nassert solution(\"1\\n\") == \"001\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4\\n2\\n4\\n1\\n4') == '109' # expected output: 109\nassert solution(stdin='1\\n1') == '1' # expected output: 1\nassert solution(stdin='1\\n') == '0' # expected output: 0\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"16\\n\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n3\\n\\n4\\n2\\n4\\n1\\n4\\n\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Output 1: 3\\n1 2 1\\n1 2 2\\n1 2 2\\n'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"2 5\\n1 3\\n2 3\\n4 1\\n2 4\\n3 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"1 2\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\") == \"3\\n1 2 1\\n2 1 0\\n3 2 1\\n4 3 0\\n5 4 1\\n6 5 2\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"2\\n1 0\\n3 1\\n4 2\\n5 3\"\nassert solution(\"3 2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"4\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\"\nassert solution(\"4 5\\n1 4\\n2 3\\n3 2\\n4 1\\n5 2\") == \"5\\n1 4 1\\n2 3 0\\n3 2 1\\n4 1 0\\n5 2 1\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5 1 1\"\nassert solution(\"6 5\\n1 4\\n2 3\\n3 2\\n4 1\\n5 2\") == \"5\\n1 4 1\\n2 3 0\\n3 2 1\\n4 1 0\\n5 2 1\"\nassert solution(\"2 5\\n1 3\\n2 3\\n4 1\\n2 4\\n3 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5 1 1\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5 1 1\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5 1 1\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5 1 1\"\nassert solution(\"5 4\\n1 3\\n2 2\\n3 1\\n4 0\\n5 1\") == \"4\\n1 3 1\\n2 2 0\\n3 1 1\\n4 0 0\\n5"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 3\n5 1\n1 2\n1 2\n1 2\n\"\"\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\n\"\"\"\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n\nassert solution(\n\"\"\"\n1 1\n2 1\n1 1\n2 1\n1 1\n\"\"\") == \"3\\n1 1 1\\n1 1 1\"\n\nassert solution(\n\"\"\"\n3 2\n1 3\n2 4\n1 4\n1 5\n\"\"\") == \"3\\n1 3 1\\n2 4 2\\n1 5 3\"\n\nassert solution(\n\"\"\"\n3 1\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"2\\n2 3 1\\n3 4 2\"\n\nassert solution(\n\"\"\"\n5 4\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"5\\n1 2 1\\n2 3 2\\n3 4 3\\n4 5 4\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3'\n\nSolution:\n\nTo solve the problem, we can iterate through the purchases and calculate the cards counts based on the given rules.\n\nHere's the code: \n\n```python\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4) == [\"1 2\"]\nassert solution(3, 5) == [\"2 1\"]\nassert solution(3, 6) == [\"1 2\"]\nassert solution(4, 5) == [\"1 2\", \"1 2\"]\nassert solution(4, 6) == [\"1 2\", \"1 2\"]\nassert solution(5, 6) == [\"2 1\", \"1 2\"]\nassert solution(6, 7) == [\"1 2\"]\nassert solution(7, 6) == [\"1 2\"]\nassert solution(8, 7) == [\"2 1\", \"1 2\"]\nassert solution(9, 8) == [\"2 1\", \"1 2\"]\nassert solution(10, 9) == [\"2 1\", \"1 2\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1 2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]\n\nfrom typing import List"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1 2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 2\\n\", \"Expected output: 1 2\\nActual output: {}\".format(solution())\nassert solution() == \"impossible\\n\", \"Expected output: impossible\\nActual output: {}\".format(solution())"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '''1 2\nimpossible'''\nassert solution(open('input_2.txt', 'r')) == '''1 2\nimpossible'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\"\n\nfrom typing import List"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\"\n\nassert solution(stdin) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for input {sample_input}, expected {expected_output}\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\n\nfrom typing import List"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\n4\\n0 strawberries\\n1 apples\\n2 strawberries\\n3 apples\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \\\n    f\"Solution: {solution(input())}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:impossible\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Input 2:3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:unique\\ndef solution(stdin: str) -> str:\n    pass\\n\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"tests/sample_input_1.txt\", \"r\")) == \"impossible\"\nassert solution(open(\"tests/sample_input_2.txt\", \"r\")) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 chocolate\\n1 icecream\\n2 cookies') == 'impossible'\nassert solution('0 chocolate\\n1 icecream\\n2 cookies\\n0 chocolate\\n1 cookies\\n2 icecream\\n2 chocolate') == 'unique'\nassert solution('0 chocolate\\n1 icecream\\n2 cookies\\n0 chocolate\\n1 cookies\\n2 icecream\\n2 chocolate\\n0 cookies\\n1 chocolate\\n2 cookies\\n2 icecream') == 'ambiguous'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the values of N, K, and M: \")) == 0, \"Solution should return 0\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 1, \"Solution should return 1\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 2, \"Solution should return 2\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 3, \"Solution should return 3\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 4, \"Solution should return 4\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 5, \"Solution should return 5\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 6, \"Solution should return 6\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 7, \"Solution should return 7\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 8, \"Solution should return 8\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 9, \"Solution should return 9\"\nassert solution(input(\"Enter the values of N, K, and M: \")) == 10, \"Solution should return 10\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed!\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\", \"Test 1 failed\"\nassert solution(\"1 2 10\") == \"1\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('......X...X..X..X..X.....X........X...................') == 1\nassert solution('X..........X..X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X.....X........X...................') == 1\nassert solution('X..X..........X..X..X....."
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n..........XXXX...................................XXXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n........................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"....XX...........................XXXX.............\") == 3\nassert solution(\"........XX........................................\") == 2\nassert solution(\"...............................................XX...........\") == 1"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"1 pan\\n\"\nassert solution(open('input2.txt', 'r').read()) == \"3 zoom out\\n\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test Case 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test Case 2 failed\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1 pan\\n3 zoom out\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"2 pan\\n4 zoom in\\n5 rotate clockwise\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"3 zoom out\\n4 rotate clockwise\\n\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"....XXXX...................................XXX..............\\n....XXXX..................................XXXX..............\\n....XXXX....................................XX..............\\n....XXXX.................................XXX................\\n....XXXX..............................XXXX...............\\n....XXXX.................................XX................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX....................................................\\n....XXXX......................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n +++ +\\n + + +\\n +++ +\\n\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\", \"Test 1 Failed\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  =  +\\n +++ +\\n + + +\\n +++ +\\n  =  +\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\"\nassert solution(\"8 5\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\"\nassert solution(\"8 10\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\\n\\n\\n') == '''apples are great!\\n\n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    "
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"       \n       \n       \n       \n       \n       \n       \n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = = = = \\n + = + + \\n + +++ +\\n + + + +\\n + +++ +\\n +     +\\n = = = = \\n\"\nassert solution(\"8 10\\napples are not ads\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are not ads\\n fresh apples!\\n\"\nassert solution(\"6 9\\napples are a 20 pixel square\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are a 20 pixel square\\n fresh apples!\\n\"\nassert solution(\"7 11\\napples are a 20 pixel square\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are a 20 pixel square\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" =  = = = = = = =\\n = + = + = + = +\\n + + + + + + + + +\\n = + = + = + = +\\n = + = + = + = +\\n = + = + = + = +\\n = + = + = + = +\\n = + = + = + = +\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4\nassert solution(sample_input_5) == expected_output_5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The function should return '2.0', but it returned '{}'.\".format(solution(\"HH\"))\nassert solution(\"H?\") == \"1.5\", \"The function should return '1.5', but it returned '{}'.\".format(solution(\"H?\"))\nassert solution(\"HHHH\") == \"2.5\", \"The function should return '2.5', but it returned '{}'.\".format(solution(\"HHHH\"))\nassert solution(\"HHH?HHHH\") == \"2.0\", \"The function should return '2.0', but it returned '{}'.\".format(solution(\"HHH?HHHH\"))\nassert solution(\"HHH?HHHHH\") == \"1.5\", \"The function should return '1.5', but it returned '{}'.\".format(solution(\"HHH?HHHHH\"))\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HH\\n\") == \"2.0\"\nassert solution(\"H?\\n\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0', 'Example 1'\nassert solution('H?') == '1.5', 'Example 2'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"HH\") == \"2.0\"\nassert solution(stdin=\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The output should be '2.0'.\"\nassert solution(\"H?\") == \"1.5\", \"The output should be '1.5'.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Test 1\"\nassert solution(\"H?\") == \"1.5\", \"Test 2\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Sample Input 1\"\nassert solution(\"H?\") == \"1.5\", \"Sample Input 2\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'\n\nfrom typing import List"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"To paint a picture consisting of N pixels, where N is a power of two (1, 2, 4, 8, 16), each pixel will be either black or white, Josip already has an idea of how each pixel will be coloured.\\n\\nThis would be no problem if Josip\u2019s painting process wasn\u2019t strange. He uses the following recursive process:\\n\\n1. If the picture is a single pixel, he colours it the way he intended.\\n2. Otherwise, split the square into four smaller squares and then:\\n3. Select one of the four squares and colour it white.\\n4. Select one of the three remaining squares and colour it black.\\n5. Consider the two remaining squares as new paintings and use the same three-step process on them.\\n\\nNow, soon Josip noticed that it was not possible to convert all his visions to paintings with this process. Your task is to write a program that will paint a picture that differs as little as possible from the desired picture. The difference between two pictures is the number of pairs of pixels in corresponding positions that differ in colour.\\n\\nInput:\\nThe first line contains an integer N ($1 \\leq N \\leq 512$), the size of the picture Josip would like to paint.\\n$N$ will be a power of $2$. Each of the following $N$ lines contains $N$ digits $0$ or $1$, white and black squares in the target picture.\\n\\nOutput:\\nOn the first line, output the smallest possible difference that can be achieved. On the next $N$ lines, output a picture that can be painted with Josip\u2019s process and achieves the smallest difference. The picture should be in the same format as in the input.\\n\\nNote: The second part of the output (the picture) may not be unique. Any correct output will be accepted.\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == 2\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n') == '2\\n'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"2\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"4\", \"Test case 2 failed\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: expected output: '{output}', got: '{solution(input())}'\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == 2\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == 2\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == 4\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Output mismatch: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\"\nassert solution(\"1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"1\"\nassert solution(\"1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n0 7 8\") == \"1\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"0\"\nassert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n0 7 8\") == \"-1\"\nassert solution(\"1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n2 3 0 0\\n4 2 3 5\\n4 2 3 1\") == \"0\"\nassert solution(\"1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n2 3 0 0\\n4 2 3 5\\n4 2 3 1\\n0 7 8\\n2 1 0 0\\n3 0 4 5\") == \"1\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == 2\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == 4"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1, f\"Test 1: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test 2: {solution(input_2)}!= {output_2}\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == 2\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\nSample Output 1:2\\nSample Input 2:8\\n1 2 1 3 1 3 1 2\\nSample Output 2:4\\n\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\nSample Output 2:4\\nSample Input 2:6\\n1 2 3 3 4 2\\nSample Output 1:2\\n\") == \"4\"\nassert solution(\"6\\n1 2 3 3 4 2\\nSample Output 1:2\\nSample Input 2:10\\n1 2 3 4 5 6 7 8 9\\nSample Output 2:0\\n\") == \"0\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\n\\nFailed to test the correctness of solution.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2, \"Test 1 Failed\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4, \"Test 2 Failed\"\nassert solution(\"6\\n1 2 1 1 2 1\") == 1, \"Test 3 Failed\"\nassert solution(\"4\\n1 1 2 2 1\") == 1, \"Test 4 Failed\"\nassert solution(\"2\\n1 2 2 2 1\") == 2, \"Test 5 Failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n3\\n\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2') == \"2\\n\", \"Output: expected '2', got '{}'\".format(solution(stdin='6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2'))"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\\n') == '2\\n'\nassert solution(stdin='6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\\n') == '4\\n'"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='6\\n1 2 3 3 4 2') == '2\\n', \"Expected output: 2\\n, but got: \" + solution(stdin='6\\n1 2 3 3 4 2')\nassert solution(stdin='8\\n1 2 1 3 1 3 1 2') == '4\\n', \"Expected output: 4\\n, but got: \" + solution(stdin='8\\n1 2 1 3 1 3 1 2')"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n\"\"\") == \"4\\n0\\n\"\n\nassert solution(\n\"\"\"\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n\"\"\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\n\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"4\\n0\\n\"\nassert solution(sample_input2) == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\n0\\n'\nassert solution() == '4\\n2\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n'\nassert solution() == 'impossible\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input2.txt', 'r')) == 'impossible\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"The solution {solution} is incorrect. Expected {expected}\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Input 1: 4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Output 1: 1\\nSample Input 2: 4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Output 2: impossible\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Input 1: 4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Output 1: 1\\nSample Input 2: 4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Output 2: impossible\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n'\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n') == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '35\\n18\\n3\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n\"\"\") == '35\\n18\\n3\\n'\n\nassert solution(\n\"\"\"\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n\"\"\") == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"35\"\nassert solution() == \"18\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n35\n18\n3\n'''"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35\\n18\\n3\\n'\nassert solution(r'''\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed.\"\nfor t in range(1, int(input())+1):\n    N = int(input())\n    sequence = list(map(int, input().split()))\n    expected_output = list(map(int, input().split()))\n    actual_output = solution(str(N))\n    for i, (x, y) in enumerate(zip(sequence, expected_output)):\n        assert x == actual_output[i], f\"Test case {t+1} failed. Expected output {expected_output[i]} for input {x}.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0\\n1\\n3\\n6\\n'\nassert solution() == '0\\n1\\n2\\n4\\n6\\n'\nassert solution() == '0\\n1\\n2\\n4\\n6\\n'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '0\\n1\\n3\\n6'\n\nassert solution('''\n5\n3\n2\n4\n1\n5\n''') == '0\\n1\\n2\\n4\\n6'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2 4 1 3', 'The solution is incorrect.'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test {test_case} failed. Expected {output}, got {solution(input)}\" for test_case, input, output in zip(range(1, 3), [input1, input2], [output1, output2])"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == ['2 4 1 3']"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\\n\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Solution should return '{expected_output}', but returned '{solution(input_str)}'.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output '{expected_output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, \"The solution is incorrect.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['charlatan']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"charlatan\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist']\nassert solution('1 3\\n1 not truther 1 truther 2\\n1 xor truther 1 fabulist 2\\n') == ['fabulist', 'truther']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\n\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\", \"truther\", \"def solution(stdin: str) -> str:\", \"    pass\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Solution for {input_str} is incorrect.\"\n\nfor input_str, expected_output in test_cases:\n    assert solution(input_str) == expected_output, f\"Solution for {input_str} is incorrect.\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther', 'def solution(stdin: str) -> str:',' pass']"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1.00 5.00\n    3.00 3.00\n    4.00 2.00\n    6.00 4.50\n    7.00 1.00\n    \"\"\"\n) == 4\n\nassert solution(\n    \"\"\"\n    3\n    -1.50 -1.00\n    1.50 -1.00\n    0.00 1.00\n    \"\"\"\n) == 3"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == 4\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == 3"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"4\", \"Test 1 failed\"\nassert solution(sample_input_2) == \"3\", \"Test 2 failed\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(inputFile1) == expectedOutput1\nassert solution(inputFile2) == expectedOutput2\n\ninputFile1 = \"\"\"\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n\"\"\"\n\ninputFile2 = \"\"\"\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n\"\"\"\n\nexpectedOutput1 = \"\"\"\n4\n\"\"\"\n\nexpectedOutput2 = \"\"\"\n3\n\"\"\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\\n\", \"John's game is not correct.\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\\n\", \"John's game is not correct.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '4', 'Your solution is incorrect'\nassert solution(sample_input_2) == '3', 'Your solution is incorrect'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(2) + '\\n' + '.X...\\n' + '100 100 7 100 8') == '16'\nassert solution(str(2) + '\\n' + 'X..\\n' + '.?.\\n' + '10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 16, \"Your solution is incorrect.\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 16, \"Incorrect answer\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"16\", \"The output should be 16, but it's: {}\".format(solution())"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 16, \"Sample Input 1: expected 16, got {}.\".format(solution())"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '16'\nassert solution(open('sample_input_1.txt', 'r').read()) == '16'\nassert solution(open('sample_input_2.txt', 'r').read()) == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('hunter_exam.in', 'r').read()) == '16\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1') == '16'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.414\", \"Incorrect solution\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1.414\\n'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1.414'\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}, output: {output}\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Solution: {solution(stdin)}, Output: {output}\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.414\\n\", \"The provided code is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.0\\n\"\n\nassert solution() == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 1') == '1.0'\nassert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.0\", \"sample output 1\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1 1 1 1') == '1.0\\n'\nassert solution('3 1 1 1') == '0.433\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\\n3 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1.0, \"Expected output: 1.0, but got: {}\".format(solution())\nassert solution() == 0.433, \"Expected output: 0.433, but got: {}\".format(solution())"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n    5\n    4\n    1 1\n    2 1\n    2 3\n    3 3\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n\"\"\") == \"\"\"\n5\n4\n1 1\n2 1\n2 3\n3 3\n\"\"\"\n\nassert solution(\"\"\"\n8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n\"\"\") == \"\"\"\n36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Test 1\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\", \"Test 2\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '''\n5\n4\n1 1\n2 1\n2 3\n3 3\n'''"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\n\nprint(\"1\")\nprint(\"3\")"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(' arrange 2 1\\n2 1\\n1 2\\n') == '1'\nassert solution(' arrange 3 2\\n2 1 3\\n1 3\\n2 3\\n') == '3'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\" arrange\\n 2 1\\n 2 1\\n 1 2\\n\") == \"1\"\nassert solution(\" arrange\\n 3 2\\n 2 1 3\\n 1 3\\n 2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == solution1"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output  # Add your solution here"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == -1, \"Invalid output\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n') == -1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1, \"Expected -1 but got {}\".format(solution())"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == -1\n\nassert solution('''\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output 1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == -1, \"Solution should return -1.\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1, \"The solution should return -1\"\nassert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1, \"The solution should return -1\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5, \"The solution should return 5\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n') == -1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == 5"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {index + 1} has an incorrect output: expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Input data: {input_data}, Expected output: {expected_output}\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n\") == \"4.00\"\nassert solution(\"1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n2 3\\n\") == \"4.00\"\nassert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n1 1\\n3 3\\n\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"The output is incorrect for the sample input 1.\"\nassert solution(sample_input_2) == expected_output_2, \"The output is incorrect for the sample input 2.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == 4.00, \"Wrong output\"\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == 9.00, \"Wrong output\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4.00\", \"Expected output: 4.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is not correct.\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == ['2', '1', '2', '3'], \"The given output is incorrect.\"\nassert solution(sample_input_2) == ['3', '1', '1'], \"The given output is incorrect.\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, \"Error in the solution\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 3) == \"1 4 2 3\"\nassert solution(5, 1) == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [\"1 4 2 3\", \"-1\"] # correct output\nassert solution() == [\"1 4 2 3\"] # valid sequence, has no 1s\nassert solution() == [\"-1\"] # valid sequence, has 1s\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 4 2 3'\nassert solution(stdin) == '1 2 3 4'\nassert solution(stdin) == '2 3 1 4'\nassert solution(stdin) == '3 4 1 2'\nassert solution(stdin) == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Output mismatch for {sample_input1}\"\nassert solution(sample_input2) == sample_output2, f\"Output mismatch for {sample_input2}\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n5 1') == '1 4 2 3\\n'\nassert solution('3 1') == '-1\\n'\nassert solution('') == '-1\\n'\nassert solution('4 2\\n5 4') == '-1\\n'\nassert solution('5 4\\n5 3') == '-1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(1)) == \"1\"\nassert solution(str(2)) == \"1 2\"\nassert solution(str(3)) == \"1 2 3\"\nassert solution(str(4)) == \"1 2 3 4\"\nassert solution(str(5)) == \"1 2 3 4 5\"\nassert solution(str(6)) == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\\n\"\nassert solution(\"4 3\\n5 5\\n\") == \"-1\\n\"\nassert solution(\"4 3\\n4 3\\n\") == \"-1\\n\"\nassert solution(\"4 3\\n4 3\\n5 3\\n\") == \"1 4 2 3\\n-1\\n\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed!\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4 2\\n2 1\\n1 3\\n\") == 1\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution, \"Function not defined\"\n\nN = int(stdin.readline().strip())"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n' # 1 triangle"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be 1.\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got {solution(input())}\"\n\nN = int(input())"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Input {stdin} failed. Expected output: {output}, got {solution(stdin)}.\" for stdin, output in [\n    (input1, output1),\n    (input2, output2),\n]"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4 140\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Test 1 failed\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Test 2 failed\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"Test {i+1} failed: {solution_input}, expected output {solution_output}, got {solution(solution_input)}\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Please implement the solution function\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(test_input) == expected_output, f\"Test {test_case} failed\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3\\nimpossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\" # incorrect solution"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n3\n\"\"\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\", \"Sample Input 1: 120\"\nassert solution(\"51090942171709440000\") == \"21\", \"Sample Input 2: 51090942171709440000\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(120) == 5, \"The factorial of 120 is not 5.\"\nassert solution(51090942171709440000) == 21, \"The factorial of 51090942171709440000 is not 21.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(120) == 5, \"Sample Input 1: 120\"\nassert solution(51090942171709440000) == 21, \"Sample Input 2: 51090942171709440000\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(120) == 5, \"Invalid input: 120\"\nassert solution(51090942171709440000) == 21, \"Invalid input: 51090942171709440000\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '45'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Input: {input()}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"123\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == output"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"output\", \"Incorrect solution. Please check the code and try again.\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    ''') == '20'  # Test 2\n\nassert solution('''\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    10\n    ''') == 'impossible'  # Test 3\n\nassert solution('''\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    10\n    20\n    ''') == '18'  # Test 4"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"20\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '''\n20\n'''"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n2\\n\") == \"18\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"impossible\" # Expected output: impossible"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n3\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n2\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3''') == '20'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '3\\n'\nassert solution(r'3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 5 10\\n7 8 2\") == \"3\\n\", \"The solution is incorrect.\"\nassert solution(\"2\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"3\", \"Expected output: 3, but got: \" + str(solution(sample_input1))\nassert solution(sample_input2) == \"11\", \"Expected output: 11, but got: \" + str(solution(sample_input2))"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 3\nassert solution(sample_input_2) == 11"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect.\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution does not match the expected output.\\nExpected: {solution_output}\\nGot: {solution(solution_input)}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {tc} failed: expected output '{expected_output}', got '{solution(stdin)}'\" for tc, expected_output in enumerate(test_cases)"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    110\n    011\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    1000\n    1000\n    0000\n    0010\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n110\\n011\\n') == '2'\nassert solution('4 2\\n1000\\n1000\\n0000\\n0010\\n') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef main():\\n    n, m = map(int, input().split())\\n    photos = []\\n    for _ in range(m):\\n        photos.append(list(map(int, input().split())))\\n    num_consistent_wirings = 0\\n    for i in range(1, n):\\n        for j in range(1, n):\\n            if photos[i-1][i-1] == 1 and photos[i-1][j] == 1 and photos[i][j-1] == 1 and photos[i][j] == 1:\\n                num_consistent_wirings += 1\\n    print(num_consistent_wirings)\\n\\nif __name__ == '__main__':\\n    main()\\n\\nprint(solution(''))\"\n\nfrom typing import List"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n110\\n011\\n2\\n4\\n1000\\n1000\\n0000\\n0010\\n\") == 2\nassert solution(\"3\\n1000\\n1000\\n0000\\n0010\\n2\\n4\\n1\\n110\\n011\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution() == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n110\\n011\\n') == '2'\nassert solution('4 2\\n1000\\n1000\\n0000\\n0010\\n') == '0'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str1) == output_str1, f\"Test case 1 failed: {solution(input_str1)}!= {output_str1}\"\nassert solution(input_str2) == output_str2, f\"Test case 2 failed: {solution(input_str2)}!= {output_str2}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1\\n'\nassert solution('3\\n1 3 2\\n2\\n') == '5\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n10 20 30\\n1\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"Output the worst-case time to find the crashing line when using an optimal strategy.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 100 20\") == 0\nassert solution(stdin=\"10 10 1\") == 19"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\n\nSolution:\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == 'Output the worst-case time to find the crashing line when using an optimal strategy.'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 100 20') == 0\nassert solution(stdin='10 10 1') == 19"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"The worst-case time to find the crashing line when using an optimal strategy is 19.\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) == \"The time to find the crashing line is 0.\"\nassert solution(stdin) =="
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"def\") == \"def\"\nassert solution(\"ghi\") == \"ghi\"\nassert solution(\"jkl\") == \"jkl\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 100 20\") == 0\nassert solution(stdin=\"10 10 1\") == 19"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == 'c'\nassert solution(input2) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == 'c\\n'\nassert solution(input2) == 'SHIP IT\\n'\n\nfrom typing import List\nimport itertools"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 'c'\nassert solution(sample_input2) == 'SHIP IT'\n\nfrom typing import List"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n\nfrom typing import List"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a b c d\") == \"c\"\nassert solution(\"a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\", \"Expected output: SHIP IT, got: {}\".format(solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\"))\n\nassert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\", \"Expected output: c, got: {}\".format(solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\"))\n\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\", \"Expected output: SHIP IT, got: {}\".format(solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\"))"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"SHIP IT\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"c\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n') == 'c\\n'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a b c d\") == \"c\", \"Invalid output\"\nassert solution(\"classa classb myfilec execd libe\") == \"SHIP IT\", \"Invalid output\"\nassert solution(\"def solution(stdin: str) -> str: pass\") == \"SHIP IT\", \"Invalid output\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1', 'Invalid solution'\nassert solution('20+3+x') == '2', 'Invalid solution'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5+3+x\\n9 10\\n\") == \"1\"\nassert solution(\"20+3+x\\n0 5\\n\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Invalid input\"\n\nassert solution(\"5+3+x\") == \"1\\n\", \"Invalid input\"\n\nassert solution(\"20+3+x\") == \"2\\n\", \"Invalid input\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1', \"Solution should return 1\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == '1', 'First example'\nassert solution(input2) == '2', 'Second example'\n\ninput1 = '''5+3+x\n9 10'''\ninput2 = '''20+3+x\n0 5'''"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\") == \"1\", \"Invalid expression\"\nassert solution(\"9 10\") == \"1\", \"Invalid input\"\nassert solution(\"20+3+x\") == \"2\", \"Invalid input\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\nassert solution(\"5\\n4\") == \"1\\n\"\nassert solution(\"5\\n(4)\") == \"1\\n\"\nassert solution(\"5\\n(4)+3\") == \"1\\n\"\nassert solution(\"5\\n(4)(3)+3\") == \"1\\n\"\nassert solution(\"x\\nx^2\") == \"1\\n\"\nassert solution(\"1\\nx\") == \"0\\n\"\nassert solution(\"10\\nx^2\") == \"0\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1'\nassert solution(open('input_2.txt', 'r').read()) == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5+3+x\\n9 10') == '1'\nassert solution('20+3+x\\n0 5') == '2'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'no' # Totally possible!"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'yes', 'Please implement the solution function'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\\n\"\nprint(\"yes\")"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 15\\n5 20\\n\") == \"yes\"\nassert solution(\"0 15\\n1 15\\n2 20\\n\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"yes\", \"Your code is not correct.\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"yes\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error in solution: expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.25\\n', f'Output: {solution(stdin)}'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, \"Testcase #{} failed. Expected output: {}, got: {}\".format(test_case_num, expected_output, output_str)"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 0.25\nassert solution(sample_input_2) == 0\n\nsample_input_1 = '''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n'''\n\nsample_input_2 = '''\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n'''"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.25\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\\n\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n\"\"\") == \"inf\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution() == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output one integer: the maximum number of participants that can join the excursion, so that all the participants\u2019 preferences are obeyed and the capacity of the bus is not exceeded.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output one integer: the maximum number of participants that can join the excursion, so that all the participants\u2019 preferences are obeyed and the capacity of the bus is not exceeded.\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n4\\n1 2 3 4\\n4\\n1 2 3 4\\n4\") == \"4\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'hoose\\noises\\noise\\n'\nassert solution('4\\nhose\\nhoose\\oose\\moose\\n') == 'hoose\\moose\\def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1:\") == \"hoose\\noises\\noise\\n\"\nassert solution(\"Sample Input 2:\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhose\\nhoose\\oose\\moose\") == \"hoose\\moose\"\nassert solution(\"5\\nhoose\\hose\\nose\\noises\\noise\") == \"hoose\\noises\\noise\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 'hoose\\nnoises\\nnoise\\n'\nassert solution(sample_input_2) == 'hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == [\"hoose\", \"noises\", \"noise\"]\nassert solution(sample_input_2) == [\"hoose\", \"moose\", \"def solution(stdin: str) -> str:\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\noise\\n\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hoose\\moose\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='5\\nhoose\\nhose\\nose\\noises\\noise\\n') == 'hoose\\noises\\noise\\n'\nassert solution(stdin='4\\nhose\\hoose\\oose\\moose\\n') == 'hoose\\moose\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\") == \"hoose\\nnoises\\nnoise\"\n\nassert solution(\"\"\"\n4\nhose\nhoose\noose\nmoose\n\"\"\") == \"hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input 1\\n'\n                 '5\\nhoose\\nhose\\nose\\noises\\noise\\n'\n                 'Sample Output 1\\nhoose\\noises\\noise\\n'\n                 'Sample Input 2\\n'\n                 '4\\nhose\\hoose\\oose\\moose\\n'\n                 'Sample Output 2\\nhoose\\moose\\def solution(stdin: str) -> str:\\npass\\n') == 'hoose\\noises\\noise\\n'\n\nassert solution('Sample Input 1\\n'\n                 '5\\nhoose\\nhose\\nose\\noises\\noise\\n'\n                 'Sample Output 1\\nhoose\\noises\\noise\\n'\n                 'Sample Input 2\\n'\n                 '4\\nhose\\hoose\\oose\\moose\\n'\n                 'Sample Output 2\\nhoose\\moose\\n') == 'hoose\\moose\\n'\n\nassert solution('Sample Input 1\\n'\n                 '5\\nhoose\\nhose\\nose\\noises\\noise\\n'\n                 'Sample Output 1\\nhoose\\noises\\noise\\n'\n                 'Sample Input 2\\n'\n                 '4\\nhose\\hoose\\oose\\moose\\n'\n                 'Sample Output 2\\n') == 'NO TYPOS\\n'\n\nassert solution('Sample Input 1\\n'\n                 '5\\nhoose\\nhose\\nose\\noises\\noise\\n'\n                 'Sample Output 1\\nhoose\\noises\\noise\\n'\n                 'Sample Input 2\\n'\n                 '4\\nhose\\hoose\\oose\\moose\\n'\n                 'Sample Output 2\\nhoose\\moose\\n') == 'NO TYPOS\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin}\\nExpected Output: {expected}\\nGot Output: {solution(stdin)}\"\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n3\\n') == '2\\n2\\n5\\n'\nassert solution('2 3\\n4\\n') == '0\\n16\\n8\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''1 1\n    3\n    '''\n) == \"2\\n2\\n5\\n\"\n\nassert solution(\n    '''2 3\n    4\n    '''\n) == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n2\\n5\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    1 1\n    3\n    \"\"\"\n) == \"2\\n2\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    4\n    \"\"\"\n) == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test 1: Expected output: {expected_output1}, got {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Test 2: Expected output: {expected_output2}, got {solution(sample_input2)}\"\n\nsample_input1 = \"1 1\\n3\"\nsample_input2 = \"2 3\\n4\"\n\nexpected_output1 = \"2\"\nexpected_output2 = \"0\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n'\n                   'Sample Input 1:\\n'\n                   '1\\n'\n                   'Sample Output 1:\\n'\n                   '44.72135955\\n\\n'\n                   '2\\n'\n                   '50 45 45\\n'\n                   'Sample Output 2:\\n'\n                   '68.52419365') == '68.52419365'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    1\n    50 45 45\n    '''\n) == '68.52419365'\n\nassert solution(\n    '''\n    2\n    50 45 45\n    '''\n) == '68.52419365'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n50 45 45') == '68.52419365\\n'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == f\"{44.72135955}\\n\", \"Output should be 44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 10 15\\n10 20 15\\n15 25 30\\n20 30 25\\n25 35 30\\n\") == \"44.72135955\"\nassert solution(\"2\\n50 45 45\\n\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(SampleInput1) == SampleOutput1\nassert solution(SampleInput2) == SampleOutput2\n\nfrom typing import List"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin2), \"Solution and Solution2 should be same\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output the minimum time required to reach the end of the road.\\nAnswer:68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_num} has incorrect output.\\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n3\\n2\\n\", \"Incorrect output\"\n\nfrom functools import reduce"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 5\n    1 2\n    \"\"\"\n) == \"1\\n3\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 2 3\n    1 3 1\n    \"\"\"\n) == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 4 2 3\\n\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['1', '3', '2']"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 3 1 5\n1 2''') == '1\\n3\\n2'\n\nassert solution('''3 4 2 3\n1 3 1''') == '1\\n1\\n0\\n2'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 2\\n3 4 2 3\\n1 3 1\\n\") == \"1\\n3\\n2\\n1\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\"\nassert solution(\"2 3 1 5\\n1 2\\n3 2\\n3 4 2 3\\n1 3 1\\n\") == \"1\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n3\\n2\\n'\nassert solution(open('example1.txt', 'r')) == '1\\n3\\n2\\n'\nassert solution(open('example2.txt', 'r')) == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Solution for sample input {sample_input_1} does not match expected output {sample_output_1}\"\nassert solution(sample_input_2) == sample_output_2, f\"Solution for sample input {sample_input_2} does not match expected output {sample_output_2}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n\" + \"3\\n\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Sample Input 1: {sample_input_1}, Sample Output 1: {sample_output_1}\"\nassert solution(sample_input_2) == sample_output_2, f\"Sample Input 2: {sample_input_2}, Sample Output 2: {sample_output_2}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Test case 1\"\nassert solution() == \"2\", \"Test case 2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 5\\n1 1\\n2 3\\n5 3\\n2 2 3 2 2\") == \"3\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'\nassert solution('') == '0'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\\n2 1\\n1 2\\n1 3\") == 3\nassert solution(\"5 3\\n2 2 3 2 2\\n3 3 2 2\\n2 3 1 1 2\") == 2"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 50, \"The output is incorrect.\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Error: {solution(input())}!= {output()}\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\", \"Test failed\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n100 100\\n50 50\\n1\\n0 50\\n50 0\\n\") == \"50\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 25, \"Incorrect solution!\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n100\\n200\\n2010\") == \"250\\n\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"160\", \"Test 1 failed\"\nassert solution() == \"250\", \"Test 2 failed\"\nassert solution() == \"160\", \"Test 3 failed\"\nassert solution() == \"250\", \"Test 4 failed\"\nassert solution() == \"160\", \"Test 5 failed\"\nassert solution() == \"250\", \"Test 6 failed\"\nassert solution() == \"160\", \"Test 7 failed\"\nassert solution() == \"250\", \"Test 8 failed\"\nassert solution() == \"160\", \"Test 9 failed\"\nassert solution() == \"250\", \"Test 10 failed\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}, expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n100\\n200\\n3\\n100\\n200\\n2010\\n\") == \"160\\n250\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: {input()}, {output}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"250\\n\", \"Please implement the solution for the problem statement.\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case {test_case} failed: got {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"250\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(''.join(input().split())) == 'Output', '\\n'.join(['input:'+ '\\n' + input().split(), 'output:'+ str(solution(''.join(input().split())))])"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input 1\\n4 2\\n0 1 1\\n2 3 1\\nOutput 1\\n2\\n\\nInput 2\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\nOutput 2\\n0\\n\") == \"2\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Output\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == 'def solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == expected_output1\nassert solution(input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3, 3, 3, 3) == 3\nassert solution(4, 3, 3, 3, 3) == 1\nassert solution(4, 2, 3, 3, 3) == 2\nassert solution(4, 2, 6, 3, 3) == -1\n\nfrom typing import List"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 1\\n1 2\\n2 3 4\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 3, 3, 3, 3, 2) == 1\nassert solution(3, 2, 3, 3, 2, 3, 2) == 1\nassert solution(3, 3, 3, 2, 3, 3, 2) == 2\nassert solution(3, 3, 3, 3, 2, 3, 2) == 2\nassert solution(4, 2, 3, 3, 2, 3, 2) == -1\nassert solution(4, 2, 3, 3, 2, 3, 2) == -1"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == -1\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == -1\nassert solution(\"1\\n2\\n3\\n4\\n1\\n\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n\") == -1\nassert solution(\"1\\n2\\n3\\n4\\n1\\n1\\n\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n5\\n\") == -1"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Actual: {solution(stdin)}\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == ['10.0', '10.0', '0.0']"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nclass Solution:\n    def unique_substitutions(self, encrypted: str) -> int:\n        substitutions = {\n            'a': 'h', 'b': 'p', 'c': 't', 'd': 'b', 'e': 'f', 'f': 'u', 'g': 'k', 'h': 'j', 'i': 'o', 'j': 'k', 'k': 'e', 'l': 'o','m': 'r', 'n': 'i', 'o': 'l', 'p': 'v', 'q': 'a', 'r': 'y','s': 'c', 't':'m', 'u': 'n', 'v': 'w', 'w': 'y', 'x': 'z', 'y': 'x', 'z': 'z'\n        }\n        words = encrypted.split()\n        result = set()\n        for word in words:\n            if word in substitutions:\n                result.add(word)\n        return len(result)\n\n    def is_word_present(self, encrypted: str, word: str) -> bool:\n        words = encrypted.split()\n        for word_ in words:\n            if word == word_:\n                return True\n        return False\n\n    def solution(self, encrypted: str) -> str:\n        substitution_count = self.unique_substitutions(encrypted)\n        if substitution_count!= 12:\n            return \"Impossible\"\n        \n        # Check if all the words are present in the plain text\n        if not self.is_word_present(encrypted, 'be') or not self.is_word_present(encrypted, 'our') or not self.is_word_present(encrypted, 'rum') or not self.is_word_present(encrypted, 'will') or not self.is_word_present(encrypted, 'dead') or not self.is_word_present(encrypted, 'hook') or not self.is_word_present(encrypted,'ship') or not self.is_word_present(encrypted, 'blood') or not self.is_word_present(encrypted,'sable') or not self.is_word_present(encrypted, 'avenge') or not self.is_word_present(encrypted, 'parrot') or not self.is_word_present(encrypted, 'captain'):\n            return \"Impossible\"\n        \n        # Create a dictionary of plain text to encrypted letter mappings\n        plain_text = {\n            'be': 'a', 'our': 'o', 'rum': 'u', 'will': 'l', 'dead': 'u', 'hook': 'w','ship':'s', 'blood': 'd','sable': 'r', 'avenge': 'g', 'parrot': 'p', 'captain': 'c'\n        }\n        \n        # Decrypt the encrypted text\n        decrypted = ''\n        for letter in encrypted:\n            decrypted += plain_text.get(letter, letter)\n        \n        return decrypted"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n\nSolution:\nWe can use the following approach to solve the problem:\n1. Split the given text into individual words.\n2. Create a dictionary to store the frequency of each word.\n3. Loop through the words and check if the length of the encrypted text is equal to the length of the decrypted text. If the lengths are not equal, we can say that the decrypted text cannot uniquely decrypt the encrypted text.\n4. If the lengths are equal, we can loop through the encrypted text and check if the corresponding decrypted text is present in the decrypted dictionary. If it is not present, we can say that the decrypted text cannot uniquely decrypt the encrypted text.\n5. If the decrypted text is present, we can return the decrypted text.\n6. If the decrypted text is not present, we can return the string \"Impossible\".\n\nLet's write code for the solution:<|im_sep|>"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == 'we will avenge our dead parrot arr'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\", \"Hamburg Bremen 46 55 50 60\", \"Bremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Hamburg Bremen\\n'\n                 '3\\n'\n                 'Hamburg Bremen 15 68 10 5\\n'\n                 'Hamburg Bremen 46 55 50 60\\n'\n                 'Bremen Frankfurt 14 226 10 120\\n',\n                 'Amsterdam Rotterdam\\n'\n                 '1\\n'\n                 'Amsterdam Utrecht 10 22 5 10\\n') == 68.3\n\nassert solution('Amsterdam Rotterdam\\n'\n                 '1\\n'\n                 'Amsterdam Utrecht 10 22 5 10\\n',\n                 'Hamburg Bremen\\n'\n                 '3\\n'\n                 'Hamburg Bremen 15 68 10 5\\n'\n                 'Hamburg Bremen 46 55 50 60\\n'\n                 'Bremen Frankfurt 14 226 10 120\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 68.3\nassert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == 68.3"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\nSample Output 1: 68.3\\n\\nSample Input 2: Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\nSample Output 2: IMPOSSIBLE\\n\") == 68.3\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Hamburg Bremen\", \"3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\", \"1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Expected 3, got {}.\".format(solution())\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3'\nassert solution('2\\n*.*\\n...\\n*.*') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\\n' + '2\n*.*\n...\n*.*\\n' + '4') == '3\\n4'\nassert solution('2\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n') == '4\\n'\nassert solution('2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n') == '6\\n'\nassert solution('2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n') == '11\\n'\nassert solution('2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '2\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n') == '22\\n'\nassert solution('2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '2\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '2\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '4\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n' + '3\n*.*\n...\n*.*\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*''') == '3\\n'\nassert solution('''2\n*.*\n...\n*.*''') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\\n\") == 4\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n12210020\\n1111\\n4\\n12210020') == '4\\n'\nassert solution('4\\n1111\\n12210020') == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"impossible\" # Replace this line with the actual solution"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == 4\nassert solution('4\\n1111\\n') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '4', 'Solution does not return the expected output'\nassert solution(sample_input_2) == 'impossible', 'Solution does not return the expected output'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    500 500 499\n    0 0 999\n    1000 1000 200\n    ''') == '''\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n'''\n\nassert solution('''\n    4\n    250 250 300\n    750 250 300\n    250 750 300\n    750 750 300\n    ''') == '''\nBill will be bitten.\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_cases/test_case1.txt', 'r').read()) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution(open('test_cases/test_case2.txt', 'r').read()) == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(input()) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == '''\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n'''\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == '''\nBill will be bitten.\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\npass') == 'xxoooooo\\ndef solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n# Test cases\\nassert solution(\\\"8 3\\n++xx+x++\\nSample Output 1: \\n++xx+o++\\n\\nSample Input 2: \\n8 3\\nxxxxxxxx\\nSample Output 2: \\nxxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\\") == \\\"def solution(stdin: str) -> str"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                 \"next generation of word processors,\\n\"\n                 \"he said.\\n\\n\"\n                 \"This is a test.\\n\"\n                 \"\\n\"\n                 \"The fox said, \\\"When?\\\",\\n\"\n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\\",\\n\"\n                 \"he said.\\n\\n\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n                 \"Not till 12 o'clock, replied the hen.\\n\"\n                 \"That clock is stopped, it will never strike.\\n\"\n                 \"\\n\"\n                 \"The fox said, \\\"When?\\\",\\n\"\n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\\",\\n\"\n                 \"he said.\\n\\n\"\n                 \"Not till 12 o'clock, replied the hen.\\n\"\n                 \"That clock is stopped, it will never strike.\\n\"\n                 \"\\n\"\n                 \"The fox said, \\\"When?\\\",\\n\"\n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\\",\\n\"\n                 \"he said.\\n\\n\") == \"clock: oclock\\nhe: hen the\\nen: hen when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin1) == expected1\nassert solution(stdin2) == expected2"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\"\n                 \"Not till 12 o'clock, replied the hen. That clock is stopped, it will never strike.\\n\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n                 \"Not till 12 o'clock, replied the hen. That clock is stopped, it will never strike.\\n\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"lazy: dog the: quick brown fox over the: jumped\\nquick: brown fox jumps the: lazy the: dog\\n\"\nassert solution(\"This is a test.\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"Lost is Close to Lose\\n\"\n    \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n    \"next generation of word processors,\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n) == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\n    \"The fox said, \\\"When?\\\"\\n\"\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n) == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n                \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                \"next generation of word processors,\\n\"\n                \"he said.***\\n\"\n                \"Sample Output 1:close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nllost: lose\\nhe\\n\") == \\\n    \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nllost: lose\\nhe\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n                \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n                \"\\\"That clock is stopped, it will never strike.\\\", he said.***\\n\"\n                \"Sample Output 2:clock: oclock\\nhe: hen the\\nen: hen when\\nwhen: it\\nis: it\\noclock: clock\\nhe: hen\\nlwill: will\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \\\n    \"clock: oclock\\nhe: hen the\\nen: hen when\\nwhen: it\\nis: it\\noclock: clock\\nhe: hen\\nlwill: will\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"123\\n456\\n789\\n***\\n\") == \"***\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Incorrect output. Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlose: lose\\nthe: he\\n'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nen: it\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    Lost is Close to Lose\n    Better Documents Inc. wants to add Typo Checking in to the next generation of word processors, and BDI is looking forward to replacing that with a true Typo Checker. We\u2019ve all been caught, after relying on a spell checker, by typing mistakes (\u201ctypos\u201d) that just happen to wind up as a correctly spelled word, just not the word we intended. BDI hopes to use AI to determine when a word\u2019s context suggests that it is out of place and probably should have been a different, but similarly spelled, word.\n    \n    As a first step in this process, they want to see how common similar words really are in ordinary text. Write a program to read in paragraphs of text and to produce a list of similarly spelled words occurring in that text.\n    \n    For the purpose of this program, a word is any maximal string of non-whitespace characters containing at least one alphabetic character. Whitespace can be either blanks or line terminators (\u201c\\r\u201d or \u201c\\n\u201d). The core of a word is what you have left after removing any non-alphabetic characters and replacing any upper-case alphabetic characters to their lower-case equivalents.\n    \n    Two words are considered to be similarly spelled if the core of one word can be converted to the core of the other word by a single application of any one of the following transformations:\n     - Delete a single character.\n     - Insert a single alphabetic character.\n     - Replace a single character by a different alphabetic character.\n     - Transpose (exchange) any two adjacent characters.\n    \n    -----Input-----\n    Input consists of $1$ to $100$ lines of text, followed by an end of input marker in the form of a line containing only the string \u201c***\u201d.\n    \n    Each line of text will contain $0$ to $80$ ASCII characters (not counting line terminators).\n    \n    -----Output-----\n    For each word core in the text that has one or more similarly spelled words, print a line consisting of\n     - That word core\n     - A colon (\u201c:\u201d) followed by a blank\n     - A list of all similarly spelled word cores (with no duplicates and not containing the core to the left of the colons), in alphabetic order, separated by single spaces.\n    \n    The lines printed should be in alphabetic order of the word cores to the left of the colon.\n    \n    If there are no similarly spelled words in the input, print a single line containing the string \u201c***\u201d.\n    \n    -----Examples-----\n    Sample Input 1:\n    Lost is Close to Lose\n    \"\"\"\n) == \"\"\"\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\nassert solution(\n    \"\"\"\n    The fox said, \"When?\"\n    \"Not till 12 o'clock\", replied the hen.\n    \"That clock is stopped, it will never strike.\", he said.\n    \"\"\"\n) == \"\"\"\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n\"\"\"\n\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output 1 is incorrect.\"\n\nsolution = lambda stdin: \"1\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"Expected '1', got: {}\".format(solution()) # should return '1'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\", \"Incorrect output. Expected 1, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '1\\n'\nassert solution(open('input2.txt').read()) == '2\\n'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot output: {solution(input())}\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect result for sample input 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect result for sample input 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0.142857 6') == '1/7', \"Test 1 failed.\"\nassert solution('1.6 1') == '5/3', \"Test 2 failed.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0.142857 6') == '1/7', \"Test 1 failed\"\nassert solution('1.6 1') == '5/3', \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('$0.142857$ 6') == '1/7', \"The expected output is 1/7, but instead got {}\".format(solution('$0.142857$ 6'))\nassert solution('1.6 1') == '5/3', \"The expected output is 5/3, but instead got {}\".format(solution('1.6 1'))"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect output\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect output\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '6', 'Test case 1 failed'\nassert solution(sample_input2) == '10', 'Test case 2 failed'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 6\nassert solution(\"2\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\") == 6\nassert solution(\"2\\n0 0 0\\n0 0 1\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 6\nassert solution(sample_input2) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1\") == \"6\\n\", \"Incorrect output\"\nassert solution(\"Sample Input 2\") == \"10\\n\", \"Incorrect output\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 6\nassert solution(sample_input_2) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1)) == 6\nassert solution(str(2)) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test case failed.\"\nfor _ in range(5):\n    test_input = input().split()\n    x, y, z = map(int, test_input)\n    assert solution(test_input) == expected_output, \"Test case failed.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"0 0 0\\n0 0 1\\n0 1 1\\n0 1 0\\n0 0 1\\n0 0 0\") == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"0 0 0\\n0 0 1\") == \"10\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"The output is wrong\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1', \"Your solution is not correct.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Sample Output 1: \" + solution(stdin)"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(7) == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1', 'Please write the correct code for the problem.'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"Your code is incorrect.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"1111\") == \"1\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1001') == '3', \"Test Case 1 failed\"\nassert solution('1111') == '1', \"Test Case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\\n\"\nassert solution(\"1111\") == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"1111\") == \"1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1001') == '3', 'Incorrect solution'\nassert solution('1111') == '1', 'Incorrect solution'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == 3\nassert solution(\"1111\") == 1"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\", \"Test 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"LLL\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == 'LLL'\nassert solution(sample_input2) == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'LLL', \"Invalid output\"\nassert solution(sample_input_2) == 'LLRLR', \"Invalid output\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == # Your code here"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\nSample Output 1:\\nLLL\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\nSample Output 2:\\nLLRLR\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"The output is incorrect. Expected '{expected}', got '{solution(input())}'.\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"1 2 2 1 2\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'LLL', \"The output should be LLL, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"LLL\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"49000000000070\"\nassert solution(sample_input_2) == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n\"\"\") == \"49000000000070\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {i+1} failed\" for i, (solution_input, solution_output) in enumerate(test_cases)"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070\\n'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021\\n'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '25000000000021'\nprint('All test cases passed!')"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n2 3 2000000\\n4 5 4000000\\n5 3 5000000\\n3 4 3000000\\n2 5 2000000\\n6 1 6000000\\n5 4 5000000\\n4 7 4000000\\n1 6 1000000\\n5 6 5000000\\n6 5 6000000\\n4 6 4000000\\n2 4 2000000\\n7 2 7000000\\n') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '49000000000070'\nassert solution() == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input_sample_1.txt\", \"r\")) == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(open(\"input_sample_2.txt\", \"r\")) == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2', 'Sample Input 1'\nassert solution(stdin) == '2', 'Sample Input 2'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n') == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n') == \"Yeah!\"\nassert solution('5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 2\\n5 3\\n') == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n1\\n1\\n1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n2\n2\n0\n1\n2\n2\n3\n\"\"\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\n\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'POSSIBLE\\n1 3\\n2 3\\n'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(3) == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(4) == 'IMPOSSIBLE'\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, [1,1,2]), \"Sample Input 1\"\nassert solution(2, [1,2]), \"Sample Input 2\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 2\\n2 3\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\n\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.5 0.5 0.5\\n\", \"Sample Output 1\"\nassert solution() == \"0.0 0.0 -0.0\\n\", \"Sample Output 2\"\n\nfrom typing import List"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.5 0.5 0.5\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5\\n'\n\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution, \"No solution provided\"\n\nimport math"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\"\n\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, \"Your solution is incorrect\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\n2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n0\n17 17 17\n\"\"\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\"\n\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\\n\"\n\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\"\n\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\\n\"\n\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\"\n\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\\n\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1: Expected output not found.\"\nassert solution(sample_input2) == sample_output2, \"Test 2: Expected output not found.\"\n\nsample_input1 = \"\"\"\n10\n3 6 2 3 2 2 2 1 5 6\n\"\"\"\n\nsample_input2 = \"\"\"\n3\n17 17 17\n\"\"\"\n\nsample_output1 = \"\"\"\n2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\"\n\nsample_output2 = \"\"\"\n0\n17 17 17\n\"\"\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\", solution(stdin)"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\", \"Expected IMPOSSIBLE, but got \" + solution(stdin)"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Actual: {solution(stdin)}\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('example_input.txt').read()) == '0\\n0\\n1\\n1\\n1\\n1\\n'\nassert solution(stdin=open('example_input_2.txt').read()) == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution(stdin=open('input.txt').read()) == solution(stdin=open('example_input.txt').read())\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n3\\n3\\n1\\n4\\n4\\n5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n3\\n3\\n1\\n4\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n2"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Test case failed for input {input}, expected output {expected_output}, got {solution(input)}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\", \"1\", \"2\"]\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == [\"0\"]\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\"]\nassert solution(\"6 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"0\", \"1\", \"2\", \"1\", \"2\"]\nassert solution(\"6 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\"]\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"0\", \"1\", \"2\", \"1\", \"2\"]\nassert solution(\"5 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\"]\nassert solution(\"6 4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\"]\nassert solution(\"6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\"]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n0\\n0\\n'\nassert solution() == '0\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution() == '0\\n1\\n2\\n2\\n2\\n2\\n'\nassert solution() == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution() == '1\\n1\\n2\\n2\\n2\\n1\\n'\nassert solution() == '1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '10'\nassert solution(sample_input2) == '5'\n\nfrom typing import List"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == 10\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10\\n'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5\\n'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 10, 2) == 10, \"Incorrect output\"\nassert solution(4, 10, 3) == 5, \"Incorrect output\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"2\"\nassert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == 2\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25') == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution(stdin='5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"tram.in\", \"r\").read()) == \"1\"\nassert solution(open(\"tram.in\", \"r\").read()) == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Expected output 1\"\nassert solution() == \"2\\n\", \"Expected output 2\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"1\\n\"\nassert solution(sample_input_2) == \"2\\n\"\n\nsample_input_1 = \"\"\"\n4 4\n.LX.\n.X..\n....\n.L..\n\"\"\"\n\nsample_input_2 = \"\"\"\n4 4\n.XLX\n.X..\n...L\n.X..\n\"\"\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n\"\nassert solution(open('input.txt', 'r').read()) == \"1\\n\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected Output: {expected_output_1}, Received Output: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected Output: {expected_output_2}, Received Output: {solution(sample_input_2)}\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Input 1:\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Input 1:\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n') == \"home\\n2\\n2 0 1\\n2 2 3\\n\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"detention\"\nassert solution(input()) == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"detention\\n2\\n2 0 1\\n2 2 3\"\nassert solution(sample_input2) == \"home\\n1\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"detention\"\nassert solution(input()) == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Input 1:\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass') == 'home\\n2\\n2 0 1\\n2 2 3'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass') == 'detention\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == -1\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"allatral\" or solution(input()) == \"-1\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\", \"Please modify the function signature and/or implement the function as requested.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\", \"Incorrect output for sample input 1\"\nassert solution(stdin) == \"17\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\", \"Test case failed\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 5\nassert solution(2) == 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n'\nassert solution('6\\n3 2 1 6 4 5') == '8\\n'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Your solution is not correct.\"\nassert solution(sample_input_2) == sample_output_2, \"Your solution is not correct.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 3 4 5\\n3 2 1 6 4 5\\n\") == \"5\\n\"\nassert solution(\"2\\n1 2 3 4 5\\n4 3 2 1 6 5\\n\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test Case {i + 1} failed.\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\\n\") == \"8\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(47) == 1, \"The number of empty squares will be 1.\"\nassert solution(523) == 2, \"The number of empty squares will be 2.\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"Test Case 1 Failed\"\nassert solution() == \"2\\n\", \"Test Case 2 Failed\"\nassert solution() == \"3\\n\", \"Test Case 3 Failed\"\nassert solution() == \"4\\n\", \"Test Case 4 Failed\"\nassert solution() == \"5\\n\", \"Test Case 5 Failed\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"47\") == \"1\\n\"\nassert solution(\"523\") == \"2\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution({stdin})\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"0\"\nassert solution(input2) == \"1\"\n\ninput1 = \"\"\"4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\"\"\"\ninput2 = \"\"\"2 2\n0 1 20\n1 0 5\"\"\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n\"\"\") == \"0\\n0\\n1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n1\\n0\\n1\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\", \"Test case 1 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == 5\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == 5\n\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4''') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\nassert solution(\"1 2\\n2 3\\n3 4\\n\") == \"0\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\", \"The solution should return 5\"\nassert solution(input()) == \"1\", \"The solution should return 1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\", \"The output is incorrect\"\nassert solution(\"1311\") == \"24\", \"The output is incorrect\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('020302') == '7', \"Test 1 failed\"\nassert solution('1311') == '24', \"Test 2 failed\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\", \"Test 1\"\nassert solution(\"1311\") == \"24\", \"Test 2\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read().strip()) == \"3 1 3 10\"\nassert solution(open(\"input2.txt\", \"r\").read().strip()) == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10\\n'\n\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    8 10\n        .#.#..##..#\n        ####..####\n        ###.##....\n        ...#..####\n        ....##....\n        .#.##..##.\n        ##########\n        ##########\n        '''\n) == '''\n    3 1 3 10\n    1 15 5 15\n    '''\n\nassert solution('''\n    5 20\n        ###########.#.#.#.#.\n        ###########...#.###.\n        ##########..##.#..##\n        ###########..#.#.##.\n        ###########.###...#.\n        '''\n) == '''\n    1 15 5 15\n    '''"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example1.txt', 'r').read()) == '3 1 3 10'\nassert solution(open('example2.txt', 'r').read()) == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(50, 0.125) == 16.339203308\nassert solution(201, 1.000) == 5.0"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == 16.339203308\nassert solution(\"201 1.000\") == 5.0\n\nfrom decimal import Decimal"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(50, 0.125) == 16.339203308\nassert solution(201, 1.000) == 5.000000000"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    50 0.125\n    '''\n) == '16.339203308'\n\nassert solution(\n    '''\n    201 1.000\n    '''\n) == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308', 'Test 1 failed'\nassert solution('201 1.000') == '5.000000000', 'Test 2 failed'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16.34\", \"The output is not correct. Please check your code.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Error: Your solution is incorrect. Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(50.000000000) == 16.339203308, \"Incorrect result\"\nassert solution(201.000000000) == 5.000000000, \"Incorrect result\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected Output: 3\\nActual Output: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n0.5 1\\nSample Output 1: 2\\n\\n2 2\\n0.5 1\\nSample Output 2: 3\\n\") == \"2\\n3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n0.5 1\\n2 1\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\nassert solution() == 2"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\\n\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\\n\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '10.5', 'Invalid output'\nassert solution(sample_input_2) == '-1', 'Invalid output'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\"\nsample_output1 = \"\"\"\n10.5\n\"\"\"\n\nsample_input2 = \"\"\"\n3\n2 1\n4 0\n0 3\n\"\"\"\nsample_output2 = \"\"\"\n-1\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n7 1\n3 2\n10 0\n\"\"\") == \"\"\"10.5\"\"\"\n\nassert solution(\"\"\"3\n2 1\n4 0\n0 3\n\"\"\") == \"\"\"-1\"\"\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number} failed: {solution(input())}!= {output}\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == 1\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 0.5\n2 0.5\n1 0.5''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"yes\"\nassert solution(input2) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\n\nassert solution('''\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes'\nassert solution(open('input2.txt', 'r')) == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"yes\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"no\"\n\nfrom typing import List"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes\\n'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'yes\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\"\nassert solution(input()) == \"yes\"\nassert solution(input()) == \"no\"\nassert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3\n5\n5\n5\n) == ['2', '1', '2']\nassert solution(4\n20\n15\n17\n14\n) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"\nassert solution(6) == \"1\"\nassert solution(7) == \"1\"\nassert solution(8) == \"1\"\nassert solution(9) == \"1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"2\"\nassert solution(13) == \"2\"\nassert solution(14) == \"2\"\nassert solution(15) == \"2\"\nassert solution(16) == \"2\"\nassert solution(17) == \"2\"\nassert solution(18) == \"2\"\nassert solution(19) == \"2\"\nassert solution(20) == \"2\"\nassert solution(21) == \"2\"\nassert solution(22) == \"2\"\nassert solution(23) == \"2\"\nassert solution(24) == \"2\"\nassert solution(25) == \"2\"\nassert solution(26) == \"2\"\nassert solution(27) == \"2\"\nassert solution(28) == \"2\"\nassert solution(29) == \"2\"\nassert solution(30) == \"2\"\nassert solution(31) == \"2\"\nassert solution(32) == \"1\"\nassert solution(33) == \"1\"\nassert solution(34) == \"1\"\nassert solution(35) == \"1\"\nassert solution(36) == \"1\"\nassert solution(37) == \"1\"\nassert solution(38) == \"1\"\nassert solution(39) == \"1\"\nassert solution(40) == \"1\"\nassert solution(41) == \"1\"\nassert solution(42) == \"1\"\nassert solution(43) == \"1\"\nassert solution(44) == \"1\"\nassert solution(45) == \"1\"\nassert solution(46) == \"1\"\nassert solution(47) == \"1\"\nassert solution(48) == \"1\"\nassert solution(49) == \"1\"\nassert solution(50) == \"1\"\nassert solution(51) == \"1\"\nassert solution(52) == \"1\"\nassert solution(53) == \"1\"\nassert solution(54) == \"1\"\nassert solution(55) == \"1\"\nassert solution(56) == \"1\"\nassert solution(57) == \"1\"\nassert solution(58) == \"1\"\nassert solution(59) == \"1\"\nassert solution(60) == \"1\"\nassert solution(61) == \"1\"\nassert solution(62) == \"2\"\nassert solution(63) == \"2\"\nassert solution(64) == \"2\"\nassert solution(65) == \"2\"\nassert solution(66) == \"2\"\nassert solution(67) == \"2\"\nassert solution(68) == \"2\"\nassert solution(69) == \"2\"\nassert solution(70) == \"2\"\nassert solution(71) == \"2\"\nassert solution(72) == \"2\"\nassert solution(73) == \"2\"\nassert solution(74) == \"2\"\nassert solution(75) == \"2\"\nassert solution(76) == \"2\"\nassert solution(77) == \"2\"\nassert solution(78) == \"2\"\nassert solution(79) == \"2\"\nassert solution(80) == \"2\"\nassert solution(81) == \"2\"\nassert solution(82) == \"2\"\nassert solution(83) == \"2\"\nassert solution(84) == \"2\"\nassert solution(85) == \"2\"\nassert solution(86) == \"2\"\nassert solution(87) == \"2\"\nassert solution(88) == \"2\"\nassert solution(89) == \"2\"\nassert solution(90) == \"2\"\nassert solution(91) == \"2\"\nassert solution(92) == \"2\"\nassert solution(93) == \"2\"\nassert solution(94) == \"2\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt', 'r')) == '2\\n1\\n2\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 5, 5, 5) == [\"2\", \"1\", \"2\"]\nassert solution(4, 20, 15, 17, 14) == [\"5\", \"8\", \"2\", \"7\"]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == ['2', '1', '2']\nassert solution(open('sample_input_1.txt', 'r')) == ['2', '1', '2']\nassert solution(open('sample_input_2.txt', 'r')) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\\n\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\\n\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\", \"Sample Input 1: expected output is 2\\n1\\n2\\n, but got {}\".format(solution(\"3\\n5\\n5\\n5\"))\n\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\", \"Sample Input 2: expected output is 5\\n8\\n2\\n7\\n, but got {}\".format(solution(\"4\\n20\\n15\\n17\\n14\"))\n\nfrom typing import List"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"python\"\nassert solution() == \"python main.py\"\nassert solution() == \"python main.py -n 10\"\nassert solution() == \"java\"\nassert solution() == \"java\"\nassert solution() == \"java\"\nassert solution() == \"python\"\nassert solution() == \"java\"\nassert solution() == \"java\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution '{solution(input())}' is incorrect. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\"\n\nfor _ in range(int(input())):\n    input_line = input()\n    command_history = solution(input_line)\n    print(command_history)"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(input()) == \"python\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"python main.py\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'python main.py'\nassert solution() == 'python main.py -n 10'\nassert solution() == 'python'\nassert solution() == 'java'\nassert solution() == 'python java'\nassert solution() == 'python def solution(stdin: str) -> str:'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\npython\\np^ main.py\\n^ -n 10') == 'python\\npython main.py\\npython main.py -n 10'\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^\\n') == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('3\\n^') == ''\nassert solution('') == ''"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"python\"\nassert solution(input()) == \"python main.py\"\nassert solution(input()) == \"python main.py -n 10\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"python\"\nassert solution(input()) == \"python main.py\"\nassert solution(input()) == \"python main.py -n 10\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"def solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\\n2\\nthere\\nhello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'1 2') == '4'\nassert solution(r'2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\\n\"\nassert solution(\"2 2\") == \"16\\n\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"2\\n\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4\nassert solution(4) == 16"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nprint(\"Correct!\")"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcbab\\n2\\ncb\\ncbab\") == \"2\\n\"\nassert solution(\"abab\\n2\\nbac\\nbaba\") == \"4\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abcbab') == '2', \"Expected: '2', got: {}\".format(solution('abcbab'))\nassert solution('abab') == '2', \"Expected: '2', got: {}\".format(solution('abab'))\nassert solution('bac') == '4', \"Expected: '4', got: {}\".format(solution('bac'))\nassert solution('baba') == '4', \"Expected: '4', got: {}\".format(solution('baba'))\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abcbab') == '2'\nassert solution('abab') == '4'\nassert solution('bac') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\\n\"\nassert solution(\"4\\nababab\\n2\\nbac\\nbaba\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\", \"abcbab\", 2, \"cb\", \"cbab\") == \"2\"\nassert solution(\"Sample Input 2\", \"abab\", 2, \"bac\", \"baba\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=sample_input_1) == sample_output_1\nassert solution(stdin=sample_input_2) == sample_output_2"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\") == \"Sample Output 1\\n\"\nassert solution(\"Sample Input 2\") == \"Sample Output 2\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2\n\ninput1 = \"\"\"\n50\n4\n110 10\n80 10\n80 0\n110 0\n\"\"\"\ninput2 = \"\"\"\n24\n3\n10 10\n30 10\n20 20\n\"\"\"\n\nexpected1 = \"\"\"\n6\n85\n90\n95\n100\n105\n\"\"\"\n\nexpected2 = \"\"\"\n4\n17.071067\n20\n22.928932\n\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6\\n85\\n90\\n95\\n100\\n105\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(sample_input2) == \"4\\n17.071067\\n20\\n22.928932\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)  # test case"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"50\n    4\n    110 10\n    80 10\n    80 0\n    110 0\"\"\"\n) == \"6\\n85\\n90\\n95\\n100\\n105\"\n\nassert solution(\n    \"\"\"24\n    3\n    10 10\n    30 10\n    20 20\"\"\"\n) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(sample_input_2) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='10 11') == 'yes'\nassert solution(stdin='10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes\\n'\nassert solution('10 7') == 'yes\\n'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"yes\"\nprint(\"yes\")\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"N: \")) == \"Output the length K of the longest sequence on the first line.\\n3\\n1 6\\n2 5\\n3 4\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output the length K of the longest sequence on the first line.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(input())}'\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n1 6\\n2 5\\n3 4\\n', 'Your solution is incorrect.'\nprint('Your solution is correct!')"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '3\\n1 6\\n2 5\\n3 4\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output: 3\\n1 6\\n2 5\\n3 4\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5836\", \"The output should be 5836.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test Case {test_case} failed. Expected output: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == f\"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed!\"\n\nn = int(input())\nk = int(input())\ncard_types = []\nenvelopes = []\nfor _ in range(n):\n    card_types.append([int(x) for x in input().split()])\n\nfor _ in range(k):\n    envelopes.append([int(x) for x in input().split()])\n\nmin_waste = float('inf')\nfor card_type in card_types:\n    for envo in envelopes:\n        card_w = card_type[0]\n        card_h = card_type[1]\n        envo_w = envo[0]\n        envo_h = envo[1]\n        waste_paper = envo_w - card_w - card_w * (envo_h / card_h) * (card_h - card_h / envo_h)\n        min_waste = min(min_waste, waste_paper)\n\nprint(min_waste)"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    5 1\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    \"\"\") == \"5836\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 5836\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution( \"\"\"\n    5 1\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    \"\"\") == \"5836\"\n\nassert solution( \"\"\"\n    5 2\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    \"\"\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"50\\n\", \"Sample Output 1\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"50\", \"Incorrect output\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 50\nassert solution(3) == 50\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50\\n'\n\nassert solution('''\n3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n''') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"50\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5.0\\n') == '0 0 0 0 1\\n'\nassert solution(stdin='4.5\\n') == '0 0 0 1 1\\n'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3.141592653589793) == '0 0 0 0 1', \"Slavko decided to challenge Mirko! He gave him a real number P=3.141592653589793 and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper. Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P=3.141592653589793.\"\n\nassert solution(100) == '1 0 0 0 0', \"Slavko decided to challenge Mirko! He gave him a real number P=100 and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper. Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P=100.\"\n\nassert solution(5.5) == '0 0 1 0 0', \"Slavko decided to challenge Mirko! He gave him a real number P=5.5 and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper. Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P=5.5.\"\n\nassert solution(12.5) == '0 1 0 0 0', \"Slavko decided to challenge Mirko! He gave him a real number P=12.5 and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper. Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P=12.5.\"\n\nassert solution(0.5) == '0 0 0 0 0', \"Slavko decided to challenge Mirko! He gave him a real number P=0.5 and a bag full of pieces of paper with exactly one number between 1 and 5 inclusive written on each paper. There is an unlimited quantity of each type of paper. Mirko\u2019s task is to pick the minimum number of papers in a way that the average of the numbers written on them equals exactly P=0.5.\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() # check if the solution meets the requirement"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0 0 0 0 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution for sample test case {input()} failed.\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n\ninput_P = float(stdin.readline().strip())\n\nones = 0\ntwos = 0\nthrees = 0\nfours = 0\nfives = 0\n\nfor i in range(1, 6):\n    paper_num = int(input())\n    if paper_num == 1:\n        ones += 1\n    elif paper_num == 2:\n        twos += 1\n    elif paper_num == 3:\n        threes += 1\n    elif paper_num == 4:\n        fours += 1\n    elif paper_num == 5:\n        fives += 1"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output mismatch. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"The output should be '3'.\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\", \"Test failed.\"\nassert solution() == \"3\", \"Test failed.\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"8\\n\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"3\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\", \"Expected output: 8, got: \" + solution(\"8 3 1\\n1 7 8 2 6 4 3 5\")\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\", \"Expected output: 3, got: \" + solution(\"8 2 1\\n1 7 8 2 6 4 3 5\")"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == 8\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == 3"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output', 'Solution is not correct'\nprint('Output')"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(8, 3, 1)) == \"8\\n\"\nassert solution(str(8, 2, 1)) == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution(b'6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('bits.in', 'r')) == '3\\n'\nassert solution(open('bits.in', 'r')) == '4\\n'\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\nassert solution(\"4 4\\n1 2 3 4\\n1 5 4 3\\n6 5 1 2\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3'\n\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.732050808, \"The solution should be 1.732050808\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1\n\nimport math"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == 1.732050808\nassert solution(input2) == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\"\n\nfrom typing import List"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"0\"\nassert solution(sample_input2) == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example1.in\", \"r\")) == \"0\\n3\\n\"\nassert solution(open(\"example2.in\", \"r\")) == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '3'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 4 3 4\") == \"0\"\nassert solution(\"2 1 1\") == \"0\"\nassert solution(\"2 1 1 2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6 2 1 6\") == \"3\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5 1\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1 2') == '0\\n3'\nassert solution('2 1 6') == '0\\n3'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3\\n2\\n1\\n0'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_sample_1) == '1'\nassert solution(input_sample_2) == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"n: \")) == \"1\"\nassert solution(input(\"n: \")) == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 10\\n6\\n11\\n3 5\\n8') == '5'\nassert solution('10 10\\n6\\n11\\n3 5\\n8') == '8'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\\n6\\n\") == \"5\"\nassert solution(\"3 5\\n11\\n\") == \"8\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8', 'Function should return \"8\"'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 8, \"Test case 2 failed\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Incorrect output\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"8\"\nassert solution(\"5 5\\n11\") == \"5\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"5\\n8\\n\"\nassert solution(\"3 5\\n11\\n10 10\\n11\\n\") == \"5\\n8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 10\\n6\\n11') == '5\\n'\nassert solution('3 5\\n11') == '8\\n'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '4'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 2\n    1 2 1\n    3 2 1\n    '''\n) == '2'\n\nassert solution(\n    '''\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 1\n    1 2 1\n    3 2 1\n    '''\n) == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output a single integer that is the minimum number of vehicles required to ensure each client i is visited at time T_ i by some vehicle.\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"output\", \"Incorrect solution\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2\\n'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == '3'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\\n\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '''\n3\n'''\n\nassert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '''\n3\n'''"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 3\nassert solution(2) == 3\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 3\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 3\nassert solution(12) == 3\nassert solution(13) == 3\nassert solution(14) == 3\nassert solution(15) == 3\nassert solution(16) == 3\nassert solution(17) == 3\nassert solution(18) == 3\nassert solution(19) == 3\nassert solution(20) == 3\nassert solution(21) == 3\nassert solution(22) == 3\nassert solution(23) == 3\nassert solution(24) == 3\nassert solution(25) == 3\nassert solution(26) == 3\nassert solution(27) == 3\nassert solution(28) == 3\nassert solution(29) == 3\nassert solution(30) == 3\nassert solution(31) == 3\nassert solution(32) == 3\nassert solution(33) == 3\nassert solution(34) == 3\nassert solution(35) == 3\nassert solution(36) == 3\nassert solution(37) == 3\nassert solution(38) == 3\nassert solution(39) == 3\nassert solution(40) == 3\nassert solution(41) == 3\nassert solution(42) == 3\nassert solution(43) == 3\nassert solution(44) == 3\nassert solution(45) == 3\nassert solution(46) == 3\nassert solution(47) == 3\nassert solution(48) == 3\nassert solution(49) == 3\nassert solution(50) == 3\nassert solution(51) == 3\nassert solution(52) == 3\nassert solution(53) == 3\nassert solution(54) == 3\nassert solution(55) == 3\nassert solution(56) == 3\nassert solution(57) == 3\nassert solution(58) == 3\nassert solution(59) == 3\nassert solution(60) == 3\nassert solution(61) == 3\nassert solution(62) == 3\nassert solution(63) == 3\nassert solution(64) == 3\nassert solution(65) == 3\nassert solution(66) == 3\nassert solution(67) == 3\nassert solution(68) == 3\nassert solution(69) == 3\nassert solution(70) == 3\nassert solution(71) == 3\nassert solution(72) == 3\nassert solution(73) == 3\nassert solution(74) == 3\nassert solution(75) == 3\nassert solution(76) == 3\nassert solution(77) == 3\nassert solution(78) == 3\nassert solution(79) == 3\nassert solution(80) == 3\nassert solution(81) == 3\nassert solution(82) == 3\nassert solution(83) == 3\nassert solution(84) == 3\nassert solution(85) == 3\nassert solution(86) == 3\nassert solution(87) == 3\nassert solution(88) == 3\nassert solution(89) == 3\nassert solution(90) == 3\nassert solution(91) == 3\nassert solution(92) == 3\nassert solution(93) == 3\nassert solution(94) == 3\nassert solution(95) == 3\nassert solution(96) == 3\nassert solution(97) == 3\nassert solution(98) == 3\nassert solution(99) == 3\nassert solution(100) == 3\nassert solution(101) == 3\nassert solution(102) == 3\nassert solution(103) == 3\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\", \"Output should be 1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"5\"\nprint(5)\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"5\\n\", \"Test 2 failed\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"5\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"The output is incorrect. Expected: {expected_output}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"1\"\nassert solution(5) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(3) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"The output is incorrect.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 11 9\\n1 0 10\\n0 0 0\\n3 1\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\n# Test case 2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"0 1 10\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 10\") == \"2 100000 1\\n0 1 100000\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\n\nassert solution('2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000'"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\n\nassert solution('2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 5\", \"Sample Output 1 is incorrect.\"\nassert solution() == \"2 0\", \"Sample Output 2 is incorrect.\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n2 0\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\"\nassert solution(\"1 1\\n..M\\nS..\\nM..\") == \"0 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..') == '3 5'\nassert solution('2 3\\nS.M\\nM..') == '2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output: 3 5\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"2\n3 c\n6 c\n\"\"\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == \"1\\n6 b\\n\"\nassert solution(\"\") == \"1\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"def solution(stdin: str) -> str: \\n    pass\\n\\n    return ''\", \"Test failed\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n3 c\\n6 c'\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1, f\"Expected '{output_1}', got '{solution(input_1)}'.\"\nassert solution(input_2) == output_2, f\"Expected '{output_2}', got '{solution(input_2)}'.\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == [\"2\", \"3 c\", \"6 c\"]\nassert solution(sample_input2) == [\"1\", \"6 b\"]"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == str(40), \"The distance between the numbers 4561 and 3278 is 12.\"\nassert solution(str(input())) == str(76), \"The distance between the numbers 32 and 5678 is 21.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5') == '40\\n'\nassert solution('288 291') == '76\\n'\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\\n76\\n\", \"Test 1 Failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\"\nassert solution(\"1000000000 1000000000\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n288 291') == '40\\n'\n\nfrom typing import List"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\"\nassert solution(\"1000 10000\\n1000000000\\n\") == \"1\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CAT') == 'COG', \"Invalid test case\"\nassert solution('DOG') == 'CGO', \"Invalid test case\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3\\nCAT\\nDOG\\nCOT') == 'COG\\n3\\n'\n\nassert solution(stdin='2\\nCAT\\nDOG') == '0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == [\"COG\", 3]\nassert solution(stdin=\"3\") == [\"COG\", 3]\nassert solution(stdin=\"2\") == [0, -1]\nassert solution(stdin=\"6\") == [\"COG\", 3]"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {case + 1} failed: expected {output}, got {solution(input())}\"\nprint(\"Test case passed\")\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"COG\"\nassert solution(stdin) == \"COG\"\nassert solution(stdin) == \"COG\"\nassert solution(stdin) == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"123\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"1234567890123456789012345678901234567890\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890\") == \"1234567890123456789012345678901234567890\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COT\"\nassert solution(\"COT\") == \"COT\"\nassert solution(\"AAA\") == \"0\"\nassert solution(\"AAAABBBCCC\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nCAT\\nDOG\\nCOT') == ('COG', 3)\nassert solution('2\\nCAT\\nDOG\\n') == (0, -1)\n\nfrom collections import defaultdict"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"tests/sample_input_1.txt\", \"r\")) == \"COG\"\nassert solution(open(\"tests/sample_input_2.txt\", \"r\")) == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"COG\", \"Sample Output 1\"\nassert solution(2) == \"0\", \"Sample Output 2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1\") == \"9\", \"Test 1 failed\"\nassert solution(\"4 3\") == \"6\", \"Test 2 failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the number of sequences modulo 1000000007.\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6', \"The output should be 6, but it's actually {}\".format(solution())"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\\n6\\n\"\nassert solution(\"1000000000 1000000000\\n\") == \"9999999999\\n9999999999\\n\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {index+1} failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\\n6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 9"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"The output is not correct.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' does not match the expected output '{expected_output}'.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n''') == 3\n\nassert solution('''\n2 5\nV...\\\nH...V\n''') == -1\n\nassert solution('''\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n''') == 3\n\nassert solution('''\n2 5\nV...\\\nH...V\n''') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\") == 3, \"The minimum number of gargoyles to rotate in order to unlock the treasure door should be 3.\"\nassert solution(\"2 5\\nV...\\nH...V\") == -1, \"No solution exists for the given configuration.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1, \"Expected Output: {}, Actual Output: {}\".format(expected_output1, solution(sample_input1))\nassert solution(sample_input2) == expected_output2, \"Expected Output: {}, Actual Output: {}\".format(expected_output2, solution(sample_input2))\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"The correct solution is not obtained\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Incorrect result\"\nassert solution() == -1, \"Incorrect result\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    /.V.\\\n   ./.V.\n   ..#..\n   .V.#.\n    \\.V./\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    2 5\n    V...\\\n    H...V\n    \"\"\"\n) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output not as expected\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3, \"The solution is not correct for sample input 1\"\nassert solution(\"2 5\\nV...\\nH...V\") == -1, \"The solution is not correct for sample input 2\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Received: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick brown f\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"AMBIGUOUS\" or solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AMBIGUOUS\"  # expected output\nassert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"  # expected output\nassert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"  # expected output\nassert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"  # expected output\nassert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"  # expected output"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\", \"Please implement the solution.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\", \"Output not correct.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(open('example1.txt', 'r')) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(open('example2.txt', 'r')) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read().splitlines()) == 'The quick brown fox jumps over the lazy dog.'\n\nfrom typing import List"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '0+-'\nassert solution(open('sample_input1.txt', 'r')) == '0+-'\nassert solution(open('sample_input2.txt', 'r')) == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '''\n--+0-\n'''\n\nassert solution('''\n3 2\n1 2 1\n-2 0 2\n''') == '''\n0+-\n'''\n\nassert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '''\n--+0-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '0+-', 'Invalid output for sample input 1'\nassert solution(sample_input2) == '0+-', 'Invalid output for sample input 2'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-'\nassert solution('') == 'impossible'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2\\n2 2\\n2\\n2 2 2\\n2 2 2\\n\") == \"1\\n4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1\") == \"1\\n\"\nassert solution(\"Sample Input 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match expected output\\nActual Output: {solution(input_str)}\\nExpected Output: {expected_output}\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 1\n    1\n    \"\"\"\n) == '1\\n'\n\nassert solution(\n    \"\"\"\n    2 2\n    1 2\n    2 3\n    2\n    \"\"\"\n) == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Testcase 1 failed\"\n\nassert solution() == \"1\\n\", \"Testcase 2 failed\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == 1\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == 4"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case+1} failed: expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test Failed\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 5\n    WRRRG\n    WRRRG\n    WRRRG\n    WBBBB\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n    3 4\n    WWRR\n    WRRR\n    WRRR\n    \"\"\"\n) == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3\\n') == '1'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n') == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5 1 2 3\\n\") == \"1\"\nassert solution(\"6 3 5 1 2 3 3 2 1\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '3 2\\n12 3\\n', \"The output is incorrect.\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected_output, f\"Expected Output: {expected_output}, Actual Output: {solution()}\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Sample Input 2\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    0 2\n    1 2\n    3 3\n    ''') == '''\n    3 2\n    '''\n\nassert solution('''\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n    ''') == '''\n    12 3\n    '''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '''\n3 2\n'''\n\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '''\n12 3\n'''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"3 2\", \"Test case 1 failed\"\nassert solution == \"12 3\", \"Test case 2 failed\"\n\nsolution = 3"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n0 2\n1 2\n3 3\n\"\"\") == \"\"\"\n3 2\n\"\"\"\n\nassert solution(\"\"\"\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\") == \"\"\"\n12 3\n\"\"\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Solution does not match the expected output. Received '{output}', expected '{output}'\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Expected output is not correct!\"\n\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Expected output is not correct!\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test case 1 failed\"\n\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100\\n000\\n01\\n01\\n01'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test 1 failed\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test 2 failed\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == ['100', '000', '01', '01', '01']"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"2\\n\"\nassert solution(sample_input_2) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\n\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the examples in the problem statement and the problem statement for more information.\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n') == '2'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\n\nassert solution(stdin=\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output for sample input {input()}, expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Impossible\"  # Test 1\nassert solution() == \"Impossible\"  # Test 2"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '126.87', \"Expected: '126.87', but got: '{}'\".format(solution())"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000\\nImpossible\\n'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765\\nImpossible\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.00000000'\nassert solution('5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"90.00000000\", \"Sample Input 1 failed\"\nassert solution(sample_input2) == \"126.86989765\", \"Sample Input 2 failed\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \"Impossible\"\\n\\n'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    5 6 500\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 0\n        -100 100\n        0 200\n        -100 "
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1234567890) == \"4\"\nassert solution(4567890123) == \"4\"\nassert solution(9876543210) == \"4\"\nassert solution(1234567891) == \"4\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nimport math"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin.read()) == \"Output the maximum number of times Quido can have a free dessert at Hugo\u2019s restaurant, provided that the price of his lunch is always 37.\\n8 29\\n9 28\\n11 26\\n15 22\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(37) == \"4\"\nassert solution(30014) == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nfrom typing import List"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Actual: {solution(input())}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3.5\\n\"\nassert solution(\"3 3 2\") == \"4.9\\n\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '3.5', 'Test 1'\nassert solution('3 3 2') == '4.9', 'Test 2'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Got: {solution(stdin)}\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 3 1\") == \"3.5\"\nassert solution(stdin=\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"3.5\", \"Test case 1 failed\"\nassert solution(\"3 3 2\") == \"4.9\", \"Test case 2 failed\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Solution does not match the expected output.\\nInput: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3.5', \"Test 1 failed\"\nassert solution('3 3 2') == '4.9', \"Test 2 failed\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == 19\nassert solution(open(\"input_2.txt\").read()) == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 19, \"The expected output is not correct.\"\nprint(19)"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\n\nassert solution('''\n12 12 1 12\n''') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt').read()) == '19\\n'\nassert solution(open('sample_input2.txt').read()) == '4\\n'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\\n\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5') == '4\\n', \"The output is incorrect.\"\nassert solution('1 12') == '4\\n', \"The output is incorrect.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Test case passed\")"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution failed: {solution(stdin=input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The solution {solution(input())} does not match the expected output {output()}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 5\\n\") == \"4\\n\"\nassert solution(stdin=\"1 12\\n\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5') == '4\\n'\nassert solution('1 12') == '4\\n'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == 1, \"sample case 1 failed\"\nassert solution(\"cocar\") == 2, \"sample case 2 failed\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('car') == '1', \"Your code is missing a test case for the first example.\"\nassert solution('cocar') == '2', \"Your code is missing a test case for the second example.\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1, \"Expected result is 1, but got {}\".format(solution(\"car\"))\nassert solution(\"cocar\") == 2, \"Expected result is 2, but got {}\".format(solution(\"cocar\"))"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1, \"Incorrect answer for Sample Input 1\"\nassert solution(\"cocar\") == 2, \"Incorrect answer for Sample Input 2\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 2 0 1\\n5\\n1000000 1 1 1 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 2 0 1\\nSample Output 1:\\n8\\n\\nSample Input 2:\\n5\\n1000000 1 1 1 1\\nSample Output 2:\\n0\") == 8\nassert solution(\"5\\n1000000 1 1 1 1\\nSample Output 2:\\n0\") == 0\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '8'\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 2 0 1\\n') == '8\\n'\nassert solution('5\\n1000000 1 1 1 1\\n') == '0\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution returned '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"8\\n\"\nassert solution(open('input2.txt', 'r')) == \"0\\n\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"zyz\"\nprint(\"Example 1 passed\")\n\nassert solution(stdin) == \"-1\"\nprint(\"Example 2 passed\")"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} failed: Input: {input()}, Output: {output}, Expected Output: {expected}\" for i, (input, output, expected) in enumerate(test_cases)"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"2 650\") == \"zyz\"\nassert solution(r\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"zyz\", \"Output: zyz\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'zyz'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number + 1} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 650) == \"zyz\"\nassert solution(3, 651) == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n8\", \"The solution should return 8.\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n\"\"\") == 4\n\nassert solution(\n\"\"\"\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n\"\"\") == 8"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"5\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"7\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"8\"\nassert solution(open(\"test.txt\", \"r\").read()) == \"9\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n8\\n\", \"The function should return 4, but it returns %s.\" % solution(stdin)"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Solution is not correct\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\\n\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\nassert solution() == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for solution. Expected {expected_output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == 0, \"Expected 0, but got {}\".format(solution(solution))\nassert solution(sample_input_1) == 0, \"Expected 0, but got {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == 2, \"Expected 2, but got {}\".format(solution(sample_input_2))"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed for solution(input()) and output: {solution(input())} and {output}\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\\n1 2\\n3 4\\n1 2\") == [\"1\\n-2 -1\\n2\\n1\\n0 -2\"]\nassert solution(\"1 2\\n3 4\") == [\"3\\n-1 1\\n2\\n1\"]"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\"\nassert solution(\"3 1\\n1 2\\n4 3\\n2 5\") == \"5\\n-3 3\\n-5 3\\n3 5\\n-1 -2\\n-5 -1\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 2\nassert solution(11) == 2\nassert solution(12) == 2\nassert solution(13) == 2\nassert solution(14) == 2\nassert solution(15) == 2\nassert solution(16) == 2\nassert solution(17) == 2\nassert solution(18) == 2\nassert solution(19) == 2\nassert solution(20) == 2\nassert solution(21) == 2\nassert solution(22) == 2\nassert solution(23) == 2\nassert solution(24) == 2\nassert solution(25) == 2\nassert solution(26) == 2\nassert solution(27) == 2\nassert solution(28) == 2\nassert solution(29) == 2\nassert solution(30) == 2\nassert solution(31) == 2\nassert solution(32) == 2\nassert solution(33) == 2\nassert solution(34) == 2\nassert solution(35) == 2\nassert solution(36) == 2\nassert solution(37) == 2\nassert solution(38) == 2\nassert solution(39) == 2\nassert solution(40) == 2\nassert solution(41) == 2\nassert solution(42) == 2\nassert solution(43) == 2\nassert solution(44) == 2\nassert solution(45) == 2\nassert solution(46) == 2\nassert solution(47) == 2\nassert solution(48) == 2\nassert solution(49) == 2\nassert solution(50) == 2\nassert solution(51) == 2\nassert solution(52) == 2\nassert solution(53) == 2\nassert solution(54) == 2\nassert solution(55) == 2\nassert solution(56) == 2\nassert solution(57) == 2\nassert solution(58) == 2\nassert solution(59) == 2\nassert solution(60) == 2\nassert solution(61) == 2\nassert solution(62) == 2\nassert solution(63) == 2\nassert solution(64) == 2\nassert solution(65) == 2\nassert solution(66) == 2\nassert solution(67) == 2\nassert solution(68) == 2\nassert solution(69) == 2\nassert solution(70) == 2\nassert solution(71) == 2\nassert solution(72) == 2\nassert solution(73) == 2\nassert solution(74) == 2\nassert solution(75) == 2\nassert solution(76) == 2\nassert solution(77) == 2\nassert solution(78) == 2\nassert solution(79) == 2\nassert solution(80) == 2\nassert solution(81) == 2\nassert solution(82) == 2\nassert solution(83) == 2\nassert solution(84) == 2\nassert solution(85) == 2\nassert solution(86) == 2\nassert solution(87) == 2\nassert solution(88) == 2\nassert solution(89) == 2\nassert solution(90) == 2\nassert solution(91) == 2\nassert solution(92) == 2\nassert solution(93) == 2\nassert solution(94) == 2\nassert solution(95) == 2\nassert solution(96) == 2\nassert solution(97) == 2\nassert solution(98) == 2\nassert solution(99) == 2\nassert solution(100) == 2\nassert solution(101) == 2\nassert solution(102) == 2\nassert solution(103) == 2\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n3 2\\nSample Input 1:\\n2 3\\nSample Output 1:\\n1\\n-2 -1\\n\\nSample Input 2:\\n1 2\\n3 4\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2') == '1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3 2') == ['1']\nassert solution('1 2\\n3 4') == ['3', '-1', '1', '2']\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n2 3\n3 2\n\"\"\"\nsample_output_1 = \"\"\"\n1\n-2 -1\n\"\"\"\n\nsample_input_2 = \"\"\"\n1 2\n3 4\n\"\"\"\nsample_output_2 = \"\"\"\n3\n-1 1\n2 1\n0 -2\n\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    3 2\n    \"\"\"\n) == \"\"\"\n1\n-2 -1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2\n    3 4\n    \"\"\"\n) == \"\"\"\n3\n-1 1\n2 1\n0 -2\n\"\"\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\", \"Test 1\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\", \"Test 2\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\nIVO\\nJASNA\\nJOSIPA\\n') == 4\nassert solution(stdin='5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n') == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA\\n') == '4\\n', 'Test 1 failed'\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n') == '24\\n', 'Test 2 failed'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4, \"Your code is incorrect.\"\n\nSolution:\n\nThe problem asks us to find the number of possible orderings of students based on their names. We can solve this by using a dictionary to store all the names seen so far and iterating through the names in the input file.\n\nWe can use the ASCII code of the first letter of the name as the key in the dictionary, which will allow us to check if the next letter in the name is a letter that appears before it in the sorted list of names. If it is, then we can add the name to the dictionary and move on to the next letter in the name.\n\nIf the next letter in the name is not a letter that appears before it in the sorted list of names, then we can only add the name to the dictionary if it is not the same as the name we have seen so far. If the name we have seen so far is the same as the name we are currently looking at, we can simply ignore it and move on to the next name.\n\nWe can then check the dictionary to see how many different orderings satisfy the rule. We can return the number of keys in the dictionary, which will be the number of possible ranking lists.\n\nLet's implement the solution.<|im_sep|>"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == 3\n\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Test Case 1: Should output 3.\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Test Case 2: Should output 39.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == 3\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == 39\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3, \"The output should be 3\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Sample Input 2\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\\n') == '39\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 39, \"Your solution is incorrect\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"39\"\n\nsample_input1 = \"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\"\nsample_input2 = \"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(4) == 0"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5.2696518641\\n\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    \"\"\"\n) == 5.2696518641\n\nassert solution(\n    \"\"\"\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    \"\"\"\n) == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '5.2696518641'\nassert solution(open('input.txt', 'r').read()) == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    \"\"\"\n) == \"5.2696518641\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    \"\"\"\n) == \"9\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n890123456\\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.2696518641\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"3\\n10 1 1\\n15 2 3\\n10 3 4\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n3 1 1\\n4 1 1\\n\") == \"4\"\nassert solution(\"2 0 2\\n3 1 1\\n4 1 1\\n5 2 3\\n6 0 3\\n\") == \"24\"\nassert solution(\"3 1 1\\n4 1 1\\n5 2 3\\n6 0 3\\n7 1 1\\n8 0 2\\n9 1 1\\n10 0 2\\n\") == \"-1\"\nassert solution(\"3 4 1\\n5 2 3\\n6 0 3\\n7 1 1\\n8 0 2\\n9 1 1\\n10 0 2\\n11 1 1\\n12 0 2\\n13 1 1\\n14 0 2\\n15 1 1\\n16 0 2\\n17 1 1\\n18 0 2\\n19 1 1\\n20 0 2\\n\") == \"4\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n3 1 1\\n4 1 1\\n\") == \"4\"\nassert solution(\"2 0 2\\n3 1 1\\n4 1 1\\n5 2 3\\n6 0 3\\n\") == \"24\"\nassert solution(\"3 1 1\\n4 1 1\\n5 2 3\\n6 0 3\\n7 1 1\\n8 0 2\\n9 1 1\\n10 0 2\\n11 1 1\\n12 0 2\\n13 1 1\\n14 0 2\\n15 1 1\\n16 0 2\\n17 1 1\\n18 0 2\\n19 1 1\\n20 0 2\\n3 1 1\\n4 1 1\\n\") == \"4\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"2\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"-1\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"2\\n4 1 1\\n5 2 3\\n5 0 3\\n3 1 1\\n3 1 1\") == \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n4 1 1\\n\") == \"8\\n24\\n4\\n\"\nassert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n4 1 1\\n5 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n8\\n4\\n\"\nassert solution() == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1, \"Output 1 should be 1, but is {}\".format(solution(3))\nassert solution(3) == 8, \"Output 1 should be 8, but is {}\".format(solution(3))\nassert solution(3) == 4, \"Output 1 should be 4, but is {}\".format(solution(3))\n\nassert solution(3) == -1, \"Output 2 should be -1, but is {}\".format(solution(3))\nassert solution(3) == 4, \"Output 2 should be 4, but is {}\".format(solution(3))\nassert solution(3) == 24, \"Output 2 should be 24, but is {}\".format(solution(3))"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n8\\n4\\n'\nassert solution() == '6\\n4\\n24\\n'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is {solution(stdin)}, but expected output is {expected_output}\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2') == 3\nassert solution('6 6') == 240\nassert solution('') == 0"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Expected {expected}, but got {solution}\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '9567+1085=10652'\nassert solution(\"A+A=A\") == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"9567+1085=10652\"\nassert solution(sample_input_2) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"9567+1085=10652\", \"Testcase 1 failed\"\nassert solution(open(\"input2.txt\").read()) == \"impossible\", \"Testcase 2 failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test failed for input: SEND+MORE=MONEY\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test failed for input: A+A=A\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(\"SEND+MORE=MONEY\"))) == \"9567+1085=10652\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652', \"Test 1 failed\"\nassert solution('A+A=A') == 'impossible', \"Test 2 failed\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == '14', 'Input 1 failed'\nassert solution(sample_input_2) == '1', 'Input 2 failed'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, \"Test failed.\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"14\", \"Sample Output 1: Expected 14, but got {}\".format(solution(input()))"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1 2 3\n''') == '14'\n\nassert solution('''\n5\n1 1 2 1 1\n''') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1 2 3') == '14\\n'\nassert solution('5\\n1 1 2 1 1') == '1\\n'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"\n\nfor i in range(1, 11):\n    a = []\n    for j in range(i):\n        a.append(int(input()))\n    assert solution(a) == i, f\"Test failed: for a list of length {i}, expected {i}, got {solution(a)}\"\n\nassert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() # Check if the function returns the expected output"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 14\nassert solution(sample_input_2) == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(5) == 1\nassert solution(10) == 1\nassert solution(100) == 1\nassert solution(500) == 1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} failed, Expected Output: {expected}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed. Expected output: {output}, but got {solution(input())}.\"\n\nfor test_case in range(1, 3):\n    input_ = input().split()\n    n = int(input_[0])\n    m = int(input_[1])\n    c = list(map(int, input_[2:]))\n\n    if 1 <= n <= 2000 and 1 <= m <= 2000:\n        magic_board = [[0] * m for _ in range(n)]\n        for i in range(n):\n            for j in range(m):\n                if c[j]!= 0:\n                    magic_board[i][j] = c[j]\n\n        min_sum = float('inf')\n        for i in range(n):\n            for j in range(m):\n                if magic_board[i][j]!= 0:\n                    if (i == 0 or i == n - 1 or j == 0 or j == m - 1) and magic_board[i][j] % 2 == 0:\n                        min_sum = min(min_sum, 0 if i == 0 or i == n - 1 else 1 + magic_board[i + 1][j] if i < n - 1 else 1 + magic_board[i][j - 1])\n                    elif (i == 0 or i == n - 1 or j == 0 or j == m - 1) and magic_board[i][j] % 2!= 0:\n                        min_sum = min(min_sum, 0 if i == 0 or i == n - 1 else 1 + magic_board[i + 1][j])\n                    elif i == 0 or i == n - 1 and magic_board[i][j] % 2 == 0:\n                        min_sum = min(min_sum, 1 + magic_board[i + 1][j])\n                    elif i == 0 or i == n - 1 and magic_board[i][j] % 2!= 0:\n                        min_sum = min(min_sum, 1 + magic_board[i][j - 1])\n\n        print(f\"Test case {test_case}:\")\n        print(min_sum)\n    else:\n        print(f\"Test case {test_case}:\")\n        print(\"-1\")"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1\\n1 1\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.000\", \"Correct Solution not found\"\nprint(\"Correct Solution found\")"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"You can't use the parallel tracks solution because you need to find the length of the pack at each moment.\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == 0.000\nassert solution(\"2\\n1 99999\\n99999 99999\") == 9999700002.000\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n9999700002.000\\n\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == '0.000'\nassert solution(input2) == '9999700002.000'\n\ninput1 = \"\"\"2\n1 1\n1 1\"\"\"\ninput2 = \"\"\"2\n1 99999\n99999 99999\"\"\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.000\\n\", \"Incorrect solution.\"\nassert solution() == \"9999700002.000\\n\", \"Incorrect solution.\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt').read()) == '3', 'Incorrect output'\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data}\\nExpected output: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5''') == '3'\n\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2''') == 'Infinity'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but it should be {expected_output}.\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\"\"\") == \"3\"\n\nassert solution(\"\"\"3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\"\"\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case_number} failed. Expected output: {expected_output}, but got: {solution(input_str)}\"\n\ntest_case_number = 1\ninput_str = \"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\"\nexpected_output = 3\nprint(solution(input_str))\n\ntest_case_number = 2\ninput_str = \"\"\"\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n\"\"\"\nexpected_output = \"Infinity\"\nprint(solution(input_str))"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\" # Replace this line with your code\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"impossible\"\nassert solution(sample_input2) == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Test case 1 failed: {solution(sample_input1)}\"\nassert solution(sample_input2) == sample_output2, f\"Test case 2 failed: {solution(sample_input2)}\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"impossible\"  # Sample Input 1"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Your code goes here\\n# Example usage:\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 1\\n# solution(\"3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 2\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 3\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 4\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 5\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 6\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 7\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") # Test Case 8\\n# solution(\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n3 1\\n1\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\nfor i in range(p):\n    s_i = int(input())\n    if s_i not in P:\n        print(\"impossible\")\n        break\nelse:\n    for i in range(2**n):\n        s_i = \"\"\n        for j in range(i):\n            s_i += \"0\"\n        s_i += str(s_i)\n        if s_i in P:\n            print(s_i)\n            break"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Sample Input 1 is not correct.\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Sample Input 2 is not correct.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Test 1\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Test 2\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Expected 1 but got {}\".format(solution(\"10\\n99\"))\nassert solution(\"90\\n10\") == \"10\\n\", \"Expected 10 but got {}\".format(solution(\"90\\n10\"))"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Test 1\"\nassert solution(\"90\\n10\") == \"10\", \"Test 2\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"10\\n99\"\nassert solution(\"90\\n10\") == \"10\", \"90\\n10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Your solution is incorrect.\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Your solution is incorrect.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3\\n') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '2', \"Testcase 1 failed.\"\nassert solution(sample_input_2) == '1', \"Testcase 2 failed.\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == 2\nassert solution(\"2\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == 1"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"2\", \"The expected output for sample input 1 is not correct\"\nassert solution(sample_input_2) == \"1\", \"The expected output for sample input 2 is not correct\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'\nassert solution(open('input2.txt', 'r').read()) == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\"\n\nexpected_output_1 = \"\"\"\n2\n\"\"\"\n\nsample_input_2 = \"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\"\n\nexpected_output_2 = \"\"\"\n1\n\"\"\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Solution 1 not working\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3\\n') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n') == '1\\n'\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 5\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"never attribute to malice that which is adequately explained by stupidity.\") == 5, \"The solution is incorrect.\"\nassert solution(\"a string which is almost palindrome-rich but has no nonempty almost palindromic substrings\") == 7, \"The solution is incorrect.\"\nassert solution(\"a string which is almost palindrome-rich but has no nonempty almost palindromic substrings but is almost palindrome-rich\") == 7, \"The solution is incorrect.\"\nassert solution(\"sig and design are substrings of design\") == 11, \"The solution is incorrect.\"\nassert solution(\"the ICPC made a good faith effort to produce the required string\") == 16, \"The solution is incorrect.\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == [5, 11, 16]\nassert solution(\"6 1\\nvelvet\\n1 6\") == [7, 'def solution(stdin: str) -> str:','   pass']"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"beginning\") == 5, \"The correct result for 'beginning' is 5, but the given solution is {}\".format(solution(\"beginning\"))\nassert solution(\"1 5\") == 11, \"The correct result for '1 5' is 11, but the given solution is {}\".format(solution(\"1 5\"))\nassert solution(\"4 8\") == 16, \"The correct result for '4 8' is 16, but the given solution is {}\".format(solution(\"4 8\"))\nassert solution(\"1 9\") == 11, \"The correct result for '1 9' is 11, but the given solution is {}\".format(solution(\"1 9\"))"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n11\\n16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Never attribute to malice that which is adequately explained by stupidity.\") == 5\nassert solution(\"All was going well until the International Cheapskate Palindrome Company (ICPC), the company hired to produce the strings, made a huge blunder and delivered a string that was so horrible, the trendsetter lost all her inspiration. Now, she is suing the ICPC for damages resulting from lost productivity. The ICPC was supposed to produce a palindrome-rich string-a string which had many nonempty palindromic substrings. Recall that a substring of a string is a string that can be formed by removing zero or more characters from the start and end of the other string. For example, sig and design are substrings of design, while dig and singed are not. As a lawyer for the ICPC, you need to show that the ICPC made a good faith effort to produce the required string.\") == 11\nassert solution(\"6 1\\nvelvet\\n1 6\") == 7\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 11\nassert solution(\"velvet\") == 7\nassert solution(\"42\") == \"not enough input\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9') == [5, 11, 16]\nassert solution('6 1\\nvelvet\\n1 6') == [7, 'def solution(stdin: str) -> str: pass']"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Robert Hanlon\") == 5, \"Output: 5\"\nassert solution(\"Never attribute to malice that which is adequately explained by stupidity.\") == 11, \"Output: 11\"\n\nsolution = input()\n\nN, Q = map(int, solution.split())\nS = input().upper()\n\nQ_count = 0\nfor i in range(Q):\n    L, R = map(int, input().split())\n    S_low = S[L-1:R]\n    \n    # Count the number of nonempty almost palindromic substrings\n    count = 0\n    for j in range(len(S_low)):\n        for k in range(len(S_low)-1-j):\n            if S_low[k:k+2] == S_low[k+1:k+3] or S_low[k:k+2] == S_low[k+2:k+4]:\n                count += 1\n    \n    Q_count += count\n\nprint(Q_count)"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output: 2\\n\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '2'\n\nassert solution('''\n    2 3\n    1 23\n    2 17\n    ''') == '23'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '3'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'\n\nassert solution('''\n    3 4\n    3 1\n    2 2\n    1 1\n    ''') == '1'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '2'\n\nassert solution('''\n    3 4\n    1 23\n    2 17\n    ''') == '3'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 23, \"Incorrect output\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output: 2\\n'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.0000000000\", \"Expected Output 1, but got: \" + solution(stdin)"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '0.0000000000'\nassert solution(sample_input2) == '9.476048311178'\n\nfrom typing import List"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test case failed: {output}!= {solution(stdin)}\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    4\n    0 0\n    2 0\n    2 2\n    0 2\n    0 -1 0 3\n    '''\n) == '0.0000000000'\n\nassert solution(\n    '''\n    6\n    0 1\n    0 4\n    3 6\n    7 5\n    4 2\n    7 0\n    5 7 2 0\n    '''\n) == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test case 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8.0000000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {t} failed: Expected output '{expected}', but got '{solution(input())}'.\" for t, expected in enumerate([\n    (1, 8.0000000000),\n    (2, 0.0200000000),\n])"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\\n\", \"Output is incorrect.\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\\n\", \"Output is incorrect.\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\nSample Output 1: 2\\n\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\\nSample Output 2: 2\") == 2\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\nSample Output 2: 2\") == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n').strip() == '2\\n'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n').strip() == '2\\n'\nassert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n').strip() == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"The solution is incorrect. Please check your code or sample input.\"\nfor _ in range(10):\n    solution(input())\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2\\n'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == 2\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_solution, f\"The solution is {solution}, but it should be {expected_solution}\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2\\n1 2 3') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '20.000000000\\n', 'Test case 1 failed'\nassert solution(stdin) == '3.666666667\\n', 'Test case 2 failed'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected output: {output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n3 3 2\n1 2 3\n'''\n) == '3.666666667'\n\nassert solution(\nr'''\n4 11 4\n10 10 10 10\n'''\n) == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"\"\"\n3 3 2\n1 2 3\n\"\"\") == \"3.666666667\"\n\nassert solution(stdin=\"\"\"\n4 11 4\n10 10 10 10\n\"\"\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == 3.666666667\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == 20.0"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(5) == 5\nassert solution(1000) == 1\nassert solution(1001) == 1\nassert solution(1000000) == 1\nassert solution(1000001) == 1"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected solution {expected}, but got {solution}\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\", \"The expected output is incorrect.\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"0\\n\"\nassert solution(sample_input2) == \"4\\n\"\n\nsample_input1 = \"\"\"\n3 1 0 0 2\n1 2 2\n1 1 1\n\"\"\"\n\nsample_input2 = \"\"\"\n3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_num} failed: expected {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"Solution {solution} does not match the expected output {expected_solution}\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == 3\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == 3\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n5 10\\n8 8\\n7 9\\n40 93\\n62 41\\n52 45\\n\") == \"2\\n\"\nassert solution(\"5 1 100 100\\n5 10\\n8 8\\n7 9\\n40 93\\n62 41\\n52 45\\n\") == \"2\\n\"\nassert solution(\"5 1 100 100\\n5 10\\n8 8\\n7 9\\n40 93\\n62 41\\n52 45\\n\") == \"2\\n\"\nassert solution(\"5 1 100 100\\n5 10\\n8 8\\n7 9\\n40 93\\n62 41\\n52 45\\n\") == \"2\\n\"\nassert solution(\"5 1 100 100\\n5 10\\n8 8\\n7 9\\n40 93\\n62 41\\n52 45\\n\") == \"2\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"3\"\nassert solution == \"3\"\nassert solution == \"3\"\nassert solution == \"3\"\nassert solution == \"3\"\nassert solution == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(stdin=\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\n\nfrom typing import List\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\"), \"ABC\"\nassert solution(\"ABBBAAAA\"), \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 3\nassert solution(2) == 3\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nA\\n') == '3', \"The number of teleportations a Loda can make should be 3.\"\nassert solution('5\\nA\\nABA\\nB\\nABABA\\nA\\nA\\nA\\nA\\n') == '3', \"The number of teleportations a Loda can make should be 3.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\n\") == \"3\", \"Please implement the solution function\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3', 'Expected output 3'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nB\\nBBB\\nA\\n\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nB\\nABABA\\nAAAAAB\\nA\\n\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\\n\") == \"3\", \"Test case 1 failed\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\", \"Test case 2 failed\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\", \"Your solution is incorrect.\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\", \"Your solution is incorrect.\"\n\nsolution = \"\"\"\nimport random"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='100 10 2 1') == '0.1\\n'\nassert solution(stdin='100 10 2 2') == '0.1909090909\\n'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.1\", \"Your code is not correct\"\nassert solution(stdin) == \"0.1909090909\", \"Your code is not correct\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input(1)) == '0.1'\nassert solution(sample_input(2)) == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.1, \"Expected 0.1, got {}.\".format(solution())"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0.1, \"The expected output is: 0.1\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0.1'\nassert solution(open('example1.txt', 'r')) == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n\") == \"0.1\\n0.1909090909\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n\") == \"0.1\\n0.1909090909\"\nassert solution(\"100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\n100 10 2 2\\n100 10 2 1\\"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbac\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABAB"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\", \"Test case 1\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\", \"Test case 2\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\", \"Test case 3\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == 4, \"Expected 4, got {}\".format(solution('ABABABcABABAbAbab'))"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABcC\") == 3\nassert solution(\"ABAB\") == 3\nassert solution(\"ABBC\") == 0\nassert solution(\"ABC\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"ABABABcABABAbAbab\\n3\\n0 2\\n1 6\\n0 7\\n\")) == \"0\\n5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABABcABABAbAbab') == '0'\nassert solution('ABABABcABABAbAbab') == '5'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\n\nsolution(\"4 3\\n0\\n0\\n1\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\", \"Test failed\"\nassert solution(\"4 3\\n0\\n1\\n1\\n\") == \"3\", \"Test failed\"\nassert solution(\"4 3\\n1\\n0\\n1\\n\") == \"2\", \"Test failed\"\nassert solution(\"4 3\\n1\\n1\\n0\\n\") == \"3\", \"Test failed\"\nassert solution(\"4 3\\n2\\n2\\n2\\n\") == \"4\", \"Test failed\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2'\nprint('All tests passed!')"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"example.in\", \"r\").read()) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"2\\nP0: 22 1 4 2 6 -1 0\\nP1: 14 2 3 3 12 -7 0\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"3\\nP0: 22 1 4 2 6 -1 0\\nP1: 14 2 3 3 12 -7 0\\nP2: 6 3 5 5 15 -9 0\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"4\\nP0: 22 1 4 2 6 -1 0\\nP1: 14 2 3 3 12 -7 0\\nP2: 6 3 5 5 15 -9 0\\nP3: 1 4 6 7 10 -4 0\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"5\\nP0: 22 1 4 2 6 -1 0\\nP1: 14 2 3 3 12 -7 0\\nP2: 6 3 5 5 15 -9 0\\nP3: 1 4 6 7 10 -4 0\\nP4: 7 8 10 11 16 -5 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '''1\nP0: 22 1 4 2 6 -1 0'''\n\nassert solution('''3 6 6 6\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 7 5 4 3 -1 0'''\n\nassert solution('''2 4 4 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 2 2 2 2 -1 0'''\n\nassert solution('''2 4 4 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 2 2 2 2 -1 0'''\n\nassert solution('''3 2 2 2\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 5 2 2 1 0 -1'''\n\nassert solution('''2 3 3 3\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''2 3 3 3\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''10 10 10 10\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 10 5 4 3 1 -1'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\nP0: 22 1 2 1 1 -1 0'''\n\nassert solution('''1 2 3 4\n1 5 1 4 3 2 -1\n7 3 7 5 6 -2 1''') == '''1\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\n\nfrom typing import List"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1''') == '''1\nP0: 22 1 4 2 6 -1 0\n'''\n\nfrom typing import List"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input:\\n{sample_input}\\nSample Output:\\n{sample_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == []  # empty input should return empty output\n\nn, m = map(int, input().split())\nassert 1 <= n <= 10**5 and 1 <= m <= n+200, \"Invalid input\"\n\nroads = []\nfor _ in range(m):\n    a, b, w = map(int, input().split())\n    roads.append((a, b, w))\n\nq = int(input())\ntransportation_cost = [0] * q\n\nfor _ in range(q):\n    s, t = map(int, input().split())\n    transportation_cost[_] = find_transportation_cost(roads, s, t)\n\nfor i in range(q):\n    print(transportation_cost[i])"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1\\n2\\n3\\n'\n\nassert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n3\\n\"\nassert solution() == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output\nfor input, output in [\n    # Sample Input 1\n    (b\"\\n4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\", b\"1\\n2\\n3\\n\"),\n    # Sample Input 2\n    (b\"\\n4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\", b\"2\\n3\\n4\\n\"),\n    # Sample Input 3\n    (b\"\\n4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\", b\"3\\n4\\n4\\n\"),\n    # Sample Input 4\n    (b\"\\n4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\", b\"4\\n4\\n4\\n\"),\n    # Sample Input 5\n    (b\"\\n4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\", b\"4\\n4\\n4\\n\"),\n]:\n    assert solution(input) == output"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test failed: {solution(stdin)}!= {output}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"output\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test case not met\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 1\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\n1\\n5\\n4\\n3\\n2\\n6'\n\nsolution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '3\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '5\\n'\nassert solution(input()) == '6\\n'\nassert solution(input()) == '7\\n'\nassert solution(input()) == '8\\n'\nassert solution(input()) == '9\\n'\nassert solution(input()) == '10\\n'\nassert solution(input()) == '11\\n'\nassert solution(input()) == '12\\n'\nassert solution(input()) == '13\\n'\nassert solution(input()) == '14\\n'\nassert solution(input()) == '15\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '17\\n'\nassert solution(input()) == '18\\n'\nassert solution(input()) == '19\\n'\nassert solution(input()) == '20\\n'\nassert solution(input()) == '21\\n'\nassert solution(input()) == '22\\n'\nassert solution(input()) == '23\\n'\nassert solution(input()) == '24\\n'\nassert solution(input()) == '25\\n'\nassert solution(input()) == '26\\n'\nassert solution(input()) == '27\\n'\nassert solution(input()) == '28\\n'\nassert solution(input()) == '29\\n'\nassert solution(input()) == '30\\n'\nassert solution(input()) == '31\\n'\nassert solution(input()) == '32\\n'\nassert solution(input()) == '33\\n'\nassert solution(input()) == '34\\n'\nassert solution(input()) == '35\\n'\nassert solution(input()) == '36\\n'\nassert solution(input()) == '37\\n'\nassert solution(input()) == '38\\n'\nassert solution(input()) == '39\\n'\nassert solution(input()) == '40\\n'\nassert solution(input()) == '41\\n'\nassert solution(input()) == '42\\n'\nassert solution(input()) == '43\\n'\nassert solution(input()) == '44\\n'\nassert solution(input()) == '45\\n'\nassert solution(input()) == '46\\n'\nassert solution(input()) == '47\\n'\nassert solution(input()) == '48\\n'\nassert solution(input()) == '49\\n'\nassert solution(input()) == '50\\n'\nassert solution(input()) == '51\\n'\nassert solution(input()) == '52\\n'\nassert solution(input()) == '53\\n'\nassert solution(input()) == '54\\n'\nassert solution(input()) == '55\\n'\nassert solution(input()) == '56\\n'\nassert solution(input()) == '57\\n'\nassert solution(input()) == '58\\n'\nassert solution(input()) == '59\\n'\nassert solution(input()) == '60\\n'\nassert solution(input()) == '61\\n'\nassert solution(input()) == '62\\n'\nassert solution(input()) == '63\\n'\nassert solution(input()) == '64\\n'\nassert solution(input()) == '65\\n'\nassert solution(input()) == '66\\n'\nassert solution(input()) == '67\\n'\nassert solution(input()) == '68\\n'\nassert solution(input()) == '69\\n'\nassert solution(input()) == '70\\n'\nassert solution(input()) == '71\\n'\nassert solution(input()) == '72\\n'\nassert solution(input()) == '73\\n'\nassert solution(input()) == '74\\n'\nassert solution(input()) == '75\\n'\nassert solution(input()) == '76\\n'\nassert solution(input()) == '77\\n'\nassert solution(input()) == '78\\n'\nassert solution(input()) == '79\\n'\nassert solution(input()) == '80\\n'\nassert solution(input()) == '"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Invalid output: %s\" % solution(input())"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '60'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"60\\n\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 5 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"-1\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 2 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 2 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 1\\n1 30 2 50"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    \"\"\"\n) == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60, \"Expected 60, but got {}\".format(solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\"))"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    ''') == '60'\n\nassert solution('''\n    2 3 2\n    1 30 2 50\n    3 70 2 10\n    ''') == '-1'\n\nassert solution('''\n    3 4 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    ''') == '-1'\n\nassert solution('''\n    3 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    ''') == '-1'\n\nassert solution('''\n    2 3 1\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    ''') == '60'\n\nassert solution('''\n    3 3 4\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    ''') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"5 2 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"1 2 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 3 3\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"-1\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Case #1: 1\\nCase #2: 2\\n\"\nassert solution(stdin) == \"Case #1: 2\\nCase #2: 1\\n\"\nassert solution(stdin) == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '6 6 6 1', 'Test case 1 failed'\nassert solution(input()) == '6 6 6 1', 'Test case 2 failed'\nassert solution(input()) == '6 6 6 1', 'Test case 3 failed'\nassert solution(input()) == '6 6 6 1', 'Test case 4 failed'\nassert solution(input()) == '6 6 6 1', 'Test case 5 failed'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([\n        \"+1 2 H 2 O 1\",\n        \"+1 2 C 1 O 2\",\n        \"-1 1 O 2\",\n        \"-1 3 C 6 H 12 O 6\",\n        \"0 0\"\n    ]) == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [6, 6, 6, 1], \"Expected: [6, 6, 6, 1], but got: {}\".format(solution())"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example_input) == example_output, \"Example Input and Output are not the same.\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6 6 6 1\", \"The given solution is incorrect.\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == [\"6\", \"6\", \"6\", \"1\"]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n6 6 6 1\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 H 2 O 1\\n1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'\nprint('All test cases pass')"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"20.83\", \"The solution is not correct.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str), \"Invalid input format.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\nassert solution(\"5\\n100 100\\n100 40\\n100 0\\n100 200\") == \"150.00\"\nassert solution(\"6\\n100 200\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"7\\n100 400\\n100 40\\n100 0\\n100 0\") == \"240.00\"\nassert solution(\"8\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"9\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"10\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"11\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"12\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"13\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"14\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"15\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"16\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"17\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"18\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"19\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"20\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"21\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"22\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"23\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"24\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"25\\n100 0\\n100 40\\n100 0\\n100 0\") == \"200.00\"\nassert solution(\"26\\n100 0\\n100 40\\n100 0\\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    4\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40\n\"\"\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"20.83\", \"Test failed.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '49', \"Test case 1 failed\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 4\\n1 2 3\\n1 2 3\\n1 2 3\") == \"31\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"49\\n\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\nprint('All tests pass.')"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"\\nCROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('crossword.in', 'r').read()) == '''\n##CROSSWORD####\n'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\nassert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input {sample_input}\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n') == '#CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '\\nCROSSWORD\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n###') == '\\n###\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#A') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n###A') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n##C') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#AB') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABC') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\n####\\n#B\\n###\\n#A\\n##'\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n#ABCD') == '#\\n#C\\"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 31\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '31'\nassert solution(input()) == '42'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"Your code is incorrect.\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\"\nassert solution(\"3 2\\n5 1 4\\n7 8 3\\n9 2 6\") == \"16\"\nassert solution(\"4 1\\n2 5 8\\n6 4 1\\n9 7 3\") == \"68\"\nassert solution(\"4 3\\n9 8 2\\n5 4 1\\n6 7 3\") == \"115\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31\nprint(\"All tests passed\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 3\\nWWWW\") == \"3\\n\"\nassert solution(\"3 4\\nBWW\") == \"1\\n\"\nassert solution(\"3 6\\nWBB\") == \"0\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\nBBW') == '2\\n'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 1\\nBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556' # pass"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\\n\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556\nassert solution(\"5 3\\n3 4 2\\n1 2 3\") == 3.842\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\"\nassert solution(\"4 2\\n3 1\\n2 1 2\\n3 2 2\") == \"1.578\\n\"\nassert solution(\"5 2\\n3 1\\n2 1 2\\n3 2 2\\n4 3\") == \"1.89\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556, \"Your solution is incorrect.\"\nassert solution(\"5 2\\n3 2 4\\n1 1 1\") == 0.147, \"Your solution is incorrect.\"\nassert solution(\"5 4\\n4 2 4\\n1 1 1\") == 0.175, \"Your solution is incorrect.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556\\n'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\\n\") == \"0.556\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed: Expected output: {output_data}, Received output: {solution(input_data)}\" for i, (input_data, output_data) in enumerate(zip(input_cases, output_cases))"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\"\nassert solution(\"10 5 10 5\") == \"60\\n\"\nassert solution(\"5 5 1 1\") == \"1\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"\nassert solution(\"1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3, \"Expected Output: 3, Actual Output: {}\".format(solution(3)) # Test Case 1\nassert solution(5) == 3, \"Expected Output: 3, Actual Output: {}\".format(solution(5)) # Test Case 2\nassert solution(10) == 5, \"Expected Output: 5, Actual Output: {}\".format(solution(10)) # Test Case 3\nassert solution(20) == 5, \"Expected Output: 5, Actual Output: {}\".format(solution(20)) # Test Case 4\nassert solution(25) == 5, \"Expected Output: 5, Actual Output: {}\".format(solution(25)) # Test Case 5"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"Your code is incorrect.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution: {solution(input())}\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Victor works for Alberta Chemicals Monitoring (ACM). ACM is a company that analyses raw environmental data related to chemicals used in oil sand and other industries in Alberta, and produces some reports for environmental watchdogs.\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n6\\n\\n2\\n5\\n8\\n\\n3\\n3\\n5\\n\\n5\\n3\\n6\\n\\n\") == \"13\"\nassert solution(\"1\\n3\\n6\\n\\n2\\n5\\n8\\n\\n3\\n3\\n5\\n\\n5\\n3\\n6\\n\\n7\\n5\\n7\\n\") == \"32\"\nassert solution(\"1\\n3\\n6\\n\\n2\\n5\\n8\\n\\n3\\n3\\n5\\n\\n5\\n3\\n6\\n\\n7\\n5\\n7\\n\") == \"13\"\nassert solution(\"1\\n3\\n6\\n\\n2\\n5\\n8\\n\\n3\\n3\\n5\\n\\n5\\n3\\n6\\n\\n7\\n5\\n7\\n\") == \"32\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"1 4 7\\n2 4 6\\n3 4 5\\n4 4 4\") == \"12\"\nassert solution(\"1 4 5\\n2 4 6\\n3 4 7\\n4 4 8\") == \"11\"\nassert solution(\"1 2 3\\n2 3 4\\n3 3 5\") == \"11\"\nassert solution(\"1 2 3\\n2 3 4\\n3 3 5\\n4 3 6\\n5 3 7\\n6 3 8\") == \"12\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n3\\n6\\n2\\n5\\n8\\n3\\n3\\n5\\n5\\n6\\n\") == \"13\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"13\", \"Expected output: 13\\nActual output: \" + str(solution(stdin))\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"13\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593, \"The answer should be 3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.141593\", \"The solution should return the correct result.\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\", \"The output should be 3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3.141593\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 3.141593\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.13333333333333'\nassert solution(stdin) == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 4\\n2\\n\") == \"2.13333333333333\\nimpossible\\n\"\nassert solution(\"3\\n1 1\\n10\\n2\\n\") == \"3.0\\nimpossible\\n\"\nassert solution(\"3\\n5 5\\n1\\n\") == \"1.0\\nimpossible\\n\"\nassert solution(\"4\\n1 1\\n2\\n\") == \"1.0\\nimpossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2.13333333333333'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n4\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n5\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 3\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 3 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 3\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 1 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 2 2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 1 2 3\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 1\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 3\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 4\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 5\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 6\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 7\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 8\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 9\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 10\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 11\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 12\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2 3 13\") == \"impossible\\n\"\nassert solution(\"3\\n4 4\\n2 2 2 2"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.13333333333333\", \"Incorrect output\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.13333333333333\\n\", \"Test Failed\"\nassert solution(stdin) == \"impossible\\n\", \"Test Failed\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2.13333333333333'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n2.13333333333333\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == 18"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(100) == 18\nassert solution(200) == 6\nassert solution(300) == 1\nassert solution(400) == 0\nassert solution(500) == 0\nassert solution(600) == 0\nassert solution(700) == 0\nassert solution(800) == 0\nassert solution(900) == 0\nassert solution(1000) == 0\nassert solution(1100) == 0\nassert solution(1200) == 0\nassert solution(1300) == 0\nassert solution(1400) == 0\nassert solution(1500) == 0\nassert solution(1600) == 0\nassert solution(1700) == 0\nassert solution(1800) == 0\nassert solution(1900) == 0\nassert solution(2000) == 0\nassert solution(2100) == 0\nassert solution(2200) == 0\nassert solution(2300) == 0\nassert solution(2400) == 0\nassert solution(2500) == 0\nassert solution(2600) == 0\nassert solution(2700) == 0\nassert solution(2800) == 0\nassert solution(2900) == 0\nassert solution(3000) == 0\nassert solution(3100) == 0\nassert solution(3200) == 0\nassert solution(3300) == 0\nassert solution(3400) == 0\nassert solution(3500) == 0\nassert solution(3600) == 0\nassert solution(3700) == 0\nassert solution(3800) == 0\nassert solution(3900) == 0\nassert solution(4000) == 0\nassert solution(4100) == 0\nassert solution(4200) == 0\nassert solution(4300) == 0\nassert solution(4400) == 0\nassert solution(4500) == 0\nassert solution(4600) == 0\nassert solution(4700) == 0\nassert solution(4800) == 0\nassert solution(4900) == 0\nassert solution(5000) == 0\nassert solution(5100) == 0\nassert solution(5200) == 0\nassert solution(5300) == 0\nassert solution(5400) == 0\nassert solution(5500) == 0\nassert solution(5600) == 0\nassert solution(5700) == 0\nassert solution(5800) == 0\nassert solution(5900) == 0\nassert solution(6000) == 0\nassert solution(6100) == 0\nassert solution(6200) == 0\nassert solution(6300) == 0\nassert solution(6400) == 0\nassert solution(6500) == 0\nassert solution(6600) == 0\nassert solution(6700) == 0\nassert solution(6800) == 0\nassert solution(6900) == 0\nassert solution(7000) == 0\nassert solution(7100) == 0\nassert solution(7200) == 0\nassert solution(7300) == 0\nassert solution(7400) == 0\nassert solution(7500) == 0\nassert solution(7600) == 0\nassert solution(7700) == 0\nassert solution(7800) == 0\nassert solution(7900) == 0\nassert solution(8000) == 0\nassert solution(8100) == 0\nassert solution(8200) == 0\nassert solution(8300) == 0\nassert solution(8400) == 0\nassert solution(8500) == 0\nassert solution(8600) == 0\nassert solution"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '18'\nassert solution(10) == '168'\nassert solution(20) == '729'\nassert solution(50) == '1805'\nassert solution(70) == '1872'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"18\" # Test 1"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 18"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"18\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == \"18\" # Check the solution of the problem."
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"18\"\nassert solution(\"20\") == \"25\"\nassert solution(\"1000001\") == \"1000000\"\nassert solution(\"10000000\") == \"10000000\"\nassert solution(\"1000000000\") == \"1000000000\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\npupils = [int(h), sex, music_style, sport]\\nmax_eligible_pupils = max([len(pupils), len(set(pupils)) - 1])\\nreturn str(max_eligible_pupils)\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == 3"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\\ndef solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test Case {tc_count}: Incorrect Output\\nInput: {input()}\\nOutput: {output}\\nExpected Output: {expected_output}\" for tc_count, (input, output, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(123456789) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"0123456789\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"abababa\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output} \\nActual output: {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}, expected: {expected}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([\n    \"5\",\n    \"a 0\",\n    \"a 1\",\n    \"b 2\",\n    \"c 2 3\",\n    \"b 4\",\n]) == \"\"\"\n2\n1\n2\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '''\n2\n1\n2\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the output.\\nInput: {input()}\\nOutput: {output}\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\na 0\\na 1\\na 2\\na 3\\na 4\\na 5\") == \"1\\n1\\n2\\n1\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\nb 1\\nc 1 2\\nc 2 3\\nc 3 4\\nc 4 5\") == \"1\\n1\\n1\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected: {expected}, got: {solution(input())}\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5, \"Test failed.\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5, \"The solution is not correct.\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 2\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 3\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 4\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 5\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 6\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 7\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 8\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 9\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 10\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 11\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 12\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\nassert solution('''\n6 13\n78 61 88 71\n80 80 "
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"The solution should return 4.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\"\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n1"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\"\nassert solution(\"4 5\\n1 3\\n1 4\\n2 3\\n2 4\\n2 5\") == \"5\\n\"\nassert solution(\"4 5\\n1 2\\n1 4\\n2 3\\n2 5\") == \"2\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 5\\n2 3\\n2 5\") == \"4\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\") == \"3\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n2 4\\n2 5\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Incorrect output\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\", \"Incorrect answer\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\", \"Your solution is not correct.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == 4"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4,5) == '4\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\"\nassert solution(\"5 4\\n1 1\\n2 2\") == \"0\\n\"\nassert solution(\"10 5\\n1 1\\n2 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"1\\n\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\\n\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"2\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\") == \"2\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\"\nassert solution(\"4\\n1 3\\n3 2\\n2 4\\n\") == \"2\\n3 2\\n1 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n3 5\\n4 6\\n5 6\") == \"3\\n4 5\\n5 6\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6\") == \"4\\n5 6\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\\n\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\\n\"\nassert solution(\"5 5\\n5 10\") == \"0\\n\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n4 3\") == \"4\\n\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n4 3\\n8 5\") == \"6\\n\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n4 3\\n8 5\\n9 10\") == \"10\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(output - output)}\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '5\\n'\nassert solution('3 1\\n2 4\\n1 3\\n5 2\\n') == '4\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n') == '0\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n2 1\\n') == '1\\n'\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n') == '2\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '1\\n'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '5\\n'\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == 5, \"The correct answer is 5, but it is not\"\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == 7, \"The correct answer is 7, but it is not\"\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == 0, \"The correct answer is 0, but it is not\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"\") == 0\nassert solution(\"2 1\\n2 2\\n3 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == 5\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"2 1\\n2 2\\n3 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 10 2\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 5\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The correctness of solution is not verified.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n\nfrom typing import List"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\\n\"\nprint(\"Test passed\")"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Expected output: 2, but got: \" + str(solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\"))"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"GHOST\", \"Invalid Output\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 C\\n1 W\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 W\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 W\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 W\\n') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST\\n'\nassert solution('4 3\\n3 W\\n2 C\\n1 C') == 'SAFE\\n'\nassert solution('4 3\\n3 W\\n2 W\\n1 C') == 'SAFE\\n'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE\\n'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"GHOST\", \"The solution does not match the expected output.\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"5 4\\n1 W\\n2 W\\n3 W\\n4 W\") == \"SAFE\"\nassert solution(\"6 6\\n1 W\\n2 W\\n3 W\\n4 W\\n5 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"GHOST\"\nassert solution() == \"SAFE\"\nassert solution() == \"SAFE\"\nassert solution() == \"GHOST\"\nassert solution() == \"SAFE\"\nassert solution() == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"3 1\\n1 C\\n0 C\\n-1 C\\n\") == \"SAFE\"\nassert solution(\"1 1\\n-1 C\\n0 C\\n-1 C\\n\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 2\\n2 C\\n3 C\\n4 C\\n1 C\") == \"SAFE\"\nassert solution(\"3 1\\n1 W\\n2 W\\n3 W\\n4 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('4 5\\n0.01 0.01\\n0.02 0.02\\n0.03 0.03\\n0.04 0.04\\n0.05 0.05\\n0.06 0.06\\n0.07 0.07\\n0.08 0.08\\n0.09 0.09\\n0.10 0.10\\n0.11 0.11\\n0.12 0.12\\n0.13 0.13\\n0.14 0.14\\n0.15 0.15\\n0.16 0.16\\n0.17 0.17\\n0.18 0.18\\n0.19 0.19\\n0.20 0.20\\n0.21 0.21\\n0.22 0.22\\n0.23 0.23\\n0.24 0.24\\n0.25 0.25\\n0.26 0.26\\n0.27 0.27\\n0.28 0.28\\n0.29 0.29\\n0.30 0.30\\n0.31 0.31\\n0.32 0.32\\n0.33 0.33\\n0.34 0.34\\n0.35 0.35\\n0.36 0.36\\n0.37 0.37\\n0.38 0.38\\n0.39 0.39\\n0.40 0.40\\n0.41 0.41\\n0.42 0.42\\n0.43 0.43\\n0.44 0.44\\n0.45 0.45\\n0.46 0.46\\n0.47 0.47\\n0.48 0.48\\n0.49 0.49\\n0.50 0.50\\n0.51 0.51\\n0.52 0.52\\n0.53 0.53\\n0.54 0.54\\n0.55 0.55\\n0.56 0.56\\n0.57 0.57\\n0.58 0.58\\n0.59 0.59\\n0.60 0.60\\n0.61 0.61\\n0.62 0.62\\n0.63 0.63\\n0.64 0.64\\n0.65 0.65\\n0.66 0.66\\n0.67 0.67\\n0.68 0.68\\n0.69 0.69\\n0.70 0.70\\n0.71 0.71\\n0.72 0.72\\n0.73 0.73\\n0.74 0.74\\n0.75 0.75\\n0.76 0.76\\n0.77 0.77\\n0.78 0.78\\n0.79 0.79\\n0.80 0.80\\n0.81 0.81\\n0.82 0.82\\n0.83 0.83\\n0.84 0.84\\n0.85 0.85\\n0.86 0.86\\n0.87 0.87\\n0.88 0.88\\n0.89 0.89\\n0.90 0.90\\n0.91 "
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n0.00 2.00\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n0.60 2.05\\n0.70 2.06\\n0.80 2.07\\n0.90 2.08\\n1.00 2.09\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n0.60 2.05\\n0.70 2.06\\n0.80 2.07\\n0.90 2.08\\n1.00 2.09\\n1.10 2.10\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n0.60 2.05\\n0.70 2.06\\n0.80 2.07\\n0.90 2.08\\n1.00 2.09\\n1.10 2.10\\n1.20 2.12\\n\") == \"no fika\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n0.60 2.05\\n0.70 2.06\\n0.80 2.07\\n0.90 2.08\\n1.00 2.09\\n1.10 2.10\\n1.20 2.12\\n1.30 2.14\\n1.40 2.16\\n1.50 2.18\\n1.60 2.20\\n1.70 2.22\\n1.80 2.24\\n1.90 2.26\\n2.00 2.28\\n\") == \"no fika\\n\"\nassert solution(\"2 3\\n0.10 2.00\\n0.20 1.99\\n0.30 2.01\\n0.40 2.02\\n0.50 2.03\\n0.60 2.05\\n0.70 2.06\\n0.80 2.07\\n0.90 2.08\\n1.00 2.09\\n1.10 2.10\\n1.20 2.12\\n1.30 2.14\\n1.40 2.16\\n1.50 2.18\\n1.60 2.20\\n1.70 2.22\\n1.80 2.24\\n1.90 2.26\\n2.00 2.28\\n2.10 2.30\\n2.20 2.32\\n2.30 2.34\\n2.40 2.36\\n2.50 "
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\\n\") == \"2\"\nassert solution(\"3 4\\n0.01 2.01\\n0.10 2.10\\n\") == \"no fika\"\nassert solution(\"5 5\\n0.00 5.00\\n0.01 5.01\\n0.02 5.02\\n0.03 5.03\\n\") == \"no fika\"\nassert solution(\"1 1\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n\") == \"no fika\"\nassert solution(\"2 2\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\\"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n\nSolution:\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"3 2\\n0.00 2.00\") == \"2\"\nassert solution(\"1 2\\n0.00 2.00\") == \"2\"\nassert solution(\"1 1\\n0.00 2.00\") == \"2\"\nassert solution(\"1 0\\n0.00 2.00\") == \"no fika\"\nassert solution(\"1 10\\n0.00 2.00\") == \"2\"\nassert solution(\"2 5\\n0.00 2.00\") == \"no fika\"\nassert solution(\"2 20\\n0.00 2.00\") == \"2\"\nassert solution(\"2 30\\n0.00 2.00\") == \"2\"\nassert solution(\"2 100\\n0.00 2.00\") == \"no fika\"\nassert solution(\"3 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"3 30\\n0.00 2.00\") == \"2\"\nassert solution(\"3 100\\n0.00 2.00\") == \"2\"\nassert solution(\"4 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"4 30\\n0.00 2.00\") == \"2\"\nassert solution(\"4 100\\n0.00 2.00\") == \"2\"\nassert solution(\"5 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"5 30\\n0.00 2.00\") == \"2\"\nassert solution(\"5 100\\n0.00 2.00\") == \"2\"\nassert solution(\"6 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"6 30\\n0.00 2.00\") == \"2\"\nassert solution(\"6 100\\n0.00 2.00\") == \"2\"\nassert solution(\"7 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"7 30\\n0.00 2.00\") == \"2\"\nassert solution(\"7 100\\n0.00 2.00\") == \"2\"\nassert solution(\"8 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"8 30\\n0.00 2.00\") == \"2\"\nassert solution(\"8 100\\n0.00 2.00\") == \"2\"\nassert solution(\"9 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"9 30\\n0.00 2.00\") == \"2\"\nassert solution(\"9 100\\n0.00 2.00\") == \"2\"\nassert solution(\"10 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"10 30\\n0.00 2.00\") == \"2\"\nassert solution(\"10 100\\n0.00 2.00\") == \"2\"\nassert solution(\"11 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"11 30\\n0.00 2.00\") == \"2\"\nassert solution(\"11 100\\n0.00 2.00\") == \"2\"\nassert solution(\"12 20\\n0.00 2.00\") == \"no fika\"\nassert solution(\"12 30\\n0.00 2.00\") == \"2\"\nassert solution(\"12 100\\n0.00 2.00\") == \"2\"\nassert solution(\"13 20\\n0.00 2.00\") == \"no fika\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\" # no collisions"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10, \"Your solution is incorrect. Expected: 10, but got: {}\".format(solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\"))"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(0) == 10\nassert solution(1) == 10\nassert solution(2) == 10\nassert solution(3) == 10\nassert solution(4) == 10\nassert solution(5) == 10\nassert solution(6) == 10\nassert solution(7) == 10\nassert solution(8) == 10\nassert solution(9) == 10\nassert solution(10) == 10\nassert solution(11) == 10\nassert solution(12) == 10\nassert solution(13) == 10\nassert solution(14) == 10\nassert solution(15) == 10\nassert solution(16) == 10\nassert solution(17) == 10\nassert solution(18) == 10\nassert solution(19) == 10\nassert solution(20) == 10"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\\n\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\", \"Test 1 failed\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\", \"Test 2 failed\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\", \"Test 3 failed\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '10'\nassert solution(2) == '10'\nassert solution(3) == '10'\nassert solution(4) == '10'\nassert solution(5) == '10'\nassert solution(6) == '10'\nassert solution(7) == '10'\nassert solution(8) == '10'\nassert solution(9) == '10'\nassert solution(10) == '10'\nassert solution(11) == '10'\nassert solution(12) == '10'\nassert solution(13) == '10'\nassert solution(14) == '10'\nassert solution(15) == '10'\nassert solution(16) == '10'\nassert solution(17) == '10'\nassert solution(18) == '10'\nassert solution(19) == '10'\nassert solution(20) == '10'\nassert solution(21) == '10'\nassert solution(22) == '10'\nassert solution(23) == '10'\nassert solution(24) == '10'\nassert solution(25) == '10'\nassert solution(26) == '10'\nassert solution(27) == '10'\nassert solution(28) == '10'\nassert solution(29) == '10'\nassert solution(30) == '10'\nassert solution(31) == '10'\nassert solution(32) == '10'\nassert solution(33) == '10'\nassert solution(34) == '10'\nassert solution(35) == '10'\nassert solution(36) == '10'\nassert solution(37) == '10'\nassert solution(38) == '10'\nassert solution(39) == '10'\nassert solution(40) == '10'\nassert solution(41) == '10'\nassert solution(42) == '10'\nassert solution(43) == '10'\nassert solution(44) == '10'\nassert solution(45) == '10'\nassert solution(46) == '10'\nassert solution(47) == '10'\nassert solution(48) == '10'\nassert solution(49) == '10'\nassert solution(50) == '10'\nassert solution(51) == '10'\nassert solution(52) == '10'\nassert solution(53) == '10'\nassert solution(54) == '10'\nassert solution(55) == '10'\nassert solution(56) == '10'\nassert solution(57) == '10'\nassert solution(58) == '10'\nassert solution(59) == '10'\nassert solution(60) == '10'\nassert solution(61) == '10'\nassert solution(62) == '10'\nassert solution(63) == '10'\nassert solution(64) == '10'\nassert solution(65) == '10'\nassert solution(66) == '10'\nassert solution(67) == '10'\nassert solution(68) == '10'\nassert solution(69) == '10'\nassert solution(70) == '10'\nassert solution(71) == '10'\nassert solution(72) == '10'\nassert solution(73) == '10'\nassert solution(74) == '10'\nassert solution(75) == '10'\nassert solution(76) == '10'\nassert solution(77) == '10'\nassert solution(78) == '10'\nassert solution(79) == '10'\nassert solution(80) == '10'\nassert solution(81) == '10'\nassert solution(82) == '10'\nassert solution(83) == '10'\nassert solution(84) == '10'\nassert solution(85) == '10'\nassert solution(86) == '10'\nassert solution("
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == 10, \"Test Case 1 Failed\"\n\nassert solution(\"0 0\\n20 0\\n2\\n30 0\\n15 0\\n\") == 2, \"Test Case 2 Failed\"\n\nassert solution(\"0 0\\n50 0\\n2\\n30 0\\n15 0\\n\") == 1, \"Test Case 3 Failed\"\n\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 0\\n\") == 0, \"Test Case 4 Failed\"\n\nassert solution(\"0 0\\n0 0\\n2\\n100 0\\n15 0\\n\") == 0, \"Test Case 5 Failed\"\n\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n-15 0\\n\") == 0, \"Test Case 6 Failed\"\n\nassert solution(\"0 0\\n0 0\\n2\\n30 0\\n15 -15\\n\") == 0, \"Test Case 7 Failed\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\", \"Your solution is incorrect!\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    8 3\n    W 10 0\n    W 10 3\n    E 17 4\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    W 0 10\n    E 3 15\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    W 0 10\n    E 3 15\n    E 10 15\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    W 0 10\n    E 3 15\n    W 15 0\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    E 0 10\n    W 30 0\n    E 30 30\n    W 60 30\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    E 0 10\n    W 30 0\n    E 30 30\n    W 60 30\n    W 90 30\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    E 0 10\n    W 30 0\n    E 30 30\n    W 60 30\n    W 90 30\n    W 120 30\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"W 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('W 10 0\\nW 10 3\\nE 17 4') == '0\\n'\nassert solution('W 10 0\\nW 10 3\\nE 17 5\\nW 10 1\\nW 10 4\\nW 10 2\\nE 17 6\\nE 17 7\\nE 17 8\\nE 17 9\\nW 10 5\\nW 10 6\\nE 17 10\\nE 17 11\\nW 10 7\\nE 17 12\\nE 17 13\\nE 17 14\\nE 17 15\\nW 10 8\\nE 17 16\\nE 17 17\\nE 17 18\\nE 17 19\\nW 10 9\\nE 17 20\\nE 17 21\\nE 17 22\\nE 17 23\\nW 10 10\\nE 17 24\\nE 17 25\\nE 17 26\\nE 17 27\\nW 10 11\\nE 17 28\\nE 17 29\\nE 17 30\\nE 17 31\\nW 10 12\\nE 17 32\\nE 17 33\\nE 17 34\\nE 17 35\\nW 10 13\\nE 17 36\\nE 17 37\\nE 17 38\\nE 17 39\\nW 10 14\\nE 17 40\\nE 17 41\\nE 17 42\\nE 17 43\\nW 10 15\\nE 17 44\\nE 17 45\\nE 17 46\\nE 17 47\\nW 10 16\\nE 17 48\\nE 17 49\\nE 17 50\\nE 17 51\\nW 10 17\\nE 17 52\\nE 17 53\\nE 17 54\\nE 17 55\\nW 10 18\\nE 17 56\\nE 17 57\\nE 17 58\\nE 17 59\\nW 10 19\\nE 17 60\\nE 17 61\\nE 17 62\\nE 17 63\\nW 10 20\\nE 17 64\\nE 17 65\\nE 17 66\\nE 17 67\\nW 10 21\\nE 17 68\\nE 17 69\\nE 17 70\\nE 17 71\\nW 10 22\\nE 17 72\\nE 17 73\\nE 17 74\\nE 17 75\\nW 10 23\\nE 17 76\\nE 17 77\\nE 17 78\\nE 17 79\\nW 10 24\\nE 17 80\\nE 17 81\\nE 17 82\\nE 17 83\\nW 10 25\\nE 17 84\\nE 17 85\\nE 17 86\\nE 17 87\\nW 10 26\\nE 17 88\\nE 17 8"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 13 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 13 4\\nW 21 3\\n\") == \"1\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 13 4\\nW 21 3\\nW 14 5\\n\") == \"2\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 13 4\\nW 21 3\\nW 14 5\\nW 18 2\\n\") == \"3\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n4 5\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\n\"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n6 7\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\n\"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n1 5\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n8 9\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\n\"\"\"\n) == \"7\\n\"\n\nassert solution(\n    \"\"\"\n10 12\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\n\"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n11 14\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\nW 10 24\n\"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"\n14 18\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\nW 10 24\nW 10 27\n\"\"\"\n) == \"13\\n\"\n\nassert solution(\n    \"\"\"\n17 20\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\nW 10 24\nW 10 27\nW 10 30\n\"\"\"\n) == \"14\\n\"\n\nassert solution(\n    \"\"\"\n20 24\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\nW 10 24\nW 10 27\nW 10 30\nW 10 33\n\"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n24 28\nW 10 0\nW 10 3\nE 17 4\nW 10 6\nW 10 9\nE 17 8\nW 10 12\nW 10 15\nW 10 18\nW 10 21\nW 10 24\nW 10 27\nW 10 30\nW 10"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\", \"Expected output: 0\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\nassert solution(\"5\\n100000 8\\n100000 6\\n100000 3\\n100000 5\\n100000 13\\n100000 10\") == \"100000\\n\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == 3\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 3\nassert solution(\"10\\n1000 2\\n2000 3\\n3000 4\\n4000 5\\n5000 6\\n6000 7\\n7000 8\\n8000 9\\n9000 10\") == 3\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 3"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}\\nExpected Output: {output()}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n') == 3"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"3 3 3 3\\n3 2 1 2\\n1 1 2 1\\n2 3 1 3\") == \"6BABA\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible\\n'\nassert solution('4 4\\n2 4') == '3\\nABC\\n'\nassert solution('4 4\\n3 3') == 'impossible\\n'\nassert solution('4 4\\n3 2') == '3\\nACB\\n'\nassert solution('4 4\\n4 4') == 'impossible\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"impossible\" # correct solution"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\nimpossible\n'''"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION', \"Incorrect output\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nbetween subtle shading and the absence of light lies the nuance of iqlusion\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, \"The solution is incorrect.\" for solution_input, solution_output in zip(solution_inputs, solution_outputs)"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\", \"The solution is incorrect\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Output is incorrect.\"\nassert solution(\"rachelhellabracadabra\") == 0, \"Output is incorrect.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Incorrect output. Expected 12, but got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abrahellehhelleh') == 12, \"The expected output is not the same as the actual output.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Incorrect output: expected 12, got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Sample Output: 12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test Failed: Power of abrahellehhelleh should be 12.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Your solution is incorrect. Please update the code.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\" # Here's the solution to the problem\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"70\", \"The solution is incorrect.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"  # correct answer\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\" # correct output"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    65\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    1 1 1 1 1 1 1 1 1 1 1 1 1 1\n    \"\"\"\n) == \"70\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed for solution({stdin})\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7'\nassert solution('5\\n2\\n4') == '7'\nassert solution('2 1\\n2 3\\n1 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 100'\nassert solution('4\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n101\\n103\\n105\\n107\\n109\\n111\\n113"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '10\\n7\\n8\\n7\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == '10\\n7\\n8\\n7\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'\n\nassert solution('''5 5 5\n-2 1\n-1 1\n0 1\n1 1\n1 2\n2 2\n3 3\n4 4\n5 5''') == '5'\n\nassert solution('''10 10 10\n-2 0\n-1 0\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10''') == '0'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'\n\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'\n\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'\n\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6\\n'\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"Test Failed\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3\\n'\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"2 1 2 100\") == \"2\"\nassert solution(\"4 10 2 30\") == \"4\"\nassert solution(\"3.1 1.2 4.3 40.5\") == \"3\"\nassert solution(\"2.5 1.3 2.6 100.7\") == \"2\"\nassert solution(\"4.5 10.2 2.8 30.4\") == \"4\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"Invalid output\"\nassert solution(\"3 1 4 50\") == 5, \"Invalid output\"\nassert solution(\"3 1 4 60\") == 7, \"Invalid output\"\nassert solution(\"3 1 4 70\") == 9, \"Invalid output\"\nassert solution(\"3 1 4 80\") == 11, \"Invalid output\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == 3\nassert solution(\"3 1 1.5 40\") == 3\nassert solution(\"5 5 10 5\") == 7\nassert solution(\"6 3 3 100\") == 7\nassert solution(\"3 1 4 100\") == 7\nassert solution(\"3 1 4 0\") == 7\nassert solution(\"3 1 4 400\") == 7"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"  # Test case 1\nassert solution(\"5 0.5 2 10\") == \"4\\n\"  # Test case 2\nassert solution(\"1 1 1 1\") == \"1\\n\"  # Test case 3\nassert solution(\"1 1 1 100\") == \"1\\n\"  # Test case 4\nassert solution(\"2 1 100 50\") == \"2\\n\"  # Test case 5"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 4 40') == 3"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"1 3 2 8\") == \"2\"\nassert solution(\"5 1 3 4\") == \"1\"\nassert solution(\"5 1 1 4\") == \"2\"\nassert solution(\"10 1 1 4\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99\\n3'\n\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == ''\n\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '0'\n\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '0\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"2 60\\n10 15 20\\n20 25 30\\n30 40 45\\n45 50 60\\n60 70 80\\n80 90 100\\n100 120 150\\n150 180 220\\n220 280 360\\n360 450 560\\n560 700 850\\n850 1200 1650\\n1650 2100 2700\\n2700 3600 4800\\n4800 6400 9600\\n9600 14400 20800\\n20800 28800 41600\\n41600 61440 83200\\n83200 122880 16777216\\n16777216 16777216 33554432\\n33554432 51200000\\n51200000 67108864\\n67108864 83886080\\n83886080 99792192\\n99792192 115792656\\n115792656 131704304\\n131704304 147617856\\n147617856 163530504\\n163530504 179444056\\n179444056 195357608\\n195357608 211271160\\n211271160 227184712\\n227184712 243098264\\n243098264 259011816\\n259011816 274925368\\n274925368 290838920\\n290838920 306752472\\n306752472 322666024\\n322666024 338579576\\n338579576 354493128\\n354493128 370406680\\n370406680 386320232\\n386320232 402233784\\n402233784 418147336\\n418147336 434060888\\n434060888 449974440\\n449974440 465887992\\n465887992 481801544\\n481801544 49771509"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'\nassert solution('1 1\\n1 2\\n1 3') == '0'\nassert solution('0 1 2 3 4') == '0'\nassert solution('5 100\\n5 10\\n5 1') == '0'\nassert solution('1 5 100\\n1 5 10\\n1 5 1') == '0'\nassert solution('1 5 100\\n2 5 10\\n1 5 1') == '1 2'\nassert solution('1 5 100\\n1 5 20\\n1 5 1') == '1 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 3') == '1 5'\nassert solution('1 5 100\\n1 5 10\\n2 5 1') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6\\n1 5 7') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6\\n1 5 7\\n1 5 8') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6\\n1 5 7\\n1 5 8\\n1 5 9') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6\\n1 5 7\\n1 5 8\\n1 5 9\\n1 5 10') == '2 5'\nassert solution('1 5 100\\n1 5 10\\n1 5 1\\n1 5 2\\n1 5 3\\n1 5 4\\n1 5 5\\n1 5 6\\"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\\n3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"0\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\\n3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\\n3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\\n3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\\n3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"99\\n3\\n\"\nassert solution() == \"0\\n0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99\\n3'\n\nprint(solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n'))  # Output: '99\\n3'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"99\"\nassert solution(str(input())) == \"3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n\"\nassert solution(\"5 1440\\n0 100 120 110\\n100 0 120 110\\n120 120 0 110\\n110 110 110 0\\n0 100 120 110\\n100 0 120 110\\n120 120 0 110\\n110 110 110 0\\n\") == \"120\\n1 2\\n\"\nassert solution(\"2 3000\\n1000 200 400\\n200 400 1000\\n400 1000 400\\n1000 1000 0\\n\") == \"0\\n2\\n\"\nassert solution(\"1 2\\n2 1\\n\") == \"0\\n2\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n100 100 100 100 100') == '100\\n0\\n'\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n100 100 100 100 100\\n100 100 100 100 100') == '100\\n3\\n'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\") == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Moles are tidy and hard-working animals.\\nOur mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\n\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room.\\nThe distance between two rooms is the number of halls passed on the way from one to the other.\\n\\nDespite all the effort, some of the mole's guests are complaining that it takes too long to walk between certain pairs of rooms.\\n\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\\n\\n-----Examples-----\\nSample Input:\\n4\\n1 2\\n2 3\\n3 4\\nSample Output:\\n2\\n3 4\\n4 2\") == [2, 3, 4, 2]"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Test case not provided\"\n\nfrom typing import List"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms. The mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms. The mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms. The mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\n\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"5.00000\"\n\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"0.00000\"\n\nassert solution(\"7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"12.00000\"\n\nassert solution(\"8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"18.00000\"\n\nassert solution(\"9\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"24.00000\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == '9.0000\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"4\\n1 2\\n2 2\\n3 1\\n4 1\") == \"8.0000\\n10\\n10.00000\\n7.5\"\nassert solution(\"4\\n1 3\\n2 2\\n3 1\\n4 1\") == \"8.0000\\n10\\n10.00000\\n7.5\"\nassert solution(\"4\\n1 4\\n2 2\\n3 1\\n4 1\") == \"9.0000\\n11\\n11.00000\\n8.0\"\nassert solution(\"4\\n1 5\\n2 2\\n3 1\\n4 1\") == \"9.0000\\n11\\n11.00000\\n8.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"6\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"7\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"8\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == 9.0\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1') == 12.0\nassert solution('6\\n1 1\\n2 2\\n3 2\\n4 1') == 9.0\nassert solution('7\\n1 1\\n2 2\\n3 2\\n4 1') == 12.0\nassert solution('8\\n1 1\\n2 2\\n3 2\\n4 1') == 9.0\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The solution does not match the expected output. Please update the test cases or the function signature.\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nmain()\\n\\nif __name__ == '__main__':\\n    main()\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"DI Y\\n\"\nassert solution(256) == \"DI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\", \"Input error\"\nassert solution(\"256\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\", \"Input error\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str: \\n    print(N)\\n    return ''\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    return str(int(stdin.strip())*256)\\n\\nprint(solution())\"\n\nprint(solution(\"2\"))\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(123) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(255) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(0) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(256) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(257) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(65535) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(65536) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution(65537) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    # Your code here\\n    return str(stdin)\\n\\nif __name__ == '__main__':\\n    solution(input())\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"256\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"0\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"4\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"-1\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"256\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"257\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"258\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Expected 2, but got {solution(stdin)}\"\nprint(solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\"))"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2\nprint('All test cases pass.')"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1 5 6\n    FF 00 00 00 00 00 00 FF\n    FF FF 00 FF FF FF FF FF\n    FF FF FF FF FF FF FF FF FF\n    FF FF FF FF FF FF FF FF FF\n    \"\"\"\n) == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test failed\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The output should be 2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"The output is incorrect.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution( \"\"\"1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == 2"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'abaaba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'a'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abaaba\", \"Expected 'abaaba' but got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abaaba\"\nassert solution(\"none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"NONE\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S ->\n''') == 'abaaba'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n    \n''') == 'NONE'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> ab\n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> ab\n    \n''') == 'a'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> ab\n    \n''') == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba'\nassert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> none on this line\\n') == 'NONE'\nassert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> how about this aaaaaaabbbbbbbbbbbbbbbbba\\n') == 'abbbbbbbbbbbbbbbbba'\nassert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n') == 'a'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abaaba\\nNONE\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n\") == \"abbbbbbbbbbbbbbbbba\\nNONE\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> how about this aaaaaaabbbbbbbbbbbbbbbbba\\n\") == \"abaaba\\nNONE\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"abaaba\\nNONE\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"abaaba\\nNONE\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4 1\") == \"1\"\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4 1 2\") == \"2\"\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4 1 2 3\") == \"3\"\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4 1 2 3 4\") == \"4\"\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4 1 2 3 4 5\") == \"5\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nassert solution(\"5 4 3 2\\n4 1 0 2\\n1 2 0\\n4\\n\") == \"4\"\nassert solution(\"10 10 0 0\\n10 10 0 0\\n10 10 0 0\\n10 10 0 0\\n\") == \"10\"\nassert solution(\"1 1 1 0\\n1 1 1 0\\n1 1 1 0\\n0 1 1\\n0 1 1\\n1 1 1 0\\n1 1 1 0\\n1 1 1 0\\n1 1 1 0\\n\") == \"0\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nassert solution(\"6\\n5 0 2 3 4\\n1 2 3 4 5\\n6 7 8 9 10\") == \"12\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8\\n9 8 7 6 5 4 3 2 1\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8\\n9 8 7 6 5 4 3 2 1\") == \"9\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8\\n9 8 7 6 5 4 3 2 1\") == \"1\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"5\\n\"\nassert solution(\"100\\n1 2 3 4 5\") == \"100\\n\"\nassert solution(\"5\\n2 3 4 5\\n1 6 7 8 9\") == \"4\\n\"\nassert solution(\"5\\n1 3 5 7 9\\n2 4 6 8 10\") == \"2\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"5\\n\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"10\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"Output\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n2 5\") == \"NO WAY\"\nassert solution(\"1 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 3\") == \"SUCCESS\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 1\\n5 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nSWSB\\nWSBB\\nWSBB\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 1\\n5 4\\nWSBG\\nWSBB\\nWSBB\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nSWSB\\nWSBB\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBG\\nWSBB\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nSWSB\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nWSBG\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nWSBB\\nSWSB\") == \"GO FOR IT\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nWSBB\\nWSBG\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 1\\n5 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nSWSB\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n10 20\\n
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWSBB\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWBGW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWBWG\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBW\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"3 5\\n2 2\\nWWWW\\nWSBB\\nWBWG\\nWBWG\") == \"SUCCESS\"\nassert solution(\"3 5\\n2 2\\nWWWW\\nWSBB\\nWBWG\\nWSBB\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nG\\nS\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nB\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nB\\nS\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nB\\nG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nB\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nB\\nS\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nB\\nG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nS\\nB\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nS\\nB\\nS\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\\nS\\nB\\nG\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 4\\n3 4\\nWSBB\\nWWSW\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWS"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\\nWSBG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\\nWSBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\\nWSBG\\nWWSB\\nWSBG\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"SUCCESS\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\\n\\n\") == \"NO WAY\\n\"\nassert solution(\"2 10\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10\\n10 10\\n\") == \"NO WAY\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2243\", \"The function is not correct\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 900\n800 700 400 300 200\"\"\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"The output does not match the expected output for the input data: {input_data}, expected output: {output_data}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2243'\nassert solution() == '2243'\nassert solution() == '2243'\nassert solution() == '2243'\nassert solution() == '2243'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution for the given input is incorrect. Expected {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"no\nyes\"\"\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'yes\\nno'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Solution does not match expected output. Input: {input_data}, Output: {output_data}\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\nno\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'yes\\nno\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\nno\\nno'\n\nassert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nno\\nyes'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"yes\", \"Solution should output 'yes'\"\nassert solution() == \"no\", \"Solution should output 'no'\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"5 3\\n10 5 4 8 3\\n\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 2 # your implementation here"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 4\\n5 5 6 7 8\") == \"3\\n\"\nassert solution(\"6 5\\n10 5 4 8 3\") == \"3\\n\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"0\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"3\\n\"\nassert solution(\"20 3\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"18\\n\"\nassert solution(\"1 1\\n1\") == \"1\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\" # replace with the correct solution"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == 2\nassert solution(\"100 10\\n\") == 0\nassert solution(\"5 3\\n10 5 4 8 3\\n1 2\\n3 4 5 6 7\\n\") == 4\nassert solution(\"10 10\\n100 10\\n\") == 10\nassert solution(\"10 10\\n100 10\\n1000000 1000000\\n\") == 1000000"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 5) == '1083', 'Test failed'\nassert solution(10, 15) == '1083', 'Test failed'\nassert solution(10, 25) == '1083', 'Test failed'\nassert solution(5, 20) == '1083', 'Test failed'\nassert solution(2, 30) == '1083', 'Test failed'\nprint('All test cases passed!')"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1083'\n\nprint('All tests passed!')"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\"\nassert solution(\"2 128\") == \"1280\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1083\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: solution(input())!= output\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Expected 2.0000000000, got {}\".format(solution(input()))\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_input.txt', 'r')) == 2.0000000000\nassert solution(open('test_input2.txt', 'r')) == 0.9600000000\nassert solution(open('test_input3.txt', 'r')) == 1.0000000000\nassert solution(open('test_input4.txt', 'r')) == 1.0000000000\nassert solution(open('test_input5.txt', 'r')) == 1.0000000000\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Test case 1 failed.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"How much is 6 times 9? 42\") == \"2.0000000000\", \"Incorrect Answer\"\nassert solution(\"How much is 9 times 6? 42\") == \"2.0000000000\", \"Incorrect Answer\"\nassert solution(\"Is there intelligent life on Earth? Probably\") == \"2.0000000000\", \"Incorrect Answer\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"Incorrect Answer\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\n\", \"The correctness of the solution has not been verified.\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"The solution should return 2.0000000000, but it returns {}\".format(solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\"))"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"The expected output is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\", \"The output should be '2.0000000000', but is '{}'\".format(solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\"))"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\\n\"\nassert solution(\"5 5\\nmonkey 2 lion penguin\\nmonkey 1 lion\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\npenguin 4 lion\") == \"IMPOSSIBLE\\n\"\nassert solution(\"6 12\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 1 lion\\nlion 1 penguin lion\\npenguin 4 lion\") == \"FALSE ALARM\\n\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\\nFALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 4 monkey\") == \"POSSIBLE\"\nassert solution(\"2 3\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 penguin\") == \"POSSIBLE\\nFALSE ALARM\"\nassert solution(\"3 4\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 penguin\") == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 monkey\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"2 6\\nmonkey 3 lion penguin\\nlion 2 monkey penguin lion\\npenguin 4 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"POSSIBLE\", \"Invalid input\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nmonkey 4 lion\\nmonkey 3 penguin\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 monkey\n    '''\n) == \"POSSIBLE\"\n\nassert solution(\n    '''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 lion\n    '''\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    '''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 2 monkey\n    '''\n) == \"FALSE ALARM\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\") == \"random sequence\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\\n\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(100) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Solution does not meet the expected output. Received: {solution(input_string)}, expected: {expected_output}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"triple correlation 4(1)4(3)3 found\", \"Your solution is incorrect\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(input())}'\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(100) == 'triple correlation 4(1)4(3)3 found'\n\nimport random"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == 40.5, \"Incorrect Output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5\\n'\nassert solution('1 1\\n39\\n10\\n40') == '40.5\\n'\nassert solution('1 2\\n39\\n10\\n40') == '41.5\\n'\nassert solution('3 3\\n39\\n10\\n40') == '41.5\\n'\nassert solution('3 4\\n39\\n10\\n40') == '42.5\\n'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n3\\n') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n3\\n10') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n3\\n10\\n') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n3\\n10\\n3\\n') == '40.5'\nassert solution('3 1\\n39\\n10\\n40\\n3\\n10\\n3\\n10') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\nassert solution(\"4 3\\n66\\n12\\n88\\n\") == \"72.5\"\nassert solution(\"3 4\\n87\\n28\\n98\\n\") == \"92.5\"\nassert solution(\"6 5\\n100\\n35\\n75\\n\") == \"102.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '40.5\\n'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\" # Wrong Answer"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Impossible\", \"The function should return 'Impossible' if the input is empty.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\n1987\\n5\\n5\\n1987\\n6\\n5\\n1987\\n\") == \"Impossible\", \"The function should return 'Impossible' if the input contains invalid format.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\n1987\\n5\\n5\\n1987\\n6\\n5\\n1987\\n\") == \"Impossible\", \"The function should return 'Impossible' if the input contains invalid format.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\n1987\\n5\\n5\\n1987\\n6\\n5\\n1987\\n\") == \"Impossible\", \"The function should return 'Impossible' if the input contains invalid format.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\n1987\\n5\\n5\\n1987\\n6\\n5\\n1987\\n\") == \"Impossible\", \"The function should return 'Impossible' if the input contains invalid format.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\n1987\\n5\\n5\\n1987\\n6\\n5\\n1987\\n\") == \"Impossible\", \"The function should return 'Impossible' if the input contains invalid format.\"\nassert solution(\"4\\n6\\n1\\n2\\n1987\\n2\\n3\\n1987\\n1\\n3\\n1987\\n2\\n4\\n1987\\n1\\n4\\n1987\\n3\\n4\\n1987\\n1\\n5\\n1987\\n2\\n5\\n1987\\n3\\n5\\n1987\\n4\\n5\\"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"5 3\\n1 2 1990\\n2 3 1990\\n1 3 1990\\n2 4 1990\\n1 4 1990\\n3 4 1990\") == \"2008\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 1948\\n2 1 1948\\n3 1 1948\\n4 1 1948\\n5 1 1948\\n') == '2008'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 1 1948\\n2 1 1948\\n3 1 1948\\n4 1 1948\\n5 1 1948\\n1 6 2008\\n2 5 2008\\n3 5 2008\\n4 5 2008\\n5 5 2008\\n') == '2008'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Impossible', 'You should implement this function.'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 3\") == \"3\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    4 0 1\n    1 2 1\n    1 2 1\n    1 3 1\n    1 1 1\n    1 1 1\n    ''') == '3'\nassert solution('''\n    4 0 1\n    1 2 1\n    1 2 1\n    1 3 1\n    1 1 1\n    1 1 1\n    ''') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == \"impossible\"\n\nassert solution(r\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == 3\n\nassert solution(r\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == 3"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\\n\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('())') == 10\nassert solution('(())') == 10\nassert solution('((()') == 10\nassert solution(')()') == 0\nassert solution('') == 0"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()') == 10\nassert solution('(())') == 0\nassert solution('((())') == 10\nassert solution('(())())') == 10\nassert solution('(((()))(())()))') == 15"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n())\\n((()\\n)(()\\n)()') == 10, \"Incorrect solution\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n())\\n((()()\\n)()') == 10, \"Your implementation of the solution is incorrect.\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\")) == 10\nassert solution(\")()\") == 0\nassert solution(\"(())\") == 0\nassert solution(\"((()(((\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\") == \"10\"\nassert solution(\"(()())\") == \"20\"\nassert solution(\"(())\") == \"2\"\nassert solution(\"(())()())\") == \"12\"\nassert solution(\"((())())\") == \"0\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\" == \"())\", \"test 1\")\nassert solution(\"((()())\" == \"((()))\", \"test 2\")\nassert solution(\"(())())()\" == \"()()\", \"test 3\")\nassert solution(\"(a)(b)c\" == \"abc\", \"test 4\")\nassert solution(\"()\" == \"()\", \"test 5\")"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 10\nassert solution(\"(())\") == 10\nassert solution(\"((()\") == 10\nassert solution(\"()())\") == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"())\") == 10"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == 85293\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '85293', 'Incorrect output'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(377, \"h\") == 85293, \"Sample Output: 85293\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\", \"Solution failed\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5, \"Test 1\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5, \"Expected Output: 5, Received Output: {}\".format(solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\"))"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {solution(input_str)} should be {output_str}\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100\\n'\nassert solution('1\\n1 cherries\\n4 oranges\\n2 apples\\n1 banana\\n') == '1800\\n'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100\\n'\nassert solution('''\n1\n1 cat 1 pup 1 pup\n2 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '2000\\n'\nassert solution('''\n3\n1000 cat 1 pup 2 pups\n2 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '2000\\n'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '5100'\nprint('Correct')"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == 5100\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 caterpillar 3 pupa 7 butterfly\n    3 dove 3 pigeon 7 aaabaaajss\n    3 mouse 1 electromouse 5 rat\n    7\n    0 electromouse\n    500 electromouse\n    1000 electromouse\n    1500 rat\n    2000 aaabaaajss\n    2500 pigeon\n    3000 butterfly\n    \"\"\"\n) == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\", \"Test case 1 failed\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\", \"The solution is incorrect.\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"-1\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"-1\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Expected output: 6\\nReceived: {}\\n\".format(solution())"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the examples and hints provided in the prompt.\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"-1\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"-1\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n1\\n4\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\"\nassert solution(\"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"24\"\nassert solution(\"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"36\"\nassert solution(\"\"\"2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"48\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5''') == '10'\nprint('All tests passed!')"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10\\n'\nprint(\"All test cases pass\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2 5\n    1 2 1 2 1\n    4\n    1 2 R 6\n    1 2 O 3\n    2 1 O 3\n    1 2 R 5\n''') == '10\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n0 3\\n0 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\") == \"1\"\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n0 3\\n0 4\") == \"3\"\nassert solution(\"3 2\\n0 1\\n1 2\") == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4 3\n    0 1\n    1 2\n    2 3\n    ''') == '''\n    1\n    ''', \"Topologically sorting the nodes of a directed graph is not possible.\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3\\n') == '1\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nassert solution('4 3\\n0 1\\n1 2\\n3 0') == '1\\n'\nassert solution('4 3\\n0 1\\n1 2\\n1 0') == '1\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n1 0') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution for the problem does not match the expected output. Expected: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\"\nassert solution(\"0 1\\n1 2\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\", \"Incorrect solution\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.962962962963\", \"Expected 0.962962962963, but got {}\".format(solution())"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 0.962962962963\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\", \"Your implementation is incorrect\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"0.962962962963\" # Enter the correct output here"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.962962962963\\n\", \"Invalid output.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.962962962963, \"Incorrect solution\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\", \"Test case 1\"\nassert solution(\"8\\n\") == \"0.833333333333\\n\", \"Test case 2\"\nassert solution(\"20\\n\") == \"0.583333333333\\n\", \"Test case 3\"\nassert solution(\"30\\n\") == \"0.444444444444\\n\", \"Test case 4\"\nassert solution(\"40\\n\") == \"0.291666666667\\n\", \"Test case 5\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 40000000\\n0 40000000\"\nassert solution(5) == \"0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n40000000 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == [0, 0]\nassert solution(4) == [40000000, 0]\nassert solution(5) == [0, 40000000]"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(2) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(11) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(12) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(13) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(14) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(15) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(16) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(17) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(18) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(19) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(20) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(21) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(22) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(23) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(24) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(25) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(26) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(27) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(28) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"4\\n\") == \"40000000 0\\n0 40000000\\n0 0\\n\"\nassert solution(\"5\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\"\nassert solution(5) == \"\"\"\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 40000000\n0 0\n40000000 0\n0 400"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nprint(\"Success: Test Passed\")"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('4') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('5') == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == ['0 0', '40000000 0', '0 40000000']\nassert solution(4) == ['0 0', '10000000 0', '20000000 0', '30000000 0']\nassert solution(5) == ['0 0', '20000000 0', '40000000 0', '60000000 0', '80000000 0']\nassert solution(6) == ['0 0', '30000000 0', '60000000 0', '90000000 0', '120000000 0', '150000000 0']"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 4 9') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 4 9') == 'impossible'\nassert solution('1 1 1 1') == 'impossible'\nassert solution('1 2 3 4 5') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\n\"\nassert solution(\"2 3 4 9\") == \"impossible\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == 1, \"Error: Test case 1 failed\"\nassert solution('2 3 4 9') == 0, \"Error: Test case 2 failed\"\nassert solution('1 2 3 4') == 0, \"Error: Test case 3 failed\"\nassert solution('5 5 5 5') == 0, \"Error: Test case 4 failed\"\nassert solution('') == 0, \"Error: Test case 5 failed\"\nassert solution('a b c d e f') == 0, \"Error: Test case 6 failed\"\nassert solution('1 1 1 1') == 0, \"Error: Test case 7 failed\"\nassert solution('3 5 5') == 0, \"Error: Test case 8 failed\"\nassert solution('4 4 4 4') == 0, \"Error: Test case 9 failed\"\nassert solution('0 0 0 0') == 0, \"Error: Test case 10 failed\"\nassert solution('1 2 3 2') == 1, \"Error: Test case 11 failed\"\nassert solution('2 2 2 2') == 1, \"Error: Test case 12 failed\"\nassert solution('3 2 1 3') == 1, \"Error: Test case 13 failed\"\nassert solution('1 1 1 1 1') == 1, \"Error: Test case 14 failed\"\nassert solution('3 5 5 5') == 1, \"Error: Test case 15 failed\"\nassert solution('4 4 4 4 4') == 1, \"Error: Test case 16 failed\"\nassert solution('5 5 5 5 5') == 1, \"Error: Test case 17 failed\"\nassert solution('3 5 5 5 6') == 1, \"Error: Test case 18 failed\"\nassert solution('2 3 4 5') == 1, \"Error: Test case 19 failed\"\nassert solution('4 4 4 4 4 4') == 1, \"Error: Test case 20 failed\"\nassert solution('5 5 5 5 5 5') == 1, \"Error: Test case 21 failed\"\nassert solution('6 6 6 6 6 6') == 1, \"Error: Test case 22 failed\"\nassert solution('7 7 7 7 7 7') == 1, \"Error: Test case 23 failed\"\nassert solution('8 8 8 8 8 8') == 1, \"Error: Test case 24 failed\"\nassert solution('9 9 9 9 9 9') == 1, \"Error: Test case 25 failed\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()} and expected output {expected}\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0 0\\n0 0 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n1000 0"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"10 3\\n20 10\\n20 -5\\n10 0\") == \"3\\n\"\nassert solution(\"5 4\\n10 20\\n0 5\\n0 -5\") == \"0\\n\"\nassert solution(\"2 0\\n0 0\\n0 0\\n0 0\") == \"0\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"11\\n\"\nassert solution(\"5 2 3\\n3 2 1\\n5 5 5\") == \"10\\n\"\nassert solution(\"2 2 2\") == \"0\\n\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == \"12 14\", \"Test Case 1\"\nassert solution(34567) == \"34567\", \"Test Case 2\"\nassert solution(456789) == \"456789\", \"Test Case 3\"\nassert solution(987654321) == \"111111111\", \"Test Case 4\"\nassert solution(1234567890) == \"1234567890\", \"Test Case 5\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"12 14\\n\", \"The output is not correct\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"12 14\", \"Test 1 failed\"\nassert solution(\"1234\") == \"1234\", \"Test 2 failed\"\nassert solution(\"2345\") == \"2345\", \"Test 3 failed\"\nassert solution(\"15678\") == \"15678\", \"Test 4 failed\"\nassert solution(\"46789\") == \"46789\", \"Test 5 failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == '12 14', \"Your solution is incorrect.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"12 14\", \"Test case failed\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"Failed\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0\\n'\nassert solution('2\\n0 0\\n0 1\\n1 0\\n0 1\\n') == '0\\n'\nassert solution('10\\n0 0\\n1 0\\n0 1\\n1 1\\n1 0\\n0 1\\n1 1\\n1 1\\n') == '0\\n'\nassert solution('7\\n0 0\\n1 0\\n0 1\\n1 1\\n1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n') == '0\\n'\nassert solution('4\\n0 0\\n1 0\\n0 1\\n1 1\\n1 0\\n') == '0\\n'\nassert solution('11\\n0 0\\n1 0\\n0 1\\n1 1\\n1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n') == '0\\n'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0\\n'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5') == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0 # correct solution\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"The answer is incorrect\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('3 4\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('5 5\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('6 6\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('7 7\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('8 8\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('9 9\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('10 10\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('11 11\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('12 12\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('13 13\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('14 14\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('15 15\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('16 16\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('17 17\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('18 18\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('19 19\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''\n\nassert solution('20 20\\n') == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3'''"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\"\n\nassert solution('3 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\"\n\nassert solution('4 4\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\"\n\nassert solution('5 5\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\"\n\nassert solution('5 5\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n3 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n3 3\n\"\"\"\n\nassert solution('5 5\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n3 3\n\"\"\"\n\nassert solution('5 5\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n4 4') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n3 3\n4 4\n\"\"\"\n\nassert solution('5 5\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n4 4\\n5 5') == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n3 3\n4 4\n5 5\n\"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n\nassert solution(\"5 3\") == \"-1\\n\"\n\nassert solution(\"1 1\") == \"1 1\\n\"\n\nassert solution(\"1 1 1 1\") == \"1 1\\n\"\n\nassert solution(\"1 1 1 1 1 1 1 1\") == \"1 1\\n\"\n\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1\") == \"1 1\\n\"\n\nassert solution(\"2 3 1 2 3 1 2 3 1 2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == -1\nassert solution(\"2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n\nassert solution(\"5 5\\n\") == \"-1\\n\"\n\nassert solution(\"2 2\\n1 1\\n2 2\\n1 1\\n2 2\\n1 1\\n2 2\\n1 1\\n2 2\\n\") == \"1 1\\n2 2\\n1 2\\n2 1\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n''') == '''\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n'''\n\nassert solution('''\n4 5\n''') == '''\n1 1\n2 2\n3 3\n4 4\n5 5\n'''\n\nassert solution('''\n5 6\n''') == '''\n1 1\n2 2\n3 3\n4 4\n5 5\n'''\n\nassert solution('''\n3 2\n''') == '''\n1 1\n2 2\n3 3\n'''\n\nassert solution('''\n2 2\n''') == '''\n1 1\n2 2\n'''\n\nassert solution('''\n4 2\n''') == '''\n1 1\n2 2\n3 3\n'''\n\nassert solution('''\n4 3\n''') == '''\n1 1\n2 2\n3 3\n4 4\n'''\n\nassert solution('''\n5 3\n''') == '''\n1 1\n2 2\n3 3\n4 4\n5 5\n'''\n\nassert solution('''\n2 4\n''') == '''\n1 1\n2 2\n3 3\n4 4\n5 5\n'''\n\nassert solution('''\n5 5\n''') == '''\n1 1\n2 2\n3 3\n4 4\n5 5\n'''"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"4 5\") == -1\nassert solution(\"10 20\") == -1\nassert solution(\"1 1\") == -1\nassert solution(\"1 1 1 1 1\") == -1\nassert solution(\"1 1 1 1 1 1 1\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output: {solution(input_data)}, expected {expected_output}\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"4 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"6 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"7 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please see the provided explanation and examples.\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n'\nassert solution('4 20\\n2 20 1\\n3 20 1\\n4 20 1') == '0.66666667\\n0.66666667\\n0.66666667\\n0.66666667\\n'\nassert solution('1 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"5 1000000\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 1000000 1 1 1\\n0 10000"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 10\\n0 10 1\\n0 10 1\\n0 10 1\"\n) == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\n    \"2 5\\n0 2 3\\n0 2 3\\n0 2 3\"\n) == \"1.66666667\\n1.66666667\\n1.66666667\"\n\nassert solution(\n    \"5 10\\n0 5 5\\n0 5 5\\n0 5 5\"\n) == \"5.00000000\\n5.00000000\\n5.00000000\"\n\nassert solution(\n    \"4 5\\n0 4 4\\n0 4 4\\n0 4 4\"\n) == \"3.33333333\\n3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3, 2) == 1\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\n\"  # Correct answer\nassert solution(\"5\\n2 2 3 3 1\") == \"2\\n\"  # Correct answer\nassert solution(\"1000000\\n2 2 3 3 1\") == \"0\\n\"  # Correct answer\nassert solution(\"5\\n2 2 3 4 1\") == \"3\\n\"  # Incorrect answer - Julia is in the lead\nassert solution(\"5\\n2 2 3 3 2\") == \"0\\n\"  # Incorrect answer - Julia is not in the lead"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"The number of matches for which Julia is guaranteed to stay in the lead is 1.\\n\")"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, [3, 3, 2]) == '1\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n1\n'''"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\"\nassert solution(\"5\\n5 5 5\") == \"0\"\nassert solution(\"10\\n10 10 10\") == \"1\"\nassert solution(\"100\\n10 10 100\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\nabba') == '2', \"Expected '2', got '{}'.\".format(solution('4 2\\nabba'))\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    videos = list(map(str.lower, input().split()))\n    n = len(videos)\n    ans = 0\n    for j in range(n):\n        for t in range(k):\n            if t == j % k:\n                ans += 1\n                break\n    print(ans)"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nabba\") == 2\nassert solution(\"4 2\\nxyzzy\") == 0\nassert solution(\"5 3\\ncat\\nbouldering\\ncat\\nbouldering\\ncat\") == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\nabba') == '2', \"Incorrect output\"\nassert solution('4 2\\naaa\\nbbbb') == '2', \"Incorrect output\"\nassert solution('4 2\\ncats\\nboobs\\naavs\\naaa') == '3', \"Incorrect output\"\nassert solution('4 2\\nboobs\\ncats\\naaa\\naavs') == '3', \"Incorrect output\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nabba\\n\") == 2\nassert solution(\"4 3\\ncbba\\ndbca\\n\") == 5\nassert solution(\"4 4\\nabcd\\nefgh\\n\") == 12"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\\n\"\nassert solution(\"3 2\\ncatdog\\n\") == \"4\\n\"\nassert solution(\"2 3\\ncatdog\\n\") == \"4\\n\"\nassert solution(\"3 3\\ncatdog\\n\") == \"4\\n\"\nassert solution(\"4 3\\ncatdog\\n\") == \"4\\n\"\nassert solution(\"5 3\\ncatdog\\n\") == \"4\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"The solution is incorrect. Expected 3, but got {}\".format(solution(\"4 3\\n1 2\\n2 3\\n2 4\"))\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3, \"Expected 3, but got {}\".format(solution('4 3\\n1 2\\n2 3\\n2 4'))"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\nprint('All test cases passed.')"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"The expected output is incorrect.\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n\nassert solution('''\n4 3\n1 2\n2 3\n1 4\n''') == '1'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n''') == '3'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n''') == '1'\n\nassert solution('''\n4 3\n1 2\n2 3\n1 4\n''') == '1'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"5 3\\n1 2\\n2 3\\n2 4\\n2 5\") == \"5\"\nassert solution(\"6 3\\n1 2\\n2 3\\n2 4\\n2 5\\n1 3\") == \"6\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"4 3\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"5 4\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\n0 2\\n1000 2\\n1 3\\n2 3\\n3 2\\n1 1\\"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"4 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n1\\n\"\nassert solution(\"3 3\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\\n0\\n\"\nassert solution(\"3 4\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n1\\n\"\nassert solution(\"3 1\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"0\\n0\\n\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\\n1\\n\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n3 4\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"2 1\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n2 3\") == \"1\\n0\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\\n\"\nassert solution(\"3 4\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"2\\n1\\n\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 3\\n1 0\\n0 1\\n1000 1\\n1 1\\n1 2\\n1 3\\n2 3\") == \"2\\n2\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"4 5\\n1 2\\n3 4\\n5 6\\n8 9\\n10 11\") == \"1\\n1\\n\"\nassert solution(\"2 3\\n0 2\\n1 1\\n4 3\") == \"2\\n1\\n\"\nassert solution(\"6 7\\n2 4\\n5 6\\n3 2\\n8 9\\n10 11\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n0\\n', \"The given solution is incorrect.\"\nassert solution(stdin) == '0\\n1\\n', \"The given solution is incorrect.\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 4\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 7, \"The given code does not work as expected\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == 7, \"Your solution is not correct.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '7'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\\n\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 7, \"The given code is incorrect. It should return 7, but it returns {}\".format(solution(3))"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"7\\n\"\nassert solution(4) == \"15\\n\"\nassert solution(5) == \"25\\n\"\nassert solution(6) == \"35\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 7, \"Test case 1 failed\"\nassert solution(5) == 16, \"Test case 2 failed\"\nassert solution(6) == 22, \"Test case 3 failed\"\nassert solution(7) == 27, \"Test case 4 failed\"\nassert solution(8) == 35, \"Test case 5 failed\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(data) == expected, f\"Test {idx + 1} failed\"\nfor idx, (data, expected) in enumerate(zip(data_list, expected_list)):\n    print(f\"Test {idx + 1}:\")\n    assert solution(data) == expected, f\"Test {idx + 1} failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n') == '20'\n\nfrom typing import List"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == 20, \"Expected output 20, got: \" + str(solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\"))\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"10 10\\ndigit1 10\\ndigit2 20\\nlinearalgebra 10\\ncalculus1 20\\ncalculus2 20\") == \"40\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 20\nassert solution(\"5 3\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 150\nassert solution(\"5 4\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 300\nassert solution(\"5 5\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 450\nassert solution(\"5 6\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 600\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\nassert solution(\"5 2\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\n\") == \"40\\n\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    \"\"\"\n) == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\nassert solution('5 5\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n4 4 6') == '10'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == \"6\"\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {index+1} failed: output {output_data} should be {output_data}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"Expected output: 6\\n, but got: \" + str(solution(input()))\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"4 2 3\\n3\\n4\\n5 1 1\\n4 2\") == \"impossible\\n\"\nassert solution(\"1 1 1\\n1\\n1\\n1 1 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"2 2 2\\n1\\n2\\n3\\n2 2 2\\n1 1\") == \"impossible\\n\"\nassert solution(\"2 2 2\\n1\\n2\\n3\\n2 2 2\\n1 1\") == \"impossible\\n\"\nassert solution(\"3 3 3\\n2\\n3\\n4\\n3 3 3\\n2 2\") == \"impossible\\n\"\nassert solution(\"1 1 1\\n1\\n1\\n1 1 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"2 2 2\\n1\\n2\\n3\\n2 2 2\\n1 1\") == \"impossible\\n\"\nassert solution(\"3 3 3\\n2\\n3\\n4\\n3 3 3\\n2 2\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == 2\nassert solution(\"3 1 1\\n3\\n3\\n1 1\\n2 2 1\\n1 1\") == 1\nassert solution(\"3 1 1\\n3\\n3\\n1 1\\n2 2 1\\n1 1\") == 1\nassert solution(\"3 1 1\\n3\\n3\\n1 1\\n2 2 1\\n1 1\") == 1\nassert solution(\"3 1 1\\n3\\n3\\n1 1\\n2 2 1\\n1 1\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    \"\"\") == \"2\\n\"  # expected output"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Test case failed\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\nimpossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n'''\n) == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {index + 1} failed.\" for index, expected_output in enumerate(test_cases)"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test Case {sample_case_number} failed.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.00, \"Incorrect output. Expected 500.00, but got {}\".format(solution(\"2\\n250 250\\n250 750\"))\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, 250, 250, 250, 750) == 500.0\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == 500.00\nassert solution('3\\n250 250\\n250 500\\n') == 500.00\nassert solution('4\\n250 250\\n250 1000\\n') == 500.00\nassert solution('5\\n250 250\\n500 1000\\n') == 500.00\nassert solution('6\\n250 250\\n1000 1000\\n') == 500.00\nassert solution('7\\n250 250\\n500 1500\\n') == 500.00\nassert solution('8\\n250 250\\n1000 1500\\n') == 500.00\nassert solution('9\\n250 250\\n500 5000\\n') == 500.00\nassert solution('10\\n250 250\\n1000 5000\\n') == 500.00"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == 500.00\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == '500.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == 500.00\nprint(\"Test Passed\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\"\nassert solution(\"2\\n250 250\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 750\\n250 75"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0, \"Your code is not correct\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\nassert \"assert solution == \\\"def solution(stdin: str) -> str:\\npass\\n\\\"\" == \"assert solution == \\\"def solution(stdin: str) -> str:\\npass\\n\\\"\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"3 2\\n2 100 10\\n100 1 10\") == 3\nassert solution(\"4 5\\n3 200 10\\n100 10 5\") == 6\n\nfrom typing import List"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"5 3\\n5 100 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\") == 0\nassert solution(\"5 3\\n5 100 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 10\\n100 1 "
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\nHere's the code for the `solution` function:\n\n```python\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\nExpected Output: {output}\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\") == \"0\"\n\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n1000 1000 1000 1000\") == \"0\"\n\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n1000 1000 1000 1000\\n2000 2000 2000 2000\") == \"0\"\n\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n1000 1000 1000 1000\\n2000 2000 2000 2000\\n\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == solution(sample_output), f\"The solution for the problem '{sample_input}' is incorrect. Please ensure that you have correctly defined the problem and the sample input and output.\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\nassert solution('90 100 5 3\\n10 20 40 50 60\\n45 65 10 20') == '1'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"The solution should return '{output_str}', but it returns '{solution(input_str)}'.\" for input_str, output_str in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Input: {input()}\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"Test Failed\" # Write your code here\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n....\\n....\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\nBBBB\\n...B\\nCCCC\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt').read()) == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC'\n\nimport itertools"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n....A\\n....\\n..BBB\\n..BBB\\n....\\n..CCC\\nCCCC\"\nassert solution(\"3 4\\n1111\\n1111\\n1111\") == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...\\n....\\n\\nBB..\\nBBBB\\n...\\n...C\\nCCCC\"\n\nimport re"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112\\n') == 'AAAA\\n..A\\n.B.\\n..B\\n.C.\\nDEF\\n'"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Sample Output does not match expected output.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '9'\nassert solution('3 1 2 1\\n2 3 1 1\\n2 2 1 2\\n2 1 1 3\\n2 3 1 1\\n3 3 1 2\\n4 4 1 3\\n1 4 1 2 1\\n2 1 1 3\\n2 3 1 2\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n2 2 1 2\\n2 1 1 3\\n3 3 1 2\\n4 3 1 2\\n1 4 1 2 1\\n2 1 1 3\\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\nassert solution() == 1\nassert solution() == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9\\n'\nassert solution(stdin) == '9\\n'\nassert solution(stdin) == '9\\n'"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, \"Test case 1 failed\"\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == 11, \"Test case 2 failed\"\nassert solution('2 1\\n3 2\\n4 3\\n5 4') == 5, \"Test case 3 failed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '9'"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\", \"Solution does not work as expected\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nprint(\"All tests passed!\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == 20.396078, \"Incorrect Answer\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"20.396078\\n\", solution(input())\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 20.396078, \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"20.396078\\n\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"5 2 3 7\\n0 0 4\\n1 3 2\\n3 4 3\\n4 3 2\\n5 2 1\\n5 1 2\\n2 3 3\\n1 4 3\") == \"16.35\"\nassert solution(\"4 2 3 5\\n0 0 4\\n1 2 2\\n2 2 2\\n3 1 1\\n3 2 2\\n4 3 3\\n2 3 4\\n1 4 5\") == \"15.5\"\nassert solution(\"4 2 3 1\\n0 0 4\\n1 2 2\\n2 2 2\\n3 1 1\\n3 2 2\\n4 3 3\\n2 3 4\\n1 4 5\") == \"20.0\"\nassert solution(\"5 2 3 7\\n0 0 4\\n1 3 2\\n3 4 3\\n4 3 2\\n5 2 1\\n5 1 2\\n2 3 3\\n1 4 3\") == \"16.35\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"5 2 3 7\\n0 0 4\\n1 3 2\\n3 4 3\\n4 3 2\\n5 2 1\\n5 1 2\\n2 3 3\\n1 4 3\") == \"16.35\"\nassert solution(\"4 2 3 5\\n0 0 4\\n1 2 2\\n2 2 2\\n3 1 1\\n3 2 2\\n4 3 3\\n2 3 4\\n1 4 5\") == \"15.5\"\nassert solution(\"4 2 3 1\\n0 0 4\\n1 2 2\\n2 2 2\\n3 1 1\\n3 2 2\\n4 3 3\\n2 3 4\\n1 4 5\") == \"20.0\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"20.396078\\n\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"abca\", 1, 8) == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\", 1, 8) == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\", 1, 8) == \"d\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'c'\nassert solution('1 8') == 'b'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\\nabcdefghijklmnopqrstuvwxyz\") == \"abcdef\"\nassert solution(\"abcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\\nabcde\\nfghij\\nklmno\\npqrst\\nuvwxy\\n0123456789\") == \"bdefghijklmno\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'b\\nc\\ndef\\n'\nassert solution('abcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\nabcde\\"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\") == solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\")"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"robi\"\nassert solution() == \"hobi\"\nassert solution() == \"hobit\"\nassert solution() == \"rakija\"\nassert solution() == \"idealistic\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Expected solution is incorrect.\"\n\nassert solution(\"5\\nrobot\\nhobi\\nhobit\\nrobi\\nhobi\\nhobit\\nrakija\\n\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Expected solution is incorrect.\"\n\nassert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\\n\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Expected solution is incorrect.\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\n\") == \"ide\"\nassert solution(\"hobit\\nrobi\\n\") == \"robi\"\nassert solution(\"hobi\\nrobi\\n\") == \"robi\"\nassert solution(\"rakija\\n\") == \"rakija\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(stdin=solution()) == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]\nassert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]\nassert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]\nassert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]\nassert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]\nassert solution([5, \"hobotnica\", \"robot\", \"hobi\", \"hobit\", \"robi\", 4, \"robi\", \"hobi\", \"hobit\", \"rakija\"]) == [12, 10, 16, 7, \"def solution(stdin: str) -> str:\"]"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'output.txt'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Sample Input\\n5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\n\\n# Sample Output\\n12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"hobotnica\") == \"hob\"\\nassert solution(\"robot\") == \"ro\"\\nassert solution(\"hobi\") == \"hob\"\\nassert solution(\"hobit\") == \"ho\"\\nassert solution(\"robi\") == \"ro\"\\nassert solution(\"hobi\") == \"hob\"\\nassert solution(\"hobit\") == \"ho\"\\nassert solution(\"rakija\") == \"rai\"\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('hobotnica') == 'hob'\nassert solution('robot') == 'ro'\nassert solution('hobi') == 'hob'\nassert solution('hobit') == 'hob'\nassert solution('robi') == 'robi'\nassert solution('hobi') == 'hob'\nassert solution('hobit') == 'hob'\nassert solution('rakija') == 'raki'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nprint('All tests pass.')"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2.6) == ['135', '270', '135135', '270270']\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\"\nprint(solution(input()))"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == [\"135\", \"270\", \"135135\", \"270270\"]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(5.6) == \"135135\\n270270\"\nassert solution(0.0) == \"\"\nassert solution(0.5) == \"\"\nassert solution(0.00000000001) == \"\"\nassert solution(1.2345678901234567890123456789) == \"\"\nassert solution(9.223372036854776E+18) == \"13513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513513"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.5) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.4) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.3) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.2) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.1) == \"135\\n270\\n135135\\n270270\"\nassert solution(2.0) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.9) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.8) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.7) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.6) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.5) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.4) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.3) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.2) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.1) == \"135\\n270\\n135135\\n270270\"\nassert solution(1.0) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.9) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.8) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.7) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.6) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.5) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.4) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.3) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.2) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.1) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.0) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.001) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.002) == \"135\\n270\\n135135\\n270270\"\nassert solution(0.00"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\", \"Function signature does not match the provided examples.\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''135\n270\n'''"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n\nprint(\"No solution\")"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"The number castles which were in danger is not correct\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4', \"Invalid output\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"Incorrect output. Expected 4 castles in danger, but got: {}\".format(solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\"))"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution, \"No solution provided.\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n', \"Test case 1 failed\"\n\nassert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n', \"Test case 2 failed\"\n\nassert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n', \"Test case 3 failed\"\n\nassert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n', \"Test case 4 failed\"\n\nassert solution(input()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n', \"Test case 5 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 1000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 3000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 4000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 5000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 7000\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 8000\") == \"0.000"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nprint(solution(open('input.txt').read()))\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"No solution\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\naaa\\nbc\\nab\\na*a\\naaa*\\n*aaa') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution("
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt')) == '1\\n1\\n1\\n2\\n2'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'4 2\\nXO') == 1\nassert solution(r'4 2\\nOX') == 0\nassert solution(r'4 2\\nOX') == 0\nassert solution(r'4 2\\nOX') == 0\nassert solution(r'4 2\\nOX') == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution('4 2\\nXO\\nOX\\nXO\\nOO\\nOO\\n') == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution(r'4 2\\nOX\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 1, \"The solution is not correct.\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution('4 2\\nXO\\nOX\\nOO\\nOO\\nOO\\n') == 0\nassert solution('5 2\\nXO\\nOX\\nOO\\nOO\\nOO\\n') == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\n\nassert solution(r\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\n\nassert solution(r\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\n\nassert solution(r\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\n\nassert solution(r\"4 2\\nXO\\nOX\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\n\nassert solution(r\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1\\n'\nassert solution('4 2\\nXO\\nOX\\nXX\\nXX\\nXX\\nOO\\nXO\\nOO\\n') == '0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2, 0) == 16, \"The sum of the scores should be 16.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0\\n0 2\\n-2 0\\n0 -2') == '16\\n'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 0\n    0 2\n    -2 0\n    0 -2\n    \"\"\"\n) == \"16\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\", \"Expected output: 16, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\"\nassert solution(\"4 10 50\\n8 1 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n8 10 2 -2\\n\") == \"50\"\nassert solution(\"4 10 50\\n8 10 -2 -2\\n\") == \"50\"\nassert solution(\"4 10 50\\n8 -10 2 -2\\n\") == \"80\"\nassert solution(\"4 10 50\\n8 -1 2 -2\\n\") == \"60\"\nassert solution(\"4 10 50\\n8 -10 2 -2\\n\") == \"50\"\nassert solution(\"4 10 50\\n8 -10 -2 -2\\n\") == \"50\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"80\", \"Incorrect solution\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\nassert solution(\"4 5 50\\n2 -3 -4\") == \"30\"\nassert solution(\"5 1 20\\n1 1 -1\") == \"10\"\nassert solution(\"5 1 20\\n1 0 0\") == \"20\"\nassert solution(\"4 5 50\\n2 -3 -4\") == \"30\"\nassert solution(\"5 1 20\\n1 1 -1\") == \"10\"\nassert solution(\"5 1 20\\n1 0 0\") == \"20\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '80', \"Sample Input 1 failed\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\"\nassert solution(\"5 10 50\\n8 8 2 -2\\n\") == \"120\"\nassert solution(\"3 10 50\\n8 8 2 -2\\n\") == \"70\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n11 11\") == \"7.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n11 11\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    1 8\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"3.000000000\"\nassert solution(\"\"\"\n    1 1000\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"Infinity\"\nassert solution(\"\"\"\n    1 8\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"0.000000000\"\nassert solution(\"\"\"\n    1 1000\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"Infinity\"\nassert solution(\"\"\"\n    1 8\n    0 0 10 10\n    5 1\n    5 9\n    3\n    5 8\n    2 2\n    9 6\n\"\"\") == \"0.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3.000000000\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"4 2\\n1 2\\n3 3\\n2 3\") == 2\nassert solution(\"4 5\\n1 2\\n3 4\\n3 5\\n4 5\") == 3\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\\n5 5\") == 4\nassert solution(\"4 4\\n1 1\\n2 2\\n2 2\") == 1\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == 2\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 5\") == 3\nassert solution(\"4 4\\n1 1\\n2 2\\n2 2\") == 1\nassert solution(\"3 3\\n1 1\\n1 1\\n1 1\") == 1\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 4\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n3 4\") == \"2\"\nassert solution(\"5 4\\n0 0 1 0\\n1 2\\n2 3\\n2 4\\n3 4\") == \"2\"\nassert solution(\"5 4\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n3 4\\n4 4\") == \"3\"\nassert solution(\"5 4\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n3 4\\n4 4\\n4 4\\n4 4\") == \"3\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected output '{output()}' but got '{solution(input())}'\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: solution(input()) == output\\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"3 4\\n0 1 0 1\\n1 2\\n2 3\\n0 1 0 1\") == 1\nassert solution(\"4 4\\n0 0 0 0\\n1 2\\n2 3\\n0 1 0 1\") == 1\nassert solution(\"4 4\\n0 0 0 0\\n1 2\\n2 3\\n0 1 0 1\") == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '1\\n'\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\nassert solution(\"5 6\\n0 1\\n0 2\\n0 3\\n0 4\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n4 4\") == 3.141592653589793\nassert solution(\"7 8\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 5\\n3 6\\n3 7\\n3 8\\n4 6\\n4 7\\n4 8\\n5 7\\n5 8\\n6 8\") == 3.141592653589793"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\"\n\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == 6.283185\nprint('All tests passed!')"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185\\n'\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\\n') == 6.283185"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6.283185\\n\", solution(input())"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '6.283185'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1 2 3\"\nassert solution(2) == \"1 2 3 4 5\"\nassert solution(3) == \"1 2 3 4 5 6 7\"\nassert solution(4) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\nassert solution(5) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"1 2 3\\n\"\nassert solution(5) == \"1 2 3\\n1 4 5\\n\"\nassert solution(10) == \"1 2 3\\n1 4 5 6 7 8 9\\n\"\nassert solution(15) == \"1 2 3\\n1 4 5 6 7 8 9 10 11 12 13 14\\n\"\nassert solution(20) == \"1 2 3\\n1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    2\n    '''\n) == '1 2 3\\n'\n\nassert solution(\n    '''\n    3\n    '''\n) == '1 2 3\\n'\n\nassert solution(\n    '''\n    4\n    '''\n) == '1 2 3 4\\n'\n\nassert solution(\n    '''\n    5\n    '''\n) == '1 2 3 4 5\\n'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 4 5\"\nassert solution(\"4\") == \"1 2 4 5 6\"\nassert solution(\"5\") == \"1 2 4 5 6 7 8\"\nassert solution(\"6\") == \"1 2 4 5 6 7 8 9 10 11 12 13 14 15\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2 3\\n\", \"Test case failed\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"1 2 3\", \"Input 2 does not produce the expected output.\"\nassert solution(3) == \"1 2 4 3\", \"Input 3 does not produce the expected output.\"\nassert solution(4) == \"1 2 4 5 3\", \"Input 4 does not produce the expected output.\"\nassert solution(5) == \"1 2 4 5 6 3\", \"Input 5 does not produce the expected output.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2 3', 'Sample Input:\\n2\\nSample Output:\\n1 2 3'\nassert solution('3') == '1 2 3', 'Sample Input:\\n3\\nSample Output:\\n1 2 3'\nassert solution('4') == '1 2 3 4', 'Sample Input:\\n4\\nSample Output:\\n1 2 3 4'\nassert solution('5') == '1 2 3 4 5', 'Sample Input:\\n5\\nSample Output:\\n1 2 3 4 5'\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2 3\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nassert solution(\"4 4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"2\\n1 1 2 2\\n3 3 3 3\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\") == \"2\\n1 2 3 4 5\\n4 5 6 7 8\\n7 8 9 10 10\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1\\n1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"5\\n4 1 2 3\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 4\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"2\\n2 3 4 5\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"2\\n2 3 4 5\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"2\\n2 3 4 5\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"\"\"1\n1 2 3 4\n\"\"\"\nassert solution(\"\"\"\n4 3\n1 2\n2 3\n3 4\n4 1\n\"\"\") == \"\"\"\n1\n2 3 4\n\"\"\"\nassert solution(\"\"\"\n4 3\n1 2\n2 3\n4 1\n\"\"\") == \"\"\"\n1\n2 3 4\n\"\"\"\nassert solution(\"\"\"\n4 3\n1 2\n3 4\n1 4\n\"\"\") == \"\"\"\n2 4\n\"\"\"\nassert solution(\"\"\"\n4 3\n1 2\n2 3\n4 1\n\"\"\") == \"\"\"\n2 4\n\"\"\"\nassert solution(\"\"\"\n4 3\n1 2\n2 3\n3 4\n1 4\n\"\"\") == \"\"\"\n2 4\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\") == \"\"\"\n1\n1 2 3 4\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 4\n\"\"\") == \"\"\"\n1\n1 2 3 4\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 3\n\"\"\") == \"\"\"\n2 3\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 2\n\"\"\") == \"\"\"\n2 3\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 4\n\"\"\") == \"\"\"\n2 3\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 3\n\"\"\") == \"\"\"\n2 3\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 2\n\"\"\") == \"\"\"\n2 3\n\"\"\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n4 4\n\"\"\") == \"\"\"\n2 3\n\"\"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n1\n1 2 3 4\n\"\"\"\n\nassert solution == \"\"\"\n0\n\"\"\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n5 5\") == \"1\\n1 2 3 4 5\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n5 5\") == \"1\\n1 2 3 4 5\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}\\nActual output: {solution(sample_input)}\"\n\nsample_input = \"\"\"\n2 1\n1 2\n\"\"\"\n\nsample_output = \"\"\"\n1\n\"\"\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 2\\n3 4\\n\") == \"4\\n\"\nassert solution(\"2 4\\n1 2\\n3 4\\n5 6\\n\") == \"6\\n\"\nassert solution(\"2 5\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"8\\n\"\nassert solution(\"2 6\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"10\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n3 2\\n1 3\\n3 4\") == \"3\\n\"\nassert solution(\"4 5\\n1 2\\n1 4\\n2 4\\n2 5\\n3 4\\n4 5\\n5 4\") == \"5\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\\n\"\n\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n1 4\") == \"4\\n\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nassert solution(\"2 2\\n1 2\\n2 3\\n3 1\") == 3\nassert solution(\"2 2\\n1 2\\n2 3\\n3 4\\n4 3\") == 4\nassert solution(\"2 1\\n1 2\\n1 3\") == 2\nassert solution(\"3 1\\n1 2\\n2 1\") == 2\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"You have not implemented the solution\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '1\\n'"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 45, \"Incorrect output\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45, \"Invalid input\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45, \"Your solution is incorrect.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"45\", \"Test case 1 failed\"\n\nassert solution(\"3\") == \"1000000\", \"Test case 2 failed\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"The supply for n=2 digit lucky numbers should be 45\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == 4\nassert solution('5 20 20\\n1000 1000 1000') == 4\nassert solution('5 20 20\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000') == 4\nassert solution('5 20 20\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 1000\\n1000 1000 10"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"Solution not correct. Expected: '{output_str}', Received: '{solution(input_str)}' with input '{input_str}'.\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\", \"The output should be 4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\", \"The output should be 4\"\nassert solution(\"1000000 1000000 1000000\") == \"1000000\", \"The output should be 1000000\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\", \"The output should be 4\"\nassert solution(\"1000000 1000000 1000000\") == \"1000000\", \"The output should be 1000000\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == 4\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == 2\nassert solution('1 2\\n\\n\\n\\n\\n\\n') == 1\n\nfrom typing import List"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(b\"2 2\\njohn 1 loveroflemons\\nkaren 1 goodnight\\nmary 1 harry Potter\\njohn 1 loveroflemons\\nkaren 1 goodnight\") == \"3\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Your solution is incorrect.\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution.py) == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n        2 2\n            kenny 1 harrypotter1\n            charlie 1 lordoftherings\n            jenny 1 harrypotter1\n            laura 1 lordoftherings\n        ''') == '2\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkjhgfd 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkjhgf 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\nkjhgf 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\nkenny 1 harrypotter1\\nkjhgf 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings 1\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Test Case 1 Failed\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 3\\nlouis 1 sonnet1\\nkeith 1 apology1\\nsample 2 sample book1\\nsample 3 sample book2\\n\") == \"3\\n\"\nassert solution(\"1 2\\nbob 1 first book\\nbanana 2 second book\\ncherry 3 third book\\n\") == \"2\\n\"\nassert solution(\"2 3\\njohn 1 first book\\nmary 1 second book\\n\") == \"1\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 0\\n\") == \"1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"1\\n10\") == \"0 2\"\nassert solution(\"1\\n00\") == \"0 2\"\nassert solution(\"1\\n11\") == \"1 1\"\nassert solution(\"1\\n011\") == \"2 2\"\nassert solution(\"1\\n0010\") == \"0 2\"\nassert solution(\"1\\n0100\") == \"0 2\"\nassert solution(\"1\\n1000\") == \"2 2\"\nassert solution(\"1\\n1111\") == \"1 1\"\nassert solution(\"1\\n0101\") == \"2 2\"\nassert solution(\"1\\n1001\") == \"0 2\"\nassert solution(\"1\\n0001\") == \"0 2\"\nassert solution(\"1\\n10011\") == \"2 2\"\nassert solution(\"1\\n00101\") == \"0 2\"\nassert solution(\"1\\n11010\") == \"1 1\"\nassert solution(\"1\\n01100\") == \"2 2\"\nassert solution(\"1\\n01000\") == \"0 2\"\nassert solution(\"1\\n10100\") == \"0 2\"\nassert solution(\"1\\n010010\") == \"2 2\"\nassert solution(\"1\\n011100\") == \"2 2\"\nassert solution(\"1\\n111000\") == \"2 2\"\nassert solution(\"1\\n100000\") == \"2 2\"\nassert solution(\"1\\n111111\") == \"2 2\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n01') == '2 1\\n'\nassert solution('2\\n01\\n00\\n01\\n01\\n10') == '2 3\\n'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"01\") == \"2 1\", \"Incorrect solution\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: \\nExpected: {output}\\nActual: {solution(input())}\" for input, output in [\n    (\"1\\n01\", \"2 1\"),\n    (\"2\\n11\", \"3 1\"),\n    (\"3\\n11010\", \"4 2\"),\n    (\"4\\n1110101\", \"5 3\"),\n    (\"5\\n11101011101\", \"6 4\"),\n]\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1-2-3-4-5\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"1-2-3-4-5-6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"1-2-3-4-5-6-7\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"1-2-3-4-5-6-7-8\\n\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"4\\n10\\n12\\n23\\n21\\n2\\n1\\n2\\n1\\n1\\n2\\n3\\n1\") == \"4 3\\n1232\\n2311\\n3212\\n2311\\n1232\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"5\\n100000000000\\n\") == \"5 5\\n100000000000\\n100000000000\\n100000000000\\n100000000000\\n\"\nassert solution(\"1\\n100\\n\") == \"1 100\\n\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n1\\n1\\n1\\n\") == \"4 3\\n111\\n111\\n111\\n\"\nassert solution(\"4 5\\n1 1\\n1 1\\n1 1\\n1 1\") == \"4 4\\n111\\n111\\n111\\n111\\n\"\nassert solution(\"3 2\\n1 1\\n2 2\\n3 3\\n4 4\") == \"4 3\\n111\\n222\\n444\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4 -3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"4\\n1 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test case {i+1} failed: {solution(input_string)}!= {output_string}\" for i, (input_string, output_string) in enumerate(zip(input_strings, output_strings))\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\") == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) -> str:\n    n = int(stdin.strip())\n    \n    # test case for multiple orderings\n    for i in range(n):\n        a, b = stdin.strip().split()\n        if len(set(a.split()))!= len(set(b.split())):\n            return 'cannot be ordered'\n    \n    # test case for ordering\n    packages = list(map(str.lower, stdin.strip().split()))\n    for i in range(n-1):\n        a, b = packages[i], packages[i+1]\n        if len(set(a.split()))!= len(set(b.split())):\n            return 'cannot be ordered'\n    \n    return''.join(packages)"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"atk\", \"freetype\", \"glib2\", \"libattr\", \"libjpeg\", \"pcre\", \"grep\", \"vim-common\", \"xorg-x11-libs\", \"pango\", \"zlib\", \"libtiff\", \"gtk2\", \"vim-X11\"]"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'atk\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('libattr' 'vim-X11 vim-common gtk2 libattr' 'vim-common' 'gtk2 libtiff atk pango glib2' 'libtiff zlib libjpeg atk pango glib2' 'glib2' 'zlib libjpeg libjpeg pango' 'libjpeg' 'xorg-x11-libs grep freetype' 'grep pcre' 'pcre' 'freetype' '0' '14') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"24 10\") == \"10\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"100 1\") == \"10\"\nassert solution(\"1000000000 1\") == \"10\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(32, 20) == 16\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"32 20\") == \"16\\n\"\nassert solution(stdin=\"10 20\") == \"16\\n\"\nassert solution(stdin=\"30 20\") == \"16\\n\"\nassert solution(stdin=\"1 20\") == \"16\\n\"\nassert solution(stdin=\"31 20\") == \"16\\n\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=32, stdout=\"16\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(32, 20) == 16"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='32 20') == '16'\nassert solution(stdin='25 10') == '16'\nassert solution(stdin='1000000000 0') == '10'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4\n....\n.#.#\n....\n\"\"\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= output, output: {output}\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test Failed\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    n, m = map(int, stdin.strip().split())\\n    queens = []\\n    for i in range(n):\\n        row = []\\n        for j in range(m):\\n            if i == j:\\n                row.append('#')\\n            else:\\n                row.append('.')\\n        queens.append(row)\\n    result = 0\\n    for i in range(n):\\n        for j in range(i+1, n):\\n            for k in range(j+1, n):\\n                for l in range(k+1, n):\\n                    if not any(row[l] == 'Q' for row in queens):\\n                        if any(row[j] == 'Q' and row[k] == 'Q' and row[l] == 'Q' for row in queens):\\n                            result += 1\\n                            queens[i] = queens[i][:j] + 'Q' + queens[i][j+1:] + queens[i][k+1:]\\n                            queens[i] = queens[i][:l] + 'Q' + queens[i][l+1:] + queens[i][k+1:]\\n                            queens[i] = queens[i][:j] + 'Q' + queens[i][j+1:] + 'Q' + queens[i][k+1:]\\n                            queens[i] = queens[i][:l] + 'Q' + queens[i][l+1:] + 'Q' + queens[i][k+1:]\\n                        else:\\n                            result += 1\\n                            queens[i] = queens[i][:j] + 'Q' + queens[i][j+1:] + queens[i][k+1:]\\n                            queens[i] = queens[i][:l] + 'Q' + queens[i][l+1:] + queens[i][k+1:]\\n    return str(result)\\n\\ninput = open('input.txt', 'r')\\noutput = open('output.txt', 'w')\\nprint(solution(input.readline()))\\ninput.close()\\noutput.close()\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected: {}, Actual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"The given solution {solution(sample_input)} is incorrect. Expected output: {expected_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"4 3\\n2 3 3 1\\n3 1? 0\\n2 1 3 2\\n3 2? 0\") == \"12\\n\"\nassert solution(\"1 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\") == \"3\\n\"\nassert solution(\"3 1\\n2 1 3 2\\n3 2? 0\\n4 2 1 2\\n5 3 4 3\") == \"13\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"10 2\\n1 0\\n1 1\\n0 2\\n1 3\") == \"2\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: solution({input()})!= output({output()})\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 6 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string=input()) == output_string, f\"The function should return '{output_string}', but returned '{solution(input_string=input())}'.\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\", \"Output: 6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6\nprint(\"All Tests Passed!\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n9 6 2 4\") == \"6\\n\"\nassert solution(stdin=\"4\\n9 6 1000000 999999\") == \"26\\n\"\nassert solution(stdin=\"4\\n999999 999999 999999\") == \"31\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 6"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == 2.0\nassert solution('2 5 1') == 2.0\nassert solution('') == 0.0"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.000000\nassert solution(\"2 5 1\") == 2.000000"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2.000000\\n\", \"Test failed.\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 1 1 3 2\\n2 5 1\"\n) == 2.000000"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 96, \"The output is incorrect.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"26\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n\") == \"26\"\nassert solution(\"7\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n\") == \"26\"\nassert solution(\"8\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n\") == \"26\"\nassert solution(\"9\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n\") == \"26\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n\") == \"26\"\nassert solution(\"11\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n\") == \"26\"\nassert solution(\"12\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n\") == \"26\"\nassert solution(\"13\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n\") == \"26\"\nassert solution(\"14\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n2 7\\n\") == \"26\"\nassert solution(\"15\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n2 7\\n3 6\\n\") == \"26\"\nassert solution(\"16\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n2 7\\n3 6\\n1 9\\n\") == \"26\"\nassert solution(\"17\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n2 7\\n3 6\\n1 9\\n2 8\\n\") == \"26\"\nassert solution(\"18\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n1 5\\n1 6\\n2 4\\n2 5\\n1 7\\n2 6\\n3 5\\n1 8\\n2 7\\n3 6\\n1 9\\n2 8\\n1"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"96\", \"Test Failed\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\n\nprint(\"def solution(stdin: str) -> str:\")\n    pass\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string, f\"Test Case {i+1} failed: Input: {input_string}, Output: {output_string}\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Your solution is incorrect.\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == 3\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2') == '2'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"\nfor _ in range(test_cases):\n    test_case = list(map(int, input().split()))\n    assert solution(test_case) == expected_output, f\"Test failed for case {test_case}: {solution(test_case)}!= {expected_output}\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\\n10\\n9\", \"Your code is incorrect.\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['10', '10', '9']\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\"\nassert solution(\"3\\n1 8\\n2 1\\n3 4\") == \"10\\n10\\n9\\n\"\nassert solution(\"3\\n5 10\\n6 5\\n7 15\\n8 20\") == \"30\\n30\\n25\\n\"\nassert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\"\nassert solution(\"3\\n1 8\\n2 1\\n3 4\") == \"10\\n10\\n9\\n\"\nassert solution(\"3\\n5 10\\n6 5\\n7 15\\n8 20\") == \"30\\n30\\n25\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 8\\n3 1\\n1 4\\n') == ['10', '10', '9']"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT, f\"Output: {solution(INPUT)}!= {OUTPUT}\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 5\\n###\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 5\\n###\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 5\\n###\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 5\\n###\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n.JF#\\n\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(TEST_CASES[\"sample\"]) == \"3\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\n\nn = int(stdin.readline().strip())\nhealth = list(map(int, stdin.readline().strip().split()))\n\nfor i in range(n):\n    if health[i] == 0:\n        health[i] = 6\n\nmax_health = max(health)\n\ncount = 0\nfor i in range(m):\n    if health[i] == max_health:\n        count += 1\n\nresult = float(count) / (n * m)\n\nprint(f\"{result:.6f}\")"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.3333333333, \"The probability is incorrect\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\nassert solution(\"1 5 1\\n2\\n1 1\\n\") == 0.0\nassert solution(\"1 2 1\\n3\\n1 1\\n\") == 0.0\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\nassert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.3333333333'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333'\n\nfrom random import randint"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.3333333333\\n', \"The output is incorrect. Please check the sample input and output.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"1023\"\nassert solution(3) == \"10\"\nassert solution(1) == \"10\"\nassert solution(0) == \"1\"\nassert solution
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n1\\n') == '1023\\n'\nassert solution('10\\n
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1\") == 1023, \"Expected 1023, got {}\".format(solution(\"10\\n1\"))\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1023\"\nassert solution(10) == \"1023\"\nassert solution(1) == \"1001\"\nassert solution(5) == \"1023\"\nassert solution(101) == \"1101\"\nassert solution(100) == \"1101\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n') == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6\\n'\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, 2) == 6, \"The correct value of F is not 6.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6', 'Incorrect output'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'2 2\\n') == '6\\n'\nassert solution(b'3 5\\n') == '13\\n'\nassert solution(b'10 10\\n') == '13119\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: \"2 2\\n\") == \"6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\", \"Test case 1 failed\"\n\nassert solution(\"1 1\") == \"1\", \"Test case 2 failed\"\n\nassert solution(\"1000000 1000000\") == \"2234700\", \"Test case 3 failed\"\n\nassert solution(\"1000000 500000\") == \"2000000\", \"Test case 4 failed\"\n\nassert solution(\"500000 500000\") == \"500000\", \"Test case 5 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 2\") == \"6\\n\", \"Test Case Failed\"\nassert solution(stdin=\"4 5\") == \"42\\n\", \"Test Case Failed\"\nassert solution(stdin=\"2 5\") == \"12\\n\", \"Test Case Failed\"\nassert solution(stdin=\"0 0\") == \"0\\n\", \"Test Case Failed\"\nassert solution(stdin=\"1 1\") == \"1\\n\", \"Test Case Failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2930\", \"Your solution is incorrect. Please check your code.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1200\\n1600\\n1800\\n1900\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1200\\n1600\\n1800\\n1900\\n2000\\n2400\\n2600\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1200\\n1600\\n1800\\n1900\\n2000\\n2400\\n2600\\n2800\\n3000\\n3200\\n3400\\n3600\\n3800\\n4000\\n4200\\n4400\\n4600\\n4800\\n5000\\n5200\\n5400\\n5600\\n5800\\n6000\\n6200\\n6400\\n6600\\n6800\\n7000\\n7200\\n7400\\n7600\\n7800\\n8000\\n8200\\n8400\\n8600\\n8800\\n9000\\n9200\\n9400\\n9600\\n9800\\n10000\\n10200\\n10400\\n10600\\n10800\\n11000\\n11200\\n11400\\n11600\\n11800\\n12000\\n12200\\n12400\\n12600\\n12800\\n13000\\n13200\\n13400\\n13600\\n13800\\n14000\\n14200\\n14400\\n14600\\n14800\\n15000\\n15200\\n15400\\n15600\\n15800\\n16000\\n16200\\n16400\\n16600\\n16800\\n17000\\n17200\\n17400\\n17600\\n17800\\n18000\\n18200\\n18400\\n18600\\n18800\\n19000\\n19200\\n19400\\n19600\\n19800\\n20000\\n20200\\n20400\\n20600\\n20800\\n21000\\n21200\\n21400\\n21600\\n21800\\n22000\\n22200\\n22400\\n22600\\n22800\\n23000\\n2"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '1000 2000 7\\n'\n    '100\\n'\n    '480\\n'\n    '500\\n'\n    '550\\n'\n    '1000\\n'\n    '1400\\n'\n    '1500\\n'\n) == '2930'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\n'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n100\\n1400\\n1500') == 'Impossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930\\n'\n\nimport math"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2930\\n\", \"The solution for this problem is incorrect. Please see the example test cases and the problem statement for the correctness.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"2\", \"Output should be 2, but it's actually {}\".format(solution(sample_input))"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect. Please check the implementation and the input.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"10000 20000 30000\\n1000\\n2000\\n3000\") == \"1\"\nassert solution(\"1 10 20\\n0\\n1\\n0\") == \"1\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == 2\nassert solution(\"1 2 3\\n1\\n0\\n2\") == 1\nassert solution(\"1 2 3\\n1\\n1\\n3\") == 2\nassert solution(\"1 2 3\\n1\\n2\\n4\") == 2\nassert solution(\"1 2 3\\n1\\n3\\n5\") == 2\nassert solution(\"1 2 3\\n1\\n4\\n6\") == 3\nassert solution(\"1 2 3\\n1\\n5\\n7\") == 3\nassert solution(\"1 2 3\\n1\\n6\\n8\") == 4\nassert solution(\"1 2 3\\n1\\n7\\n9\") == 4\nassert solution(\"1 2 3\\n1\\n8\\nA\") == 4\nassert solution(\"1 2 3\\n1\\nA\\nB\") == 4\nassert solution(\"1 2 3\\n2\\nB\\nC\") == 5\nassert solution(\"1 2 3\\n2\\nC\\nD\") == 5\nassert solution(\"1 2 3\\n2\\nD\\nE\") == 5\nassert solution(\"1 2 3\\n2\\nE\\nF\") == 6\nassert solution(\"1 2 3\\n2\\nF\\nG\") == 6\nassert solution(\"1 2 3\\n2\\nG\\nH\") == 7\nassert solution(\"1 2 3\\n2\\nH\\nI\") == 7\nassert solution(\"1 2 3\\n2\\nI\\nJ\") == 8\nassert solution(\"1 2 3\\n2\\nJ\\nK\") == 8\nassert solution(\"1 2 3\\n2\\nK\\nL\") == 9\nassert solution(\"1 2 3\\n2\\nL\\nM\") == 9\nassert solution(\"1 2 3\\n2\\nM\\nN\") == 10\nassert solution(\"1 2 3\\n2\\nN\\nO\") == 10\nassert solution(\"1 2 3\\n2\\nO\\nP\") == 11\nassert solution(\"1 2 3\\n2\\nP\\nQ\") == 11\nassert solution(\"1 2 3\\n2\\nQ\\nR\") == 11\nassert solution(\"1 2 3\\n2\\nR\\nS\") == 12\nassert solution(\"1 2 3\\n2\\nS\\nT\") == 12\nassert solution(\"1 2 3\\n2\\nT\\nU\") == 13\nassert solution(\"1 2 3\\n2\\nU\\nV\") == 13\nassert solution(\"1 2 3\\n2\\nV\\nW\") == 14\nassert solution(\"1 2 3\\n2\\nW\\nX\") == 14\nassert solution(\"1 2 3\\n2\\nX\\nY\") == 15\nassert solution(\"1 2 3\\n2\\nY\\nZ\") == 15\nassert solution(\"1 2 3\\n2\\nZ\\nA\") == 16\nassert solution(\"1 2 3\\n2\\nA\\nB\") == 16\nassert solution(\"1 2 3\\n3\\nB\\nC\") == 17\nassert solution(\"1 2 3\\n3\\nC\\nD\") == 17\nassert solution(\"1 2 3\\n3\\nD\\nE\") == 17\nassert solution(\"1 2 3\\n3\\nE\\nF\") == 18\nassert solution(\"1 2 3\\n3\\nF\\nG\") == 18\nassert solution(\"1 2 3\\n3\\nG\\nH\") == 19\nassert solution(\"1 2 3\\n3\\nH\\nI\") == 19\nassert solution(\"1 2 3\\n3\\nI\\nJ\") == 20\nassert solution(\"1 2 3\\n3\\nJ\\nK\") == 20\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"tests/input.txt\", \"r\")) == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\", \"Solution is incorrect\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == 10\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"6 6\\n1 -1\\n2 2\\n3 -1\\n4 1\") == \"20\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10\\n'\nassert solution('10') == '10\\n'\nassert solution('5 5\\n2 2\\n-3 2\\n5 0') == '20\\n'\nassert solution('1 1\\n1 1\\n0 0\\n0 0') == '10\\n'\nassert solution('5 5\\n1 1\\n-1 1\\n1 1') == '10\\n'\nassert solution('3 2\\n-10 10\\n1 1\\n1 1\\n-1 1') == '30\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '10\\n'\nassert solution('10 5\\n-10 10\\n10 5\\n10 5\\n10 5') == '20\\n'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10\nassert solution('5 10\\n5 5\\n4 5\\n3 5\\n1 1') == 15\nassert solution('2 5\\n1 2\\n3 3\\n4 4\\n5 5') == 0\nassert solution('10 10\\n10 10\\n10 10\\n10 10\\n10 10') == 0\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 0\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 0\nassert solution('5 4\\n1 2\\n4 4\\n5 5\\n6 6') == 0\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 0\nassert solution('5 10\\n5 5\\n4 5\\n3 5\\n1 1') == 0\nassert solution('2 5\\n1 2\\n3 3\\n4 4\\n5 5') == 0\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 0\nassert solution('2 2\\n1 2\\n2 2\\n3 3\\n4 4') == 12"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\nprint('All test cases passed')"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3100\\n\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n5\") == \"4400\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    2\n    3 4 400\n    4 5 400\n    3\n    4 5 300\n    5 6 600\n    6 7 700\n    7 8 800\n    8 9 900\n    9 10 1000\n    10 11 1100\n    11 12 1200\n    12 13 1300\n    13 14 1400\n    14 15 1500\n    15 16 1600\n    16 17 1700\n    17 18 1800\n    18 19 1900\n    19 20 2000\n    20 21 2100\n    21 22 2200\n    22 23 2300\n    23 24 2400\n    24 25 2500\n    25 26 2600\n    26 27 2700\n    27 28 2800\n    28 29 2900\n    29 30 3000\n    30 31 3100\n    31 32 3200\n    32 33 3300\n    33 34 3400\n    34 35 3500\n    35 36 3600\n    36 37 3700\n    37 38 3800\n    38 39 3900\n    39 40 4000\n    40 41 4100\n    41 42 4200\n    42 43 4300\n    43 44 4400\n    44 45 4500\n    45 46 4600\n    46 47 4700\n    47 48 4800\n    48 49 4900\n    49 50 5000\n    50 51 5100\n    51 52 5200\n    52 53 5300\n    53 54 5400\n    54 55 5500\n    55 56 5600\n    56 57 5700\n    57 58 5800\n    58 59 5900\n    59 60 6000\n    60 61 6100\n    61 62 6200\n    62 63 6300\n    63 64 6400\n    64 65 6500\n    65 66 6600\n    66 67 6700\n    67 68 6800\n    68 69 6900\n    69 70 7000\n    70 71 7100\n    71 72 7200\n    72 73 7300\n    73 74 7400\n    74 75 7500\n    75 76 7600\n    76 77 7700\n    77 78 7800\n    78 79 7900\n    79 80 8000\n    80 81 8100\n    81 82 8200\n    82 83 8300\n    83 84 8400\n    84 85 8500\n    85 86 8600\n    86 87 8700\n    87 88 8800\n    88 89 8900\n    89 90 9000\n    90 91 9100\n    91 92 9200\n    92"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\"\n) == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3100\"\nprint(\"You are here!\")"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3100\\n\", \"Test Failed\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0\nassert solution == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n\") == \"2\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n\") == \"3\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n\") == \"4\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n\") == \"5\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n\") == \"6\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n\") == \"7\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n1 4\\n\") == \"8\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n1 4\\n0 0\\n\") == \"9\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n1 4\\n0 0\\n1 5\\n\") == \"10\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n1 4\\n0 0\\n1 5\\n1 5\\n\") == \"11\\n\"\nassert solution(\"2 3\\n0 1\\n1 2\\n0 2\\n1 0\\n1 1\\n0 0\\n1 2\\n1 3\\n1 4\\n0 0\\n1 5\\n1 5\\n1 5\\n\") == \"12\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"3 1\\n0 1\\n0 2\\n1 2\\n\") == \"0\\n\"\nassert solution(\"4 2\\n0 1\\n1 1\\n2 2\\n3 2\\n\") == \"2\\n\"\nassert solution(\"5 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n\") == \"4\\n\"\nassert solution(\"6 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n\") == \"4\\n\"\nassert solution(\"7 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n\") == \"6\\n\"\nassert solution(\"8 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n\") == \"6\\n\"\nassert solution(\"9 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n\") == \"8\\n\"\nassert solution(\"10 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n\") == \"8\\n\"\nassert solution(\"11 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n\") == \"10\\n\"\nassert solution(\"12 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n\") == \"10\\n\"\nassert solution(\"13 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n\") == \"12\\n\"\nassert solution(\"14 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n\") == \"12\\n\"\nassert solution(\"15 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n\") == \"14\\n\"\nassert solution(\"16 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n\") == \"14\\n\"\nassert solution(\"17 2\\n0 1\\n1 1\\n2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(2) + \" \" + str(1)) == \"0\\n\"\nassert solution(str(2) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(1)) == \"0\\n\"\nassert solution(str(2) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(0)) == \"1\\n\"\nassert solution(str(2) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(0) + \" \" + str(0)) == \"2\\n\"\nassert solution(str(2) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(0) + \" \" + str(0)) == \"3\\n\"\nassert solution(str(2) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(1) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(0) + \" \" + str(0) + \"\\n\" + str(1) + \" \" + str(0)) == \"4\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\") == 0\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\nassert solution(\"2 1\\n1 2\\n0 1\") == \"0\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n1 0\\n0 2\") == \"4\\n\"\nassert solution(\"5 3\\n0 1\\n1 2\\n1 0\\n0 2\\n1 3\\n2 3\\n0 4\\n1 4\\n2 4\\n3 4\\n0 5\\n1 5\\n2 5\\n3 5\\n4 5\\n0 6\\n1 6\\n2 6\\n3 6\\n4 6\\n5 6\\n0 7\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n0 8\\n1 8\\n2 8\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n0 9\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 9\") == \"210\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == 10, \"Test case 1 failed\"\nassert solution(\"7 3\") == 12, \"Test case 2 failed\"\nassert solution(\"10 20\") == 2, \"Test case 3 failed\"\nassert solution(\"21 42\") == 21, \"Test case 4 failed\"\nassert solution(\"2 3\") == 4, \"Test case 5 failed\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution( \"\"\"\n1 10\n\"\"\") == \"10\\n\"\nassert solution( \"\"\"\n73 100\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n1 1\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n73 73\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n21 1\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n1755 1984\n\"\"\") == \"2\\n\"\nassert solution( \"\"\"\n2015 2015\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n21 1\n\"\"\") == \"1\\n\"\nassert solution( \"\"\"\n42 42\n\"\"\") == \"1\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 10\") == \"10\"  # sample output"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect: expected {expected_solution}, got {solution}\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"10\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([0, 0, 1000, 0, 1000, 1000]) == 0\nassert solution([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 0\nassert solution('5\\n1000 0\\n1000 500\\n1000 1000\\n0 0') == 2\nassert solution('6\\n1000 0\\n-1000 -1000\\n-1000 1000\\n-1000 500') == 6\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 0, \"Expected 0, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\"  # Test case 1\nassert solution(stdin) == \"0\\n\"  # Test case 2\nassert solution(stdin) == \"0\\n\"  # Test case 3\nassert solution(stdin) == \"0\\n\"  # Test case 4\nassert solution(stdin) == \"0\\n\"  # Test case 5"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Test Case 1\"\nassert solution(\"1001 1001\\n1001 1001\\n1001 1001\\n1001 1001\") == 0, \"Test Case 2\"\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 1000\\n1000 0\\n1000 0\\n1000 0\\n1000 0\") == 1, \"Test Case 3\"\nassert solution(\"1000 -20000\\n1000 -10000\\n1000 20000\\n1000 10000\\n1000 20000\\n1000 20000\\n1000 20000\\n1000 20000\\n1000 20000\") == 2, \"Test Case 4\"\nassert solution(\"1000 0\\n1000 0\\n1000 0\\n1000 0\\n1000 0\\n1000 0\\n1000 0\\n1000 0\\n1000 0\") == 3, \"Test Case 5\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0\\n'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    0 1 0.5\n    \"\"\"\n) == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: {solution(input())}, expected {output()}\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.500000000 1.000000000\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"The output is '{solution(stdin)}', but the expected output is '{expected}'\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n0.500000000 1.000000000\n\"\"\"\n\nsolution = \"\"\"\n0.500000000 1.000000000\n\"\"\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"7\", \"The output is incorrect.\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\nassert solution(\"5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"2\"\nassert solution(\"2\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"4\"\nassert solution(\"4\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\") == \"6\"\nassert solution(\"6\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"6\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7\\n', \"The solution should be 7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\na b c\\n4-c 5-b\\n6-a 2-b\\n7-d 8-c\\n1-a\\naba\\nbbb\\ncde\\n0') == '9-b\\n8-a\\n9-c\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\nabc\\nab\\n0\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\nabc\\nab\\n0\\n1\\n') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\nabc\\nab\\n0\\n1\\n2\\ndef\\ndef\\n0') == '9-b\\n8-a\\n9-c\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [9, 8, \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [9, 8, \"def\"]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\na = a\\nb = b\\n\\nfor i in range(1, int(stdin) + 1):\\n    time, result = map(int, stdin.readline().split())\\n    if i == 1:\\n        if result == a and result == b:\\n            result = a\\n\\n    if time == 5 and result == a:\\n        result = a\\n    elif time == 6 and result == b:\\n        result = b\\n    elif time == 3 and result == a and result!= b:\\n        result = a\\n    elif time == 5 and result == b:\\n        result = a\\n    elif time == 6 and result == a and result!= a:\\n        result = a\\n    elif time == 2 and result == a and result!= b:\\n        result = b\\n    elif time == 4 and result == b:\\n        result = a\\n    elif time == 3 and result == b and result!= a:\\n        result = a\\n    elif time == 5 and result == a:\\n        result = a\\n    elif time == 6 and result == b and result!= b:\\n        result = a\\n    elif time == 2 and result == b and result!= a:\\n        result = b\\n    elif time == 4 and result == a:\\n        result = a\\n    elif time == 6 and result == a and result!= a:\\n        result = b\\n    elif time == 2 and result == a and result!= a:\\n        result = a\\n    elif time == 3 and result == a and result!= b:\\n        result = b\\n    elif time == 5 and result == b:\\n        result = b\\n    elif time == 6 and result == a and result!= b:\\n        result = a\\n    elif time == 2 and result == b and result!= a:\\n        result = a\\n    elif time == 4 and result == a:\\n        result = b\\n    elif time == 3 and result == a and result!= a:\\n        result = a\\n    elif time == 5 and result == b:\\n        result = b\\n    elif time == 6 and result == b and result!= a:\\n        result = b\\n    elif time == 2 and result == a and result!= a:\\n        result = a\\n    elif time == 4 and result == b:\\n        result = a\\n    elif time == 6 and result == b and result!= b:\\n        result = a\\n    else:\\n        result = a\\n\\nreturn '\\n'.join(map(str, result))\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"2\\nb c\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, \"Test case failed\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"9-b\\n8-a\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"9-b\\n8-a\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, \"Test case failed.\" for input_str, output_str in [\n    (\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n    (\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n    (\"1\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n    (\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n    (\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n    (\"1\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\", \"9-b\\n8-a\\ndef solution(stdin):\\n\\tpass\\n\"),\n]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n1') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n2') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n3') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n4') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n5') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n6') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n7') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n8') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n9') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\na') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nb') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nc') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nd') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\ne') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nf') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\ng') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nh') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\ni') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nj') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\nk"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\"\"\n3246R3246\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3246R3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n21"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n' +\n                  'echo\\n' +\n                  '1\\n' +\n                  'echoecho') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    1\n    2\n    3\n    4\n    5\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    ''') == '''\n    3246R3246\n    3246R3246\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    6\n    "
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\necho\n1\nechoecho\n\"\"\") == \"3246R3246\"\n\nassert solution(\"\"\"\n2\nhello\n2\nworld\n3\ntest\n3\nexample\n4\napple\n5\nbanana\n6\norange\n\"\"\") == \"R3246U3246\"\n\nassert solution(\"\"\"\n1\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3246R3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'R3246R'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n1 2\\n1 3\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\nassert solution(4, 1) == 'NO'\nassert solution(5, 1) == 'NO'\nassert solution(6, 1) == 'NO'\nassert solution(7, 1) == 'NO'\nassert solution(8, 1) == 'NO'\nassert solution(9, 1) == 'NO'\nassert solution(10, 1) == 'NO'\nassert solution(11, 1) == 'NO'\nassert solution(12, 1) == 'NO'\nassert solution(13, 1) == 'NO'\nassert solution(14, 1) == 'NO'\nassert solution(15, 1) == 'NO'\nassert solution(16, 1) == 'NO'\nassert solution(17, 1) == 'NO'\nassert solution(18, 1) == 'NO'\nassert solution(19, 1) == 'NO'\nassert solution(20, 1) == 'NO'\nassert solution(21, 1) == 'NO'\nassert solution(22, 1) == 'NO'\nassert solution(23, 1) == 'NO'\nassert solution(24, 1) == 'NO'\nassert solution(25, 1) == 'NO'\nassert solution(26, 1) == 'NO'\nassert solution(27, 1) == 'NO'\nassert solution(28, 1) == 'NO'\nassert solution(29, 1) == 'NO'\nassert solution(30, 1) == 'NO'\nassert solution(31, 1) == 'NO'\nassert solution(32, 1) == 'NO'\nassert solution(33, 1) == 'NO'\nassert solution(34, 1) == 'NO'\nassert solution(35, 1) == 'NO'\nassert solution(36, 1) == 'NO'\nassert solution(37, 1) == 'NO'\nassert solution(38, 1) == 'NO'\nassert solution(39, 1) == 'NO'\nassert solution(40, 1) == 'NO'\nassert solution(41, 1) == 'NO'\nassert solution(42, 1) == 'NO'\nassert solution(43, 1) == 'NO'\nassert solution(44, 1) == 'NO'\nassert solution(45, 1) == 'NO'\nassert solution(46, 1) == 'NO'\nassert solution(47, 1) == 'NO'\nassert solution(48, 1) == 'NO'\nassert solution(49, 1) == 'NO'\nassert solution(50, 1) == 'NO'\nassert solution(51, 1) == 'NO'\nassert solution(52, 1) == 'NO'\nassert solution(53, 1) == 'NO'\nassert solution(54, 1) == 'NO'\nassert solution(55, 1) == 'NO'\nassert solution(56, 1) == 'NO'\nassert solution(57, 1) == 'NO'\nassert solution(58, 1) == 'NO'\nassert solution(59, 1) == 'NO'\nassert solution(60, 1) == 'NO'\nassert solution(61, 1) == 'NO'\nassert solution(62, 1) == 'NO'\nassert solution(63, 1) == 'NO'\nassert solution(64, 1) == 'NO'\nassert solution(65, 1) == 'NO'\nassert solution(66, 1) == 'NO'\nassert solution(67, 1) == 'NO'\nassert solution(68, 1) == 'NO'\nassert solution(69, 1) == 'NO'\nassert solution(70, 1) == 'NO'\nassert solution(71, 1) == 'NO'\nassert solution(72, 1) == 'NO'\nassert solution(73, 1) == 'NO'\nassert solution(74, 1) == 'NO'\nassert solution(75, 1) == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == 'YES\\n1 2\\n1 3\\n'\nassert solution(\"1 1\") == 'YES\\n1 1\\n'\nassert solution(\"5 2\") == 'NO\\n'\nassert solution(\"5 3\") == 'NO\\n'\nassert solution(\"6 1\") == 'NO\\n'\nassert solution(\"10 1\") == 'NO\\n'\nassert solution(\"10 2\") == 'NO\\n'\nassert solution(\"10 3\") == 'NO\\n'\nassert solution(\"10 4\") == 'NO\\n'\nassert solution(\"10 5\") == 'NO\\n'\nassert solution(\"10 6\") == 'NO\\n'\nassert solution(\"10 7\") == 'NO\\n'\nassert solution(\"10 8\") == 'NO\\n'\nassert solution(\"10 9\") == 'NO\\n'\nassert solution(\"10 10\") == 'YES\\n10 2\\n10 3\\n10 4\\n10 5\\n10 6\\n10 7\\n10 8\\n10 9\\n10 10\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\nassert solution(4, 1) == 'NO'\nassert solution(1, 1) == 'YES\\n1 1'\nassert solution(4, 2) == 'YES\\n1 1\\n1 3'\nassert solution(6, 2) == 'NO'\nassert solution(4, 3) == 'YES\\n1 1\\n1 2\\n1 3'\nassert solution(3, 3) == 'NO'\nassert solution(5, 2) == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"Incorrect output\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"Test failed\"\nprint(\"Test passed\")\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"Solution should return 176.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"5\\n1\\n10 5\\n10 10\\n5 5\\n5 5\") == 0"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\"\nassert solution(12) == \"016\"\nassert solution(100) == \"160\"\nassert solution(1000) == \"1600\"\nassert solution(10000000) == \"16000000\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"12\\n\"\nassert solution(\"10\") == \"12\\n\"\nassert solution(\"50\") == \"016\\n\"\nassert solution(\"100\") == \"016\\n\"\nassert solution(\"1000\") == \"016\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\", \"Output:12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"100\") == \"16\"\nassert solution(\"1000\") == \"16\"\nassert solution(\"10000\") == \"16\"\nassert solution(\"100000\") == \"16\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"12\\n\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '016'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == '12'\nprint('All tests passed.')"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"10\") == \"168\"\nassert solution(\"15\") == \"376\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\", \"Test 1 failed\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the length of the sequence: \")) == \"Minimum sum of effort required to make the string impossible to be balanced by Bruce: 480\\n\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(input_data, output_data)\n\ninput_data = [\n    (4, 1, ((((()), (((), ((), ), ((), ), ))))),\n    (5, 2, ((((((), ((), ), ((), ), ((), ), )), ((), )), ((), ))))\n]\noutput_data = [480, 'def solution(stdin: str) -> str:\\n    pass']"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n((()\") == 480, \"Test case 1\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 2\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 3\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 4\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 5\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 6\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 7\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 8\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 9\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 10\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 11\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 12\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 13\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 14\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 15\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 16\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 17\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 18\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 19\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 20\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 21\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 22\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 23\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 24\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 25\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 26\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 27\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 28\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 29\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 30\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 31\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 32\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 33\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 34\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 35\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 36\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 37\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 38\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 39\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 40\")\nassert solution(\"4 1\\n((()\") == 480, \"Test case 41\")\nassert solution(\"4 1\\n((()"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"480\\ndef solution(stdin: str) -> str:\\n    pass\\n\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 1) == 480\nassert solution(4, 2) == 500\nassert solution(4, 3) == 520\nassert solution(4, 4) == 540\nassert solution(4, 5) == 560\nassert solution(4, 6) == 580\nassert solution(4, 7) == 600\nassert solution(4, 8) == 620\nassert solution(4, 9) == 640\nassert solution(4, 10) == 660\nassert solution(4, 11) == 680\nassert solution(4, 12) == 700\nassert solution(4, 13) == 720\nassert solution(4, 14) == 740\nassert solution(4, 15) == 760\nassert solution(4, 16) == 780\nassert solution(4, 17) == 800\nassert solution(4, 18) == 820\nassert solution(4, 19) == 840\nassert solution(4, 20) == 860\nassert solution(4, 21) == 880\nassert solution(4, 22) == 900\nassert solution(4, 23) == 920\nassert solution(4, 24) == 940\nassert solution(4, 25) == 960\nassert solution(4, 26) == 980\nassert solution(4, 27) == 1000\nassert solution(4, 28) == 1020\nassert solution(4, 29) == 1040\nassert solution(4, 30) == 1060\nassert solution(4, 31) == 1080\nassert solution(4, 32) == 1100\nassert solution(4, 33) == 1120\nassert solution(4, 34) == 1140\nassert solution(4, 35) == 1160\nassert solution(4, 36) == 1180\nassert solution(4, 37) == 1200\nassert solution(4, 38) == 1220\nassert solution(4, 39) == 1240\nassert solution(4, 40) == 1260\nassert solution(4, 41) == 1280\nassert solution(4, 42) == 1300\nassert solution(4, 43) == 1320\nassert solution(4, 44) == 1340\nassert solution(4, 45) == 1360\nassert solution(4, 46) == 1380\nassert solution(4, 47) == 1400\nassert solution(4, 48) == 1420\nassert solution(4, 49) == 1440\nassert solution(4, 50) == 1460\nassert solution(4, 51) == 1480\nassert solution(4, 52) == 1500\nassert solution(4, 53) == 1520\nassert solution(4, 54) == 1540\nassert solution(4, 55) == 1560\nassert solution(4, 56) == 1580\nassert solution(4, 57) == 1600\nassert solution(4, 58) == 1620\nassert solution(4, 59) == 1640\nassert solution(4, 60) == 1660\nassert solution(4, 61) == 1680\nassert solution(4, 62) == 1700\nassert solution(4, 63) == 1720\nassert solution(4, 64) == 1740\nassert solution(4, 65) == 1760\nassert solution(4, 66) == 1780\nassert solution(4,"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\((()480617-570928)') == 480, \"The given solution is incorrect.\"\nprint(\"Correct Solution\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == 480"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"The solution is not correct.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'The solution is not implemented'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('12\\n1 1 2\\n2 3 4\\n3 5 6\\n4 7 8\\n5 9 10\\n6 11 12\\n7 13 14\\n8 15 16\\n9 17 18\\n10 19 20\\n11 21 22\\n12 23 24\\n13 25 26\\n14 27 28\\n15 29 30\\n16 31 32\\n17 33 34\\n18 35 36\\n19 37 38\\n20 39 40\\n21 41 42\\n22 43 44\\n23 45 46\\n24 47 48\\n25 49 50\\n26 51 52\\n27 53 54\\n28 55 56\\n29 57 58\\n30 59 60\\n31 61 62\\n32 63 64\\n33 65 66\\n34 67 68\\n35 69 70\\n36 71 72\\n37 73 74\\n38 75 76\\n39 77 78\\n40 79 80\\n41 81 82\\n42 83 84\\n43 85 86\\n44 87 88\\n45 89 90\\n46 91 92\\n47 93 94\\n48 95 96\\n49 97 98\\n50 99 100' == '')"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 "
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4'\nassert solution('3 1 3 5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5') == '5'\nassert solution('1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9') == '5'\nassert solution('2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 2 2 2\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"The solution is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"No solution found\"\nassert solution(\"\") == \"No solution found\"\nassert solution(\"1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n5 10\\n5 15\\n5 20\\n1 1 1\\n1 2 1\\n2 1 1\\n2 2 1\\n3 3 1\\n3 4 1\\n4 3 1\\n4 4 1\") == \"35 40 37 28 31\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution does not match.\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '35 39 36 27 29', 'Test failed'\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n    ''') == '35 39 36 27 29\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\nprint(solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\"))"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\nassert solution(\"3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 2 1\\n') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\n\"\nassert solution(\"10 10\\n9 8 7\") == \"111 625\\n\"\nassert solution(\"4 5\\n3 4 2 1\") == \"0 2\\n\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == 0 672"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\n\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0  # Expected Output: 0"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1') == 0\nassert solution('3 2 1') == 672"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2.500000\"\n\nfrom typing import List"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\nImpossible\\n\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.500000\", \"Incorrect output\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\nImpossible\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(5) == 3\nassert solution(6) == 4\nassert solution(7) == 4\nassert solution(8) == 5\nassert solution(9) == 5\nassert solution(10) == 5"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 3 4\") == 3, \"Incorrect Output\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5 3 4') == '3\\ndef solution(stdin: str) -> str:\\npass\\n'\nassert solution('5\\n10 20 30\\n15 25 35') == '5\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\\n\" + \"def solution(stdin: str) -> str:\\n\"\nassert solution(10) == \"3\\n\" + \"def solution(stdin: str) -> str:\\n\"\nassert solution(30) == \"10\\n\" + \"def solution(stdin: str) -> str:\\n\"\nassert solution(50) == \"10\\n\" + \"def solution(stdin: str) -> str:\\n\"\nassert solution(100) == \"10\\n\" + \"def solution(stdin: str) -> str:\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n5 3 4') == '3\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0'\nassert solution('5\\n3 3 4\\n1 2 1 1') == '3\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2'\nassert solution('1\\n2 2 2\\n2 2 2\\n2 2 2\\n2 2 2') == '3\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2'\nassert solution('5\\n3 3 4\\n1 2 1 1\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2') == '3\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2\\n2 2 2 2 2'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"0\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The solution is not correct. Output: {output}, Expected: {output}\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Your code is incorrect.\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == 2\nassert solution(\"10 10 1\") == 2\nassert solution(\"1 5 5\") == 1\nassert solution(\"10 2 2\") == 2\nassert solution(\"10 10 2\") == 2\nassert solution(\"10 10 10\") == 2\nassert solution(\"1 1 1\") == 1"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nassert solution(\"3 2 3\") == \"1\\n\"\nassert solution(\"4 4 4\") == \"0\\n\"\nassert solution(\"5 2 1\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"The output is incorrect.\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '2'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 5\") == \"7\\n\"  # Test case 1\nassert solution(\"12 23\") == \"10\\n\"  # Test case 2\nassert solution(\"1000000000000000000000000000000000\") == \"9007199254740992\\n\"  # Test case 3\nassert solution(\"10000000000000000000000000000000000\") == \"9007199254740992\\n\"  # Test case 4\nassert solution(\"9223372036854775807\") == \"2147483647\\n\"  # Test case 5"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '7', \"The output should be 7 but it is {} instead.\".format(solution(sample_input))"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\n\nimport math"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\n\", \"The correct output should be 7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\nassert solution(\"5\\n10 20 30 40\") == \"21\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n1 3 5\") == \"7\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'fred jetsons\\njohn jets\\nruth rockets\\n', \"Your solution is not correct.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'fred jetsons\\njohn jets\\nruth rockets\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == 'fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\npass\\n'\n\nassert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n5\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'Impossible.'\n\nassert solution('3\\nfred cat 1 jets jetsons\\njohn dog 1 jets rockets\\nmary dog 1 jets rockets\\nfred cat 1 rockets\\njohn dog 1 rockets\\nmary dog 1 rockets\\n') == 'Impossible.'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n\"\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\\n\\n\\n\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\n\"\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible\\nImpossible"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(5) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\"\nassert solution(6) == \"fred jets\\njohn jetsons\\nruth rockets\\nImpossible\"\nassert solution(7) == \"fred jets\\njohn jets\\nruth rockets\\nImpossible\"\nassert solution(8) == \"fred jets\\njohn jets\\nruth rockets\\nImpossible\"\nassert solution(9) == \"fred jets\\njohn jets\\nruth rockets\\nImpossible\"\nassert solution(10) == \"fred jets\\njohn jets\\nruth rockets\\nImpossible\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 2 1\\n', \"Test Case 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == []"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == [\"1 2 1\"]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"2 2 2\\n\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"2 2 2\\n\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 1 1\\n\"\nassert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"2 2 2\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 2 1\\n\", \"The output should be the correct value.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3]) == \"1\\n2\\n1\\n\"\nassert solution([4, 3, -10, -2, 3]) == \"1\\n2\\n1\\n\"\nassert solution([1000000, 1000000, 1000000, 1000000]) == \"1000000\\n1000000\\n1000000\\n1000000\\n\"\nassert solution([1000000, 1000000, 1000000, 1000000, 1000000, 1000000]) == \"1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n\"\nassert solution([1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000]) == \"1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2.125\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2.125\\n'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.125\", \"Incorrect solution\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    \"\"\"\n) == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2.125\", \"Your solution is incorrect\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\") == 2.125\nprint(\"All tests passed!\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\nassert solution(\"2\\n1 1 7\\n3 2 3\") == \"2.10714\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n\"\"\") == 2.125"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass\n'''"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"abc*def\") == [\"abc.c\", \"def.c\"]\nassert solution(\"a*b\") == [\"a.c\", \"b.c\"]\nassert solution(\"*\") == [\"main.c\", \"a.c\", \"b.c\", \"c.c\", \"d.c\", \"e.c\", \"f.c\", \"g.c\", \"h.c\", \"i.c\", \"j.c\", \"k.c\", \"l.c\", \"m.c\", \"n.c\", \"o.c\", \"p.c\", \"q.c\", \"r.c\", \"s.c\", \"t.c\", \"u.c\", \"v.c\", \"w.c\", \"x.c\", \"y.c\", \"z.c\"]\nassert solution(\"**\") == [\"main.c\", \"a.c\", \"b.c\", \"c.c\", \"d.c\", \"e.c\", \"f.c\", \"g.c\", \"h.c\", \"i.c\", \"j.c\", \"k.c\", \"l.c\", \"m.c\", \"n.c\", \"o.c\", \"p.c\", \"q.c\", \"r.c\", \"s.c\", \"t.c\", \"u.c\", \"v.c\", \"w.c\", \"x.c\", \"y.c\", \"z.c\", \"abc.c\", \"def.c\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('main.c') =='main.c'\nassert solution('main*.c') =='main.c'\nassert solution('*.c') =='main.c'\nassert solution('*.o') == 'a.out'\nassert solution('a*b') == 'a.out'\nassert solution('*a*b') == 'a.out'\nassert solution('*') =='main.c'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''*.*''', 4, '''main.c\na.out\nreadme\nyacc''') == ['main.c', 'a.out']\n\nassert solution('''*.*''', 5, '''main.c\na.out\nreadme\nyacc\nbaz.c\nbar.txt\nquux.py''') == ['main.c', 'a.out', 'baz.c', 'bar.txt']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"main.c\\na.out\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=f) == f.strip().split('\\n') for f in [open('sample_input.txt', 'r').read(), open('sample_input.txt', 'w').read()]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('a*.out') == ['a.out']\nassert solution('abc*') == ['abc', 'def', 'ghi']\nassert solution('abc*def') == ['abc', 'def']\nassert solution('abc*defg') == ['abc', 'def', 'ghi']\nassert solution('*def') == ['def']\nassert solution('abc*def*ghi') == ['abc', 'def', 'ghi']\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) =='main.c\\na.out\\nreadme\\nyacc\\n'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"a*.o\") == \"a.out\"\nassert solution(\"a*.c\") == \"a.out\"\nassert solution(\"a*.c.o\") == \"a.out\"\nassert solution(\"*.*\") == \"main.c\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Incorrect output. Expected: '{expected_output}', Received: '{solution(sample_input)}'\"\n\nsample_input = '*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\\n'\nexpected_output ='main.c\\na.out\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"  # correct\n\nfrom typing import List"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0.500000\\n') == '0.500000\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.500000\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"  # correct solution\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.0\", \"Expected output: 0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    0 49.9\n    1 33.3\n    2 12.5\n    3 66.7\n    4 25.0\n    5 100.0\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    0.1 49.9\n    1.2 33.3\n    2.3 12.5\n    3.4 66.7\n    4.5 25.0\n    5.6 100.0\n    \"\"\"\n) == \"1.667\"\n\nassert solution(\n    \"\"\"\n    0.1 49.9\n    1.2 33.3\n    2.3 12.5\n    3.4 66.7\n    4.5 25.0\n    5.6 100.0\n    6.7 90.0\n    7.8 75.0\n    8.9 50.0\n    9.0 25.0\n    10.0 0.0\n    \"\"\"\n) == \"2.667\"\n\nassert solution(\n    \"\"\"\n    0.1 49.9\n    1.2 33.3\n    2.3 12.5\n    3.4 66.7\n    4.5 25.0\n    5.6 100.0\n    6.7 90.0\n    7.8 75.0\n    8.9 50.0\n    9.0 25.0\n    10.0 0.0\n    11.1 5.0\n    12.2 10.0\n    13.3 15.0\n    14.4 20.0\n    15.5 25.0\n    16.6 30.0\n    17.7 35.0\n    18.8 40.0\n    19.9 45.0\n    20.0 50.0\n    \"\"\"\n) == \"3.667\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == \"0.0\\n\", \"Test Case 1\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Expected 0.0, got {}\".format(solution(\"0 49.9\"))"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open('input.txt', 'r').read()) == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"0 49.9\") == \"0.0\"\nassert solution(stdin=\"10 49.9\") == \"3.2\"\nassert solution(stdin=\"100 49.9\") == \"5.0\"\nassert solution(stdin=\"100 49.95\") == \"5.0\"\nassert solution(stdin=\"100 50\") == \"5.0\"\nassert solution(stdin=\"100 50.0\") == \"5.0\"\nassert solution(stdin=\"100 50.1\") == \"5.1\"\n\nfrom typing import List"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='0 49.9\\n') == '0.0\\n'\nassert solution(stdin='0 50.0\\n') == '0.0\\n'\nassert solution(stdin='0 50.1\\n') == '0.0\\n'\nassert solution(stdin='0 50.9\\n') == '0.0\\n'\nassert solution(stdin='0 51.0\\n') == '0.0\\n'\nassert solution(stdin='0 51.1\\n') == '0.0\\n'\nassert solution(stdin='0 51.9\\n') == '0.0\\n'\nassert solution(stdin='0 52.0\\n') == '0.0\\n'\nassert solution(stdin='0 52.1\\n') == '0.0\\n'\nassert solution(stdin='0 52.9\\n') == '0.0\\n'\nassert solution(stdin='0 53.0\\n') == '0.0\\n'\nassert solution(stdin='0 53.1\\n') == '0.0\\n'\nassert solution(stdin='0 53.9\\n') == '0.0\\n'\nassert solution(stdin='0 54.0\\n') == '0.0\\n'\nassert solution(stdin='0 54.1\\n') == '0.0\\n'\nassert solution(stdin='0 54.9\\n') == '0.0\\n'\nassert solution(stdin='0 55.0\\n') == '0.0\\n'\nassert solution(stdin='0 55.1\\n') == '0.0\\n'\nassert solution(stdin='0 55.9\\n') == '0.0\\n'\nassert solution(stdin='0 56.0\\n') == '0.0\\n'\nassert solution(stdin='0 56.1\\n') == '0.0\\n'\nassert solution(stdin='0 56.9\\n') == '0.0\\n'\nassert solution(stdin='0 57.0\\n') == '0.0\\n'\nassert solution(stdin='0 57.1\\n') == '0.0\\n'\nassert solution(stdin='0 57.9\\n') == '0.0\\n'\nassert solution(stdin='0 58.0\\n') == '0.0\\n'\nassert solution(stdin='0 58.1\\n') == '0.0\\n'\nassert solution(stdin='0 58.9\\n') == '0.0\\n'\nassert solution(stdin='0 59.0\\n') == '0.0\\n'\nassert solution(stdin='0 59.1\\n') == '0.0\\n'\nassert solution(stdin='0 59.9\\n') == '0.0\\n'\nassert solution(stdin='0 60.0\\n') == '0.0\\n'\nassert solution(stdin='0 60.1\\n') == '0.0\\n'\nassert solution(stdin='0 60.9\\n') == '0.0\\n'\nassert solution(stdin='0 61.0\\n') == '0.0\\n'\nassert solution(stdin='0 61.1\\n') == '0.0\\n'\nassert solution(stdin='0 61.9\\n') == '0.0\\n'\nassert solution(stdin='0 62.0\\n') == '0.0\\n'\nassert solution(stdin='0 62.1\\n') == '0.0\\n'\nassert solution(stdin='0 62.9\\n') == '0.0\\n'\nassert solution(stdin='0 63.0\\n') == '0.0\\n'\nassert solution(stdin='0 63.1\\n') == '0.0\\n'\nassert solution(stdin='0 63.9\\n') == '0.0\\n'\nassert solution(stdin='0 64.0\\n') == '0.0\\n'\nassert solution(stdin='0 64.1\\n')"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Test Case 1: Expected output 0.0, but got \" + solution(\"0 49.9\")\n\nassert solution(\"0 50\") == \"0.0\", \"Test Case 2: Expected output 0.0, but got \" + solution(\"0 50\")\n\nassert solution(\"0 50.1\") == \"0.0\", \"Test Case 3: Expected output 0.0, but got \" + solution(\"0 50.1\")\n\nassert solution(\"0 50.00\") == \"0.0\", \"Test Case 4: Expected output 0.0, but got \" + solution(\"0 50.00\")\n\nassert solution(\"0 50.01\") == \"0.0\", \"Test Case 5: Expected output 0.0, but got \" + solution(\"0 50.01\")"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    1 2\n    2 3\n    3 1\n    4 1\n''') == '''\n    4 1\n    2 1\n    3 2\n    1 3\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Expected: {expected_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    1 2\n    2 3\n    3 1\n    4 1\n''') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == [\"4 1\", \"2 1\", \"3 2\", \"1 3\"]\nassert solution(\"1 1\\n1 2\") == [\"1 1\", \"1 2\"]\nassert solution(\"2 1\\n3 2\\n4 3\\n5 4\\n5 3\\n6 2\") == [\"2 1\", \"3 2\", \"4 3\", \"5 4\", \"5 3\", \"6 2\"]"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n    1 2\n    2 3\n    3 1\n    4 1\n    \"\"\") == \"\"\"\n    1 2\n    2 3\n    3 1\n    4 1\n    \"\"\"\n\nassert solution(r\"\"\"\n    1 2\n    1 3\n    2 3\n    3 1\n    4 1\n    \"\"\") == \"\"\"\n    1 2\n    1 3\n    2 3\n    3 1\n    4 1\n    \"\"\"\n\nassert solution(r\"\"\"\n    1 1\n    2 2\n    3 3\n    4 4\n    \"\"\") == \"\"\"\n    1 1\n    2 2\n    3 3\n    4 4\n    \"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 1\\n1 4\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"6\\n1 2\\n2 3\\n3 1\\n4 1\\n5 4\\n6 5\") == \"6 5\\n2 3\\n1 4\\n1 2\\n3 1\\n5 4\"\nassert solution(\"7\\n1 2\\n2 3\\n3 1\\n4 1\\n5 4\\n6 5\\n7 6\") == \"6 5\\n2 3\\n1 4\\n1 2\\n3 1\\n5 4\"\nassert solution(\"8\\n1 2\\n2 3\\n3 1\\n4 1\\n5 4\\n6 5\\n7 6\\n8 7\") == \"7 6\\n2 3\\n1 4\\n1 2\\n3 1\\n5 4\"\nassert solution(\"9\\n1 2\\n2 3\\n3 1\\n4 1\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\") == \"8 7\\n2 3\\n1 4\\n1 2\\n3 1\\n5 4\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1\\n'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6\\n7 8 9\") == \"1\\n\"\nassert solution(\"5 1\\n1 2 3 4 5\\n3 4 5 6 7\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6\\n7 8 9\") == \"1\\n\"\nassert solution(\"5 1\\n1 2 3 4 5\\n3 4 5 6 7\") == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == 1\nprint(\"All test cases pass\")"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n10 10\\n\") == \"1\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n10 10\\n10 10\\n\") == \"2\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n10 10\\n10 10\\n10 10\\n\") == \"2\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n\") == \"3\\n\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == \"3\\n\"\nassert solution(example2) == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2 1 10\n    0 1 1 2 6\n    ''') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for input: {sample_input}, expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\nimpossible\\n\"\nassert solution(\"1 1 1 2 1\\n0 2 3 4 5\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 3\\n0 2 4 5 6\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 4\\n0 2 4 6 5\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 5\\n0 2 3 5 6\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 6\\n0 2 3 5 7\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 7\\n0 2 3 5 8\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 8\\n0 2 3 5 9\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 9\\n0 2 3 5 10\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 10\\n0 2 3 5 11\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 11\\n0 2 3 5 12\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 12\\n0 2 3 5 13\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 13\\n0 2 3 5 14\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 14\\n0 2 3 5 15\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 15\\n0 2 3 5 16\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 16\\n0 2 3 5 17\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 17\\n0 2 3 5 18\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 18\\n0 2 3 5 19\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 19\\n0 2 3 5 20\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 20\\n0 2 3 5 21\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 21\\n0 2 3 5 22\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 22\\n0 2 3 5 23\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 23\\n0 2 3 5 24\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 24\\n0 2 3 5 25\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 25\\n0 2 3 5 26\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 26\\n0 2 3 5 27\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 27\\n0 2 3 5 28\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 28\\n0 2 3 5 29\") == \"3\\n1\\n\"\nassert solution(\"1 1 1 2 29\\n0 2 3 5 30\") == \"3\\n1\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input) == solution_output, \"The solution does not match the expected output.\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('3 100\\n99 100\\n1 100\\n2 99\\n3 100') == '1\\n1 3\\n1 2'\nassert solution('4 100\\n99 100\\n1 100\\n2 99\\n3 100\\n4 100') == '1\\n1 4\\n1 3'\nassert solution('5 100\\n99 100\\n1 100\\n2 99\\n3 100\\n4 100\\n5 100') == '2\\n1 5\\n1 4'\nassert solution('6 100\\n99 100\\n1 100\\n2 99\\n3 100\\n4 100\\n5 100\\n6 100') == '1\\n1 6\\n1 5'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"3 50\\n100 30\\n50 100\") == \"3\\n1 2 3\"\nassert solution(\"2 100\\n99 1\\n1 100\") == \"\"\nassert solution(\"4 200\\n100 50\\n100 100\\n200 200\") == \"4\\n1 2 3 4\"\nassert solution(\"3 50\\n100 30\\n50 200\\n100 40\") == \"3\\n1 2 3\"\nassert solution(\"1 10\\n10 10\\n10 10\") == \"1\"\nassert solution(\"2 100\\n99 1\\n1 100\\n1 100\") == \"\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n1 2'\nassert solution() == '2\\n1 1'\nassert solution() == '1\\n'\nassert solution() == '1\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code here\\n\\ndef max_apps(stdin: str) -> str:\\n    pass\\n\\ndef install_apps(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert max_apps(\"2 100\\n99 1\\n1 99\") == \"2\"\\nassert install_apps(\"2 100\\n99 1\\n1 99\") == \"1 2\"\\nassert install_apps(\"2 100\\n99 2\\n1 99\") == \"2\"\\nassert install_apps(\"2 100\\n99 1\\n1 100\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 100\") == \"1 2\"\\nassert install_apps(\"2 100\\n99 1\\n1 99\") == \"1 2\"\\nassert install_apps(\"2 100\\n99 1\\n1 100\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 100\") == \"2\"\\nassert install_apps(\"2 100\\n99 1\\n1 99\") == \"1 2\"\\nassert install_apps(\"2 100\\n99 1\\n1 100\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 5"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"Incorrect output\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.5\", \"Incorrect output.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('H') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"Your answer should be 0.5\"\nassert solution('G\\nT\\n0.5') == '0.25', \"Your answer should be 0.25\"\nassert solution('H\\nT\\n1.0') == '0.5', \"Your answer should be 0.5\"\nassert solution('G\\nT\\n1.0') == '0.25', \"Your answer should be 0.25\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('H\\nT\\n0.5') == 0.5, \"The correct answer is 0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('H\\nT\\n0.5\\n') == 0.5\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"Test Case 1 Failed\"\nassert solution(\"H\\nT\\n0.25\") == \"0.5\", \"Test Case 2 Failed\"\nassert solution(\"HT\\nTT\\n0.25\") == \"0.75\", \"Test Case 3 Failed\"\nassert solution(\"HH\\nHH\\n0.5\") == \"0.5\", \"Test Case 4 Failed\"\nassert solution(\"HH\\nHH\\n0.25\") == \"0.25\", \"Test Case 5 Failed\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(10) == \"32\\n5 7 10 13 16 19 22 25 28 31\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == '8'\nassert solution(15) == '8'\nassert solution(20) == '1 3 5 7 9 11 13 15'\nassert solution(25) == '2 5'\nassert solution(30) == '2 5'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n\nfrom typing import List"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"10\\n1 2 4 6 8 10 12 14\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(10) == \"17\\n2 4 6 8 10 12 14 16\"\nassert solution(15) == \"30\\n2 5 10 15 20 25 30 35\"\nassert solution(20) == \"38\\n1 6 12 18 24 30 36 42\"\nassert solution(25) == \"47\\n1 7 14 21 28 35 42 49\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '''\n8\n1 3 5 7 9 11 13 15\n'''"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '8\\n1 3 5 7 9 11 13 15\\n'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"3\\n2 4 6 8\"\nassert solution(5) == \"1\\n3 5 7\"\nassert solution(6) == \"2\\n4 6 8 10\"\nassert solution(7) == \"3\\n5 7 9 11\"\nassert solution(8) == \"2\\n6 8 10 12\"\nassert solution(9) == \"4\\n7 9 11 13\"\nassert solution(10) == \"4\\n8 10 12 14\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())} should be {output}, but got {solution(input())}\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == 3\nassert solution(\"5\\n1\\n5\\n3\\n6\\n4\\n5\\n2\\n4\\n3\\n4\\n2\\n3\\n4\\n3\\n1\\n4\\n3\\n2\\n2\\n1\\n3\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n2"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5 7\") == \"3\\n1\\n0\"\nassert solution(\"3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('xorbonacci.txt', 'r')) == [3, 1, 0]\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nfor i in range(5):\n    assert solution(input()) == expected[i]"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(read_from_file(\"stdin.txt\")) == \"3\"\nassert solution(read_from_file(\"stdin2.txt\")) == \"1\"\nassert solution(read_from_file(\"stdin3.txt\")) == \"0\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"3\"\nassert solution(5) == \"1\"\nassert solution(10) == \"3\"\nassert solution(2) == \"0\"\nassert solution(3) == \"1\"\nassert solution(5) == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\", \"Input does not satisfy the requirements\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n2 1\\n1"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"2 5\\n1 1 -2 0\\n3 2 -2 0\\n4 3 -2 0\\n5 4 -2 0\\n\") == 3\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"3 2\\n1 1 -2 0\\n2 1 -2 0\") == 2\nassert solution(\"4 3\\n1 1 -2 0\\n2 1 -2 0\\n3 2 -2 0\") == 6\nassert solution(\"5 4\\n1 1 -2 0\\n2 1 -2 0\\n3 2 -2 0\\n4 3 -2 0\") == 10\nassert solution(\"6 5\\n1 1 -2 0\\n2 1 -2 0\\n3 2 -2 0\\n4 3 -2 0\\n5 4 -2 0\") == 14"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n0'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 -2 0\") == \"0\"\nassert solution(\"2 1\\n1 1 -2 0\\n1 2 -3 1\\n2 1 -4 2\") == \"0\"\nassert solution(\"2 1\\n1 1 -2 0\\n1 2 -3 1\\n2 1 -4 2\\n2 1 -3 0\") == \"1\"\nassert solution(\"3 3\\n1 1 -2 0\\n1 2 -3 1\\n2 1 -4 2\\n2 1 -3 0\\n1 1 -2 1\") == \"2\"\nassert solution(\"3 3\\n1 1 -2 0\\n1 2 -3 1\\n2 1 -4 2\\n2 1 -3 0\\n1 1 -2 1\\n1 1 -1 0\") == \"3\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '194'\nprint('Test case passed!')"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 194, \"Your solution is incorrect.\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\nassert solution('3\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '170'\nassert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\nassert solution('3\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '170'\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23''') == '''194\n2019 10 25\n2020 10 30'''"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\"\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity -5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == [\"negative-infinity\", \"0\", \"5\", \"12.5\", \"negative-infinity\", \"-5\"]\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\nnegative-infinity 0\n5 12.5\nnegative-infinity -5\n\"\"\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nassert solution(\"4 6\\n100 20000\\n200 20000\\n300 30000\\n400 40000\\n50 40000\\n75 40000\\n400 40000\") == \"IMPOSSIBLE\"\nassert solution(\"4 6\\n100 20000\\n200 20000\\n300 30000\\n400 40000\\n50 40000\\n75 40000\\n400 -40000\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '''2'''"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2\\n'\nassert solution('4 5\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == 2\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n\nprint(solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100'))"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"0 0\\nnegS 0\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 4\n    1 -2 5 200\n    -8 0 -4 -10\n    11 4 0 100\n    \"\"\"\n) == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n\nassert solution(r\"\"\"\n4 3\n-1 0 2 3\n0 0 0 0\n0 0 0 0\n\"\"\") == \"68 1\\nrotR 1 2\\nnegS 1\"\n\nassert solution(r\"\"\"\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n\"\"\") == \"345 2\\nrotS 2 3\\nnegR 2\"\n\nassert solution(r\"\"\"\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n\"\"\") == \"345 2\\nrotS 2 3\\nnegR 2\"\n\nassert solution(r\"\"\"\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n\"\"\") == \"345 2\\nrotS 2 3\\nnegR 2\"\n\nassert solution(r\"\"\"\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n\"\"\") == \"345 2\\nrotS 2 3\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0.5"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0.5, \"Your solution should be 0.5.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5\\n'\n\nassert solution('''\n3 2\n1 1\n2 1 1\n3 1 1\n''') == '0.5\\n'\n\nassert solution('''\n3 2\n3 1 1\n4 1 1\n5 1 1\n6 1 1\n''') == '0.5\\n'\n\nassert solution('''\n3 2\n1 1\n2 1 1\n3 1 1\n7 1 1\n''') == '0.5\\n'\n\nassert solution('''\n3 2\n1 1\n2 1 1\n3 1 1\n1 1\n''') == '0.5\\n'\n\nassert solution('''\n3 2\n1 1\n2 1 1\n3 1 1\n2 1\n''') == '0.5\\n'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.5\\n', \"Expected '0.5', but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3 2\\n3 1 1\") == \"0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"1 4 5\\n2 6 7\"\n\nassert solution(\"\"\"\n8 10\n1 2\n5 3\n1 4\n6 2\n6 8\n7 2\n4 6\n8 7\n6 9\n5 9\n\"\"\") == \"1 2 5\\n2 8 7\"\n\nassert solution(\"\"\"\n5 4\n1 2\n3 4\n1 3\n5 5\n4 5\n\"\"\") == \"1 2 4\\n5 5\"\n\nassert solution(\"\"\"\n10 10\n1 1\n9 8\n2 7\n3 6\n4 5\n\"\"\") == \"1 1 9\\n2 7 6\\n3 6 5\"\n\nassert solution(\"\"\"\n10 10\n1 1\n9 8\n2 7\n3 6\n4 5\n\"\"\") == \"1 1 9\\n2 7 6\\n3 6 5\"\n\nassert solution(\"\"\"\n10 10\n1 1\n9 8\n2 7\n3 6\n4 5\n\"\"\") == \"1 1 9\\n2 7 6\\n3 6 5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\\nYour solution is wrong.\\nCorrect output: {output}\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution for the given input is not as expected. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('10 20\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n') == 'impossible\\n'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n') == '1 6\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n3 8\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n3 8\\n4 9\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n3 8\\n4 9\\n5 6\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n3 8\\n4 9\\n5 6\\n1 8\\n') == '1 8\\n2 6 7\\n'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 6\\n2 7\\n3 8\\n4 9\\n5 6\\n1 8\\n2 9\\n') == '1 8 9\\n2 6 7\\n'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed: solution(input_string) == expected_output\\nInput: {input_string}\\nExpected output: {expected_output}\\nOutput: {solution(input_string)}\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"13500\\n\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution '{solution(input())}' is not correct. Expected: {expected}, got: {solution(input())}\"\nprint(\"Correct\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n4500\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n1\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\"\nassert solution(stdin) == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == '13500\\n'\nassert solution('11 2\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    11 2\n    12000\n    9000\n    4500\n    10000\n    12000\n    11000\n    12000\n    18000\n    10000\n    9000\n    12000\n    \"\"\"\n) == \"13500\"\n\nassert solution(\n    \"\"\"\n    11 2\n    12000\n    9000\n    4500\n    10000\n    12000\n    11000\n    12000\n    18000\n    10000\n    9000\n    12000\n    9000\n    9000\n    9000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    12000\n    1200"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"13 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n8000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n11000\\n12000\\n18000\\n10000"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\"\n\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"13500\\n\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == r'''\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n'''\n\nassert len(solution) == 26\nassert solution.count('_') == 25\nassert solution.count('/_') == 18\nassert solution.count('/_____') == 4\n\nprint(solution)"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def_solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny\"\nassert solution
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,____________________\"\nassert solution(\"2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,____________________\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\"\"\"\n) == \"\"\"Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\"\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Hot_cross_buns!_=Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33, \"Incorrect output\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\n\nassert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\n\nassert solution(\"\"\"\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"60\"\n\nassert solution(\"\"\"\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"60\"\n\nassert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"60\"\n\nassert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"60\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == 33\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n3 2 1') == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\nprint(\"All test cases pass\")"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 33\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input)}\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '405'\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == solution_output, f\"Test Failed: solution({solution_input})!= solution({solution_input})\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 405\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Please see the sample tests and ensure that the input and output are correctly formatted.\" for input, output in zip(stdin_data, stdout_data)"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"405\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"5\\n1 1 2 3 4\") == \"0 2 5 8 11\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\\n\", \"The solution must return the expected output\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nassert solution(\"5\\n1 2 4 4 5 6\\n2 3 4 5 6 7\") == \"15 9 16 17 9.0\\n\"\nassert solution(\"6\\n1 2 4 5 6 7 8 9\\n1 1 1 1 1 1 1 1\") == \"22 16 16 16 16 16 16 16\\n\"\nassert solution(\"7\\n1 2 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1\") == \"30 15 15 15 15 15 15 15 15\\n\"\nassert solution(\"8\\n1 2 4 5 6 7 8 9 10 11 12\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"38 24 24 24 24 24 24 24 24 24\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 7\\n\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(stdin=\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"2 3\\n1 2 3 4\\n4 1 2 3\") == \"yes\\n1 2 3 4\\n4 1 2 3\"\nassert solution(\"1 2\\n1 2 3 4\\n4 1 2 3\") == \"yes\\n1 2 3 4\\n4 1 2 3\"\nassert solution(\"1 2 3 4\") == \"no\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 5\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 6\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 7\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 8\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 9\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"5 3\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'yes'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\nassert solution('3 2\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('2 3\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('4 3\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('2 4\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('1 2\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('5 3\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('5 5\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('5 9\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('5 4\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('6 5\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('6 9\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('6 6\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('7 6\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('7 9\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('7 7\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('8 7\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('8 9\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'\nassert solution('8 8\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('9 8\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 "
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(stdin) == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(stdin) == \"no\\n\"\nassert solution(stdin) == \"no\\n\"\nassert solution(stdin) == \"no\\n\"\nassert solution(stdin) == \"no\\n\"\nassert solution(stdin) == \"no\\n\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(5)) == '10.000000000'\nassert solution(str(5) + '\\n' + '10 10 -10 -4 10') == '10.000000000'\n\nfrom math import sqrt"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '10.000000000\\n'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10.000000000\\n'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    45\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    25\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    40\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    35\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    40\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4\n    30\n    3\n    2\n    35\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect. Please check the input and output examples.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 30, 3, 2, 45]) == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 1\nassert solution(6) == 0\nassert solution(8) == 1\nassert solution(10) == 2\n\nfrom typing import List"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test Case {test_case+1} has incorrect output.\\nExpected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(3) == 2\nassert solution(30) == 4\nassert solution(45) == 1"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 5 6') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 5 6\\n4 6 1\\n3 6 1\\n5 6 1') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 5 6\\n4 6 1\\n3 6 1\\n5 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 5 6\\n4 6 1\\n3 6 1\\n5 6 1') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n\"\n)"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n6 6 3.0 0.66\\"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n\"\n)\n\nassert solution(\n\"\"\"\n10 10 0.5 0.99\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n1 1 100000\n\"\"\"\n) == \"0.000000000 3.786474844\\n0.000000000 2.546428571\\n0.000000000 -1.306382377\\n0.000000000 0.066335994\\n0.000000000 0.190372358\\n0.000000000 0.314408722\\n0.000000000 0.438445086\\n0.000000000 0.562481450\\n0.000000000 0.686517814\\n0.000000000 0.810554178\\n0.000000000 0.934590542\\n0.000000000 1.058626906\\n0.000000000 1.182663270\\n0.000000000 1.306699634\\n0.000000000 1.430736000\\n0.000000000 1.554772364\\n0.000000000 1.678808728\\n0.000000000 1.802845092\\n0.000000000 1.926881456\\n0.000000000 2.050917820\\n0.000000000 2.174954184\\n0.000000000 2.299000548\\n0.000000000 2.423036912\\n0.000000000 2.547073276\\n0.000000000 2.671109640\\n0.000000000 2.795145904\\n0.000000000 2.9191822"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"1 1\\n2 2\\n3 3\\n0 3\\n0 0\\n1 0\") == 4\nassert solution(\"1 0\\n3 0\\n2 0\\n1 1\\n2 1\") == 2\nassert solution(\"0 3\\n0 0\\n1 1\\n2 1\\n3 1\\n4 1\") == 5\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == 0\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 1"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected Output: {expected_output}, Actual Output: {solution(input())}\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\\n\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'\nprint(\"Test Passed\")"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"2 1\\n1 2\\n1 0\") == \"1\\n2 1\"\nassert solution(\"3 0\\n0 1\\n0 2\\n1 3\") == \"1\\n0 2\\n3 0\\n2 1\\n1 3\"\nassert solution(\"3 0\\n0 1\\n1 3\\n2 2\") == \"3\\n2 1\\n2 0\"\nassert solution(\"0 2\\n2 0\\n0 3\\n3 1\") == \"2\\n1 3\\n3 0\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\"\n) == \"2\\n3 2\\n3 1\"\n\nassert solution(\n    \"\"\"\n4 1\n0 1\n0 2\n0 3\n\"\"\"\n) == \"0\\n2 3\\n3 1\"\n\nassert solution(\n    \"\"\"\n4 2\n0 1\n0 2\n0 3\n\"\"\"\n) == \"0\\n0 3\\n2 1\"\n\nassert solution(\n    \"\"\"\n4 3\n0 1\n0 2\n0 3\n\"\"\"\n) == \"0\\n0 3\\n2 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ok\", \"Your solution is incorrect.\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\n\nfrom math import pi"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\\n\"\n\nassert solution(\"\"\"\n3\n-1000 1000 0\n0 0 0\n1.57 0 0\n\"\"\") == \"crash\\n\"\n\nassert solution(\"\"\"\n4\n-100000000000000000 100000000000000000 -100000000000000000 -100000000000000000\n0 0 0\n-1.5708 0 0\n\"\"\") == \"crash\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"2\\n-1000000000 0 0\\n-1000000000 1.5 0\") == \"crash\"\nassert solution(\"2\\n1000000000 0 0\\n1000000000 1.5 0\") == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    0 0 0\n    0 1.5 0\n    ''') == 'ok'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input_string)}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution doesn't match the expected output: \\nInput: {input()}\\nExpected Output: {expected_output}\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution {solution(stdin)} does not match expected output: {expected}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    ''') == '''\n2\nR 0\nG 2\n'''\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 5\\n\") == \"1\\nR 1\\nG 0\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 5\\n\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 5\\n\") == \"4\\nR 0\\nG 4\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 5\\n\") == \"3\\nR 1\\nG 3\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"10 5\\n0 1\\n1 3\\n2 5\\n3 7\\n4 9\\n5 11\\n6 13\\n7 15\\n8 17\\n9 19\\n10 21\\n11 23\\n12 25\\n13 27\\n14 29\\n15 31\\n16 33\\n17 35\\n18 37\\n19 39\\n20 41\\n21 43\\n22 45\\n23 47\\n24 49\\n25 51\\n26 53\\n27 55\\n28 57\\n29 59\\n30 61\\n31 63\\n32 65\\n33 67\\n34 69\\n35 71\\n36 73\\n37 75\\n38 77\\n39 79\\n40 81\\n41 83\\n42 85\\n43 87\\n44 89\\n45 91\\n46 93\\n47 95\\n48 97\\n49 99\\n50 101\\n51 103\\n52 105\\n53 107\\n54 109\\n55 111\\n56 113\\n57 115\\n58 117\\n59 119\\n60 121\\n61 123\\n62 125\\n63 127\\n64 129\\n65 131\\n66 133\\n67 135\\n68 137\\n69 139\\n70 141\\n71 143\\n72 145\\n73 147\\n74 149\\n75 151\\n76 153\\n77 155\\n78 157\\n79 159\\n80 161\\n81 163\\n82 165\\n83 167\\n84 169\\n85 171\\n86 173\\n87 175\\n88 177\\n89 179\\n90 181\\n91 183\\n92 185\\n93 187\\n94 189\\n95 191\\n96 193\\n97 195\\n98 197\\n99 199\\n100 201\\n101 203\\n102 205\\n103 207\\n104 209\\n105 211\\n106 213\\n107 215\\n108 217\\n109 219\\n110 221\\n111 223\\n112 225\\n113 227\\n114 229\\n115 231\\n116 233\\n117 235\\n118 237\\n119 239\\n120 241\\n121 243\\n122 245\\n123 247\\n124 "
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\"5 1 2 3\\nA B C\\nD E F\\n1 A B\\n2 C D\\n3 E F\\n\") == \"0\"\nassert solution(\"10 50 10 10\\nA B C D E F\\n1 A B C D E F\\n2 A B C D E F\\n3 A B C D E F\\n4 A B C D E F\\n5 A B C D E F\\n6 A B C D E F\\n7 A B C D E F\\n\") == \"10\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"8 2 4 3\\nA B C\\nD E F\\n1 A E G\\n2 A C E\\n3 B D F\") == 3\nassert solution(\"6 2 4 3\\nA B C\\nD E F\\n1 A E G\\n2 A C E\\n3 B D F\") == 1\nassert solution(\"4 2 3 2\\nA B C\\nD E F\\n1 A E G\\n2 A C E\\n3 B D F\") == 1\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == 2\n\nassert solution(\"\"\"\n6 4 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == 3\n\nassert solution(\"\"\"\n6 4 4 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == 4"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"5 2 2 2\\nA B C\\nD E F\\n2 G H\") == \"3\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == 2, \"Test failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"The expected output is 2, but got {}\".format(solution())"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nNYY\\nYNY\\nYYY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYNY\\nYYY\\nNYY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nNYY\\nYNY\\nYYY\\nNYY\") == \"1\\n2 3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n2\n1 2 3\n3 1 2\n'''"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nNNN\\nYYY\\nYYN\") == \"0\"\nassert solution(\"5\\nNYY\\nYYY\\nNYY\") == \"2\\n1 2 3\"\nassert solution(\"6\\nNYY\\nNYY\\nNYY\") == \"0\"\nassert solution(\"7\\nNYY\\nNYY\\nNYY\\nNYY\") == \"0\"\nassert solution(\"8\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\") == \"0\"\nassert solution(\"9\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\") == \"0\"\nassert solution(\"10\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5'\nassert solution('''\n5 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n1\\n5'\nassert solution('''\n6 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n1\\n3'\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"10 10\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"This is a sample solution.\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\nassert solution(5) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\nassert solution(3) == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000', \"Testcase 1 failed\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is not as expected.\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5\n    3\n    4\n    5 3\n    \"\"\"\n) == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    3\n    4\n    5\n    6\n    \"\"\"\n) == \"\"\"\n0.000 -0.000\n-3.000 4.000\n-1.000 1.000\n5.000 5.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    2\n    3\n    4\n    5 3\n    \"\"\"\n) == \"\"\"\n1.000 0.000\n2.000 1.000\n3.000 2.000\n4.000 3.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    3\n    4\n    5 3\n    7\n    8\n    9\n    \"\"\"\n) == \"\"\"\n0.000 -0.000\n-3.000 4.000\n-1.000 1.000\n5.000 5.000\n7.000 6.000\n8.000 7.000\n9.000 8.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \"\"\"\n) == \"\"\"\n0.000 -0.000\n-1.000 1.000\n0.000 2.000\n1.000 3.000\n2.000 4.000\n3.000 5.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    2\n    4\n    5\n    6\n    7\n    8\n    9\n    \"\"\"\n) == \"\"\"\n0.000 -0.000\n-1.000 1.000\n0.000 2.000\n1.000 3.000\n0.000 4.000\n1.000 5.000\n0.000 6.000\n1.000 7.000\n0.000 8.000\n1.000 9.000\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    2\n    5\n    6\n    7\n    8\n    9\n    10\n    \"\"\"\n) == \"\"\"\n0.000 -0.000\n-1.000 1.000\n0.000 2.000\n1.000 3.000\n2.000 4.000\n3.000 5.000\n4.000 6.000\n5.000 7.000\n6.000 8.000\n7.000 9.000\n8.000 10.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''4\n10\n5\n4\n5 4''') == '4.114 -2.842\\n5.556 5.556\\n4.114 -2.842'\nassert solution('''5\n10\n6\n5\n6 5''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'\nassert solution('''6\n10\n6\n6\n6 6''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'\nassert solution('''7\n11\n6\n7\n7 7''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'\nassert solution('''8\n11\n7\n8\n8 8''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'\nassert solution('''9\n12\n7\n9\n9 9''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'\nassert solution('''10\n12\n8\n10\n10 10''') == '4.114 -2.842\\n5.556 5.556\\n5.556 5.556'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"10\\n10\\n10\\n10\\n10\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"3\n5\n8\n10\n13\"\"\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13\\n'\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"5 5\\n4 5\\n6 7\\n3 4\\n2 3\\n1 6\\n8 9\") == \"5\\n8\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"2\\n5\\n8\"\nassert solution(\"2 1000000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"1000000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    4 5\n    2 3 5 7\n    2\n    3\n    5\n    6\n    8''') == '3\\n5\\n8\\n10\\n13\\n'\nassert solution('''\n    3\n    1\n    2\n    3\n    4\n    5\n    ''') == '1\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test failed\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str}\\nExpected output: {output_str}\\nGot output: {solution(input_str)}\" for input_str, output_str in zip(input_cases, output_cases)"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\") == \"\"\"\n3\n5\n8\n10\n13\n\"\"\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([6,3],[0,1,1,2,2,3,2,4,1,5,1,2,5], ) == 0"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n') == '0\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"5 2\\n1 0\\n0 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n13"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\"\nassert solution(\"8 3\\n0 1\\n1 2\\n2 3\\n2 4\\n2 5\\n3 4\\n1 5\\n1 6\\n3 6\\n4 5\\n6 7\\n4 7\\n6 8\") == \"2\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Output: 0\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"Output: 0\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '1\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n0 2') == '0\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0 # expected output: 0\nassert solution(5) == 2 # expected output: 2"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected output {output} but got {solution(input())}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    ''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 2\\n10 2 5 C1 L1 C1 U1 C1\\n10 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 3\\n100 2 5 C1 L1 C1 U1 C1\\n100 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 4\\n1000 2 5 C1 L1 C1 U1 C1\\n1000 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 5\\n10000 2 5 C1 L1 C1 U1 C1\\n10000 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 6\\n100000 2 5 C1 L1 C1 U1 C1\\n100000 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 7\\n1000000 2 5 C1 L1 C1 U1 C1\\n1000000 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nassert solution('3 8\\n10000000 2 5 C1 L1 C1 U1 C1\\n10000000 3 1 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '106'\nassert solution(5) == '107'\nassert solution(7) == '71'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 51\nprint(solution)"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nAA') == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"51\", \"Please implement the solution function.\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 51, \"Invalid result\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nAA\") == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\\n\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\\n\\n\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\\n\\n\\n\\n\") == \"51\\n\"\nassert solution(b\"\\n\\n\\n\\n\\n\\n\\n\") == \"51\\n\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nA\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nAA\\n\") == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '51'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n\nassert solution('''\n1\n3 15 30 45 56\n1 10 20 25 30\n11 15 20 25 30\n9 15 20 25 30\n4 10 20 25 30\n6 10 20 25 30\n''') == '1 4'\n\nassert solution('''\n4\n1 2 3 4\n2 4 6 8\n3 6 9 12\n4 8 12 16\n5 10 15 20\n6 12 18 24\n7 14 21 28\n8 16 24 32\n9 18 27 36\n10 20 30 40\n11 22 33 44\n12 24 36 48\n13 26 39 52\n14 28 42 56\n15 30 45 60\n16 32 48 64\n17 34 51 68\n18 36 54 72\n19 38 57 76\n20 40 60 80\n21 42 63 84\n22 44 66 88\n23 46 69 92\n24 48 72 96\n25 50 75 100\n26 52 78 104\n27 54 81 108\n28 56 84 112\n29 58 87 116\n30 60 90 120\n31 62 93 124\n32 64 96 128\n33 66 99 132\n34 68 102 136\n35 70 105 140\n36 72 108 144\n37 74 111 148\n38 76 114 152\n39 78 117 156\n40 80 120 160\n41 82 123 164\n42 84 126 168\n43 86 129 172\n44 88 132 176\n45 90 135 180\n46 92 138 184\n47 94 141 188\n48 96 144 192\n49 98 147 196\n50 100 150 200\n51 102 153 204\n52 104 156 208\n53 106 159 212\n54 108 162 216\n55 110 165 220\n56 112 168 224\n57 114 171 228\n58 116 174 232\n59 118 177 236\n60 120 180 240\n61 122 183 244\n62 124 186 248\n63 126 189 252\n64 128 192 "
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 45 63 68 72\") == \"no ties\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n3 45 63 68 72\") == \"no ties\"\nassert solution(\"1 2\\n3 4\") == \"1 4\"\nassert solution(\"1 2\\n1 1 2 3 4 5\") == \"1 5\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n1 1 2 3 4 8\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n1 1 2 3 4 8\\n1 1 2 3 4 9\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n1 1 2 3 4 8\\n1 1 2 3 4 9\\n1 1 2 3 4 10\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n1 1 2 3 4 8\\n1 1 2 3 4 9\\n1 1 2 3 4 10\\n1 1 2 3 4 11\") == \"1 2\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n1 1 2 3 4 8\\n1 1 2 3 4 9\\n1 1 2 3 4 10\\n1 1 2 3 4 11\\n1 1 2 3 4 12\") == \"no ties\"\nassert solution(\"1 2\\n1 1 2 3 4 5\\n1 1 2 3 4 6\\n1 1 2 3 4 7\\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"no ties\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2 28 46 55 67\\n29 26 45 57 70\\n45 25 47 59 68\\n56 24 47 62 70\\n68 23 49 65 69\\n1 21 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2 28 46 55 67\\n29 26 45 57 70\\n45 25 47 59 68\\n56 24 47 62 70\\n68 23 49 65 69\\n1 21 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2 28 46 55 67\\n29 26 45 57 70\\n45 25 47 59 68\\n56 24 47 62 70\\n68 23 49 65 69\\n1 21 43 50 72\\n11 25 40 49 61\\n9 23"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == 'no ties'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '1 2'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '2 3'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '1 3'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '3 2'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '2 3'\n\nassert solution('''\n2\n1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 "
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 5\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"no ties\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 5\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\"\n\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\n\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"3\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == '1 2\\nno ties'\n\nassert solution('14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2\\ntie 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect.\\nExpected: {output}\\nReceived: {solution(input())}\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\", \"Output should be '0', not {}\".format(solution(stdin))"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"2\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"3\\n1 2 3\\n1 2 3\") == \"0\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0\nassert solution('3\\n3 2 1\\n2 1 3\\n2 1 3') == 0\nassert solution('3\\n3 2 1\\n1 2 3\\n2 1 2') == 0\nassert solution('3\\n3 2 1\\n1 2 3\\n2 1 3\\n3 2 1') == 0\nassert solution('3\\n3 2 1\\n2 1 3\\n1 2 3\\n1 2 3\\n2 1 2') == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0, \"The number of pairs of camels that appear in the same order in all 3 bets should be 0.\"\nassert solution(stdin) == 1, \"The number of pairs of camels that appear in the same order in all 3 bets should be 1.\"\nassert solution(stdin) == 0, \"The number of pairs of camels that appear in the same order in all 3 bets should be 0.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0, \"The solution should return 0.\"\nassert solution('3\\n3 1 2\\n1 2 3\\n1 2 3') == 1, \"The solution should return 1.\"\nassert solution('3\\n3 1 2\\n1 2 3\\n1 2 3') == 1, \"The solution should return 1.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"3\\n3 4 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"3\\n3 2 2\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 2\") == 2\nassert solution(\"3\\n3 2 1\\n1 2 2\\n1 2 3\") == 2"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1 2 3\\n2 4 6\\n3 5 7\\n4 6 8\") == \"0.6\\n0.2\\n0.08\\n0.041666666667\"\nassert solution(\"1 2 3\\n2 4 6\\n3 5 7\\n4 6 8\") == \"0.6\\n0.2\\n0.08\\n0.041666666667\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution, \"Test case is missing\"\n\nn = int(stdin.readline())"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution does not match the expected output.\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.4\"\nassert solution() == \"0\"\nassert solution() == \"0.2\"\nassert solution() == \"0.171428571429\"\nassert solution() == \"0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 6\") == \"impossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 0\") == \"impossible\"\nassert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\\n1 2\\n3 3\\n4 5\\n-1 -6\\n1 3\\n3 3\\n4 5\\n-1 6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 -6\\n1 1\\n3 3\\n4 5\\n-1 6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 1\\n3 3\\n4 5\\n-1 -6\\n1 3\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 1\\n3 3\\n4 5\\n-1 -6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 -6\\n1 1\\n3 3\\n4 5\\n-1 6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 -6\\n1 3\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 1\\n3 3\\n4 5\\n-1 -6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 -6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 4\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1 -6\\n1 5\\n3 3\\n4 5\\n-1 6\\n1 2\\n3 3\\n4 5\\n-1 0\\n1 5\\n3 3\\n4 5\\n-1"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n\nsample_input = \"4\\n1 5\\n3 3\\n4 5\\n-1 -6\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\\n\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible'\nassert solution('5\\n1 2\\n3 4') == 'impossible'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimpossible\nimp"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == 'impossible'\nassert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n2 3\\n4 5') == 'impossible'\nassert solution('2 3\\n4 5\\n1 5\\n3 3\\n4 5') == '3 + 3 = 6'\nassert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3') == 'impossible'\nassert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3\\n2 3\\n4 5') == 'impossible'\nassert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n2 3\\n4 5\\n2 3\\n4 5') == 'impossible'\nassert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n1 4\\n3 3\\n2 3\\n4 5\\n2 3\\n4 5\\n2 3\\n4 5') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n\") == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\"\n\nassert solution(\"6\\n2 6\\n1 1\\n5 5\\n\") == \"\"\"2 * 6 = 12\n1 - 6 = 5\"\"\"\n\nassert solution(\"1\\n2 3\\n4 5\\n\") == \"\"\"4 * 3 = 12\n2 + 3 = 5\"\"\"\n\nassert solution(\"2\\n1 3\\n4 5\\n\") == \"\"\"1 + 3 = 4\n2 - 5 = -2\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 = 8\n2 * 2 = 4\n6 - 4 = -2\n7 + 5 = 13\"\"\"\n\nassert solution(\"20\\n10 3\\n5 4\\n-2 -2\\n\") == \"\"\"10 + 3 = 13\n5 * 4 = 10\n-2 - -2 = 0\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 = 8\n2 * 2 = 4\n6 - 4 = -2\n7 + 5 = 13\"\"\"\n\nassert solution(\"5\\n1 1\\n5 1\\n10 1\\n\") == \"\"\"1 + 1 = 2\n1 - 1 = 0\n10 + 1 = 11\n10 - 1 = 9\"\"\"\n\nassert solution(\"2\\n1 3\\n4 5\\n\") == \"\"\"1 + 3 = 4\n2 - 5 = -2\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 = 8\n2 * 2 = 4\n6 - 4 = -2\n7 + 5 = 13\"\"\"\n\nassert solution(\"5\\n1 1\\n5 1\\n10 1\\n\") == \"\"\"1 + 1 = 2\n1 - 1 = 0\n10 + 1 = 11\n10 - 1 = 9\"\"\"\n\nassert solution(\"2\\n1 3\\n4 5\\n\") == \"\"\"1 + 3 = 4\n2 - 5 = -2\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 = 8\n2 * 2 = 4\n6 - 4 = -2\n7 + 5 = 13\"\"\"\n\nassert solution(\"5\\n1 1\\n5 1\\n10 1\\n\") == \"\"\"1 + 1 = 2\n1 - 1 = 0\n10 + 1 = 11\n10 - 1 = 9\"\"\"\n\nassert solution(\"2\\n1 3\\n4 5\\n\") == \"\"\"1 + 3 = 4\n2 - 5 = -2\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 = 8\n2 * 2 = 4\n6 - 4 = -2\n7 + 5 = 13\"\"\"\n\nassert solution(\"5\\n1 1\\n5 1\\n10 1\\n\") == \"\"\"1 + 1 = 2\n1 - 1 = 0\n10 + 1 = 11\n10 - 1 = 9\"\"\"\n\nassert solution(\"2\\n1 3\\n4 5\\n\") == \"\"\"1 + 3 = 4\n2 - 5 = -2\"\"\"\n\nassert solution(\"10\\n5 3\\n2 2\\n6 4\\n7 5\\n8 6\\n\") == \"\"\"5 + 3 ="
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for {input_data}\\nExpected: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['4\\n1\\n4\\n6\\n0']\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Solution did not return the expected output: {solution(input_str)}!= {output_str}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"4\n1\n4\n6\n0\"\"\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example.in', 'r')) == '''\n4\n1\n4\n6\n0\n'''"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4\nprint(\"Test Passed\")"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"4\n1 2 3 4\"\"\"\n) == \"\"\"4\n4\n\"\"\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin.splitlines(), output.splitlines())"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 3, 4) == 4, \"Sample Output\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Your function does not implement the expected output.\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"4\\n\"\nassert solution(\"1 1 2 3\") == \"2\\n\"\nassert solution(\"1 2 3 4 1\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Error: Invalid input\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 4, \"Test case 1 failed\"\nassert solution(10) == 1440, \"Test case 2 failed\"\nassert solution(50) == 127421440, \"Test case 3 failed\"\nassert solution(100000) == 1830177543382080800, \"Test case 4 failed\"\nassert solution(50000) == 34140053647780910880, \"Test case 5 failed\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The sample input is incorrect\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\\n\"\nassert solution(\"1 31 2\\n10 15\\n15 20\\n20 25\\n30 30\\n40 40\\n50 50\\n60 60\\n70 70\\n80 80\\n90 90\\n100 100\") == \"6 7\\n\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\\n\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1 31 2\n20 60\n50 90\"\"\") == \"\"\"4 3\"\"\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input_str)}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"3 2 1\") == \"4\\n\"\nassert solution(\"2 3 1\") == \"5\\n\"\nassert solution(\"3 4 1\") == \"6\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"2 2 3\") == \"1\\n\"\nassert solution(\"3 2 3\") == \"2\\n\"\nassert solution(\"3 2 5\") == \"0\\n\"\n\nimport math"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed!\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2 2 1) == 3"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('5 5 1') == '6'\nassert solution('3 5 1') == '2'\nassert solution('1 3 1') == '1'\nassert solution('4 6 1') == '1'\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"5 3 2\") == \"6\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 2, 1) == 3, \"Output: 3\"\nassert solution(1, 1, 1) == 6, \"Output: 6\"\nassert solution(1, 1, 2) == 5, \"Output: 5\"\nassert solution(1, 1, 5) == 0, \"Output: 0\"\nassert solution(1, 1, 10) == 0, \"Output: 0\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"0\"\nassert solution(2) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3 1\\n\", \"Incorrect output\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"The code is not correct\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == # add your solution here"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nassert solution('10\\n1341 2412 1200 3112 2391\\n') == '4 0'\nassert solution('12\\n1341 2412 1200 3112 2391\\n') == '4 3'\nassert solution('15\\n1341 2412 1200 3112 2391\\n') == '6 2'\nassert solution('18\\n1341 2412 1200 3112 2391\\n') == '7 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450') == '5 2'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450\\n1341 2412 1200 3112 2391') == '6 2'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450') == '8 3'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450\\n1341 2412 1200 3112 2391\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 1450 1450 1450\\n1450 1450 "
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == 6, \"The solution is not correct\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"7\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"8\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"9\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"10\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"11\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"12\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"13\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"14\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"15\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"16\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"17\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"18\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"19\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"20\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\nprint('All tests passed!')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6\\n'\nprint('Test Passed')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\nassert solution(\"10\\nabc\\ndefghijk\") == \"-1 0\"\nassert solution(\"4\\n123\\n456\") == \"1 3\\n2 2\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"-1 0\"\nassert solution(\"1\\n1\") == \"0 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\\n\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(\"3\\nabcdefg\\n1234567890\\n\") == \"0 -1 0\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n2 b\") == \"-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab c\\n1 b\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n2 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1\\n2 ab b\\n1 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 d\") == \"-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n1 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 e\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n2 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1\\n2 ab b\\n1 d\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 f\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n2 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1\\n2 ab b\\n1 f\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 g\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n3 ab b\\n2 c\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1\\n2 ab b\\n1 g\") == \"0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"2\\n2 ab b\\n1 h\") == \"0 1 \\n-1 0\\ndef solution(stdin"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\n\"\nassert solution(\"3\\nabc def\\n123\") == \"0 2 -1\\n\"\nassert solution(\"4\\naaa bbb ccc\\n12345\") == \"1 1 0\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\"\nassert solution(\"10 10\\n2 2 2\\n2\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"20 5\\n3 1 3\\n1 1\\n2 1\\n3 1\") == \"5\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3\\n'\n\nassert solution('2 5\\n1 2 1\\n2\\n1 3 1\\n2\\n') == '1\\n2\\n'\n\nassert solution('1 3 4\\n1 1 1\\n2\\n1 2 1\\n3\\n') == '0.5\\n1.25\\n'\n\nassert solution('2 2\\n1 1\\n2\\n1 1\\n2\\n') == '0.5\\n'\n\nassert solution('2 1\\n1 1\\n2\\n1 1\\n2\\n') == '1.5\\n'\n\nassert solution('3 2\\n1 2\\n2\\n1 2\\n3\\n') == '0.25\\n0.75\\n'\n\nassert solution('1 1 2\\n1 2 3\\n2\\n1 2 3\\n2\\n') == '0.0625\\n0.125\\n'\n\nassert solution('2 1\\n1 1\\n2\\n1 1\\n2\\n') == '1.5\\n'\n\nassert solution('3 2\\n1 2\\n2\\n1 2\\n3\\n') == '0.25\\n0.75\\n'\n\nassert solution('2 3\\n1 1\\n2\\n1 2\\n3\\n') == '0.666667\\n0.333333\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' is not as expected. Please see the examples above.\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The solution for the given input is {output}, but the output is {solution(input())}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\"\nassert solution(\"5 3\\n2 1 3\\n1\\n1 2 2\") == \"0\"\nassert solution(\"2 3\\n1 2 1\\n1\\n1 1\") == \"1\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Sample output does not match the expected output\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect\"\n\nsample_input = \"2 4\\n1 1 2\\n2\\n1 1 2\\n2\"\nsample_output = \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\\n\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {solution(input_data)} should be {output_data}\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7\"\n\nfrom typing import List"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin=stdin)) == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"8\\n\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '8'\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1099511627776') == '8'\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"9007199254740991\") == \"100000000000000000\"\nassert solution(\"50000000000000000000000000000000000000000000000000000000000000\") == \"121990386392833764566476196696613916000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1099511627776) == 8\nassert solution(9007199254740991) == 5"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\\n\"\nassert solution(sample_input2) == \"3\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('5 5\\nx...\\nx...\\nx...\\nx...\\nx...\\n') == '8'\nassert solution('4 4\\nx....\\nx....\\nx....\\nx....\\nx....\\n') == '0'\nassert solution('2 2\\nx.....\\nx.....\\nx.....\\nx.....\\nx.....\\n') == '2'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2', \"Solution should return 2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\n2\"\nassert solution(\"5 5\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"4 4\\nx..\\n..x\\nx..\") == \"2\"\nassert solution(\"3 3\\nx.x\\nx..\\nx..\") == \"3\"\nassert solution(\"3 4\\nx.x\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\nx..\\"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected, f\"Expected {expected}, got {solution(sample_input)}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '9\\n-1\\n5\\n6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed: expected {output}, got {solution(input)}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"2\\n1 1 50 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"61\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == 91\nassert solution(\"5\\n5 1 10 5 2 1\\n100 1 95 95 95 10\\n50 1 95 50 30 20\\n50 1 95 50 30 20\") == 458"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\"\nassert solution(\"2\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"10\"\nassert solution(\"3\\n1 2 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\"\nassert solution(\"2\\n1 2 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"10\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n') == '91\\n'\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"15\", \"Expected 15, but got {}\".format(solution(\"0\"))\n\nassert solution(\"1\") == \"15\", \"Expected 15, but got {}\".format(solution(\"1\"))\n\nassert solution(\"2\") == \"15\", \"Expected 15, but got {}\".format(solution(\"2\"))\n\nassert solution(\"3\") == \"15\", \"Expected 15, but got {}\".format(solution(\"3\"))\n\nassert solution(\"4\") == \"15\", \"Expected 15, but got {}\".format(solution(\"4\"))\n\nassert solution(\"5\") == \"15\", \"Expected 15, but got {}\".format(solution(\"5\"))"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n        2\n        15 20\n        ''') == 15\n\nassert solution(r'''\n        3\n        10 5 10 5\n        ''') == 25\n\nassert solution(r'''\n        4\n        20 10 20 10\n        ''') == 20"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"15\", \"The correct output is incorrect. Please update the assert statement.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0\\n0\\n1\\n1\\n0\\n2\\n0\\n1\\n2\\n2\\n0\\n0\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n2\\n4\\n4\\n3\\n4\\n4\\n3\\n5\\n5\\n4\\n5\\n5\\n4\\n5\\n6\\n5\\n6\\n5\\n6\\n6\\n5\\n7\\n7\\n6\\n7\\n7\\n6\\n7\\n8\\n7\\n8\\n7\\n8\\n8\\n7\\n9\\n9\\n8\\n9\\n9\\n8\\n9\\n10\\n8\\n10\\n8\\n10\\n10\\n8\\n11\\n11\\n9\\n11\\n10\\n11\\n10\\n11\\n11\\n9\\n12\\n12\\n10\\n12\\n10\\n12\\n12\\n10\\n13\\n13\\n11\\n13\\n10\\n13\\n10\\n13\\n11\\n14\\n14\\n12\\n14\\n11\\n14\\n11\\n14\\n12\\n15\\n15\\n13\\n15\\n11\\n15\\n11\\n15\\n13\\n16\\n16\\n14\\n16\\n12\\n16\\n11\\n16\\n12\\n17\\n17\\n15\\n17\\n13\\n17\\n11\\n17\\n12\\n18\\n18\\n16\\n18\\n14\\n18\\n12\\n18\\n13\\n19\\n19\\n17\\n19\\n15\\n19\\n13\\n19\\n14\\n20\\n20\\n18\\n20\\n16\\n20\\n14\\n20\\n15\\n21\\n21\\n20\\n21\\n16\\n21\\n14\\n21\\n15\\n22\\n22\\n19\\n22\\n17\\n22\\n15\\n22\\n16\\n23\\n23\\n21\\n23\\n17\\n23\\n15\\n23\\n16\\n24\\n24\\n22\\n24\\n18\\n24\\n16\\n24\\n17\\n25\\n25\\n23\\n25\\n18\\n25\\n16\\n25\\n17\\n26\\n26\\n24\\n26\\n19\\n26\\n17\\n26\\n18\\n27\\n27\\n25\\n27\\n21\\n27\\n19\\n27\\n20\\n28\\n28\\n26\\n28\\n22\\n28\\n20\\n28\\n21\\n29\\n29\\n27\\n29\\n23\\n29\\n21\\n29\\n22\\n30\\n30\\n29\\n30\\n24\\n30\\n22\\n30\\n23\\n31\\n31\\n30\\n31\\n25\\n31\\n23\\n31\\n24\\n32\\n32\\n29\\n32\\n26\\n32\\n24\\n32\\n25\\n33\\n33\\n31"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Solution should return {output}, but it returned {solution(input)}\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\n15 20\\n0\\n1 1\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"15 20\\n0\\n1 1\") == 15\nassert solution(\"20 25\\n0\\n1 1\\n1 2\") == 25\nassert solution(\"20 25\\n10\\n1 2\\n3\") == 10"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"impossible\"\nprint(\"impossible\")"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6') == 'possible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n4 3 129\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\"\nassert solution(6) == \"1.000000000\"\nassert solution(7) == \"1.000000000\"\nassert solution(8) == \"1.000000000\"\nassert solution(9) == \"1.000000000\"\nassert solution(10) == \"1.000000000\"\nassert solution(11) == \"1.000000000\"\nassert solution(12) == \"1.000000000\"\nassert solution(13) == \"1.000000000\"\nassert solution(14) == \"1.000000000\"\nassert solution(15) == \"1.000000000\"\nassert solution(16) == \"1.000000000\"\nassert solution(17) == \"1.000000000\"\nassert solution(18) == \"1.000000000\"\nassert solution(19) == \"1.000000000\"\nassert solution(20) == \"1.000000000\"\nassert solution(21) == \"1.000000000\"\nassert solution(22) == \"1.000000000\"\nassert solution(23) == \"1.000000000\"\nassert solution(24) == \"1.000000000\"\nassert solution(25) == \"1.000000000\"\nassert solution(26) == \"1.000000000\"\nassert solution(27) == \"1.000000000\"\nassert solution(28) == \"1.000000000\"\nassert solution(29) == \"1.000000000\"\nassert solution(30) == \"1.000000000\"\nassert solution(31) == \"1.000000000\"\nassert solution(32) == \"1.000000000\"\nassert solution(33) == \"1.000000000\"\nassert solution(34) == \"1.000000000\"\nassert solution(35) == \"1.000000000\"\nassert solution(36) == \"1.000000000\"\nassert solution(37) == \"1.000000000\"\nassert solution(38) == \"1.000000000\"\nassert solution(39) == \"1.000000000\"\nassert solution(40) == \"1.000000000\"\nassert solution(41) == \"1.000000000\"\nassert solution(42) == \"1.000000000\"\nassert solution(43) == \"1.000000000\"\nassert solution(44) == \"1.000000000\"\nassert solution(45) == \"1.000000000\"\nassert solution(46) == \"1.000000000\"\nassert solution(47) == \"1.000000000\"\nassert solution(48) == \"1.000000000\"\nassert solution(49) == \"1.000000000\"\nassert solution(50) == \"1.000000000\"\nassert solution(51) == \"1.000000000\"\nassert solution(5"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '0.666666667'\nassert solution(3) == '0.333333333'\nassert solution(4) == '0.000000000'\nassert solution(5) == '0.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1.000000000\nassert solution(2) == 1.000000000\nassert solution(3) == 1.000000000\nassert solution(4) == 1.000000000\nassert solution(5) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '1.000000000'\nassert solution(3) == '1.000000000'\nassert solution(4) == '1.000000000'\nassert solution(5) == '1.000000000'\nassert solution(6) == '1.000000000'\nassert solution(7) == '1.000000000'\nassert solution(8) == '1.000000000'\nassert solution(9) == '1.000000000'\nassert solution(10) == '1.000000000'\nassert solution(11) == '1.000000000'\nassert solution(12) == '1.000000000'\nassert solution(13) == '1.000000000'\nassert solution(14) == '1.000000000'\nassert solution(15) == '1.000000000'\nassert solution(16) == '1.000000000'\nassert solution(17) == '1.000000000'\nassert solution(18) == '1.000000000'\nassert solution(19) == '1.000000000'\nassert solution(20) == '1.000000000'\nassert solution(21) == '1.000000000'\nassert solution(22) == '1.000000000'\nassert solution(23) == '1.000000000'\nassert solution(24) == '1.000000000'\nassert solution(25) == '1.000000000'\nassert solution(26) == '1.000000000'\nassert solution(27) == '1.000000000'\nassert solution(28) == '1.000000000'\nassert solution(29) == '1.000000000'\nassert solution(30) == '1.000000000'\nassert solution(31) == '1.000000000'\nassert solution(32) == '1.000000000'\nassert solution(33) == '1.000000000'\nassert solution(34) == '1.000000000'\nassert solution(35) == '1.000000000'\nassert solution(36) == '1.000000000'\nassert solution(37) == '1.000000000'\nassert solution(38) == '1.000000000'\nassert solution(39) == '1.000000000'\nassert solution(40) == '1.000000000'\nassert solution(41) == '1.000000000'\nassert solution(42) == '1.000000000'\nassert solution(43) == '1.000000000'\nassert solution(44) == '1.000000000'\nassert solution(45) == '1.000000000'\nassert solution(46) == '1.000000000'\nassert solution(47) == '1.000000000'\nassert solution(48) == '1.000000000'\nassert solution(49) == '1.000000000'\nassert solution(50)"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1.0"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Test failed. Expected: {expected}, got: {solution}\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=solution()) == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n2\\n100 1"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n200 1 1\\n100 1 1.5\\n\") == \"199.500000\"\nassert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\"\nassert solution(\"3\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\"\nassert solution(\"4\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\"\nassert solution(\"5\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 3 5\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\", \"Expected 1, got {}\".format(solution(stdin))"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"10 10\\n2 4 6 8 10\") == \"2\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\\n\"\nassert solution(\"20\\n5 5 5 5\") == \"2\\n2\\n\"\nassert solution(\"100000000\\n100 100 100 100\") == \"Impossible\\nImpossible\\n\"\nassert solution(\"100000000\\n2 2 2 2\") == \"Impossible\\nImpossible\\n\"\nassert solution(\"100000000\\n50 50 50 50\") == \"Impossible\\nImpossible\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\nassert solution(\"10\\n100 50 25 10\") == \"5\\n\"\nassert solution(\"100\\n1000000 10000000 100000000\") == \"5\\n\"\nassert solution(\"0\\n\") == \"Impossible on a single line\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"pass\")"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13\\n3 2 1 1') == '5'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '5\\n'\nassert solution(sample_input_2) == '11\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\\naba\\nacd\\n\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'yes', 'The provided input is not correct'\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aabcad\\naba\\nacd\\n') == 'yes'\nassert solution('123456789\\nabcdef\\n123456789\\nabcdef\\n') == 'no'\nassert solution('123\\nabc\\ndef\\nghi\\njkl\\n') == 'no'\nassert solution('qwerty\\nuiop\\njkl\\n') == 'no'\nassert solution('123\\nabc\\ndef\\nghi\\njkl\\n') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\" or solution(input()) == \"no\", \"Incorrect output for the given problem.\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"4 5"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\", \"Test failed\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 different\\n3 5 same\") == \"0\"\nassert solution(\"5 2\\n2 4 same\\n3 5 different\") == \"0\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nassert solution(\"5 1\\n1 2 different\\n2 3 different\\n3 4 different\\n4 5 different\\n\") == \"3\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4', \"Expected 4, got: \" + solution(input())"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '4'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(['6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n']) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\\n\".format(output(), solution(input()))"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == 3\nprint(\"All test cases passed\")"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 3, 'Your solution is incorrect.'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but returned '{solution(input())}'.\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input '{input()}', expected output '{expected_output}'.\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9.0\\n6.5\\n2.5\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '9.0\\n6.5\\n2.5\\n'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n') == '1'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == 1\nassert solution('3 3 3\\nB 1 2\\nR 2 3\\nR 3 4') == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n') == 1\nassert solution('2 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n') == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"4 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\nassert solution(\"2 3 1\\nB 1 2\\nB 2 3\\nR 3 4\") == \"1\"\nassert solution(\"2 3 4\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\nassert solution(\"3 3 3\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"1\\n1\"\nassert solution(\n\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"0\\n1\"\nassert solution(\n\"3 3 3\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"0\\n1\"\nassert solution(\n\"4 5 2\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"1\\n1\"\nassert solution(\n\"3 4 5\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"0\\n1\"\nassert solution(\n\"4 3 5\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"0\\n1\"\nassert solution(\n\"3 4 3\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"0\\n1\"\nassert solution(\n\"5 4 4\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"1\\n1\"\nassert solution(\n\"4 5 4\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"1\\n1\"\nassert solution(\n\"5 4 3\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"0\\n1\"\nassert solution(\n\"5 4 5\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"1\\n1\"\nassert solution(\n\"5 4 2\\nB 1 2\\nB 2 3\\nR 3 1\"\n) == \"0\\n1\"\nassert solution(\n\"6 7 3\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"1\\n1\"\nassert solution(\n\"6 7 4\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"1\\n1\"\nassert solution(\n\"7 6 5\\nB 1 2\\nB 2 3\\nR 3 3\"\n) == \"1\\n1\"\nassert solution(\n\"7 6 4\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"0\\n1\"\nassert solution(\n\"6 7 5\\nB 1 2\\nB 2 3\\nR 3 3\"\n) == \"1\\n1\"\nassert solution(\n\"7 6 6\\nB 1 2\\nB 2 3\\nR 3 3\"\n) == \"1\\n1\"\nassert solution(\n\"8 8 5\\nB 1 2\\nB 2 3\\nR 3 3\"\n) == \"1\\n1\"\nassert solution(\n\"8 8 4\\nB 1 2\\nB 2 3\\nR 3 2\"\n) == \"0\\n1\"\nassert solution(\n\"8 8 6\\nB 1 2\\nB 2 3\\nR 3 4\"\n) == \"1\\n2\"\nassert solution(\n\"9 9 6\\nB 1 2\\nB 2 3\\nR 3 4\"\n) == \"1\\n2\"\nassert solution(\n\"9 9 5\\nB 1 2\\nB 2 3\\nR 3 3\"\n) == \"0\\n1\"\nassert solution(\n\"9 9 7\\nB 1 2\\nB 2 3\\nR 3 5\"\n) == \"1\\n3\"\nassert solution(\n\"10 10 7\\nB 1 2\\nB 2 3\\nR 3 5\"\n) == \"1\\n3\"\nassert solution(\n\"10 10 5\\nB 1 2\\nB 2 3"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '88'\nassert solution(3) == '5'\nassert solution(3) == '5'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(), \"No solution found\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\", \"Expected '88\\n5\\n5\\n7', but got '{}'.\".format(solution())"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'output', \"Test failed\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 4 1 1\") == 12"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\") == 12\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\\n7 5 5\\n8 6 6\\n9 7 7\") == 24\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\\n7 5 5\\n8 6 6\\n9 7 7\\n10 8 8\") == 35\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\\n7 5 5\\n8 6 6\\n9 7 7\\n10 8 8\\n11 9 9\\n12 10 10\\n13 11 11\\n14 12 12\\n15 13 13\\n16 14 14\\n17 15 15\\n18 16 16\\n19 17 17\\n20 18 18\\n21 19 19\\n22 20 20\\n23 21 21\\n24 22 22\") == 45\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\\n7 5 5\\n8 6 6\\n9 7 7\\n10 8 8\\n11 9 9\\n12 10 10\\n13 11 11\\n14 12 12\\n15 13 13\\n16 14 14\\n17 15 15\\n18 16 16\\n19 17 17\\n20 18 18\\n21 19 19\\n22 20 20\\n23 21 21\\n24 22 22\\n25 23 23\\n26 24 24\\n27 25 25\\n28 26 26\\n29 27 27\\n30 28 28\") == 53\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4 2 2\\n5 3 3\\n6 4 4\\n7 5 5\\n8 6 6\\n9 7 7\\n10 8 8\\n11 9 9\\n12 10 10\\n13 11 11\\n14 12 12\\n15 13 13\\n16 14 14\\n17 15 15\\n18 16 16\\n19 17 17\\n20 18 18\\n21 19 19\\n22 20 20\\n23 21 21\\n24 22 22\\n25 23 23\\n26 2"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\nfor input, output in [(3, 5), (2, -1), (1, 1), (4, -1)]:\n    assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 5, \"Your solution is not correct.\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5\\n5'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n') == 5, \"Your solution is incorrect\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"4 2 3 4\\n1\\n1 1 1\\n2 3 2\\n3 4 1\") == 5\nassert solution(\"3 2 2 1\\n3\\n1 1 1\\n1 2 1\\n2 3 1\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"4 5\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 5\\n2 4 4\") == 30\nassert solution(\"2\\n1 2 2\\n1 3 1\\n2 3 3\\n3 4 5\") == -1\nassert solution(\"4 5\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 5\\n2 4 4\\n6 7 8\\n10 11 12\") == 15\nassert solution(\"1 1 1\\n2 2 2\") == 0\nassert solution(\"1 2 1\\n2 3 3\") == 0\nassert solution(\"1 2 1\\n2 3 3\\n1 3 1\") == 0\nassert solution(\"2 2 1\\n3 3 3\") == 0\nassert solution(\"1 1 1\\n2 2 2\\n1 2 1\\n2 3 3\\n1 3 1\\n1 3 1\") == 0\nassert solution(\"1 1 1\\n2 2 2\\n1 2 1\\n2 3 3\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\n1 3 1\\"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"The solution for the sample input should be'mirkovniz', but it is '{}'\".format(solution('mirkovC4nizCC44'))"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"The first and only line of output must contain the final string remaining after all the reactions as stated in the task.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) =='mirkovniz', \"The solution is incorrect.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str=\"mirkovC4nizCC44\") == \"mirkovniz\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44C4C4\") == \"mirkovniz\"\nassert solution(\"sampleInput\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"32\"\nassert solution() == \"43\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 32\nassert solution(4) == 21\nassert solution(5) == 8"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"32\", \"Expected output: 32, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"3 65\\n45 10\\n60 25\") == 32, \"Incorrect output for sample input 3 65\\n45 10\\n60 25\"\nassert solution(2, \"1 2\\n3 4\\n5 6\") == 0, \"Incorrect output for sample input 1 2\\n3 4\\n5 6\"\nassert solution(4, \"1 3\\n2 4\\n4 5\") == 2, \"Incorrect output for sample input 1 3\\n2 4\\n4 5\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\n\nassert solution(\"10\\n1 1 2 2 1 2 1 1 2 2 1\") == \"2\\n4\\n\"\n\nassert solution(\"5\\n10 0 3 1\") == \"3\\n4\\n\"\n\nassert solution(\"5\\n1 2 0 3 10\") == \"3\\n5\\n\"\n\nassert solution(\"10\\n1 1 2 2 1 2 1 1 2 2 10\") == \"2\\n6\\n\"\n\nassert solution(\"5\\n10 0 3 100\") == \"3\\n10\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2'\nassert solution('7\\n4 3 5 2 1') == '4\\n2'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'5\\n1 2 0 3 1\\n') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"6\\n1 2 0 1 1\\n2 2 1 2 1\") == \"3\\n3\\n\"\nassert solution(\"7\\n1 2 0 1 2\\n2 2 2 2 2\\n1 2 1 2 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\", \"Your solution is incorrect.\"\n\nprint(\"Success!\")"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '3\\n2\\n'\nassert solution(10) == '1\\n2\\n'\nassert solution(1) == '2\\n'\nassert solution(100) == '2\\n'\nassert solution(2) == '2\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '2'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Expected output: 2, Actual output: {}\".format(solution())"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('3 5 2\\n+ 1 1\\n- 1 3\\n+ 2 2\\n- 2 3') == '0'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('3 5 2\\n+ 1 1\\n- 1 3\\n+ 2 2\\n- 2 3') == '0'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nprint(\"Correct\")\n\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nprint(\"Correct\")\n\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nprint(\"Correct\")\n\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nprint(\"Correct\")\n\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nprint(\"Correct\")\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n'''\n) == '2'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\") == \"2\\n\"\nassert solution(\"2 4 4\\n+ 2 1\\n- 2 2\\n+ 2 3\\n- 2 4\\n\") == \"1\\n\"\nassert solution(\"2 4 4\\n+ 3 1\\n- 3 2\\n+ 3 3\\n- 3 4\\n\") == \"0\\n\"\nassert solution(\"2 4 4\\n+ 4 1\\n- 4 2\\n+ 4 3\\n- 4 4\\n\") == \"1\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Expected output: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004, \"The output should be 500000004, but it is %s\" % solution(\"2\\n1000000000 0\\n1000000000 1\")\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input} -> {sample_output}\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output\nprint(\"Output:\", solution(stdin=input()))"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 500000004, \"Expected 500000004, but got {}\".format(solution())"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"500000004\"\nprint(\"Correct!\")"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\nassert solution(\"3\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9\") == \"1000000002\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\n\nfrom fractions import gcd"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n12\n\"\"\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"solution.in\", \"r\")) == \"12\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\\n\", \"The minimum sum of frustration should be 12.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12\\n'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\"\nassert solution(\"5 10\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"30\"\nassert solution(\"5 1\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\"\nassert solution(\"5 10\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n5 10\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"30\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str=\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\", \"Sample Output\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r')) == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case 1 failed.\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 6\") == 3, \"Test case 2 failed.\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case 3 failed.\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case 4 failed.\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case 5 failed.\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test case 6 failed.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '3\\n'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"1 2 3\") == \"1\\n\"\nassert solution(\"0 0 0\") == \"0\\n\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0\") == \"0\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3\\n'\nassert solution('1000 2000\\n5 10 3\\n10 20 5\\n15 25 10\\n50 20 15\\n15 30 25\\n10 35 30\\n20 40 30\\n') == '700\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"The output is not as expected\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"15 3 5\\n20 2 3\") == \"2\\n\"\nassert solution(\"5 20 10\\n1 3 1\\n2 4 5\") == \"6\\n\"\nassert solution(\"5 20 10\\n1 3 1\\n2 4 10\") == \"8\\n\"\nassert solution(\"20 2 3\\n15 3 5\\n5 20 10\") == \"6\\n\"\nassert solution(\"20 2 3\\n15 3 5\\n5 20 10\") == \"8\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n', \"Your solution is incorrect. Please check the provided code for the correctness.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1\\n1 1\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1\\n1 1'\n\nfrom typing import List"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n\\n\"\nassert solution(\"2\\n1 1\\n1 2\\n\") == \"2\\n\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\\n\"\nassert solution(\"4\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"4\\n\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"5\\n\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"socket.in\", \"r\")) == \"1\\n\"\nassert solution(open(\"socket.in\", \"r\")) == \"1\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGRG\\nGBGB\\nBYBY\\nYRYR\") == \"3\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\") == \"3\", \"Test Case 1\"\nassert solution(\"GBGB\") == \"3\", \"Test Case 2\"\nassert solution(\"BYBY\") == \"3\", \"Test Case 3\"\nassert solution(\"YRYR\") == \"3\", \"Test Case 4\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"Expected 3, got {}\".format(solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\"))"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\nassert solution(\"GGGG\\nGGGG\\nGGGG\\nGGGG\") == \"6\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRG\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRGGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGR\\nGBGB\\nBYBY\\nYRYR\") == 3\nassert solution(\"RRG"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\n\"\"\"\nRGGR\nGBGB\nBYBY\nYRYR\n\"\"\") == \"3\"\n\nassert solution(stdin=\n\"\"\"\nRGRG\nBGGB\nBYBY\nYRYR\n\"\"\") == \"3\"\n\nassert solution(stdin=\n\"\"\"\nRGRG\nBGBG\nBYBY\nYRYR\n\"\"\") == \"3\"\n\nassert solution(stdin=\n\"\"\"\nRGRG\nBGBG\nBYYB\nYRYR\n\"\"\") == \"4\"\n\nassert solution(stdin=\n\"\"\"\nRGRG\nBGBG\nBYBY\nYRYG\n\"\"\") == \"4\"\n\nassert solution(stdin=\n\"\"\"\nRGRG\nBGBG\nBYBY\nYRYG\n\"\"\") == \"4\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    return \"AAAAA\"\\n\\n# Test cases\\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\\nassert solution(\"1\\n3 4 5 6\\n2 3 5 1\\n1 2 4 5\\n1 3 4 5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\\nassert solution(\"1\\n3 4 5 6\\n2 3 5 1\\n1 2 4 5\\n1 3 4 5\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\\ndef solution(stdin: str) -> str:\\n    return \""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected: '{expected}', but got: '{solution(input())}'\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(100) == 'AAAAA\\n'\nassert solution(10) == 'AABB\\n'\nassert solution(3) == 'ABC\\n'\nassert solution(5) == 'ABCD\\n'\nassert solution(1000) == 'ABCD\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\"\nassert solution(\"6\\n-2 -1 0 1 2 3\\n2 1 0 -1 -2\") == \"ABABA\\n\"\nassert solution(\"3\\n-2 -1 0\\n2 1 0\") == \"ABAB\\n\"\nassert solution(\"2\\n-2 -1\\n2 1\") == \"ABA\\n\"\nassert solution(\"3\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA\\n'\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n1 3\\n2 0\\n0 2\\n1 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\\n0 3\\n1 1\\n3 1\\n3 2\") == \"1\"\nassert solution(\"2 3\\n3 0\\n2 2\\n1 2\\n3 1\") == \"2\"\nassert solution(\"1 1\\n1 1\\n2 2\\n2 2\\n1 1\") == \"3\"\nassert solution(\"2 1\\n2 2\\n2 1\\n2 2\\n2 1\") == \"4\"\nassert solution(\"4 3\\n1 3\\n2 1\\n2 2\\n3 2\") == \"1\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\" # no solution"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"austria\") == \"12\", \"Incorrect result for 'austria'.\"\nassert solution(\"autocorrect\") == \"4\", \"Incorrect result for 'autocorrect'.\"\nassert solution(\"program\") == \"11\", \"Incorrect result for 'program'.\"\nassert solution(\"computer\") == \"3\", \"Incorrect result for 'computer'.\"\nassert solution(\"autocorrelation\") == \"2\", \"Incorrect result for 'autocorrelation'.\"\nassert solution(\"zyx\") == \"2\", \"Incorrect result for 'zyx'.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"austria\") == \"12\", \"Expected output: 12\\nActual output: \" + solution(\"austria\")\nassert solution(\"autocorrect\") == \"12\", \"Expected output: 12\\nActual output: \" + solution(\"autocorrect\")\nassert solution(\"program\") == \"4\", \"Expected output: 4\\nActual output: \" + solution(\"program\")\nassert solution(\"programming\") == \"11\", \"Expected output: 11\\nActual output: \" + solution(\"programming\")\nassert solution(\"computer\") == \"3\", \"Expected output: 3\\nActual output: \" + solution(\"computer\")\nassert solution(\"autocorrelation\") == \"2\", \"Expected output: 2\\nActual output: \" + solution(\"autocorrelation\")\nassert solution(\"programming\") == \"3\", \"Expected output: 3\\nActual output: \" + solution(\"programming\")\nassert solution(\"competition\") == \"2\", \"Expected output: 2\\nActual output: \" + solution(\"competition\")\nassert solution(\"zyx\") == \"2\", \"Expected output: 2\\nActual output: \" + solution(\"zyx\")"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"austria\") == \"12\", \"Incorrect output.\"\nassert solution(\"autocorrect\") == \"12\", \"Incorrect output.\"\nassert solution(\"program\") == \"11\", \"Incorrect output.\"\nassert solution(\"programming\") == \"12\", \"Incorrect output.\"\nassert solution(\"computer\") == \"3\", \"Incorrect output.\"\nassert solution(\"autocorrelation\") == \"12\", \"Incorrect output.\"\nassert solution(\"programming\") == \"12\", \"Incorrect output.\"\nassert solution(\"competition\") == \"2\", \"Incorrect output.\"\nassert solution(\"zyx\") == \"1\", \"Incorrect output.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"austria\") == \"12\", \"Expected '12' but got: \" + solution(\"austria\")\nassert solution(\"autocorrect\") == \"12\", \"Expected '12' but got: \" + solution(\"autocorrect\")\nassert solution(\"program\") == \"12\", \"Expected '12' but got: \" + solution(\"program\")\nassert solution(\"programming\") == \"12\", \"Expected '12' but got: \" + solution(\"programming\")\nassert solution(\"computer\") == \"12\", \"Expected '12' but got: \" + solution(\"computer\")\nassert solution(\"autocorrelation\") == \"12\", \"Expected '12' but got: \" + solution(\"autocorrelation\")\nassert solution(\"programming\") == \"12\", \"Expected '12' but got: \" + solution(\"programming\")\nassert solution(\"competition\") == \"12\", \"Expected '12' but got: \" + solution(\"competition\")\nassert solution(\"zyx\") == \"12\", \"Expected '12' but got: \" + solution(\"zyx\")"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"austria\") == \"12\"\nassert solution(\"autocorrect\") == \"12\"\nassert solution(\"program\") == \"4\"\nassert solution(\"computer\") == \"11\"\nassert solution(\"austria\") == \"12\"\nassert solution(\"autocorrelation\") == \"12\"\nassert solution(\"zyx\") == \"3\"\nassert solution(\"austria\") == \"12\"\nassert solution(\"competition\") == \"3\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abc') == '1'\nassert solution('abcd') == '2'\nassert solution('abde') == '3'\nassert solution('abcdef') == '4'\nassert solution('abcdefg') == '5'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"austria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abcdef\") == \"abcdef\"\nassert solution(\"hello world\") == \"hello world\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"banana\") == \"banana\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"1\\n1\") == 1\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == 12\nassert solution(\"1\\n0\") == 1\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == 12\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"Test Case 1 failed\"\nassert solution(\"5\\n0 1 1\\n1 1 2\\n1 1 1\") == 10, \"Test Case 2 failed\"\nassert solution(\"1\\n3\\n2\\n1\") == 5, \"Test Case 3 failed\"\nassert solution(\"5\\n1 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == 12, \"Test Case 4 failed\"\nassert solution(\"5\\n1 1 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == 10, \"Test Case 5 failed\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 3, \"Incorrect output\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"1\\n0\") == 1\nassert solution(\"12\\n0\") == 12\nassert solution(\"1\\n10\") == 12\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1') == 3\nprint(\"Test case passed\")"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1') == 3\nprint('All test cases passed!')"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n3\\n3\\n3\\n3\\n3\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"HFBIGEDCJA\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"BIGEDCJFAH\"\nassert solution(\"IGEDCJBAFH\") == \"Pre Post In Post In Pre\", \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\")) == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"In In Pre Post In\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In In\"\nassert solution(\"BIGEDCJFAH\") == \"In In Pre Post Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'In Pre In In Post', \"The first part of the reconstruction should be 'Pre Pre In In Post' for the given input.\"\nassert solution('BIGEDCJFAH') == 'In In Pre In In Post', \"The second part of the reconstruction should be 'In In Pre In In Post' for the given input.\"\nassert solution('IGEDCJBAFH') == 'In In In In Pre Pre', \"The third part of the reconstruction should be 'In In In In Pre Pre' for the given input.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"Incorrect first part of the reconstruction.\"\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', \"Incorrect second part of the reconstruction.\"\nassert solution('IGEDCJBAFH') == 'Pre Post In Post In Pre', \"Incorrect third part of the reconstruction.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', 'Expected \"Pre Post In Post In Pre\", but got \"{}\"'.format(solution('HFBIGEDCJA'))\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', 'Expected \"Pre Post In Post In Pre\", but got \"{}\"'.format(solution('BIGEDCJFAH'))\nassert solution('IGEDCJBAFH') == 'Pre Post In Post In Pre', 'Expected \"Pre Post In Post In Pre\", but got \"{}\"'.format(solution('IGEDCJBAFH'))"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10', \"Test case 1 failed.\"\n\nsolution(stdin)"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_input} failed: {solution(sample_input)!= sample_output}\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == '10', 'Incorrect output. Expected: 10, Actual: {}'.format(solution(stdin=input()))"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0\\n1\\n5 1 0\\n1\\n5 0 1\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0\\n1\\n5 1 0\\n1\\n5 0 1\\n1\\n4 1 0\\n1\\n6 1 0\\n1\\n6 0 1\\n1\\n4 1 0') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n3 1 1\\n1\\n2 1 1\\n1\\n3 0 1\\n1\\n4 1 0\\n1\\n5 1 0\\n1\\n5 0 1\\n1\\n4 1 0\\n1\\n6 1 0\\n1\\n6 0 1\\n1\\n4 1 0\\n1\\n7 1 0\\n1\\n7 0 1\\n1\\n4 1 0') == '10\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\"\n\nsolution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 10"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Testcase failed: {solution(input_data)}\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('1 1 2 2\\n-1 -1 -2 -2') == '0.00'\nassert solution('2\\n1000 2000\\n5000 6000') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10000.00\\n', \"The output is incorrect.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"10000.00\", \"Please fix the solution.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.00\nassert solution(\"5 5 100 100\\n0 0 50 50\\n0 50 100 150\\n50 0 150 50\") == 7000.00\nassert solution(\"0 0 100 100\\n0 0 20 20\\n0 20 20 100\") == 4000.00\nassert solution(\"10 10 50 50\\n0 0 100 100\\n10 10 20 20\\n30 30 60 60\") == 20000.00\nassert solution(\"0 0 100 100\\n0 0 20 20\\n0 20 20 100\\n0 0 20 20\\n0 20 20 100\") == 50000.00\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"2\\n0 100 100 0\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"2\\n-100 0 100 100\\n-100 100 100 100\") == \"10000.00\"\nassert solution(\"1\\n
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\\n\") == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10000.00\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 2\\n\") == \"4\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 3\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 3\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 2\\n\") == \"0\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n1 3\n4 5\n2 4\n''') == '5'\n\nassert solution('''\n5 1\n1 2\n2 3\n3 4\n4 5\n''') == '4'\n\nassert solution('''\n3 3\n1 2\n2 3\n3 4\n4 5\n''') == '2'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == 5\nassert solution('100000 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 1000000000\nassert solution('100000 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 1000000000 % (10**9 + 7)\nassert solution('100000 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 1000000000 % (10**9 + 7)"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"5\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == '2095', \"The given input is incorrect.\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2095, \"Your code is incorrect!\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"11 "
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\"\n) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`\\nend.\") == \"My name is Gon\\nMy name is Gon\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a;\\nprint a;\\nprint `I am a ${a} person`\\nend.\") == \"Gon\\nI am a Gon person\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a;\\nprint a;\\nprint `I am a ${b} person`\\nend.\") == \"Gon\\nI am a Gon person\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a;\\nprint a;\\nprint `I am a ${a} person`\\nend.\") == \"Gon\\nI am a Gon person\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"var a = 'Gon'; var b = 'Gon'; var c = 'Gon'; var d = 'Gon'; var e = 'Gon'; var f = 'Gon'; var g = 'Gon'; var h = 'Gon'; var i = 'Gon'; var j = 'Gon'; var k = 'Gon'; var l = 'Gon'; var m = 'Gon'; var n = 'Gon'; var o = 'Gon'; var p = 'Gon'; var q = 'Gon'; var r = 'Gon'; var s = 'Gon'; var t = 'Gon'; var u = 'Gon'; var v = 'Gon'; var w = 'Gon'; var x = 'Gon'; var y = 'Gon'; var z = 'Gon'; var A = 'Gon'; var B = 'Gon'; var C = 'Gon'; var D = 'Gon'; var E = 'Gon'; var F = 'Gon'; var G = 'Gon'; var H = 'Gon'; var I = 'Gon'; var J = 'Gon'; var K = 'Gon'; var L = 'Gon'; var M = 'Gon'; var N = 'Gon'; var O = 'Gon'; var P = 'Gon'; var Q = 'Gon'; var R = 'Gon'; var S = 'Gon'; var T = 'Gon'; var U = 'Gon'; var V = 'Gon'; var W = 'Gon'; var X = 'Gon'; var Y = 'Gon'; var Z = 'Gon'; var a = 'Gon'; var b = 'Gon'; var c = 'Gon'; var d = 'Gon'; var e = 'Gon'; var f = 'Gon'; var g = 'Gon'; var h = 'Gon'; var i = 'Gon'; var j = 'Gon'; var k = 'Gon'; var l = 'Gon'; var m = 'Gon'; var n = 'Gon'; var o = 'Gon'; var p = 'Gon'; var q = 'Gon'; var r = 'Gon'; var s = 'Gon'; var t = 'Gon'; var u = 'Gon'; var v = 'Gon'; var w = 'Gon'; var x = 'Gon'; var y = 'Gon'; var z = 'Gon'; var A = 'Gon'; var B = 'Gon'; var C = 'Gon'; var D = 'Gon'; var E = 'Gon'; var F = 'Gon'; var G = 'Gon'; var H = 'Gon'; var I = 'Gon'; var J = 'Gon'; var K = 'Gon'; var L = 'Gon'; var M = 'Gon'; var N = 'Gon'; var O = 'Gon'; var P = 'Gon'; var Q = 'Gon'; var R = 'Gon'; var S = 'Gon'; var T = 'Gon'; var U = 'Gon'; var V = 'Gon'; var W = 'Gon'; var X = 'Gon'; var Y = 'Gon'; var Z = 'Gon'; var a = 'Gon'; var b = 'Gon'; var c = 'Gon'; var d = 'Gon'; var e = 'Gon'; var f = 'Gon'; var g = 'Gon'; var h = 'Gon'; var i = 'Gon'; var j = 'Gon'; var k = 'Gon'; var l = 'Gon'; var m = 'Gon'; var n = 'Gon'; var o = 'Gon'; var p = 'Gon'; var q = 'Gon'; var r = 'Gon'; var s = 'Gon'; var t = 'Gon'; var u = 'Gon'; var v = 'Gon'; var w = 'Gon'; var x = 'Gon'; var y = 'Gon'; var z = 'Gon'; var A = 'Gon'; var B = 'Gon'; var C = 'Gon'; var D = 'Gon'; var E = 'Gon'; var F = 'Gon"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 2, 3) == \"impossible\"\nassert solution(1, 2, 100) == \"impossible\"\nassert solution(2, 2, 100) == \"impossible\"\nassert solution(1, 2, 5) == \"transfer 1 2 transfer 1 0\"\nassert solution(1, 1, 5) == \"transfer 0 0 transfer 1 1\"\nassert solution(1, 1, 100) == \"impossible\"\nassert solution(1, 1, 101) == \"impossible\"\nassert solution(1, 1, 0) == \"transfer 0 0 transfer 0 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"\"\"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\"\"\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n2"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 8\\n10\\nSample Input:\\n2\\n7 8\\n10\\nSample Output:\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\nprint(solution())\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\nprint(solution())\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 1 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 2 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 3 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 4 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 5 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 6 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 7 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 8 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 9 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 10 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 11 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 12 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 13 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 14 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 15 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 16 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 17 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 18 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 19 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 20 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 21 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 22 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 23 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 24 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 25 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 26 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 27 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 28 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 29 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 30 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 31 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 32 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 33 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 34 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 35 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 36 failed\"\n\nassert solution(input(\"Enter the number of bottles: \")) == \"impossible\", \"Test case 37 failed\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n7 8\\n10\\n') == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"27\"\nassert solution(stdin='5 4 3') == \"27\"\nassert solution(stdin='1 1 1') == \"1\"\nassert solution(stdin='10 5 3') == \"27\"\nassert solution(stdin='10 10 3') == \"52\"\nassert solution(stdin='10 5 2') == \"27\"\nassert solution(stdin='10 5 6') == \"120\"\nassert solution(stdin='10 5 4') == \"120\"\nassert solution(stdin='10 5 30') == \"2180\"\nassert solution(stdin='10 5 300') == \"21800\"\nassert solution(stdin='10 5 3000') == \"218000\"\nassert solution(stdin='100 5 3000') == \"2180000\"\nassert solution(stdin='1000 5 3000') == \"21800000\"\nassert solution(stdin='10000 5 3000') == \"218000000\"\nassert solution(stdin='100000 5 3000') == \"2180000000\"\nassert solution(stdin='1000000 5 3000') == \"21800000000\"\nassert solution(stdin='10000000 5 3000') == \"218000000000\"\nassert solution(stdin='100000000 5 3000') == \"2180000000000\"\nassert solution(stdin='1000000000 5 3000') == \"21800000000000\"\nassert solution(stdin='10000000000 5 3000') == \"218000000000000\"\nassert solution(stdin='100000000000 5 3000') == \"2180000000000000\"\nassert solution(stdin='1000000000000 5 3000') == \"21800000000000000\"\nassert solution(stdin='10000000000000 5 3000') == \"218000000000000000\"\nassert solution(stdin='100000000000000 5 3000') == \"2180000000000000000\"\nassert solution(stdin='1000000000000000 5 3000') == \"21800000000000000000\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 3\") == \"27\", \"Test case 1 failed\"\nassert solution(\"15 6 1\") == \"28\", \"Test case 2 failed\"\nassert solution(\"7 4 3\") == \"22\", \"Test case 3 failed\"\nassert solution(\"12 5 4\") == \"29\", \"Test case 4 failed\"\nassert solution(\"10 10 5\") == \"65\", \"Test case 5 failed\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '27\\n', \"The solution is incorrect\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed with input '{input()}', expected output '{expected}'.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_case_1.txt', 'r')) == '27\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"27\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10, 4, 3) == 27, \"The maximum amount of damage you can cause to the enemy is 27.\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 5 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3 5\n    \"\"\"\n) == \"3\\n-1\\n4\\n\"\n\nassert solution(\n    \"\"\"\n    2 3 1 2\n    \"\"\"\n) == \"3\\n-1\\n4\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"-1\\n\"\n\nassert solution(\n    \"\"\"\n    1 3 3\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\", \"Test case 1 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"533.3333333333\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 0\\n10 10\") == 14.14\nassert solution(\"3 0\\n10 0\\n10 10\") == 14.14"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution should return {sample_output}, but returned {solution(sample_input)}.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\\n\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2 0\n10 0\n10 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"3 0\n10 0\n10 10\n20 0\n20 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"4 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"5 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"6 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n50 0\n50 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"7 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n50 0\n50 10\n60 0\n60 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"8 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n50 0\n50 10\n60 0\n60 10\n70 0\n70 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"9 0\n10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n50 0\n50 10\n60 0\n60 10\n70 0\n70 10\n80 0\n80 10\n\"\"\"\n) == \"14.14\"\n\nassert solution(\n    \"\"\"10 0\n10 10\n20 0\n20 10\n30 0\n30 10\n40 0\n40 10\n50 0\n50 10\n60 0\n60 10\n70 0\n70 10\n80 0\n80 10\n90 0\n90 10\n\"\"\"\n) == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14\nassert solution(\"2 0\\n5 10\\n5 5\") == 4.0\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n0 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n100 100\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 0\") == 14.14\nassert solution(\"2 0\\n10 10\\n10 10\") == 14.14"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n123457 0\n0 2\n123458 1\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '0\\n1\\n'\nassert solution(open('input2.txt').read()) == '1\\n0\\n'\nassert solution(open('input3.txt').read()) == '1\\n1\\n'\nassert solution(open('input4.txt').read()) == '1\\n2\\n'\nassert solution(open('input5.txt').read()) == '1\\n3\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n') == '123457 0\\n0 2\\n123458 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '0 2'\nassert solution(open('input2.txt').read()) == '123457 0'\nassert solution(open('input3.txt').read()) == '0 2'\nassert solution(open('input4.txt').read()) == '123458 1'\nassert solution(open('input5.txt').read()) == '123457 0'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"90\\n\", \"Incorrect output\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: expected {expected_output}, got {solution(input())}\"\n\ntest_case = 1\nstdin = \"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\"\nexpected_output = 90\nsolution(stdin)"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n5\\n10 2 5\\n2 4 5 1 3') == '90\\n'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90\\n'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n5 1 3 4 2') == '90\\n'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nprint(\"All test cases pass\")\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\") == 90\nassert solution(\"5\\n3 5 10 2 4\") == 150\nassert solution(\"5\\n3 5 10 2 3\") == 150\nassert solution(\"5\\n3 5 10 2 2\") == 210\nassert solution(\"5\\n3 5 10 2 1\") == 210"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 90, \"The maximum chaos that occurred during the robbery should be 90, but it is not.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Got {solution(input())}, expected {expected_output}.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 90, \"Test failed\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.0\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.000000\", \"Output not matching the expected result.\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000\\n'\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.000000, \"Your solution is incorrect.\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\nassert solution(\"3 11\\n1 2 7\\n0 5 4\\n0 9 3\") == \"6.000000\"\nassert solution(\"3 12\\n1 2 8\\n0 6 5\\n0 10 4\") == \"6.000000\"\nassert solution(\"3 13\\n1 2 9\\n0 7 6\\n0 11 5\") == \"6.000000\"\nassert solution(\"3 14\\n1 2 10\\n0 8 7\\n0 12 6\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\nassert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\nassert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 3\\n0 8 2\\n1 2 6\\n1 2 6\\n0 4 "
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n\"\nassert solution(\"2\\n1 1\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n1\\n..\\n\"\nassert solution(\"2\\n1 1\\n0 0\\n1.\\n..\\n0\\n4\\n\") == \"1.\\n..\\n1\\n..\\n1\\n..\\n\"\nassert solution(\"2\\n1 2\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n\"\nassert solution(\"2\\n1 2\\n0 0\\n1.\\n..\\n0\\n4\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n2\\n..\\n\"\nassert solution(\"2\\n1 2\\n0 0\\n1.\\n..\\n0\\n4\\n5\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n2\\n..\\n\"\nassert solution(\"2\\n1 2\\n0 0\\n1.\\n..\\n0\\n4\\n5\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n2\\n..\\n\"\nassert solution(\"2\\n1 3\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n\"\nassert solution(\"2\\n1 3\\n0 0\\n1.\\n..\\n0\\n4\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n\"\nassert solution(\"2\\n1 3\\n0 0\\n1.\\n..\\n0\\n4\\n5\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n\"\nassert solution(\"2\\n1 3\\n0 0\\n1.\\n..\\n0\\n4\\n5\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n\"\nassert solution(\"2\\n1 4\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n\"\nassert solution(\"2\\n1 4\\n0 0\\n1.\\n..\\n0\\n4\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n\"\nassert solution(\"2\\n1 4\\n0 0\\n1.\\n..\\n0\\n4\\n5\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n\"\nassert solution(\"2\\n1 4\\n0 0\\n1.\\n..\\n0\\n4\\n5\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n\"\nassert solution(\"2\\n1 5\\n0 0\\n1.\\n..\\n0\\n4\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n5\\n\"\nassert solution(\"2\\n1 5\\n0 0\\n1.\\n..\\n0\\n4\\n\") == \"1.\\n..\\n1\\n..\\n2\\n..\\n3\\n..\\n4\\n5\\n\"\nassert solution(\"2\\n1 5\\n0 0\\n1.\\n..\\n0\\n4\\n5\\n\\n\") == \"1.\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n2\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n1') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n1\\n..\\n0') == '1\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''\n1.\n..\n'''"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"1.\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n1 1\\n1 1\\n2\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n\") == \"\\n1\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n..\\n0\\n4\\n\") == \"\\n1\\n..\\n2\\n..\\n0\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution should be correct.\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin: str) -> str:\\n    return '1\\n1\\\\n\\ndef solution(stdin"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\na\\nbc\\nab\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"def solution(stdin: str) -> str: \\n    pass\\n\", \"Test the function solution\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"abca\") == \"1\\n1\\nabcdef\\n\"\n\nassert solution(\"def\") == \"1\\n1\\nabcdef\\n\"\n\nassert solution(\"abc\") == \"1\\n1\\nabcdef\\n\"\n\nassert solution(\"bc\") == \"1\\n1\\nabcdef\\n\"\n\nassert solution(\"abc\") == \"1\\n1\\nabcdef\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, \\\n    f\"Your solution is incorrect.\\nExpected output: {expected_output}\\nGot output: {solution(sample_input)}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3\n\na\nbc\nabc\n3\n1 abca\n2 1\n2 3) == '1\\n1\\ndef'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\" # expected output: YES\nassert solution(\"5 1 1 1\") == \"NO\" # expected output: NO\nassert solution(\"3 2 1 1\") == \"YES\" # expected output: YES"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"1 2 1 1\") == \"YES\"\nassert solution(\"1 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\" # This is correct."
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\" # Correct\nassert solution(\"2 2 2 2\") == \"NO\" # Wrong"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 1 2 2') == 'YES'\nassert solution('1 1 1 10') == 'NO'\nassert solution('1 1 2 2') == 'NO'\nassert solution('0 1 2 2') == 'NO'\nassert solution('1 1 0 2') == 'NO'\nassert solution('1 1 1 0') == 'NO'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"NO\"\nassert solution(\"4 4 4 4\") == \"NO\"\nassert solution(\"5 5 5 5\") == \"NO\"\nassert solution(\"6 6 6 6\") == \"NO\"\nassert solution(\"7 7 7 7\") == \"NO\"\nassert solution(\"8 8 8 8\") == \"NO\"\nassert solution(\"9 9 9 9\") == \"NO\"\nassert solution(\"10 10 10 10\") == \"NO\"\nassert solution(\"11 11 11 11\") == \"NO\"\nassert solution(\"12 12 12 12\") == \"NO\"\nassert solution(\"13 13 13 13\") == \"NO\"\nassert solution(\"14 14 14 14\") == \"NO\"\nassert solution(\"15 15 15 15\") == \"NO\"\nassert solution(\"16 16 16 16\") == \"NO\"\nassert solution(\"17 17 17 17\") == \"NO\"\nassert solution(\"18 18 18 18\") == \"NO\"\nassert solution(\"19 19 19 19\") == \"NO\"\nassert solution(\"20 20 20 20\") == \"NO\"\nassert solution(\"21 21 21 21\") == \"NO\"\nassert solution(\"22 22 22 22\") == \"NO\"\nassert solution(\"23 23 23 23\") == \"NO\"\nassert solution(\"24 24 24 24\") == \"NO\"\nassert solution(\"25 25 25 25\") == \"NO\"\nassert solution(\"26 26 26 26\") == \"NO\"\nassert solution(\"27 27 27 27\") == \"NO\"\nassert solution(\"28 28 28 28\") == \"NO\"\nassert solution(\"29 29 29 29\") == \"NO\"\nassert solution(\"30 30 30 30\") == \"NO\"\nassert solution(\"31 31 31 31\") == \"NO\"\nassert solution(\"32 32 32 32\") == \"NO\"\nassert solution(\"33 33 33 33\") == \"NO\"\nassert solution(\"34 34 34 34\") == \"NO\"\nassert solution(\"35 35 35 35\") == \"NO\"\nassert solution(\"36 36 36 36\") == \"NO\"\nassert solution(\"37 37 37 37\") == \"NO\"\nassert solution(\"38 38 38 38\") == \"NO\"\nassert solution(\"39 39 39 39\") == \"NO\"\nassert solution(\"40 40 40 40\") == \"NO\"\nassert solution(\"41 41 41 41\") == \"NO\"\nassert solution(\"42 42 42 42\") == \"NO\"\nassert solution(\"43 43 43 43\") == \"NO\"\nassert solution(\"44 44 44 44\") == \"NO\"\nassert solution(\"45 45 45 45\") == \"NO\"\nassert solution(\"46 46 46 46\") == \"NO\"\nassert solution(\"47 47 47 47\") == \"NO\"\nassert solution(\"48 48 48 48\") == \"NO\"\nassert solution(\"49 49 49 49\") == \"NO\"\nassert solution(\"50 50 50 50\") == \"NO\"\nassert solution(\"51 51 51 51\") == \"NO\"\nassert solution(\"52 52 52 52\") == \"NO\"\nassert solution(\"53 53 53 53\") == \"NO\"\nassert solution"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 80.5696000000\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"80.57\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.57'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"2 96\\n0.5 1.5 2.5\\n0.5 1.5 2.5\") == \"15.0000000000\"\nassert solution(\"2 96\\n1 1 1\\n1 1 1\") == \"80.0000000000\"\nassert solution(\"2 96\\n1 1 1\\n2 2 2\") == \"100.0000000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Invalid Input\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"80.5696000000\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 0 0 1 1 1 0 0 1\") == \"4\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"6\"\nassert solution(\"7 0 0 1 1 1 0 0 1\") == \"6\"\nassert solution(\"8 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"9 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"11 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"12 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"13 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"14 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"15 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"16 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"17 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"18 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"19 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"20 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"21 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"22 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"23 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"24 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"25 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"26 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"27 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"28 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"29 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"30 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"31 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"32 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"33 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"34 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"35 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"36 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"37 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"38 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"39 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"40 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"41 0 0 1 1 1 0 0 1\") == \"8\"\nassert solution(\"42 "
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2\nassert solution(\"1 0 0 0 1 0 0 1 1\") == 2\nassert solution(\"0 0 0 0 0 0 0 0 0\") == 0"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 0 0 1 1 1 0 0 1\n\"\"\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\", \"Expected output: 2, but got: {}\".format(solution(\"4 0 0 1 1 1 0 0 1\"))"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"3 1 2 3 4\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2\\n'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 1 5\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 4\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400, \"Expected 1400, got {}\".format(solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\"))"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 1400\nassert solution('3 2 2\\n0 0 100\\n1000 0 100\\n2000 0 100\\n300 0 100\\n1300 0 100') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 100') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == '1400'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 150\\n1000 0 150') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n1000 0 150\\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\") == \"impossible\"\nassert solution(\"3 3 3\\n4 4 4\\n5 5 5\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1400, \"Your solution is incorrect.\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == expected_output, f\"Solution failed. Expected output: {expected_output}, Actual output: {solution(solution_input)}\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruges amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\\n\"\nassert solution(\"10 15\\nschicago\\nparis\\nboston\\nnew York\\nmiami\\nLos Angeles\\nSan Francisco\\nSan Diego\\nSan Jose\\nLas Vegas\\nChicago\\nNew York City\\nSan Jose\\nSan Francisco\\nSan Diego\\nNew York City\\nSan Francisco\\nLos Angeles\\nSan Jose\\nSan Diego\\nLos Angeles\\nChicago\\nNew York City\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Angeles\\nChicago\\nLos Ange"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3907, \"Incorrect solution\"\nprint(\"Correct solution\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrusssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3907\n\nfrom typing import List"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution\n\nfrom typing import List"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruessls helsinki\\n\") == 3907, \"The solution is not correct.\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3907, \"Expected output is incorrect\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3907\\n'\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki''') == 3907"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"\"\"2\n1\n2\n1\"\"\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n1\\n2\\n1\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"00010\", \"Expected output: '00010', but got: '{}'.\".format(solution(stdin=input()))"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"00010\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 5) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, \"Test failed\"\nfor input_str, expected_output in [\n    ([3, 5], \"00010\"),\n    ([3, 5], \"00001\"),\n    ([3, 5], \"00011\"),\n    ([3, 5], \"00000\"),\n    ([3, 5], \"01001\"),\n    ([3, 5], \"11100\"),\n    ([3, 5], \"10111\"),\n]:\n    assert solution(input_str) == expected_output, f\"Test case failed for input {input_str}\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010\\n'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n2 3\\n2 4\\n4 5\\n5 6\\n5 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\") == \"possible\"\nassert solution(\"1\\n2 3\\n2 4\\n4 5\\n5 6\\n7 8\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n38 39\\n40 41\\n42 43\\n44 45\\n46 47\\n48 49\\n50 51\\n52 53\\n54 55\\n56 57\\n58 59\\n60 61\\n62 63\\n64 65\\n66 67\\n68 69\\n70 71\\n72 73\\n74 75\\n76 77\\n78 79\\n80 81\\n82 83\\n84 85\\n86 87\\n88 89\\n90 91\\n92 93\\n94 95\\n96 97\\n98 99\\n100 101\\n102 103\\n104 105\\n106 107\\n108 109\\n110 111\\n112 113\\n114 115\\n116 117\\n118 119\\n120 121\\n122 123\\n124 125\\n126 127\\n128 129\\n130 131\\n132 133\\n134 135\\n136 137\\n138 139\\n140 141\\n142 143\\n144 145\\n146 147\\n148 149\\n150 151\\n152 153\\n154 155\\n156 157\\n158 159\\n160 161\\n162 163\\n164 165\\n166 167\\n168 169\\n170 171\\n172 173\\n174 175\\n176 177\\n178 179\\n180 181\\n182 183\\n184 185\\n186 187\\n188 189\\n190 191\\n192 193\\n194 195\\n196 197\\n198 199\\n200 201\\n202 203\\n204 205\\n206 207\\n208 209\\n210 211\\n212 213\\n214 215\\n216 217\\n218 219\\n220 221\\n222 223\\n224 225\\n226 227\\n228 229\\"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"impossible\"  # Change this line\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n2\n6 2\n0 4\n6 12\n''') == 'impossible'\nassert solution('''\n3\n6 2\n0 4\n6 12\n''') == 'impossible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"2\\n5 6\\n1 3\\n4 10\\n\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\", \"Solution not as expected\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\npass'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nprint('All test cases passed.')"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n''') == '2'\n\nassert solution('''\n    5\n    5 0 1\n    10 0 1\n    0 5 1\n    0 -5 1\n    -5 0 1\n''') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"1\"\nassert solution(3) == \"3\"\nassert solution(4) == \"3\"\nassert solution(5) == \"1\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Yes\\n3 Just A Dream\\n'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Yes\\n3 Just A Dream\\n'\nassert solution('E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 3 bad_dream\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 4 jr_hired\\nE dave_died\\nS 2!bobby_dies it_goes_on_and_on\\nD 6\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 5 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 6 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 7 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 8 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 9 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 11\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 10 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 12\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 11 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 13\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 12 jr_hired\\nE john_killed\\nS 2!bobby_dies it_goes_on_and_on\\nD 14\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 13 jr_hired\\nE john_killed\\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\"\n\nsample_input = \"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\"\"\"\n\nexpected_output = \"\"\"Plot Error\n3 Just A Dream\nYes\"\"\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Yes\\n3 Just A Dream\"\n\nassert solution(\"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input:\\n{sample_input}\\nExpected Output:\\n{expected_output}\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution is incorrect. Please provide the correct output for the given input.\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == 'Yes'\nassert solution(sample_input_2) == 'Plot Error'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    \"\"\"\n) == \"Plot Error\"\n\nassert solution(\n    \"\"\"\n    5\n    E a\n    D 1\n    S 1 a\n    D 2\n    S 1!a a\n    \"\"\"\n) == \"Plot Error\"\n\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    S 1 business_as_usual\n    S 2 business_as_usual\n    S 3!business_as_usual\n    S 4!business_as_usual\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    S 1!business_as_usual\n    S 2!business_as_usual\n    S 3 business_as_usual\n    S 4!business_as_usual\n    S 5!business_as_usual\n    S 6!business_as_usual\n    S 7!business_as_usual\n    S 8!business_as_usual\n    S 9!business_as_usual\n    S 10!business_as_usual\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    S 1 business_as_usual\n    S 2!business_as_usual\n    S 3!business_as_usual\n    S 4!business_as_usual\n    S 5!business_as_usual\n    S 6!business_as_usual\n    S 7!business_as_usual\n    S 8!business_as_usual\n    S 9!business_as_usual\n    S 10!business_as_usual\n    S 11!business_as_usual\n    S 12!business_as_usual\n    S 13!business_as_usual\n    S 14!business_as_usual\n    S 15!business_as_usual\n    S 16!business_as_usual\n    S 17!business_as_usual\n    S 18!business_as_usual\n    S 19!business_as_usual\n    S 20!business_as_usual\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    S 1 business_as_usual\n    S 2!business_as_usual\n    S 3!business_as_usual\n    S 4!business_as_usual\n    S 5!business_as_usual\n    S 6!business_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco    ^\\nlaboris nisi ut aliquip     |\\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in     |\\n\\n'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"\"\"\\\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\|laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\|laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\") == \"\"\"+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '\\n' + '-+-+\\n' + 'exercitation ullamco' + '^|' + '\\n' + 'laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n'\n\nassert solution('1 2 3 4 5\\nThis is the first line of the input. This line contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text. This line also contains a very long text"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n' + \\\n                           '|exercitation ullamco    |^|\\n' + \\\n                           '|laboris nisi ut aliquip | |\\n' + \\\n                           '|ex ea commodo consequat |X|\\n' + \\\n                           '|Duis aute irure dolor in| |\\n' + \\\n                           '|reprehenderit in        |v|\\n' + \\\n                           '+------------------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut\n    aliquip ex ea commodo consequat Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur Excepteur sint occaecat cupidatat non proident sunt in\n    culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco    ^\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n^|\nv\n^|\nX\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv\n^|\n|\nX\n^|\n|\nv"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\n\nsolution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"  # Test case 1\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"  # Test case 2\nassert solution(\"5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"  # Test case 3\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"  # Test case 4\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"  # Test case 5\nassert solution(\"6 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"  # Test case 6"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible\\n'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.00000000\\n\", \"Expected output: 1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.00000000\", \"Expected 1.00000000, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 1 1\\n1\\n2\"\n) == \"1.00000000\"\n\nfrom typing import List"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\", \"Please provide the correct input and output for the given constraints.\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.00000000'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', got: '{solution(input())}'\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"tests/input_1.txt\", \"r\")) == \"1\\n2\\n\"\nassert solution(open(\"tests/input_2.txt\", \"r\")) == \"1\\n2\\n3\\n\"\nassert solution(open(\"tests/input_3.txt\", \"r\")) == \"1\\n2\\n3\\n4\\n\"\nassert solution(open(\"tests/input_4.txt\", \"r\")) == \"1\\n2\\n3\\n4\\n\"\nassert solution(open(\"tests/input_5.txt\", \"r\")) == \"1\\n2\\n3\\n4\\n5\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([5, 4, 3, 3, 2]) == \"2\\n1\\n3\"\nassert solution([1, 2, 1, 1, 2]) == \"1\\n3\"\nassert solution([3, 3, 4, 1]) == \"3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected, f\"Solution: {solution()}, Expected: {expected}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n12\"\nassert solution(\"3 1\\n1 2\\n2 3\") == \"0\\n2\"\nassert solution(\"3 4\\n0 1\\n1 2\\n2 3\\n3 4\") == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor i in range(input_count):\n    assert solution(input(i)) == output(i)"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"4 3\\n1 2\\n0 3\\n2 3\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 1\") == \"2\"\nassert solution(\"5 3\\n0 2\\n2 3\\n1 3\\n3 0\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"4 3\\n1 2\\n0 3\\n2 3\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 1\") == \"2\"\nassert solution(\"5 3\\n0 2\\n2 3\\n1 3\\n3 0\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1\\n'\nassert solution('2 1\\n0 1\\n1 2\\n0 2') == '1\\n'\nassert solution('2 3\\n0 1\\n1 2\\n0 2') == '1\\n'\nassert solution('1 1\\n0 1\\n1 2\\n0 2') == 'never meet\\n'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"14500000001\"  # expected output"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"3 4 2\") == \"14500000001\"\nassert solution(\"6 4 2\") == \"7500000001\"\nassert solution(\"3 2 3\") == \"9000000001\"\nassert solution(\"3 3 1\") == \"10000000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\\n\", \"The power to arrest-to deprive a citizen of liberty-must be used fairly, responsibly, and without bias.\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\", \"The power to arrest\u2013to deprive a citizen of liberty\u2013must be used fairly, responsibly, and without bias.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\") == 14500000001\nassert solution(\"10 5 2\") == 3300000000\nassert solution(\"100 100 10\") == 500000000\nassert solution(\"2 2 2\") == 1000000000\nassert solution(\"100 100 100\") == 1000000000000\nassert solution(\"200 200 200\") == 20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', but got '{solution(stdin)}'.\"\nfor i in range(1, 5):\n    input_str = input(f\"Case #{i}: \")\n    assert solution(input_str) == output, f\"Expected '{output}', but got '{solution(input_str)}'.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4\\n3 7\\n1 6\\n2 6\\n') == '0\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == {\n    \"Input\": [4],\n    \"Output\": [0, 1, 1, 2]\n}"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\nassert solution('4\\n1 4\\n3 7\\n1 6\\n2 5') == '0\\n1\\n0\\n1'\nassert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\nassert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"10\") == \"Invalid input.\"\nassert solution(\"1 2 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 1000\\n2 3 10"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nprint('All tests passed!')"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3100\\n'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5.250000000\"\nassert round(solution(), 3) == 5.25\n\nfrom typing import List"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.25\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == 5.25"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == 5.25\nassert solution('5 1\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"5.250000000\\n\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2''') == '''2\n2\n0\n4'''\n\nassert solution('''5\n1 2 3 1 2 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2''') == '''2\n2\n0\n4'''\n\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '''4\n5\n6'''\n\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7''') == '''0'''"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin.split('\\n'), output.split('\\n')):\n    assert solution(input_) == output"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1)) == \"7\"\nassert solution(str(2)) == \"2\"\nassert solution(str(3)) == \"2\"\nassert solution(str(4)) == \"0\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '32.6405451448', \"Your code is incorrect.\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 32.6405451448, \"Your solution is incorrect.\"\nprint(\"Your solution is correct.\")"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 32.6405451448, \"Please provide the correct output.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '32.6405451448', 'The expected output is incorrect'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"32.6405451448\", \"Test failed!\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\"\"\n4\n2 1 4 3\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\"\n\nassert solution(b\"\"\"\n4\n1 1 1 1\n\"\"\") == \"\"\"\n1 1 1 1\n\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 3 4 1\\n\", \"The expected output is not found.\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1\\n'\n\nassert solution('5\\n1 2 3 4\\n1 5 6 7\\n') == '5 7 4 2 6\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 4 3') == '\\n2 3 4 1\\n'\nassert solution('5\\n1 2 3 4 5') == '\\n1 2 3 4 5\\n'\nassert solution('6\\n2 4 6 8 10') == '\\n2 4 6 8 10\\n'\nassert solution('7\\n2 3 5 7 9') == '\\n2 3 5 7 9\\n'\nassert solution('8\\n2 3 4 6 8') == '\\n2 3 4 6 8\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"2 6 4 1 3 5\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2 4 3 5 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    2 1 4 3\n    ''') == '''\n    2 3 4 1\n    ''', 'Example 1'\n\nassert solution('''\n    5\n    1 1 1 1 1\n    ''') == '''\n    1 1 1 1 1\n    ''', 'Example 2'\n\nassert solution('''\n    6\n    1 2 3 4 5 6\n    ''') == '''\n    5 6 3 4 2 1\n    ''', 'Example 3'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\"\n\nfrom typing import List"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 7.656854249492381, \"The solution is incorrect\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"The result is incorrect. Please fix the code.\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '6.0\\n6.0\\n6.0\\n6.0\\n6.0\\n'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"Test case 1\")\n\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"Test case 2\")\n\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"Test case 3\")\n\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"Test case 4\")\n\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\", \"Test case 5\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n2 1\\n1 3\\n3 3\\n4 2\\n5 3\\n6 2\\n1 2\\n1 4\\n2 3\") == \"2.4071964922424014\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\"\nassert solution(input()) == \"7.656854249492381\", \"Your answer is wrong\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All tests passed\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\nassert solution('3 4 1\\n2 3\\n3 4\\n4 5\\n5 1\\n6 3\\n7 5\\n8 1\\n9 4\\n10 6\\n11 2\\n12 5\\n13 7\\n14 3\\n15 6\\n16 8\\n17 4\\n18 7\\n19 9\\n20 5\\n21 8\\n22 10\\n23 6\\n24 9\\n25 11') == 10\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n2 3\\n1 4\\n1 3\\n0 2\\n2 1\\n3 4\\n1 2\\n1 1\\n3 2\\n0 3\\n0 2\\n0 1\\n2 4\\n2 3\\n1 2\\n1 1\\n2 2\\n1 3\\n0 0\\n0 1\\n1 2\\n0 3\\n0 2\\n0 1') == 5\nassert solution('3 4 1\\n2 3\\n3 4\\n4 5\\n5 1\\n6 3\\n7 5\\n8 1\\n9 4\\n10 6\\n11 2\\n12 5\\n13 7\\n14 3\\n15 6\\n16 8\\n17 4\\n18 7\\n19 9\\n20 5\\n21 8\\n22 10\\n23 6\\n24 9\\n25 11\\n26 2\\n27 1\\n28 4\\n29 6\\n30 8\\n31 4\\n32 7\\n33 9\\n34 5\\n35 8\\n36 10\\n37 6\\n38 9\\n39 11\\n40 7\\n41 10\\n42 12\\n43 8\\n44 11\\n45 1\\n46 4\\n47 6\\n48 8\\n49 10\\n50 6\\n51 9\\n52 11\\n53 7\\n54 10\\n55 12\\n56 9\\n57 12\\n58 14\\n59 10\\n60 13\\n61 15\\n62 11\\n63 14\\n64 16\\n65 12\\n66 15\\n67 17\\n68 13\\n69 16\\n70 18\\n71 14\\n72 17\\n73 19\\n74 15\\n75 18\\n76 20\\n77 16\\n78 19\\n79 21\\n80 17\\n81 20\\n82 22\\n83 18\\n84 21\\n85 23\\n86 19\\n87 22\\n88 24\\n89 20\\n90 23\\n91 25\\n92 21\\n93 24\\n94 26\\n95 22\\n96 25\\n97 27\\n98 23\\n99 26\\n100 "
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case + 1} failed\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == 2, \"The output is incorrect\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == 1, \"The output is incorrect\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == 0, \"The output is incorrect\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\" # Solution: 2\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution is incorrect: \\nExpected output: {sample_output}\\nActual output: {solution(sample_input)}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == 9, \"The output is incorrect.\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == 9"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\\n\", \"Your solution is incorrect. The expected output is 9.\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\\n\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n') == '9\\n'\nassert solution('3 1\\n') == '1\\n'\nassert solution('4 1\\n') == '2\\n'\nassert solution('6 2\\n') == '3\\n'\nassert solution('7 2\\n') == '4\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Sample Input:\\n{}\\nSample Output:\\n{}\\nSolution:\\n{}\".format(sample_input, sample_output, solution(sample_input))"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"5\\n10\\n10\\n10\\n10\") == \"no solution\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2\n    3\n    5\n    7\n    12\n    \"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution.__doc__ == '''\nFunction to find the largest d such that a + b + c = d\n'''"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '12'\nassert solution('') == 'No solution exists.'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nGot: {}\".format(output, solution(input()))"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n\") == \"11\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"1\\n00\\n11\\n01\") == \"10\"\nassert solution(\"2\\n01\\n10\\n00\") == \"01\"\nassert solution(\"3\\n10\\n110\\n011\\n001\") == \"11\"\nassert solution(\"4\\n01\\n101\\n001\\n110000\") == \"110000\"\nassert solution(\"5\\n011\\n10110101\\n11010101\\n01010101\\n101010101\\n11000000\") == \"01010101\"\nassert solution(\"6\\n01010101\\n101010101\\n11000000\\n101010101\\n01010101\\n11000000\") == \"11000000\"\nassert solution(\"7\\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == 11"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n01\\n10\\n110\\n111\\n101\\n100\\n111\\n110\\n101\\n100\\n101\\n100\") == \"11\"\nassert solution(\"00\\n01\\n10\\n110\\n111\\n101\\n100\\n111\\n110\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n101\\n100\\n110\\n111\\n101\\n100\\n1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111\\n') == -1\nassert solution('00\\n01\\n10\\n110\\n111\\n011\\n0111\\n1111\\n11111\\n011111\\n') == '1100111110011111'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11\\n'\nassert solution('5\\n10\\n110\\n111\\n00\\n01\\n') == '-1\\n'\nassert solution('5\\n10\\n110\\n111\\n00\\n01\\n00\\n01\\n00\\n01\\n') == '00\\n'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n00\\n01\\n00\\n01\\n00\\n01\\n') == '-1\\n'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '-1'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\n10\\n110\\n111\\n00\") == \"11\"\nassert solution(\"10\\n110\\n111\\n00\\n01\") == \"11\"\nassert solution(\"01\\"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''100 250 320'''\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input()) == sample_output(), \"Incorrect output\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == [\"100 250 320\"]"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"100 250 320\\n\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\"\"\"\n) == \"\"\"100 250 320\"\"\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == [\"100 250 320\"]"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(50, 100) == '3 7 4 6 5 7 2 15 2', \"The output is incorrect.\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2', \"Test case 1 failed\"\nassert solution('10 10') == '1 1 1 1 1 1 1 1 1', \"Test case 2 failed\"\nassert solution('10000 10000') == '1 1 1 1 1 1 1 1 1', \"Test case 3 failed\"\nassert solution('10000 10001') == '1 1 1 1 1 1 1 1 1', \"Test case 4 failed\"\nassert solution('10000 10002') == '1 1 1 1 1 1 1 1 1', \"Test case 5 failed\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2\\n'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"100 50\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"500 0\") == \"0\"\nassert solution(\"0 500\") == \"0\"\nassert solution(\"1000000000 1\") == \"0\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 40.0\nassert solution(4) == 40.0\nassert solution(5) == 40.0\nassert solution(6) == 40.0\nassert solution(7) == 40.0\nassert solution(8) == 40.0\nassert solution(9) == 40.0\nassert solution(10) == 40.0\nassert solution(11) == 40.0\nassert solution(12) == 40.0\nassert solution(13) == 40.0\nassert solution(14) == 40.0\nassert solution(15) == 40.0\nassert solution(16) == 40.0\nassert solution(17) == 40.0\nassert solution(18) == 40.0\nassert solution(19) == 40.0\nassert solution(20) == 40.0\nassert solution(21) == 40.0\nassert solution(22) == 40.0\nassert solution(23) == 40.0\nassert solution(24) == 40.0\nassert solution(25) == 40.0\nassert solution(26) == 40.0\nassert solution(27) == 40.0\nassert solution(28) == 40.0\nassert solution(29) == 40.0\nassert solution(30) == 40.0\nassert solution(31) == 40.0\nassert solution(32) == 40.0\nassert solution(33) == 40.0\nassert solution(34) == 40.0\nassert solution(35) == 40.0\nassert solution(36) == 40.0\nassert solution(37) == 40.0\nassert solution(38) == 40.0\nassert solution(39) == 40.0\nassert solution(40) == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16') == '13.0'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18') == '60.0'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20') == '15.0'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22') == '30.0'"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\\n\"\nassert solution(\"4\\n-1 0\\n-3 0\\n2 3\\n1 2\\n0 4\\n1 4\") == \"17.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 40.0000000000 # Judge's answer\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\nassert solution(\"0 0\\n1 -1\\n1 1\\n-1 1\\n0 1\\n1 -1\\n\") == 1.0000000000\nassert solution(\"0 0\\n-1 0\\n0 1\\n1 1\\n0 1\\n-1 0\\n\") == 1.0000000000\nassert solution(\"0 0\\n0 1\\n-1 0\\n0 1\\n1 1\\n1 0\\n\") == 1.0000000000\nassert solution(\"0 0\\n0 1\\n0 -1\\n1 0\\n1 1\\n-1 0\\n\") == 1.0000000000\nassert solution(\"0 0\\n0 1\\n0 1\\n1 1\\n1 0\\n-1 0\\n-1 1\\n\") == 1.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 40.0000000000\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n2\\n10 8\\n5 2\\n12 3') == 21.1111111111\nassert solution('5\\n1 2\\n3 4\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19') == 13.0000000000\nassert solution('2\\n1 2\\n3 4') == 6.0000000000\nassert solution('2\\n1 2\\n3 4\\n1 3\\n3 5\\n5 7\\n7 9') == 18.0000000000\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n1\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n4\\n2 1 3\\n4 2 3 1\") == \"1\\n1\\n\"\nassert solution(\"1\\n5\\n2 1 3\\n4 2 3 1\\n5 4 1 2\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n6\\n2 1 3\\n4 2 3 1\\n5 4 1 2\\n6 5 2 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n7\\n2 1 3\\n4 2 3 1\\n5 4 1 2\\n6 5 2 3\\n7 4 3 2\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n8\\n2 1 3\\n4 2 3 1\\n5 4 1 2\\n6 5 2 3\\n7 4 3 2\\n8 6 2 1\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n9\\n2 1 3\\n4 2 3 1\\n5 4 1 2\\n6 5 2 3\\n7 4 3 2\\n8 6 2 1\\n9 7 1 3\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"Expected: {expected}, Got: {solution()}\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n3\\n2 1 3\\n2 3 4 5\\n2 4 3 1\\n2 4 2 3\\n2 4 1 3\\n2 3 1 4\\n2 3 2 4\\n2 3 2 1\\n2 2 3 4\\n2 2 3 1\\n2 1 4 3\\n2 1 1 4\\n2 1 1 3\\n2 1 1 2\\n2 1 1 1\\n2 1 1 0\\n2 0 1 1\\n2 0 1 0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected output {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2\nassert solution(7) == 2\nassert solution(8) == 3\nassert solution(9) == 4\nassert solution(10) == 5\nassert solution(11) == 6\nassert solution(12) == 7\nassert solution(13) == 8\nassert solution(14) == 9\nassert solution(15) == 10\nassert solution(16) == 10\nassert solution(17) == 11\nassert solution(18) == 12\nassert solution(19) == 13\nassert solution(20) == 14\nassert solution(21) == 15\nassert solution(22) == 16\nassert solution(23) == 17\nassert solution(24) == 18\nassert solution(25) == 19\nassert solution(26) == 20\nassert solution(27) == 21\nassert solution(28) == 22\nassert solution(29) == 23\nassert solution(30) == 24\nassert solution(31) == 25\nassert solution(32) == 26\nassert solution(33) == 27\nassert solution(34) == 28\nassert solution(35) == 29\nassert solution(36) == 30\nassert solution(37) == 31\nassert solution(38) == 32\nassert solution(39) == 33\nassert solution(40) == 34\nassert solution(41) == 35\nassert solution(42) == 36\nassert solution(43) == 37\nassert solution(44) == 38\nassert solution(45) == 39\nassert solution(46) == 40\nassert solution(47) == 41\nassert solution(48) == 42\nassert solution(49) == 43\nassert solution(50) == 44\nassert solution(51) == 45\nassert solution(52) == 46\nassert solution(53) == 47\nassert solution(54) == 48\nassert solution(55) == 49\nassert solution(56) == 50\nassert solution(57) == 51\nassert solution(58) == 52\nassert solution(59) == 53\nassert solution(60) == 54\nassert solution(61) == 55\nassert solution(62) == 56\nassert solution(63) == 57\nassert solution(64) == 58\nassert solution(65) == 59\nassert solution(66) == 60\nassert solution(67) == 61\nassert solution(68) == 62\nassert solution(69) == 63\nassert solution(70) == 64\nassert solution(71) == 65\nassert solution(72) == 66\nassert solution(73) == 67\nassert solution(74) == 68\nassert solution(75) == 69\nassert solution(76) == 70\nassert solution(77) == 71\nassert solution(78) == 72\nassert solution(79) == 73\nassert solution(80) == 74\nassert solution(81) == 75\nassert solution(82) == 76\nassert solution(83) == 77\nassert solution(84) == 78\nassert solution(85) == 79\nassert solution(86) == 80\nassert solution(87) == 81\nassert solution(88) == 82\nassert solution(89) == 83\nassert solution(90) == 84\nassert solution(91) == 85\nassert solution(92) == 86\nassert solution(93) == 87\nassert solution(94) == 88\nassert solution(95) == 89\nassert solution(96) == 90\nassert solution(97) == 91\nassert solution(98) == 92\nassert solution(99) =="
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('725.85 1.71 2.38') == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '199 162\\n', \"Please provide the correct input format and solve the problem.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\", \"Test 1 failed\"\nassert solution(\"725.85 1.71 2.37\") == \"None\\n\", \"Test 2 failed\"\nassert solution(\"725.85 1.71 2.39\") == \"None\\n\", \"Test 3 failed\"\nassert solution(\"725.85 1.72 2.38\") == \"None\\n\", \"Test 4 failed\"\nassert solution(\"725.85 1.72 2.39\") == \"None\\n\", \"Test 5 failed\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162\\n'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution failed. Expected '{output}', but got '{solution(input())}'.\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nprint('All tests passed!')"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 4\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 3\\n2 1 -2\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"15\"\nassert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\n\nimport math"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == \"16\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nO 4\\n') == '2 1 4\\n'\nassert solution('2\\nE 1\\nE 3\\nE 5\\n') == '2 1 4\\n'\nassert solution('3\\nO 10\\nE 4\\nI 7\\nI 10\\n') == '2 1 4\\n'\nassert solution('4\\nO 10\\nI 9\\nE 5\\nI 2\\n') == '2 1 4\\n'\nassert solution('5\\nO 10\\nI 8\\nI 5\\nO 3\\nI 6\\n') == '2 1 4\\n'\nassert solution('6\\nO 10\\nI 7\\nO 4\\nO 9\\nO 5\\n') == '2 1 4\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nO 15\\nE 6\\nI 7\\nE 20\") == \"2 1 1\\n2 4 10\"\nassert solution(\"3\\nO 20\\nE 10\\nO 5\") == \"3 10 1\"\nassert solution(\"5\\nO 15\\nE 6\\nI 7\\nE 20\\nO 25\\nE 15\\nO 10\\nO 2\\nI 1\\nO 20\\nI 10\\nE 2\\nO 10\\nI 20\\nE 10\\nI 10\\nE 20\\nO 10\\nI 20\\nO 20\\nE 20\\nO 20\\nI 10\\nE 10\\nO 10\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 10\\nI 20\\nO 10\\nI 20\\nO 20\\nI 10\\nE 10\\nO 20\\nE 20\\nO 20\\nE 20\\nO 10\\nI 20\\nO 20\\nI 10\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nO 20\\nE 20\\nO 20\\nI 10\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\nE 20\\nO 20\\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 1 4\", \"Expected output: 2 1 4, but got: {}\".format(solution())"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected output: '{expected}', got: '{solution(stdin=input())}'\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 1 4'\nprint('All tests passed!')"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\", \"Test 1 failed\"\nassert solution(\"2\\nO 2\") == \"1 2 4\\n\", \"Test 2 failed\"\nassert solution(\"3\\nO 7\") == \"3 1 7\\n\", \"Test 3 failed\"\nassert solution(\"4\\nE 8\") == \"4 1 8\\n\", \"Test 4 failed\"\nassert solution(\"5\\nI 12\") == \"1 2 12\\n\", \"Test 5 failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\", \"Input should be: 1\\nO 4\"\nassert solution(\"2\\nE 7\\nI 1\\nE 11\\nO 13\") == \"2 11 7\", \"Input should be: 2\\nE 7\\nI 1\\nE 11\\nO 13\"\nassert solution(\"3\\nO 1\\nE 7\\nI 11\\nE 13\\nO 19\") == \"1 19 13\", \"Input should be: 3\\nO 1\\nE 7\\nI 11\\nE 13\\nO 19\"\nassert solution(\"4\\nI 1\\nE 7\\nO 11\\nE 13\\nO 19\") == \"2 1 7\", \"Input should be: 4\\nI 1\\nE 7\\nO 11\\nE 13\\nO 19\"\nassert solution(\"5\\nE 7\\nI 1\\nO 11\\nO 13\\nI 19\") == \"3 11 13\", \"Input should be: 5\\nE 7\\nI 1\\nO 11\\nO 13\\nI 19\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\nO 4\\n') == '2 1 4\\n'\nassert solution('2\\nE 7\\nO 10\\nI 3\\n') == '1 6 11\\n'\nassert solution('3\\nE 6\\nO 5\\nI 9\\nE 1\\nO 2\\nI 8\\n') == '2 3 5\\n'\nassert solution('4\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\n') == '3 4 5\\n'\nassert solution('5\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\n') == '4 5 6\\n'\nassert solution('6\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\n') == '5 6 7\\n'\nassert solution('7\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\n') == '6 7 8\\n'\nassert solution('8\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\n') == '7 8 9\\n'\nassert solution('9\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\n') == '8 9 10\\n'\nassert solution('10\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\nO 11\\n') == '9 10 11\\n'\nassert solution('11\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\nO 11\\nO 12\\n') == '10 11 12\\n'\nassert solution('12\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\nO 11\\nO 12\\nO 13\\n') == '11 12 13\\n'\nassert solution('13\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\nO 11\\nO 12\\nO 13\\nO 14\\n') == '12 13 14\\n'\nassert solution('14\\nO 1\\nE 2\\nI 3\\nI 4\\nO 5\\nI 6\\nO 7\\nO 8\\nO 9\\nO 10\\nO 11\\nO 12\\nO 13\\nO 14\\nO 15\\n') == '13 14 15\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4, \"The answer is incorrect\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected output {expected}\" for input, expected in [\n    (\n        input,\n        expected,\n    )\n    for input in [\n        (5, 8),\n        (2, 1, 4, 5),\n        (5, 1, 12, 4),\n        (5, 5, 9, 10),\n        (1, 6, 4, 10),\n        (2, 11, 7, 14),\n    ]\n    for expected in [4]\n]"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nprint('All tests passed!')"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nprint('Correct')"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'\nassert solution('5 10\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '2\\n'\nassert solution('3 7\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '0\\n'\nassert solution('5 10\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n') == '10\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"10 100\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\\n11 11 11 11\\n12 12 12 12\\n13 13 13 13\\n14 14 14 14\\n15 15 15 15\\n16 16 16 16\\n17 17 17 17\\n18 18 18 18\\n19 19 19 19\\n20 20 20 20\") == \"20\\n\"\nassert solution(\"5 100\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\\n11 11 11 11\\n12 12 12 12\\n13 13 13 13\\n14 14 14 14\\n15 15 15 15\\n16 16 16 16\\n17 17 17 17\\n18 18 18 18\\n19 19 19 19\\n20 20 20 20\\n21 21 21 21\\n22 22 22 22\\n23 23 23 23\\n24 24 24 24\\n25 25 25 25\\n26 26 26 26\\n27 27 27 27\\n28 28 28 28\\n29 29 29 29\\n30 30 30 30\\n31 31 31 31\\n32 32 32 32\\n33 33 33 33\\n34 34 34 34\\n35 35 35 35\\n36 36 36 36\\n37 37 37 37\\n38 38 38 38\\n39 39 39 39\\n40 40 40 40\\n41 41 41 41\\n42 42 42 42\\n43 43 43 43\\n44 44 44 44\\n45 45 45 45\\n46 46 46 46\\n47 47 47 47\\n48 48 48 48\\n49 49 49 49\\n50 50 50 50\\n51 51 51 51\\n52 52 52 52\\n53 53 53 53\\n54 54 54 54\\n55 55 55 55\\n56 56 56 56\\n57 57 57 57\\n58 58"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''-99.99 99.99 9999.99\n99 9 999 9999''') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9.585073\", \"Please complete the solution.\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str}!= {output_str}\" for input_str, output_str in zip(sample_input, sample_output)"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(20, 30) == '12.74,127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\", \"Invalid solution\"\n\nsolution(stdin) # Test case 1"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"5 10\\n1 10 10 1 10 10 10\") == \"15.00 150.00\"\nassert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"5 10\\n1 10 10 1 10 10 10\") == \"15.00 150.00\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"\"\"12.74 127.83\"\"\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n\nSolution:\n\nThe problem requires solving a simple case of picking a distance $d$ to place a ball on the dashed line and an angle $\\theta $ to shoot the ball. We can solve this problem by iterating through all possible combinations of values for $d$ and $\\theta $, and keeping track of the best result found so far.\n\nThe first step is to iterate through all possible values of $d$ and $\\theta $, and for each value, we can determine whether the ball can be placed on the dashed line and whether it can be shot using the given constraint. We can represent these constraints as functions of $d$, $\\theta $, and $r$, which can be computed using simple formulas.\n\nHere's the Python code to implement this algorithm:\n\n```python\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0116\\n\", \"Expected output: 0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0116\\n', \"Your solution is incorrect.\"\n\nprint(\"Your solution is correct!\")"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\\n\", \"Expected output: 0116\\n, but got: {}\".format(solution(\"2\\n110\\n6\"))\n\nassert solution(\"3\\n011\\n7\") == \"0117\\n\", \"Expected output: 0117\\n, but got: {}\".format(solution(\"3\\n011\\n7\"))\n\nassert solution(\"4\\n111\\n8\") == \"0118\\n\", \"Expected output: 0118\\n, but got: {}\".format(solution(\"4\\n111\\n8\"))\n\nassert solution(\"5\\n1110\\n9\") == \"0119\\n\", \"Expected output: 0119\\n, but got: {}\".format(solution(\"5\\n1110\\n9\"))\n\nassert solution(\"6\\n1111\\n6\") == \"0116\\n\", \"Expected output: 0116\\n, but got: {}\".format(solution(\"6\\n1111\\n6\"))\n\nassert solution(\"7\\n11110\\n9\") == \"01190\\n\", \"Expected output: 01190\\n, but got: {}\".format(solution(\"7\\n11110\\n9\"))\n\nassert solution(\"8\\n11111\\n8\") == \"01188\\n\", \"Expected output: 01188\\n, but got: {}\".format(solution(\"8\\n11111\\n8\"))\n\nassert solution(\"9\\n111110\\n9\") == \"011908\\n\", \"Expected output: 011908\\n, but got: {}\".format(solution(\"9\\n111110\\n9\"))"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    110\n    6\n    \"\"\"\n) == \"0116\"\n\nassert solution(\n    \"\"\"\n    3\n    0101\n    7\n    2\n    5\n    8\n    \"\"\"\n) == \"1100\"\n\nassert solution(\n    \"\"\"\n    4\n    1111\n    3\n    8\n    2\n    9\n    7\n    \"\"\"\n) == \"1111\"\n\nassert solution(\n    \"\"\"\n    5\n    11111\n    4\n    7\n    5\n    8\n    3\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    6\n    111111\n    5\n    8\n    6\n    9\n    2\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    7\n    1111111\n    6\n    9\n    7\n    8\n    4\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    8\n    11111111\n    7\n    8\n    7\n    9\n    5\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    9\n    111111111\n    8\n    9\n    8\n    9\n    6\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    10\n    1111111111\n    9\n    9\n    9\n    9\n    9\n    7\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    11\n    11111111111\n    9\n    9\n    9\n    9\n    9\n    8\n    8\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    12\n    1111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    8\n    9\n    8\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    13\n    11111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    14\n    111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    15\n    1111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    16\n    111111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    17\n    1111111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    18\n    1111111111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    19\n    1111111111111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    \"\"\"\n) == \"11111\"\n\nassert solution(\n    \"\"\"\n    20\n    111111111111111111111111111\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9\n    9"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\"\nassert solution(input()) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\\n\", \"Solution should return the correct output.\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"0116\\n\"\n\nsolution(stdin: str) == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"0116\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"8 3\n4 4 4\"\"\") == \"0 2 4\"\nassert solution(\"\"\"8 3\n4 2 2\"\"\") == \"0 1 1\"\nassert solution(\"\"\"8 3\n4 2 4\"\"\") == \"0 1 3\"\nassert solution(\"\"\"8 3\n4 2 2\"\"\") == \"0 1 1\"\nassert solution(\"\"\"8 3\n4 4 4\"\"\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \\\"\\\"\\n\\n\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"9 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"10 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"11 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"12 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 2 4\"\nassert solution(input()) == \"0 2 4\"\nassert solution(input()) == \"0 2 4\"\nassert solution(input()) == \"0 2 4\"\nassert solution(input()) == \"0 2 4\"\nassert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Output doesn't match for test case: {input()}, expected: {output}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\", \"The solution should be impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"1\\n4\") == \"possible\"\nassert solution(\"5\\n3\\n1 3\\n4 4 5\\n1 2\\n2 3\\n3 1\\n1 2\\n2 1\\n3 2\\n1 1\\n2 2\\n1 2\\n2 1\\n2 3\\n1 2\\n3 1\\n2 1\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\", \"The solution is not correct\"\nassert solution(\"3\\n5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"possible\\n\", \"The solution is not correct\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"possible\"\nprint(input())\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}, expected {expected}\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"10\\n5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"possible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\nassert solution(\"3\\n0 0\\n0 10\\n2\\n5 5\\n5 0\\n0 0\\n100 100\") == 100.0\nassert solution(\"2\\n1 1\\n1 0\\n2\\n10 10\\n10 0\\n2 0\\n10 2\") == 1.0\nassert solution(\"3\\n0 0\\n0 10\\n2\\n10 10\\n10 0\\n2 0\\n10 2\") == 1.0\nassert solution(\"2\\n1 1\\n1 0\\n2\\n10 10\\n10 0\\n2 0\\n10 2\") == 1.0\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"4.00000\", \"Expected: 4.00000\\nGot: {}\".format(solution(sample_input))"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\\n\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n3 10\\n3 0\") == \"4.00000\\nimpossible\\n\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n5 10\\n5 0\") == \"4.00000\\nimpossible\\n\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n2 0\\n2 10\") == \"3.00000\\n3.00000\\n\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n10 10\\n10 0\") == \"3.00000\\n3.00000\\n\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n1 10\\n1 0\") == \"3.00000\\n3.00000\\n\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 10\") == \"impossible\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n5 10\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case failed: {solution(sample_input)}!= {expected_output}\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"solution.py\")) == \"4.00000\"\nassert solution(open(\"solution_no_return.py\")) == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution()) == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4.00000\", \"The solution is not correct\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=r\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == 4.0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1\nassert solution(\"4 4 4\\n1 1\\n1 3\\n1 3\\n1 3\\n2 2\\n\") == 0\nassert solution(\"5 5 5\\n1 1\\n1 3\\n1 3\\n1 3\\n1 3\\n2 2\\n\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input: {sample_input}\\nSample Output: {sample_output}\\nSolution: {solution(sample_input)}\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution is {solution(input())}, but expected {output}.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n3 1\\n3 3\\n2 2') == 1\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3)) == 1\nassert solution(str(4)) == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2, 5) == 1, \"Solution is not correct.\"\nprint(\"Solution is correct.\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nassert solution('1 2 3\\n2 1 3\\n3 1 2\\n3 3 2\\n2 2 1\\n') == 0\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n') == 0\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 0\nassert solution('1 2 3\\n2 1 3\\n3 2 1\\n3 3 1\\n2 2 1\\n') == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\" # You can replace this code with your actual implementation"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 3\\n2 2\\n3 1\\n4 4') == '5 4\\n1 0\\n2 3'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 3\\n2 2\\n3 1\\n4 4\\n2 4\\n3 2\\n4 5') == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}\\nOutput: {output()}\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '5 3'\nassert solution(2) == '1 0'\nassert solution(3) == '2 4'\nassert solution(4) == 'impossible'\nassert solution(5) == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n') == '5 3\\n1 0\\n2 4\\nimpossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 3\\n1 0\\n2 4\\nimpossible\\n\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 1\\n1 1\\n0 0\\n1 0\") == \"2\\n1 2\"\nassert solution(\"4 1\\n1 1\\n0 0\\n1 0\\n0 1\") == \"2\\n1 2\"\nassert solution(\"4 1\\n1 1\\n0 1\\n1 0\\n0 0\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n1 0\\n1 1\\n0 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\nassert solution(\"4 2\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\\n2\"\nassert solution(\"4 3\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\\n2\\n3\"\nassert solution(\"4 4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n4\"\nassert solution(\"4 5\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n3\\n4\\n5\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n1 2\\n\"\nassert solution(stdin) == \"3\\n1 2 3\\n\"\nassert solution(stdin) == \"4\\n1 2 3 4\\n\"\nassert solution(stdin) == \"5\\n1 2 3 4 5\\n\"\nassert solution(stdin) == \"6\\n1 2 3 4 5 6\\n\"\nassert solution(stdin) == \"7\\n1 2 3 4 5 6 7\\n\"\nassert solution(stdin) == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(stdin) == \"9\\n1 2 3 4 5 6 7 8 9\\n\"\nassert solution(stdin) == \"10\\n1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution(stdin) == \"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\"\nassert solution(stdin) == \"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\"\nassert solution(stdin) == \"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\"\nassert solution(stdin) == \"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\"\nassert solution(stdin) == \"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\"\nassert solution(stdin) == \"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\"\nassert solution(stdin) == \"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\"\nassert solution(stdin) == \"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\"\nassert solution(stdin) == \"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\"\nassert solution(stdin) == \"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\"\nassert solution(stdin) == \"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\"\nassert solution(stdin) == \"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\"\nassert solution(stdin) == \"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\"\nassert solution(stdin) == \"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 "
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18\") == \"2\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19\") == \"3\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20\") == \"4\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21\") == \"5\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22\") == \"6\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23\") == \"7\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24\") == \"8\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25\") == \"9\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26\") == \"10\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27\") == \"11\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27 28\") == \"12\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27 28 29\") == \"13\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27 28 29 30\") == \"14\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27 28 29 30 31\") == \"15\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\") == \"16\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Test failed for {input}.\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output: 1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1\nassert solution(\"5 3\\n1 2 3 4 5 6\") == 0\nassert solution(\"5 3\\n1 2 3 4 5 7\") == 2\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"2\\n\"\nassert solution(\"10 1\\n1 3 5 7 9 11 13 15 17 16\") == \"3\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"4\\n\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 6\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 7\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 8\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 9\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 10\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 11\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 12\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 13\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 14\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 15\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 16\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 17\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 18\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 19\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 20\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 21\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 22\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 23\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 24\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 25\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 26\\n1 3 5 7 9 11 13 "
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected output: {output}\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str: \\n    pass\"\n\nassert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\"\nassert solution(\"100 100\\nDFFC\") == \"100 100\"\nassert solution(\"100 100\\nCDEF\") == \"50 50\"\nassert solution(\"100 100\\n\") == \"0 0\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ACDBB\") == \"7 4\"\nassert solution(\"5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ACDBB\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\"\nassert solution(\"5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\"\nassert solution(\"6 7\\n10 9\\n3 7\") == \"6 7\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 3\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\"\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n5 1\\n9 8\\n3 11\") == \"5 1\"\nassert solution(\"1 2\\n1 1\") == \"1 1\"\nassert solution(\"5 5\\nABCD\") == \"5 5\"\nassert solution(\"1 1\\n1 2\") == \"1 2\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A >= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A - 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A * 10\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 10\\nHELLO THERE 20\\nHELLO THERE 30\\nHELLO THERE 40\\nHELLO THERE 50\\nDONE\\n'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A / 2\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n13 PRINT A\\n14 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n13 PRINT A\\n14 PRINT A\\n15 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n13 PRINT A\\n14 PRINT A\\n15 PRINT A\\n16 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n13 PRINT A\\n14 PRINT A\\n15 PRINT A\\n16 PRINT A\\n17 PRINT A\\n\") == \"1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT A\\n3 PRINT A\\n4 PRINT A\\n5 PRINT A\\n6 PRINT A\\n7 PRINT A\\n8 PRINT A\\n9 PRINT A\\n10 PRINT A\\n11 PRINT A\\n12 PRINT A\\n13 PRINT A\\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution is incorrect. Expected: {sample_output}, Actual: {solution(sample_input)}\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINT \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINT"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''HELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3  # correct\nassert solution(4) == 18  # correct\nassert solution(5) == 25  # correct\nassert solution(6) == 37  # correct\nassert solution(7) == 50  # correct\nassert solution(8) == 67  # correct"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n3 0 1\\n0 1\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3, \"Incorrect output\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2\nassert solution(5) == 1\nassert solution(6) == 0\nassert solution(7) == 1\nassert solution(8) == 2\nassert solution(9) == 0\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 1\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 0\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 1\nassert solution(49) == 0\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\nassert solution(104) == 1\nassert solution(105) =="
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n3\\n2\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3, \"The expected output is not correct.\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 2\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\nassert solution(104) == 0\nassert solution(105) =="
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'impossible'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 'LLRRRRLL'\nassert solution(10) == 'impossible'\nassert solution(15) == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'LLRRRRLL'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 3\") == \"impossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n2 3\") == \"RRRRRRRRR\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n2 3\\n1 3\\n1 3\\n2 3\\n2 3\") == \"RRRRRRRRR\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n2 3\\n1 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 3\\n2 3\\n2 3\\n1 "
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nprint('All test cases passed!')"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2011\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1021 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1021 2011\\n1023 2011\\n\") == \"2\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\\n1007 2012\\n1008 2012\\n1009 2013\") == \"3\\n1007 2012\\n1008 2012\\n1009 2013\"\nassert solution(\"3\\n1009 2011\\n1008 2012\\n1007 2013\") == \"3\\n1007 2012\\n1008 2012\\n1009 2013\"\nassert solution(\"3\\n1009 2011\\n1008 2012\\n1017 2013\") == \"3\\n1007 2012\\n1008 2012\\n1009 2013\\n1017 2014\"\nassert solution(\"2\\n1009 2011\\n1008 2012\") == \"1\\n1007 2012\\n1008 2012\\n1009 2013\"\nassert solution(\"4\\n1009 2011\\n1008 2012\\n1007 2013\\n1006 2014\") == \"2\\n1007 2012\\n1008 2012\\n1009 2013\"\nassert solution(\"4\\n1009 2011\\n1008 2012\\n1007 2013\\n1006 2015\") == \"4\\n1006 2014\\n1007 2012\\n1008 2012\\n1009 2013\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code goes here\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1009 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1009 2011\\n1017 2011') == '1\\n2011'\nassert solution('1009 2011\\n1017 2010\\n1009 2010\\n1009 2009\\n1009 1999\\n1009 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999\\n1017 1999"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    0 1 100\n    0 2 100\n    1 3 100\n    2 3 100\n    0 3\n    \"\"\"\n) == \"0 3\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4 4\n    0 1 100\n    0 2 100\n    1 3 100\n    2 3 100\n    0 3\n    ''') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"The given input is invalid.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n4 4\") == \"0 3\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"The solution is not correct\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', \"The solution is not correct\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', \"The solution is not correct\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', \"The solution is not correct\"\n\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', \"The solution is not correct\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 3\\n\", \"Solution not correct.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0 3', 'Test case 1 failed.'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == [\"0 3\"]"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20\\n\", \"Incorrect output\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 20"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\\n\"\nassert solution(\"3.0 4.0\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"10\\n\"\nassert solution(\"5 10\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"15\\n\"\nassert solution(\"3.0 5.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\\n\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"15\\n\"\nassert solution(\"1.0 20.0\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"50\\n\"\nassert solution(\"1.0 20.0\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"50\\n\"\nassert solution(\"5 10\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"50\\n\"\nassert solution(\"2.0 20.0\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"100\\n\"\nassert solution(\"1.0 20.0\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"100\\n\"\nassert solution(\"5 10\\n2 2 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for input {input()}\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"Test Case 1 Failed\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\", \"Your code is incorrect!\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"1\\n0\\n0\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3\\n0 2\\n0 3\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 3\\n2 4\\n\") == \"4\\n\"\nassert solution(\"5\\n2 3\\n2 4\\n3 4\\n3 5\\n\") == \"5\\n\"\nassert solution(\"6\\n0 1\\n0 2\\n1 2\\n1 3\\n\") == \"6\\n\"\nassert solution(\"10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10\\n4 5 6 7 8 9 10\\n5 6 7 8 9 10\\n6 7 8 9 10\\n7 8 9 10\\n8 9 10\\n9 10\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"Your implementation of the solution is incorrect!\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"5\\n0 1 3 4 5\\n0 2 3 4 5\\n1 6 5 4 2\\n2 6 5 3 2\\n1 1 2 3 4\\n2 1 2 3 4\\n3 1 2 3 4\\n4 1 2 3 4\\n5 1 2 3 4\\n\") == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"0 1 3 4 5 6\\n0 2 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"6\") == \"6\\n\"\nassert solution(\"0\") == \"1\\n\"\nassert solution(\"10\") == \"10\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\") == \"5\\n\"\nassert solution(\"6\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\") == \"6\\n\"\nassert solution(\"7\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\") == \"7\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 "
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8') == 5"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4, \"Test failed\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4, \"The solution is not correct\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution should return {output()}, but got {solution(input())} instead.\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15') == '4\\n'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16') == '4\\n'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"\"\"\n    5\n    1.0 1.0\n    3.1 1.0\n    1.0 3.1\n    3.1 3.1\n    4.2 3.1\n    \"\"\") == 6\nassert solution(stdin=\"\"\"\n    5\n    1.0 1.0\n    3.1 1.0\n    1.0 3.1\n    3.1 3.1\n    4.2 3.1\n    \"\"\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n6.3 2.0') == '8'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n6.3 2.0\\n8.4 1.0') == '10'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nprint(\"All tests passed.\")"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == 6, 'Test failed'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Test case 1 failed\"\n\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Test case 2 failed\"\n\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Test case 3 failed\"\n\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Test case 4 failed\"\n\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Test case 5 failed\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 6"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 5, \"Test case 1 failed\"\nassert solution(4) == 5, \"Test case 2 failed\"\nassert solution(5) == 5, \"Test case 3 failed\"\nassert solution(6) == 5, \"Test case 4 failed\"\nassert solution(7) == 5, \"Test case 5 failed\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\nprint(\"All tests passed.\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5, \"Test failed for input: 3\\n2\\n2\\n2\"\nprint(\"Test passed\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 5\nassert solution(2) == 2\nassert solution(2) == 2\nassert solution(2) == 2\nassert solution(2) == 2\nassert solution(2) == 2\n\nfrom typing import List"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, "
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) == 5\nassert solution([2, 2, 2, 2, 1]) =="
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"10 10\\n1 1 2 3 4 5 6 7 8 9\") == \"3 11\"\nassert solution(\"1 5\\n1 2 3 4 5\") == \"1 4\"\nassert solution(\"1 10\\n5 5 5 5 5\") == \"5 5\"\nassert solution(\"1 10\\n5 5 5 5 5 5 5 5 5 5 5\") == \"10 50\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 1'\nassert solution(input()) == '1 2'\nassert solution(input()) == '2 2'\nassert solution(input()) == '2 2 2'\nassert solution(input()) == '2 2 2 2'\nassert solution(input()) == '3 2 2 2'\nassert solution(input()) == '2 2 2 2 2'\nassert solution(input()) == '2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input()) == '3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2'\nassert solution(input"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\\n\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\n'\nassert solution('2 1000000000 1000000000') == '1 2113777777768\\n'\nassert solution('1 2\\n5 4 3 2') == '1 6\\n'\nassert solution('1 3\\n4 3 2') == '1 4\\n'\nassert solution('2 1000000000 1000000000') == '1 5000000000000\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1000000000 1000000000\") == \"1000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n1000000000 1000000000\") == \"1000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n1000000000 1000000000\") == \"2000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n1000000000 1000000000\") == \"3000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n1000000000 1000000000\") == \"4000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n1000000000 1000000000\") == \"5000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n7 2 2 1\\n1000000000 1000000000\") == \"6000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n7 2 2 1\\n8 2 2 1\\n1000000000 1000000000\") == \"7000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n7 2 2 1\\n8 2 2 1\\n9 2 2 1\\n1000000000 1000000000\") == \"8000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n7 2 2 1\\n8 2 2 1\\n9 2 2 1\\n10 2 2 1\\n1000000000 1000000000\") == \"9000000000 0\"\nassert solution(\"1 3\\n2 2 2 1\\n3 2 2 1\\n4 2 2 1\\n5 2 2 1\\n6 2 2 1\\n7 2 2 1\\n8 2 2 1\\n9 2 2 1\\n10 2 2 1\\n10 2 2 1\\n1000000000 1000000000\") == \"1000000000 0\"\nassert solution(\"1"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 2 3\\n4 5 6 7\") == \"1 1\"\nassert solution(\"1 3 2 4 5\\n8 9 10 11 12\") == \"1 1\"\nassert solution(\"1 1\\n2 3 4\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 1\\n2 2 2 1\") == \"1 1\"\nassert solution(\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"10\"\nassert solution(\"2\\n\") == \"10\"\nassert solution(\"3\\n\") == \"10\"\nassert solution(\"4\\n\") == \"10\"\nassert solution(\"5\\n\") == \"10\"\nassert solution(\"6\\n\") == \"10\"\nassert solution(\"7\\n\") == \"10\"\nassert solution(\"8\\n\") == \"10\"\nassert solution(\"9\\n\") == \"10\"\nassert solution(\"10\\n\") == \"10\"\nassert solution(\"11\\n\") == \"10\"\nassert solution(\"12\\n\") == \"10\"\nassert solution(\"13\\n\") == \"10\"\nassert solution(\"14\\n\") == \"10\"\nassert solution(\"15\\n\") == \"10\"\nassert solution(\"16\\n\") == \"10\"\nassert solution(\"17\\n\") == \"10\"\nassert solution(\"18\\n\") == \"10\"\nassert solution(\"19\\n\") == \"10\"\nassert solution(\"20\\n\") == \"10\"\nassert solution(\"21\\n\") == \"10\"\nassert solution(\"22\\n\") == \"10\"\nassert solution(\"23\\n\") == \"10\"\nassert solution(\"24\\n\") == \"10\"\nassert solution(\"25\\n\") == \"10\"\nassert solution(\"26\\n\") == \"10\"\nassert solution(\"27\\n\") == \"10\"\nassert solution(\"28\\n\") == \"10\"\nassert solution(\"29\\n\") == \"10\"\nassert solution(\"30\\n\") == \"10\"\nassert solution(\"31\\n\") == \"10\"\nassert solution(\"32\\n\") == \"10\"\nassert solution(\"33\\n\") == \"10\"\nassert solution(\"34\\n\") == \"10\"\nassert solution(\"35\\n\") == \"10\"\nassert solution(\"36\\n\") == \"10\"\nassert solution(\"37\\n\") == \"10\"\nassert solution(\"38\\n\") == \"10\"\nassert solution(\"39\\n\") == \"10\"\nassert solution(\"40\\n\") == \"10\"\nassert solution(\"41\\n\") == \"10\"\nassert solution(\"42\\n\") == \"10\"\nassert solution(\"43\\n\") == \"10\"\nassert solution(\"44\\n\") == \"10\"\nassert solution(\"45\\n\") == \"10\"\nassert solution(\"46\\n\") == \"10\"\nassert solution(\"47\\n\") == \"10\"\nassert solution(\"48\\n\") == \"10\"\nassert solution(\"49\\n\") == \"10\"\nassert solution(\"50\\n\") == \"10\"\nassert solution(\"51\\n\") == \"10\"\nassert solution(\"52\\n\") == \"10\"\nassert solution(\"53\\n\") == \"10\"\nassert solution(\"54\\n\") == \"10\"\nassert solution(\"55\\n\") == \"10\"\nassert solution(\"56\\n\") == \"10\"\nassert solution(\"57\\n\") == \"10\"\nassert solution(\"58\\n\") == \"10\"\nassert solution(\"59\\n\") == \"10\"\nassert solution(\"60\\n\") == \"10\"\nassert solution(\"61\\n\") == \"10\"\nassert solution(\"62\\n\") == \"10\"\nassert solution(\"63\\n\") == \"10\"\nassert solution(\"64\\n\") == \"10\"\nassert solution(\"65\\n\") == \"10\"\nassert solution(\"66\\n\") == \"10\"\nassert solution(\"67\\n\") == \"10\"\nassert solution(\"68\\n\") == \"10\"\nassert solution(\"69\\n\") == \"10\"\nassert solution(\"70\\n\") == \"10\"\nassert solution(\"71\\n\") == \"10\"\nassert solution(\"72\\n\") == \"10\"\nassert solution(\"73\\n\") == \"10\"\nassert solution(\"74\\n\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '3\\n'\nassert solution('4\\n') == '4\\n'\nassert solution('5\\n') == '5\\n'\nassert solution('6\\n') == '6\\n'\nassert solution('7\\n') == '7\\n'\nassert solution('8\\n') == '8\\n'\nassert solution('9\\n') == '9\\n'\nassert solution('10\\n') == '10\\n'\nassert solution('11\\n') == '10\\n'\nassert solution('12\\n') == '11\\n'\nassert solution('13\\n') == '11\\n'\nassert solution('14\\n') == '12\\n'\nassert solution('15\\n') == '12\\n'\nassert solution('16\\n') == '13\\n'\nassert solution('17\\n') == '13\\n'\nassert solution('18\\n') == '14\\n'\nassert solution('19\\n') == '14\\n'\nassert solution('20\\n') == '15\\n'\nassert solution('21\\n') == '15\\n'\nassert solution('22\\n') == '16\\n'\nassert solution('23\\n') == '16\\n'\nassert solution('24\\n') == '17\\n'\nassert solution('25\\n') == '17\\n'\nassert solution('26\\n') == '18\\n'\nassert solution('27\\n') == '18\\n'\nassert solution('28\\n') == '19\\n'\nassert solution('29\\n') == '19\\n'\nassert solution('30\\n') == '20\\n'\nassert solution('31\\n') == '20\\n'\nassert solution('32\\n') == '21\\n'\nassert solution('33\\n') == '21\\n'\nassert solution('34\\n') == '22\\n'\nassert solution('35\\n') == '22\\n'\nassert solution('36\\n') == '23\\n'\nassert solution('37\\n') == '23\\n'\nassert solution('38\\n') == '24\\n'\nassert solution('39\\n') == '24\\n'\nassert solution('40\\n') == '25\\n'\nassert solution('41\\n') == '25\\n'\nassert solution('42\\n') == '26\\n'\nassert solution('43\\n') == '26\\n'\nassert solution('44\\n') == '27\\n'\nassert solution('45\\n') == '27\\n'\nassert solution('46\\n') == '28\\n'\nassert solution('47\\n') == '28\\n'\nassert solution('48\\n') == '29\\n'\nassert solution('49\\n') == '29\\n'\nassert solution('50\\n') == '30\\n'\nassert solution('51\\n') == '30\\n'\nassert solution('52\\n') == '31\\n'\nassert solution('53\\n') == '31\\n'\nassert solution('54\\n') == '32\\n'\nassert solution('55\\n') == '32\\n'\nassert solution('56\\n') == '33\\n'\nassert solution('57\\n') == '33\\n'\nassert solution('58\\n') == '34\\n'\nassert solution('59\\n') == '34\\n'\nassert solution('60\\n') == '35\\n'\nassert solution('61\\n') == '35\\n'\nassert solution('62\\n') == '36\\n'\nassert solution('63\\n') == '36\\n'\nassert solution('64\\n') == '37\\n'\nassert solution('65\\n') == '37\\n'\nassert solution('6"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(1)) == \"1\"\nassert solution(str(2)) == \"2\"\nassert solution(str(3)) == \"1\"\nassert solution(str(4)) == \"1\"\nassert solution(str(5)) == \"2\"\nassert solution(str(6)) == \"1\"\nassert solution(str(7)) == \"3\"\nassert solution(str(8)) == \"1\"\nassert solution(str(9)) == \"1\"\nassert solution(str(10)) == \"1\"\nassert solution(str(11)) == \"1\"\nassert solution(str(12)) == \"1\"\nassert solution(str(13)) == \"1\"\nassert solution(str(14)) == \"1\"\nassert solution(str(15)) == \"1\"\nassert solution(str(16)) == \"1\"\nassert solution(str(17)) == \"1\"\nassert solution(str(18)) == \"1\"\nassert solution(str(19)) == \"1\"\nassert solution(str(20)) == \"1\"\nassert solution(str(21)) == \"1\"\nassert solution(str(22)) == \"1\"\nassert solution(str(23)) == \"1\"\nassert solution(str(24)) == \"1\"\nassert solution(str(25)) == \"1\"\nassert solution(str(26)) == \"1\"\nassert solution(str(27)) == \"1\"\nassert solution(str(28)) == \"1\"\nassert solution(str(29)) == \"1\"\nassert solution(str(30)) == \"1\"\nassert solution(str(31)) == \"1\"\nassert solution(str(32)) == \"1\"\nassert solution(str(33)) == \"1\"\nassert solution(str(34)) == \"1\"\nassert solution(str(35)) == \"1\"\nassert solution(str(36)) == \"1\"\nassert solution(str(37)) == \"1\"\nassert solution(str(38)) == \"1\"\nassert solution(str(39)) == \"1\"\nassert solution(str(40)) == \"1\"\nassert solution(str(41)) == \"1\"\nassert solution(str(42)) == \"1\"\nassert solution(str(43)) == \"1\"\nassert solution(str(44)) == \"1\"\nassert solution(str(45)) == \"1\"\nassert solution(str(46)) == \"1\"\nassert solution(str(47)) == \"1\"\nassert solution(str(48)) == \"1\"\nassert solution(str(49)) == \"1\"\nassert solution(str(50)) == \"1\"\nassert solution(str(51)) == \"1\"\nassert solution(str(52)) == \"1\"\nassert solution(str(53)) == \"1\"\nassert solution(str(54)) == \"1\"\nassert solution(str(55)) == \"1\"\nassert solution(str(56)) == \"1\"\nassert solution(str(57)) == \"1\"\nassert solution(str(58)) == \"1\"\nassert solution(str(59)) == \"1\"\nassert solution(str(60)) == \"1\"\nassert solution(str(61)) == \"1\"\nassert solution(str(62)) == \"1\"\nassert solution(str(63)) == \"1\"\nassert solution(str(64)) == \"1\"\nassert solution(str(65)) == \"1\"\nassert solution(str(66)) == \"1\"\nassert solution(str(67)) == \"1\"\nassert solution(str(68)) == \"1\"\nassert solution(str(69)) == \"1\"\nassert solution(str(70)) == \"1\"\nassert solution(str(71)) == \"1\"\nassert solution(str(72)) == \"1\"\nassert solution(str(73)) == \"1\"\nassert solution(str(74)) == \"1\"\nassert solution(str(75)) == \"1\"\nassert solution(str(76)) == \"1\"\nassert solution(str(77)) == \"1\"\nassert solution(str(78)) == \"1\"\nassert solution(str(79)) == \"1\"\nassert solution(str(80))"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"10\", \"Input: [1]\\nOutput: [10]\"\n\nsolution(\"1\")"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\nassert solution(\"1 2\\n2000 1 0\\n1 1000 2\") == \"1000.000\"\nassert solution(\"1 2\\n1000 1 0\\n2 1000 1\") == \"0.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n1 500 1\") == \"500.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n1 500 2\") == \"1000.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n2 1000 1\\n1 500 2\") == \"0.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n2 1000 1\\n1 500 1\\n1 1000 2\") == \"1000.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n2 1000 1\\n1 500 1\\n1 1000 2\\n1 1000 1\") == \"1000.000\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n2 1000 1\\n1 500 1\\n1 1000 2\\n1 1000 1\\n1 500 2\") == \"0.000\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"1 3\\n1000 1 0\\n1 1000 2\\n1 2000 2\") == 0.001\nassert solution(\"1 4\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 3\") == 0.001\nassert solution(\"2 5\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 4\") == 0.001\nassert solution(\"3 6\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 5\") == 0.001\nassert solution(\"4 7\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 6\") == 0.001\nassert solution(\"5 8\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n1 7000 7\") == 0.001\nassert solution(\"6 9\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n1 7000 8\\n1 8000 8\") == 0.001\nassert solution(\"7 10\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n1 7000 8\\n1 8000 9\\n1 9000 9\") == 0.001\nassert solution(\"8 11\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n1 7000 8\\n1 8000 9\\n1 9000 10\\n1 10000 10\") == 0.001\nassert solution(\"9 12\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n1 7000 8\\n1 8000 9\\n1 9000 10\\n1 10000 11\\n1 11000 11\") == 0.001\nassert solution(\"10 13\\n1000 1 0\\n1 1000 2\\n1 2000 3\\n1 3000 4\\n1 4000 5\\n1 5000 6\\n1 6000 7\\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Invalid input\"  # Test case 1: Invalid input"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\nassert solution(\"2 3\\n5000 2 1\\n1000 3 2\") == \"0.001\"\nassert solution(\"3 4\\n10000 3 3\\n2000 4 4\") == \"0.001\"\nassert solution(\"4 5\\n20000 4 5\\n3000 5 6\") == \"0.001\"\nassert solution(\"5 6\\n30000 5 7\\n4000 6 8\") == \"0.001\"\nassert solution(\"6 7\\n40000 6 9\\n5000 7 10\") == \"0.001\"\nassert solution(\"7 8\\n50000 7 11\\n6000 8 12\") == \"0.001\"\nassert solution(\"8 9\\n60000 8 13\\n7000 9 14\") == \"0.001\"\nassert solution(\"9 10\\n70000 9 15\\n8000 10 16\") == \"0.001\"\nassert solution(\"10 11\\n80000 10 17\\n9000 11 18\") == \"0.001\"\nassert solution(\"11 12\\n90000 11 19\\n10000 12 20\") == \"0.001\"\nassert solution(\"12 13\\n100000 12 21\\n11000 13 22\") == \"0.001\"\nassert solution(\"13 14\\n110000 13 23\\n12000 14 24\") == \"0.001\"\nassert solution(\"14 15\\n120000 14 25\\n13000 15 26\") == \"0.001\"\nassert solution(\"15 16\\n130000 15 27\\n14000 16 28\") == \"0.001\"\nassert solution(\"16 17\\n140000 16 29\\n15000 17 30\") == \"0.001\"\nassert solution(\"17 18\\n150000 15 31\\n16000 16 32\") == \"0.001\"\nassert solution(\"18 19\\n160000 16 33\\n17000 17 34\") == \"0.001\"\nassert solution(\"19 20\\n170000 17 35\\n18000 18 36\") == \"0.001\"\nassert solution(\"20 21\\n180000 18 37\\n19000 19 38\") == \"0.001\"\nassert solution(\"21 22\\n190000 19 39\\n20000 20 40\") == \"0.001\"\nassert solution(\"22 23\\n200000 20 41\\n21000 21 42\") == \"0.001\"\nassert solution(\"23 24\\n210000 21 43\\n22000 22 44\") == \"0.001\"\nassert solution(\"24 25\\n220000 22 45\\n23000 23 46\") == \"0.001\"\nassert solution(\"25 26\\n2300"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.001"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2 10000\n    1 2\n    2 3\n    3 1\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 5 6 10000\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    \"\"\"\n) == \"10\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0\\n'\nassert solution('3 6 3 50000\\n1 2\\n2 3\\n3 4\\n') == '1\\n'\nassert solution('3 6 3 50000\\n1 2\\n2 3\\n3 5\\n') == '0\\n'\nassert solution('3 6 3 50000\\n1 2\\n2 3\\n3 6\\n') == '1\\n'\nassert solution('3 6 3 50000\\n1 2\\n2 3\\n3 7\\n') == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Test Failed\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0\\n'\n\nassert solution('''\n3 4 3 10000\n1 2\n2 3\n3 1\n''') == '4\\n'\n\nassert solution('''\n3 3 3 10000\n1 2\n2 3\n3 1\n''') == '3\\n'\n\nassert solution('''\n3 4 3 10000\n1 2\n2 3\n3 4\n''') == '3\\n'\n\nassert solution('''\n3 3 3 10000\n1 2\n2 3\n3 1\n''') == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=TEST_CASE) == TEST_OUTPUT, \\\n    f\"Solution({stdin}) doesn't match expected output.\\nExpected: {TEST_OUTPUT}\\nGot: {solution(stdin)}\"\n\nTEST_CASE = \"\"\"\n3 3 2 10000\n1 2\n2 3\n3 1\n\"\"\"\nTEST_OUTPUT = 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == 0"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nprint(\"All tests passed!\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"6\\n0 0 1 1\\n1 0 0 2\\n1 0 2 0\\n1 2 1 1\\n1 2 2 0\\n2 0 1 0\\n2 1 0 0\") == \"38\"\nassert solution(\"10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == \"155\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 26, \"Test case 1\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\nassert solution('5\\n0 1 0 1\\n1 0 0 1\\n1 1 0 1\\n1 2 0 1\\n1 3 0 1') == 10\nassert solution('6\\n0 1 0 1\\n1 0 0 1\\n1 1 0 1\\n1 2 0 1\\n1 3 0 1\\n1 4 0 1') == 17\nassert solution('7\\n0 1 0 1\\n1 0 0 1\\n1 1 0 1\\n1 2 0 1\\n1 3 0 1\\n1 4 0 1\\n1 5 0 1') == 23"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"26\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 26 # expected output"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"0 1 0 0\\n1 0 1 1\\n1 2 0 0\\n1 2 3 0\") == 12\nassert solution(\"0 1 0 1\\n1 0 1 0\\n1 2 1 0\\n1 2 3 1\") == 38"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"\"\"\n0.333333333\n0.666666667\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\\n\", \"Test case 1 failed.\"\n\nsolution = \"\"\"\nimport random"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"45 45 45 0\") == \"0.75\"\nassert solution(\"45 45 0 45\") == \"0.75\"\nassert solution(\"45 45 45 45\") == \"0.75\"\nassert solution(\"45 45 -45 0\") == \"0.75\"\nassert solution(\"45 45 0 -45\") == \"0.75\"\nassert solution(\"45 45 -45 -45\") == \"0.75\"\nassert solution(\"45 45 45 -45\") == \"0.75\"\nassert solution(\"45 45 -45 45\") == \"0.75\"\nassert solution(\"45 45 0 45\") == \"0.75\"\nassert solution(\"45 45 45 0\") == \"0.75\"\nassert solution(\"45 45 0 45\") == \"0.75\"\nassert solution(\"45 45 45 0\") == \"0.75\"\nassert solution(\"45 45 -45 0\") == \"0.75\"\nassert solution(\"45 45 0 -45\") == \"0.75\"\nassert solution(\"45 45 -45 -45\") == \"0.75\"\nassert solution(\"45 45 45 -45\") == \"0.75\"\nassert solution(\"45 45 -45 45\") == \"0.75\"\nassert solution(\"45 45 0 45\") == \"0.75\"\nassert solution(\"45 45 45 0\") == \"0.75\"\nassert solution(\"45 45 0 45\") == \"0.75\"\nassert solution(\"45 45 45 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.75\\n\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='45 45 0 0\\n') == '0.75\\n'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == 0.75, \"The output should be 0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input: {input_data}, expected output: {expected_output}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('45 45 0 0') == '0.75', \"Your solution is not correct.\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n1 0\") == \"8\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n1 0\") == \"8\\n\"\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n1 0\") == \"8\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed with input: {input()}, expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"Output: 4, Explanation: Dr. Knight needs to wait at the destination before Mr. Day shows up.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 6) == 4, \"Test case 1\"\nassert solution(5, 7) == 4, \"Test case 2\"\nassert solution(5, 8) == 3, \"Test case 3\"\nassert solution(5, 9) == 3, \"Test case 4\"\nassert solution(5, 10) == 2, \"Test case 5\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4, 'Test case 1 failed'\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4, 'Test case 2 failed'\nassert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"Solution is {solution}, expected {expected}\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Test failed: expected '{expected}', got '{solution(input)}'.\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '100\\n', \"Please implement the solution\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"100\", \"The solution is incorrect.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100', \"Test case 1 failed\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100\", \"Expected output: 100, actual output: {}\".format(solution(stdin))"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 10 0 5\") == 100\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"1\\n\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"Error: solution(stdin: str) -> str\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n\") == 1\nassert solution(\"0 0 0 0\\n1 1 1 1\\n2 2 2 2\\n\") == 0\nassert solution(\"100 100 0 0\\n101 101 101 101\\n102 102 102 102\\n\") == 0\nassert solution(\"1 1 2 2\\n-1 1 1 1\\n3 3 2 2\\n-3 3 1 1\\n\") == 0\nassert solution(\"0 0 1 2\\n0 0 1 1\\n0 0 1 0\\n\") == 1\nassert solution(\"2 3 1 2\\n-2 3 1 1\\n-2 3 1 0\\n\") == 1\nassert solution(\"0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n\") == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('4\\n0 0 1 1\\n1 2 3 4\\n2 3 4 5') == 1\nassert solution('10000\\n0 0 1 1\\n1 2 3 4\\n2 3 4 5') == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('2 0 2 2\\n2 1 2 2\\n1 2 2 2') == 0\nassert solution('3 0 2 2\\n3 1 3 4\\n1 3 3 4') == 1\nassert solution('5 0 2 2\\n5 1 6 8\\n1 6 6 8') == 1\nassert solution('1 0 3 4\\n1 1 4 4\\n2 2 5 5') == 0\nassert solution('2 0 2 2\\n2 1 2 2\\n3 3 3 4') == 1\nassert solution('2 0 2 2\\n2 1 2 2\\n3 3 4 4') == 0\nassert solution('3 0 2 2\\n3 1 3 4\\n4 3 4 4') == 1\nassert solution('4 0 2 2\\n4 1 4 4\\n5 3 5 5') == 1\nassert solution('2 0 3 3\\n2 1 4 4\\n3 2 4 4') == 1\nassert solution('3 0 3 4\\n3 1 5 5\\n4 2 5 5') == 1\nassert solution('5 0 4 5\\n5 1 6 6\\n6 2 6 6') == 1\nassert solution('1 0 5 6\\n1 1 6 6\\n2 2 7 7') == 1\nassert solution('2 0 5 6\\n2 1 6 6\\n3 2 7 7') == 1\nassert solution('3 0 6 7\\n3 1 8 8\\n4 2 8 8') == 1\nassert solution('4 0 7 8\\n4 1 9 9\\n5 2 9 9') == 1\nassert solution('5 0 8 9\\n5 1 10 10\\n6 2 10 10') == 1\nassert solution('6 0 9 10\\n6 1 10 10\\n7 2 11 11') == 1\nassert solution('7 0 10 11\\n7 1 12 12\\n8 2 12 12') == 1\nassert solution('8 0 11 12\\n8 1 13 13\\n9 2 13 13') == 1\nassert solution('9 0 12 13\\n9 1 14 14\\n10 2 14 14') == 1\nassert solution('10 0 13 14\\n10 1 15 15\\n11 2 15 15') == 1\nassert solution('11 0 14 15\\n11 1 16 16\\n12 2 16 16') == 1\nassert solution('12 0 15 16\\n12 1 17 17\\n13 2 17 17') == 1\nassert solution('13 0 16 17\\n13 1 18 18\\n14 2 18 18') == 1\nassert solution('14 0 17 18\\n14 1 19 19\\n15 2 19 19') == 1\nassert solution('15 0 18 19\\n15 1 20 20\\n16 2 20 20') == 1\nassert solution('16 0 19 20\\n16 1 21 21\\n17 2 21 21') == 1\nassert solution('17 0 20 "
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n\") == \"1\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"10 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"10\"\nassert solution(\"10 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"10\"\nassert solution(\"10 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"10\"\nassert solution(\"10 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"10\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\\n\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\"\"\") == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, 'The solution is incorrect.'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 17, \"Expected: 17, got: {}\".format(solution(open(\"input.txt\", \"r\")))"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, \"The solution should be 17.\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\nprint(\"All tests passed!\")"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"Test failed\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''1 4 3 5 2\n2 3 5 1 4'''"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"3 2 3 1 1\\n5\") == \"impossible\"\nassert solution(\"1 4 3 5 2\\n2 3 5 1 4\\n1 4 3 5 2\\n2 3 5 1 4\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'\n\nHere, we first test the case where the sequence $a = (a_1, \\dots, a_ n)$ is $(1, \\dots, n)$. In this case, we can find two permutations $\\pi$ and $\\sigma$ such that $\\pi_i + \\sigma_i = a_i \\pmod{n}$. We can check this using the fact that $\\pi_i + \\sigma_i = a_i \\pmod{n}$ for all $i$. Therefore, we have two permutations $\\pi$ and $\\sigma$ such that $\\pi_i + \\sigma_i = a_i \\pmod{n}$ for all $i$. We can print these two permutations on one line each using the print function.\n\nHowever, if the sequence $a = (a_1, \\dots, a_ n)$ is not such that $\\pi_i + \\sigma_i = a_i \\pmod{n}$ for all $i$, we need to find two permutations $\\pi$ and $\\sigma$ such that $\\pi_i + \\sigma_i = n \\pmod{n}$. In this case, the public key $(a_1, \\dots, a_ n)$ does not satisfy the property that $\\pi_i + \\sigma_i = a_i \\pmod{n}$. Therefore, we cannot find any two permutations $\\pi$ and $\\sigma$ such that $\\pi_i + \\sigma_i = n \\pmod{n}$.\n\nTherefore, the output will be \"impossible\" if the sequence $a = (a_1, \\dots, a_ n)$ is not such that $\\pi_i + \\sigma_i = a_i \\pmod{n}$ for all $i$."
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'\nassert solution('6\\n3 2 3 1 1') == 'impossible'\nassert solution('5\\n1 2 3 4 5') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4\\nimpossible\\n'\nassert solution('5\\n3 2 3 1 2') == '2 3 5 1 4\\nimpossible\\n'\nassert solution('5\\n3 2 3 1 3') == '3 5 1 4 2\\nimpossible\\n'\nassert solution('5\\n3 2 3 1 4') == '3 5 1 4 2\\n1 4 3 5 2\\nimpossible\\n'\nassert solution('5\\n3 2 3 1 5') == '3 5 1 4 2\\n1 4 3 5 2\\n2 3 5 1 4\\nimpossible\\n'\nassert solution('5\\n3 2 3 1 6') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 7') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 8') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 9') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 10') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 11') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 12') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 13') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 14') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 15') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 16') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 17') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 18') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 19') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 20') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 21') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 22') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 23') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 24') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 25') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 26') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 27') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 28') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 29') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 30') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 31') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 32') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 33') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 34') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 35') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 36') == 'impossible\\n'\nassert solution('5\\n3 2 3 1 37') == 'impossible\\n'\nassert solution('5\\n3 2 3"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3 1 1\\n') == '1 4 3 5 2\\n2 3 5 1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == 'impossible\\n'\nassert solution('5\\n1 2 3 4 5\\n6\\n7 8 9 10 11\\n') == 'impossible\\n'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 4 3 5 2 \\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution() == \"impossible\"\nprint(solution())"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('2\\n1 1\\n0 1\\n') == 0.5\nassert solution('3\\n1 1\\n0 1\\n') == 1.0\nassert solution('4\\n1 1\\n0 1\\n') == 0.0\nassert solution('5\\n1 1\\n0 1\\n') == 0.0"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n3 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n3 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n3 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n3 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n2 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n2 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 1\\n2 0 1\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 1\\n2 0 1\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n2 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n2 0 1\\n2 0 1\\n1 4') == '0.76772047'\nassert solution('1\\n3 0 2\\n2 0 1\\n2 0 2\\n1 4') == '0.76772047'\nassert solution('1\\n4 0 2\\n2 0 1\\n2 0 2\\n1 4') == '0.767720"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.76772047, \"Please fill in the solution.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.76772047\", \"The output is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nprint(\"All tests passed\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"0.76772047\"\n\nsolution = \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == 0.76772047\nassert solution('1\\n1 1\\n1 1') == 1.0\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 0.0\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047', 'Incorrect output'\nprint('Test Passed')"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27', 'Expected \"27\", got \"{}\"'.format(solution('hello teams'))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27', \"The solution should return 27, but it returns {}\".format(solution('hello teams'))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\nhello teams\n\"\"\"\n) == \"27\\n\"\n\nassert solution(\n    \"\"\"\nworld teams\n\"\"\"\n) == \"27\\n\"\n\nassert solution(\n    \"\"\"\nabcdefg\n\"\"\"\n) == \"27\\n\"\n\nassert solution(\n    \"\"\"\nabccbaab\n\"\"\"\n) == \"27\\n\"\n\nassert solution(\n    \"\"\"\nzabba\n\"\"\"\n) == \"27\\n\"\n\nassert solution(\n    \"\"\"\naaaabbbbccc\n\"\"\"\n) == \"27\\n\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"def\") == \"0\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"world teams\") == \"27\"\nassert solution(\"def teams\") == \"27\"\nassert solution(\"adefb\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Error in solution\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n2 5\\n3 2\\n\") == 1\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n2 5\\n3 2\\n4 1\\n5 4\\n6 2\\n7 5\\n8 3\\n9 6\\n10 4\\n11 7\\n12 5\\n13 8\\n14 6\\n15 9\\n16 7\\n17 10\\n18 8\\n19 11\\n\") == 2\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n2 5\\n3 2\\n4 1\\n5 4\\n6 2\\n7 5\\n8 3\\n9 6\\n10 4\\n11 7\\n12 5\\n13 8\\n14 6\\n15 9\\n16 7\\n17 10\\n18 8\\n19 11\\n20 8\\n\") == 1\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n2 5\\n3 2\\n4 1\\n5 4\\n6 2\\n7 5\\n8 3\\n9 6\\n10 4\\n11 7\\n12 5\\n13 8\\n14 6\\n15 9\\n16 7\\n17 10\\n18 8\\n19 11\\n20 8\\n21 12\\n\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 1 failed.\"\nassert solution(\"6 4\\n1 7\\n5 4\\n7 6\\n9 3\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 2 failed.\"\nassert solution(\"6 4\\n1 8\\n5 3\\n7 6\\n9 4\\n16 7\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 3 failed.\"\nassert solution(\"6 4\\n1 8\\n5 4\\n7 7\\n9 5\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 4 failed.\"\nassert solution(\"6 4\\n1 9\\n5 4\\n7 7\\n9 6\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 5 failed.\"\nassert solution(\"6 4\\n1 8\\n5 4\\n7 6\\n9 4\\n16 7\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 6 failed.\"\nassert solution(\"6 4\\n1 8\\n5 4\\n7 7\\n9 5\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 7 failed.\"\nassert solution(\"6 4\\n1 9\\n5 4\\n7 7\\n9 6\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 8 failed.\"\nassert solution(\"6 4\\n1 9\\n5 5\\n7 6\\n9 6\\n16 9\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 9 failed.\"\nassert solution(\"6 4\\n1 9\\n5 4\\n7 7\\n9 6\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 10 failed.\"\nassert solution(\"6 4\\n1 9\\n5 4\\n7 7\\n9 6\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 11 failed.\"\nassert solution(\"6 4\\n1 10\\n5 5\\n7 7\\n9 6\\n16 9\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 12 failed.\"\nassert solution(\"6 4\\n1 8\\n5 4\\n7 7\\n9 6\\n16 8\\n17 11\\n4 7 2\\n6 3 1\\n12 6 3\") == 3, \"Test case 13 failed.\"\nassert solution(\"6 4\\n1 8\\n5 4\\n7 7\\n9 6\\n16 8\\n17 10\\n4 7 2\\n6 3 1\\n12 6"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n18 9 3\") == 3"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 1 failed\"\n\nassert solution(\"8 6\\n-3 6\\n1 10\\n-2 8\\n2 7\\n-1 10\") == 1, \"Test case 2 failed\"\n\nassert solution(\"8 5\\n-2 8\\n4 5\\n-3 5\\n6 6\\n-1 5\") == 1, \"Test case 3 failed\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Please implement the solution function correctly\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The output must be 2.\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\nassert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 1"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n2\\n1\\n10\\n0\\n10\\n10\") == \"2\\n\"\nassert solution(\"10\\n2\\n1\\n10\\n0\\n10\\n10\") == \"2\\n\"\nassert solution(\"10\\n2\\n1\\n10\\n0\\n10\\n10\") == \"2\\n\"\nassert solution(\"10\\n2\\n1\\n10\\n0\\n10\\n10\") == \"2\\n\"\nassert solution(\"10\\n2\\n1\\n10\\n0\\n10\\n10\") == \"2\\n\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(f\"Test Case #{index + 1}: {output}\")\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"26\", \"Test Case 1\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed. Expected output: {expected}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf') == 26\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n') == 26\nassert solution('5 2\\na\\nb\\nc\\nd\\ne\\ncaf') == 33\nassert solution('5 2\\na\\nb\\nc\\nd\\ne\\ncaf\\n') == 33\nassert solution('5 1\\na\\nb\\nc\\nd\\ne\\ncaf') == 42\nassert solution('5 1\\na\\nb\\nc\\nd\\ne\\ncaf\\n') == 42"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26\\ndef solution(stdin: str) -> str:\n    n, k = map(int, stdin.split())\n    strings = [\"\".join(sorted(s)) for s in itertools.combinations(range(n), k)]\n    pos = find_pos(strings, \"cad\")\n    return str(pos)"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5 10 30\n10 5 3 1 3\n\"\"\") == \"3 5 2 1 4\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 1 2 1 3\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 1 4\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 2 3\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 1 3\n\"\"\") == \"3 5 2 1 4\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 1 2 1 3\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 1 4\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 2 3\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 5 3 1 3\n\"\"\") == \"3 5 2 1 4\"\n\nassert solution(\n\"\"\"\n5 10 30\n10 1 2 1 3\n\"\"\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3 5 2 1 4\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 4 3 1 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n5 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 0 3\") == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 0\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 2 3\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 3 3 2\") == \"3 5 2 1 4\\n\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n3 5 2 1 4\n'''\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3 5 2 1 4\\n\", \"The correct output is: 3 5 2 1 4\\n\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n5 10 10 3 2\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"4\\n1 2\\n2 3\\n4 5\\n6 7\") == 4\nassert solution(\"2\\n1 1\\n1 2\\n1 2\") == 1\nassert solution(\"1\\n1 1\") == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2'\nassert solution('1\\n2\\n3\\n2\\n2\\n1\\n3\\n1\\n2\\n3\\n2\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\n3\\n3\\n3\\n1\\n3\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n3\\n3\\n3\\n2\\n1\\n1\\n2\\n3\\n3\\n2\\"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3\\n') == 2, \"The expected output is 2, but got {}\".format(solution('3\\n1 1\\n2 3\\n2 3\\n'))\nassert solution('0\\n1 1\\n2 3\\n2 3\\n') == 0, \"The expected output is 0, but got {}\".format(solution('0\\n1 1\\n2 3\\n2 3\\n'))\nassert solution('1\\n1 1\\n2 3\\n2 3\\n') == 1, \"The expected output is 1, but got {}\".format(solution('1\\n1 1\\n2 3\\n2 3\\n'))\nassert solution('2\\n1 1\\n2 3\\n2 3\\n') == 2, \"The expected output is 2, but got {}\".format(solution('2\\n1 1\\n2 3\\n2 3\\n'))\nassert solution('3\\n1 1\\n2 3\\n2 3\\n') == 6, \"The expected output is 6, but got {}\".format(solution('3\\n1 1\\n2 3\\n2 3\\n'))"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected 2, but got {}\".format(solution())"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nprint(\"All tests pass\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"4\\n1 2 1 2\") == \"3\\n\", \"Test 2 failed\"\nassert solution(\"4\\n1 2 1 2\") == \"3\\n\", \"Test 3 failed\"\nassert solution(\"4\\n1 2 1 2\") == \"3\\n\", \"Test 4 failed\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 3, \"Your solution is not correct.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 1 2') == 3, \"Incorrect output. Expected 3, but got {}\".format(solution('4\\n1 2 1 2'))"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'\nprint('All test cases pass.')"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3', 'Test case 1 failed'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The output is incorrect.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\nassert solution(\"1 1 2\") == \"0\\n\"\nassert solution(\"5 1 1000000010\") == \"0\\n\"\nassert solution(\"4 1 1000000010\") == \"32\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"79\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"79\", \"Output should be 79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 999999937') == '79'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 999999937') == '79'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 79, \"The function should return 79, but it returns {}.\".format(solution())"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"zucchini\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'zucchini'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"zucchini\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'zucchini'\nassert solution() =='mozzarella'\nassert solution() =='mushrooms'\nassert solution() == 'artichoke'\nassert solution() == ''\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1\\n2 +apple -banana\\n3 +banana -grape -orange -mango\\n4 +mango -orange') == 'banana\\ngrape\\noctober\\nmango\\noctober\\noctober\\n'\nassert solution('1\\n2 +apple -banana') == 'banana\\napple\\n'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"zucchini mozzarella mushrooms artichoke\", \"Invalid output\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"zucchini\", \"Expected output: 'zucchini', but got: '{}'\".format(solution(stdin))"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'\nassert solution('1\\n1 +pepperoni +pineapple -tofu -mushrooms') == 'pineapple'\nassert solution('1\\n2 +pepperoni +pineapple -mushrooms') == 'pineapple'\nassert solution('1\\n3 +pepperoni +pineapple -mushrooms') == 'pineapple'\nassert solution('1\\n4 +pepperoni +pineapple -mushrooms') == 'pineapple'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    \"\"\"\n) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 -carrots -peppers -radish +onion +cucumber +mushrooms\n    \"\"\"\n) == \"-carrots\\n-peppers\\n-radish\\n+onion\\n+cucumber\\n+mushrooms\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3 +mushrooms -rice -pizza\n    \"\"\"\n) == \"+mushrooms\\n-rice\\n-pizza\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 +onion -mushrooms +peppers -pineapple -potato -banana\n    \"\"\"\n) == \"-mushrooms\\n+onion\\n-pineapple\\n+peppers\\n-potato\\n-banana\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 -eggplant -carrot -broccoli -broccoli -broccoli\n    \"\"\"\n) == \"-eggplant\\n+carrot\\n-broccoli\\n+broccoli\\n-broccoli\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: '{output}', Received: '{solution(input())}'\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'PS\\nP\\nR\\nS\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"PS\"\nassert solution() == \"PP\"\nassert solution() == \"RR\"\nassert solution() == \"SS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == 'PS\\nPP\\nRR\\nSS\\n'\nassert solution('5 2\\nPPPPPPPP\\nRRRRRRRR\\nPPPPPPPP\\nSSSSSSS\\n') == 'PPPPPPPP\\nRRRRRRRR\\nSSSSSSS\\nP\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 5\\nPP\\nP\\nP\\nS\\nS\\nS\\n\") == \"PS\\nPP\\nP\\nS\\nS\\nS\\n\"\nassert solution(\"2 2\\nPP\\nSS\\nSS\\nSS\\nSS\\n\") == \"SS\\nPP\\nSS\\nSS\\nSS\\nSS\\n\"\nassert solution(\"3 3\\nPP\\nRR\\nPP\\nRR\\nPP\\nRR\\nPP\\n\") == \"RR\\nPP\\nRR\\nPP\\nRR\\nPP\\nRR\\nPP\\n\"\nassert solution(\"2 1\\nPP\\n\") == \"PP\\n\"\nassert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\nSS\\n\") == \"RR\\nPS\\nPP\\nSS\\nSS\\nSS\\n\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == ['PS', 'PP', 'RR', 'SS']\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 5\\nPPS\\nRRR\\nPSS\\nSSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 6\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\") == \"SSS\\nPP\\nRR\\nPPS\"\nassert solution(\"3 7\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\") == \"SSS\\nPPS\\nRRR\\nPPP\"\nassert solution(\"3 8\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\") == \"PPP\\nPPS\\nRRR\\nSSS\"\nassert solution(\"3 9\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\") == \"PPP\\nPPS\\nRRR\\nSSS\"\nassert solution(\"3 10\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\") == \"SSS\\nPPP\\nRRR\\nPPS\"\nassert solution(\"3 11\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\") == \"SSS\\nPPP\\nRRR\\nPPS\"\nassert solution(\"3 12\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\") == \"SSS\\nPPP\\nRRR\\nPPS\"\nassert solution(\"3 13\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\") == \"SSS\\nPPP\\nRRR\\nPPS\"\nassert solution(\"3 14\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\") == \"SSS\\nPPP\\nRRR\\nPPS\"\nassert solution(\"3 15\\nPPS\\nRRR\\nPSS\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\\nPPP\\nSSS\\nPPS\") == \"SSS\\nPPP\\nRRR\\nPPS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n\"\"\") == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\n0 1\\n0\\n0\\n0 1\\n0\\n0\\n0 1\\n\") == \"288\"\nassert solution(\"2\\n1 2\\n3 10\\n4 5\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n\") == \"635\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288', 'Test case 1 failed'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288', 'Test case 2 failed'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288', 'Test case 3 failed'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288', 'Test case 4 failed'\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288', 'Test case 5 failed'\nprint('All test cases passed')"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\\n2.0\\n0\\n0\\n0\\n0\") == 288.0\nassert solution(\"0\\n1.0\\n10\\n5\\n1\\n20\\n2\") == 26.0\nassert solution(\"10\\n20\\n5\\n100\\n1000\\n1000\") == 37.24\nassert solution(\"10\\n100\\n1000\\n10000\\n100000\\n100000\") == 40.23\nassert solution(\"100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n1000000000\") == 22.47"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 288, \"The output is incorrect. Please check the implementation and try again.\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    5\n    0.1 2.0\n    0\n    0\n    0\n    0\n    \"\"\") == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {sample_input}\\nOutput: {solution(sample_input)}\\nExpected output: {sample_output}\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '288.0', 'The output is incorrect'"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"The meow factor of 'pastimeofwhimsy' should be 1.\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('hello') == '0'\nassert solution('abcde') == '0'\nassert solution('ab') == '0'\nassert solution('hello there') == '0'"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\nassert solution(\"3 4\\n2 3 4 5 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 2 3 4 5 \") == \"NO\\n\"\nassert solution(\"3 4\\n2 3 4 5 6 7 8 9 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 2 3 4 5 6 7 8 9 10 \") == \"NO\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('necklace.in', 'r')) == 'YES\\n'\nassert solution(open('necklace.in', 'r')) == 'NO\\n'\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\nassert solution(\"5 6\\n1 2 2 1 3 2 1 \") == \"NO\\n\"\nassert solution(\"2 3\\n1 2 3 2 \") == \"YES\\n\"\nassert solution(\"5 7\\n1 2 3 2 4 3 2 1 \") == \"YES\\n\"\nassert solution(\"4 5\\n1 2 3 4 5 \") == \"NO\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES', \"The correctness of the solution is not verified.\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1 1 1\") == \"NO\"\nassert solution(\"5 6\\n2 3 4 5 6\") == \"NO\"\nassert solution(\"5 6\\n2 3 4 5 6 6 6\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('3 4\\n2 3 3 1 ') == 'NO'\nassert solution('3 4\\n1 2 1 1 ') == 'YES'\nassert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('3 4\\n1 2 2 1 ') == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nassert solution(\"10\\n1 2\\n3 4\\n5\\n6\") == \"5/2\"\nassert solution(\"100\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"10/3\"\nassert solution(\"1000\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\") == \"100/6\"\nassert solution(\"1000000\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n\") == \"100/6\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3/1', 'Your solution is incorrect.'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1\\n'\nassert solution('3\\n1 2\\n3\\n4') == '3/1\\n'\nassert solution('4\\n1 2\\n3\\n4') == '3/1\\n'\nassert solution('5\\n1 2\\n3\\n4') == '3/1\\n'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\\n3/1\"\nassert solution(\"2\\n3 1\\n2\") == \"2/1\\n1/2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == \"4/1\\n1/3\"\nassert solution(\"2\\n1 1\\n1\") == \"1/1\\n1/1\"\nassert solution(\"2\\n3 1\\n4\") == \"2/1\\n1/2\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3/1\\n\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\"\nassert solution(\"3\\n2 1\\n4 3\\n5 4\") == \"5/2\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"4/1\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 5\") == \"12/10\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1\\n'\n\nassert solution('2\\n1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\", \"sample case 1\"\nassert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\", \"sample case 2\"\nassert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\", \"sample case 3\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3/1\\n\", \"Test 1\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == 1.114672365\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\nassert solution(\"3\\n1.2 10.2\\n2.2 15.2\\n1.1 9.2\") == \"1.288316515\\n\"\nassert solution(\"4\\n1.2 10.2\\n2.2 15.2\\n1.1 9.2\\n3.1 12.2\") == \"2.902251685\\n\"\nassert solution(\"5\\n1.2 10.2\\n2.2 15.2\\n1.1 9.2\\n3.1 12.2\\n1.3 11.1\") == \"5.28027797\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nassert solution(\"3\\n5.3 8.4\\n2.6 9.0\\n5.0 7.9\\n1.5 12.5\") == 1.114672365\nassert solution(\"5\\n5.2 12.1\\n3.7 13.1\\n6.3 11.9\\n2.1 15.7\\n8.6 10.1\") == 1.114672365\nassert solution(\"6\\n6.5 13.8\\n4.1 13.9\\n9.9 12.6\\n3.1 16.0\\n7.1 11.3\\n1.3 15.2\") == 1.114672365"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input) == \"1.114672365\"\nprint(f\"Correct!\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1.114672365\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'\nassert solution('0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 13"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5 10\\n5 5\\n10 5\\n10 0\\n5 10\") == \"5\\n5 5 10 10\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\\n1 1 1 1\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n1 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n1 0') == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"3\\n1 1 2 2 3 4 5 6\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"6\\n10 3\\n15 1\\n10 0\\n5 5\\n\") == \"3\\n2 3 4 5 2\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case failed. Expected: {output}, but got: {solution(input)}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '3\\n2 3 1 4'\nassert solution('3 2\\n1 4\\n2 6\\n3 8\\n4 10\\n5 12\\n6 14\\n7 16\\n8 18\\n9 20\\n10 22\\n11 24\\n12 26\\n13 28\\n14 30\\n15 32\\n16 34\\n17 36\\n18 38\\n19 40\\n20 42\\n21 44\\n22 46\\n23 48\\n24 50') == '2\\n3 1 4 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 3\", \"Output should be '1 2 3'\"\nassert solution() == \"none\", \"Output should be 'none'\"\nassert solution() == \"none\", \"Output should be 'none'\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\nnone\"\nassert solution(stdin) == \"2\\n1\\nnone\"\nassert solution(stdin) == \"3\\nnone\"\nassert solution(stdin) == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\\n\", \"Test 1\"\nassert solution(\"3\\n1 1 2\") == \"none\\n\", \"Test 2\"\nassert solution(\"4\\n1 2 1 3\") == \"none\\n\", \"Test 3\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\", \"Sample Input 1\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\", \"Sample Input 2\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\", \"Sample Input 3\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    1 2 3\n    3\n    1 1 2\n    4\n    1 2 1 3\n    1 1 1 4\n    1 1 2 1\n    1 1 3 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 2 1\n    1 1 "
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n1\n2\n3\nnone\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 2 1 3\") == \"1\\n2\\n3\\none\"\nassert solution(\"3\\n1 1 2\\n4\\n1 2 1 3\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '''\n1\n2\n3\n'''\n\nassert solution('''\n3\n1 1 2\n''') == '''\nnone\n'''\n\nassert solution('''\n4\n1 2 1 3\n''') == '''\nnone\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '''1\n2\n3\n'''\n\nassert solution('''\n3\n1 1 2\n''') == '''none\n'''\n\nassert solution('''\n4\n1 2 1 3\n''') == '''none\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, got: {solution}\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"Your solution is incorrect.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5', 'Incorrect solution'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nassert solution('8\\n2 1 0 1 2 3 3') == '6'\nassert solution('10\\n1 1 1 1 1 1 1 1') == '1'\nassert solution('15\\n1 1 1 1 1 1 1 1') == '4'\nassert solution('16\\n1 1 1 1 1 1 1 1') == '5'\nassert solution('21\\n2 2 2 2 2 2 2 2') == '2'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 0 1 2 3 3') == '5'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n5\"\nassert solution(\"7\\n2 1 0 1 2 3 1000001\") == \"1000001\\n5\"\nassert solution(\"7\\n2 1 0 1 2 3\") == \"5\\n5\"\nassert solution(\"7\\n1 1 0 1 2 3 3\") == \"5\\n5\"\nassert solution(\"7\\n2 1 0 1 2 3\") == \"5\\n5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}\\nExpected: {output()}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution does not match the expected output. Expected: {expected}, actual: {solution(input())}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"-1 -1 -1 -1 -1\", \"-1 4 5 6 -1\", \"-1 4 -1 -1 -1\", \"-1 1 0 1 -1\", \"-1 3 1 2 -1\", \"-1 -1 -1 -1 -1\"]\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test case failed. Expected output: {output}, got: {solution(input)}\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5\") == 0"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n2 3 3\\n2 4 3\\n3 4 3\\n4 5 1\\n4 6 2\\n1 2 2\\n1 3 3\\n1 4 4\\n2 5 1\\n2 6 2\\n3 4 3\\n3 5 2\\n3 6 3\\n4 7 1\\n4 8 2\\n5 6 3\\n5 7 2\\n5 8 3\\n6 7 2\\n6 8 3\\n7 8 2\") == \"Impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n2 3 3\\n2 4 3\\n3 4 3\\n4 5 1\\n4 6 2\\n1 2 2\\n1 3 3\\n1 4 4\\n2 5 1\\n2 6 2\\n3 4 3\\n3 5 2\\n3 6 3\\n4 7 1\\n4 8 2\\n5 6 3\\n5 7 2\\n5 8 3\\n6 7 2\\n6 8 3\\n7 8 2\\n9 10 1\\n8 9 1\\n9 10 1\\n8 9 1\\n9 10 1\\n10 11 1\\n11 12 1\\n10 11 1\\n11 12 1\\n12 13 1\\n13 14 1\\n14 15 1\\n15 16 1\\n16 17 1\\n17 18 1\\n18 19 1\\n19 20 1\\n20 21 1\\n21 22 1\\n22 23 1\\n23 24 1\\n24 25 1\\n25 26 1\\n26 27 1\\n27 28 1\\n28 29 1\\n29 30 1\\n30 31 1\\n31 32 1\\n32 33 1\\n33 34 1\\n34 35 1\\n35 36 1\\n36 37 1\\n37 38 1\\n38 39 1\\n39 40 1\\n40 41 1\\n41 42 1\\n42 43 1\\n43 44 1\\n44 45 1\\n45 46 1\\n46 47 1\\n47 48 1\\n48 49 1\\n49 50 1\\n50 51 1\\n51 52 1\\n52 53 1\\n53 54 1\\n54 55 1\\n55 56 1\\n56 57 1\\n57 58 1\\n58 59 1\\n59 60 1\\n60 61 1\\n61 62 1\\n62 63 1\\n63 64 1\\n64"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6, \"Incorrect output. Expected 6, got {}\".format(solution())"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1\\n1 2 1\\n2 3 1\\n3 4 1\\n3 4 1\\n3 4 1\\n\") == \"impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1\\n1 2 1\\n2 3 1\\n3 4 1\\n3 4 1\\n3 4 1\\n2\\n\") == \"impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1\\n1 2 1\\n2 3 1\\n3 4 1\\n3 4 1\\n3 4 1\\n2 3 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n2 4 1\\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3 4 2 1\\n\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"5 3 2 1\") == \"00010\"\nassert solution(\"2 3 2 1\") == \"00100\"\nassert solution(\"1 1 1 1\") == \"00001\"\nassert solution(\"1 2 3 4\") == \"00000\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"01001\" # correct output"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 6) == \"possible\"\nassert solution(1, 1) == \"< 1\"\nassert solution(1, 2) == \"^ 2\"\nassert solution(2, 2) == \"< 2\"\nassert solution(2, 3) == \"^ 3\"\nassert solution(3, 3) == \"< 3\"\nassert solution(3, 4) == \"^ 4\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"impossible\"\nassert solution(\"10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"possible\\n< 1\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n^ 1\\n^ 2\\n^ 3\\n^ 4\\n^ 5\\n^ 6\\n^ 7\\n^ 8\\n^ 9\\n^ 10\\n< 1\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 1\\n^ 1\\n^ 2\\n^ 3\\n^ 4\\n^ 5\\n^ 6\\n^ 7\\n^ 8\\n^ 9\\n^ 10\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 7\\n< 8\\n< 9\\n< 10\\n< 8\\n< 9\\n< 10\\n< 9\\n< 10\\n< 1\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 1\\n^ 1\\n^ 2\\n^ 3\\n^ 4\\n^ 5\\n^ 6\\n^ 7\\n^ 8\\n^ 9\\n^ 10\\n< 1\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 1\\n^ 1\\n^ 2\\n^ 3\\n^ 4\\n^ 5\\n^ 6\\n^ 7\\n^ 8\\n^ 9\\n^ 10\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 2\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 3\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\n< 4\\n< 5\\n< 6\\n< 7\\n< 8\\n< 9\\n< 10\\"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"impossible\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"impossible\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n\nassert solution( \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n\"\"\") == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n    \"\"\"\n) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n\nassert solution(\n    \"\"\"\n    3 4 6\n    1 1\n    1 2\n    2 2\n    2 3\n    3 3\n    3 4\n    5 5\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.0\\n\"\nassert solution(open(\"input_test.txt\", \"r\")) == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0 1\n    0 1 1\n    2 0 3\n    2 1 3\n    \"\"\"\n) == \"2.0\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nassert solution('0 0 1\\n0 1 2\\n0 2 1\\n0 3 2') == '1.0'\nassert solution('0 0 1\\n0 1 2\\n0 2 1\\n0 3 2\\n4 4 4\\n4 5 5\\n4 6 6\\n4 7 7\\n4 8 8') == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\n\nimport math"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2.0"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\", \"Test case 1\"\nassert solution(input()) == \"5\", \"Test case 2\"\nassert solution(input()) == \"6\", \"Test case 3\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2 1 6 7\") == \"4\"\nassert solution(\"5 5 1 1 3 4 7\") == \"3\"\nassert solution(\"3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect. Expected {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n    7\n    5 4 3 2 1 6 7\n    5 5 1 1 3 4 7\n    3 7 1 4 5 6 2\n    \"\"\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7') == '4', \"The smallest number of columns Luka must delete is 4.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"Test case 1 failed\"\n\nassert solution() == 5, \"Test case 2 failed\"\n\nassert solution() == 6, \"Test case 3 failed\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n4\\n4\\n4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\", \"Luka must delete the second, fourth, sixth and seventh columns after deleting the first set of columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"N = \")) == 4, \"Luka must delete 4 columns.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution should return '{sample_output}', but it returned '{solution(sample_input)}'.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n-10 0\n-10 10\n''') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"4\\n-10000 0\\n-10000 10\") == \"2\"\nassert solution(\"4\\n-10000 -10000\\n-10000 -10000\") == \"2\"\nassert solution(\"4\\n10000 10000\\n10000 10000\") == \"2\"\nassert solution(\"4\\n-10 -10\\n10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"4\\n-5 5\\n5 5\") == \"3\"\nassert solution(\"5\\n-5 5\\n5 5\") == \"3\"\nassert solution(\"5\\n-10 0\\n10 0\") == \"1\"\nassert solution(\"5\\n-10 0\\n10 10\") == \"1\"\nassert solution(\"5\\n-10 0\\n10 0\") == \"1\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n'\nassert solution('5\\n0 0\\n10 10') == '1\\n'\nassert solution('5\\n0 0\\n10 10\\n0 0\\n10 10') == '3\\n'\nassert solution('5\\n0 0\\n10 10\\n0 0\\n10 10\\n-10 0\\n-10 10') == '2\\n'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n2'\nassert solution('4\\n0 0\\n10 0') == '1\\n2'\nassert solution('3\\n0 0\\n10 0') == '1\\n2'\nassert solution('2\\n0 0\\n10 0') == '1\\n2'\nassert solution('4\\n10000 10000\\n-10000 10000') == '2\\n2'\nassert solution('4\\n0 0\\n10000 10000') == '2\\n2'\nassert solution('3\\n0 0\\n10000 10000') == '2\\n2'\nassert solution('2\\n0 0\\n10000 10000') == '2\\n2'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5') == '0\\n'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == 0, \"Test case 1 failed\"\nassert solution('2 10') == 1, \"Test case 2 failed\"\nassert solution('4 15') == 2, \"Test case 3 failed\"\nassert solution('5 20') == 3, \"Test case 4 failed\"\nassert solution('10 50') == 4, \"Test case 5 failed\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == 0, \"Solution should return 0\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"1 10\") == \"1\\n\"\nassert solution(\"2 2\") == \"2\\n\"\nassert solution(\"3 3\") == \"3\\n\"\nassert solution(\"4 10\") == \"5\\n\"\nassert solution(\"5 100\") == \"61\\n\"\nassert solution(\"1 200\") == \"2062\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"10 5\") == \"570\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"10 2\") == \"584\\n\"\nassert solution(\"1 10\") == \"1100\\n\"\nassert solution(\"10 10\") == \"1100\\n\"\nassert solution(\"100 10\") == \"3000\\n\"\nassert solution(\"100 20\") == \"584\\n\"\nassert solution(\"100 100\") == \"1100\\n\"\nassert solution(\"100 1000\") == \"3000\\n\"\nassert solution(\"1000 1000\") == \"11000\\n\"\nassert solution(\"1000 10000\") == \"30000\\n\"\nassert solution(\"10000 10000\") == \"110000\\n\"\nassert solution(\"10000 100000\") == \"300000\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0\\n'\nassert solution('2 3') == '1\\n'\nassert solution('10 1000000') == '1000000\\n'\nassert solution('10 200') == '50\\n'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''1 5''') == '0\\n'\nassert solution('''2 3''') == '1\\n'\nassert solution('''3 6''') == '1\\n'\nassert solution('''4 5''') == '2\\n'\nassert solution('''5 6''') == '2\\n'\nassert solution('''6 7''') == '3\\n'\nassert solution('''7 8''') == '3\\n'\nassert solution('''8 9''') == '4\\n'\nassert solution('''9 10''') == '4\\n'\nassert solution('''10 11''') == '5\\n'\nassert solution('''11 12''') == '5\\n'\nassert solution('''12 13''') == '6\\n'\nassert solution('''13 14''') == '6\\n'\nassert solution('''14 15''') == '7\\n'\nassert solution('''15 16''') == '7\\n'\nassert solution('''16 17''') == '8\\n'\nassert solution('''17 18''') == '8\\n'\nassert solution('''18 19''') == '9\\n'\nassert solution('''19 20''') == '9\\n'\nassert solution('''20 21''') == '10\\n'\nassert solution('''21 22''') == '10\\n'\nassert solution('''22 23''') == '11\\n'\nassert solution('''23 24''') == '11\\n'\nassert solution('''24 25''') == '12\\n'\nassert solution('''25 26''') == '12\\n'\nassert solution('''26 27''') == '13\\n'\nassert solution('''27 28''') == '13\\n'\nassert solution('''28 29''') == '14\\n'\nassert solution('''29 30''') == '14\\n'\nassert solution('''30 31''') == '15\\n'\nassert solution('''31 32''') == '15\\n'\nassert solution('''32 33''') == '16\\n'\nassert solution('''33 34''') == '16\\n'\nassert solution('''34 35''') == '17\\n'\nassert solution('''35 36''') == '17\\n'\nassert solution('''36 37''') == '18\\n'\nassert solution('''37 38''') == '18\\n'\nassert solution('''38 39''') == '19\\n'\nassert solution('''39 40''') == '19\\n'\nassert solution('''40 41''') == '20\\n'\nassert solution('''41 42''') == '20\\n'\nassert solution('''42 43''') == '21\\n'\nassert solution('''43 44''') == '21\\n'\nassert solution('''44 45''') == '22\\n'\nassert solution('''45 46''') == '22\\n'\nassert solution('''46 47''') == '23\\n'\nassert solution('''47 48''') == '23\\n'\nassert solution('''48 49''') == '24\\n'\nassert solution('''49 50''') == '24\\n'\nassert solution('''50 51''') == '25\\n'\nassert solution('''51 52''') == '25\\n'\nassert solution('''52 53''') == '26\\n'\nassert solution('''53 54''') == '26\\n'\nassert solution('''54 55''') == '27\\n'\nassert solution('''55 56''') == '27\\n'\nassert solution('''56 57''') == '28\\n'\nassert solution('''57 58''') == '28\\n'\nassert solution('''58 59''') == '29\\n'\nassert solution('''59 60''') == '29\\n'\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"5 10\") == \"1\\n\"\nassert solution(\"10 50\") == \"2\\n\"\nassert solution(\"100 500\") == \"3\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nGot output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str} but got {solution(input_str)}\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, but got {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected {output3}, but got {solution(input3)}\"\nassert solution(input4) == output4, f\"Expected {output4}, but got {solution(input4)}\"\nassert solution(input5) == output5, f\"Expected {output5}, but got {solution(input5)}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Testcase 1 failed\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''0 0\n1 1'''"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '\\n0 0\\n1 1\\n'\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '\\n0 0\\n1 1\\n'\nassert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '\\n0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_input.txt', 'r')) == '0 0\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0 0\\n1 1\\n\"\nassert solution(\"5 5\\n0 0\\n1 1\\n1 1\\n1 1\\n0 0\\n\") == \"0 0\\n4 4\\n\"\nassert solution(\"7 7\\n0 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n0 0\\n\") == \"0 0\\n6 6\\n\"\nassert solution(\"3 3\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == \"0 0\\n1 1\\n\"\nassert solution(\"4 4\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n0 1\\n\") == \"0 0\\n1 2\\n\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1 2 0.950000\n    0.700000 50\n    \"\"\"\n) == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 40') == '43.333'\nassert solution('1 2 0.950000\\n0.700000 50.5') == '45.000'\nassert solution('1 2 0.950000\\n0.700000 45') == '43.500'\nassert solution('1 2 0.950000\\n0.700000 55') == '45.000'\nassert solution('1 2 0.950000\\n0.700000 50.5') == '45.000'\nassert solution('1 2 0.950000\\n0.700000 45') == '43.500'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt').read()) == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('4 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE\\n'\nassert solution('10 10 10\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE\\n'\nassert solution('10 5 10\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 3 3\\n2 1\\n2 3\\n2 1\") == \"3\\n\"\nassert solution(\"5 5 5\\n5 5\\n5 5\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 3 4\\n2 1\\n3 2\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4 4\\n1 1\\n1 1\\n1 1\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4 3 2\\n1 2\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n5 4 2\\n1 2\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n5 4 2\\n1 2\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n5 4 2\\n1 2\\n\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"1 1\\n2 3\\n1 2\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert isinstance(solution, str)\nassert len(solution) > 0"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\nIMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"2 2\\n3 1\\n4 2\\n5 3\\n\") == \"3\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0\\n'\n\nsolution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0')"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\\n\"\nassert solution(\"1 2\\n0.0 0.0\\n0.0 0.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n\") == \"2.0\\n\"\nassert solution(\"3 5\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n\") == \"1.5\\n\"\nassert solution(\"3 4\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n\") == \"2.0\\n\"\nassert solution(\"2 2\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n\") == \"0.0\\n\"\nassert solution(\"2 2\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n1.0 1.0\\n\") == \"0.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0, \"The output is incorrect.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"18000\", \"The given code is incorrect.\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    220 29\n    195 20\n    200 9\n    180 30\n    \"\"\"\n) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"1\\n456\") == \"456\"\nassert solution(\"2\\n789\\n654\") == \"6055\"\nassert solution(\"5\\n1234567890\") == \"1234567890\"\nassert solution(\"1000\\n1234567890\") == \"1234567890\"\nassert solution(\"1001\\n1234567890\") == \"1234567890\"\nassert solution(\"1002\\n1234567890\") == \"1234567890\"\nassert solution(\"1003\\n1234567890\") == \"1234567890\"\nassert solution(\"1004\\n1234567890\") == \"1234567890\"\nassert solution(\"1005\\n1234567890\") == \"1234567890\"\nassert solution(\"1006\\n1234567890\") == \"1234567890\"\nassert solution(\"1007\\n1234567890\") == \"1234567890\"\nassert solution(\"1008\\n1234567890\") == \"1234567890\"\nassert solution(\"1009\\n1234567890\") == \"1234567890\"\nassert solution(\"1010\\n1234567890\") == \"1234567890\"\nassert solution(\"1011\\n1234567890\") == \"1234567890\"\nassert solution(\"1012\\n1234567890\") == \"1234567890\"\nassert solution(\"1013\\n1234567890\") == \"1234567890\"\nassert solution(\"1014\\n1234567890\") == \"1234567890\"\nassert solution(\"1015\\n1234567890\") == \"1234567890\"\nassert solution(\"1016\\n1234567890\") == \"1234567890\"\nassert solution(\"1017\\n1234567890\") == \"1234567890\"\nassert solution(\"1018\\n1234567890\") == \"1234567890\"\nassert solution(\"1019\\n1234567890\") == \"1234567890\"\nassert solution(\"1020\\n1234567890\") == \"1234567890\"\nassert solution(\"1021\\n1234567890\") == \"1234567890\"\nassert solution(\"1022\\n1234567890\") == \"1234567890\"\nassert solution(\"1023\\n1234567890\") == \"1234567890\"\nassert solution(\"1024\\n1234567890\") == \"1234567890\"\nassert solution(\"1025\\n1234567890\") == \"1234567890\"\nassert solution(\"1026\\n1234567890\") == \"1234"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\\n\") == \"18000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 18000\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 10\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 10\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS "
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\\n\"\n\nsolution(\"BUYSTICKERS\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 11\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\\n\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\\n\\n\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\\n\\n\\n\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\\n\\n\\n\\n\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nER\\n\\n\\n\\n\\n\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n1\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY "
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == 28\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nprint(\"Test Passed\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\nassert solution('BUYSTICKERS\\n5\\nSTICKY 10\\nSTICKY 20\\nTICKERS 1\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\n') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS\\n4\\nSTICKY 20\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\n') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS\\n1\\nSTICKY 20\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\n') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS\\n1\\nSTICKY 20\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\nSTICKY 60\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT, f\"Solution is incorrect. Input:\\n{INPUT}\\nOutput:\\n{OUTPUT}\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n\"\"\") == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\"\n\nassert solution(\"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n\"\"\") == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(open('input.txt', 'r')) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(open('input.txt', 'r')) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(open('input.txt', 'r')) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2.4142135624\nassert solution() == 2.4142135624\nassert solution() == 2.4142135624\nassert solution() == 2.4142135624\nassert solution() == 2.4142135624"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"3\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"1.0714285714285713\"\nassert solution(\"2\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"1.0714285714285713\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"3.141592653589793\"\nassert solution(\"4\\n10 1\\n1\\n0\\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n2\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n10\\n10\\n1\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"6\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"7\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"8\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"9\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"10\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.4142135624\\n\", \"Expected output: '2.4142135624'\\nGot: '{}'\\n\".format(solution(stdin))"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n1\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n1\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n1\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n1\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\nassert solution() == \"2.4142135624\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2.4142135624\nprint(\"All test cases passed\")"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 2\\n1\\n0\\n10\\n10\") == \"2.0\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"15\", \"Your solution is incorrect\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\\n\"\nassert solution(\"2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"5\\n\"\nassert solution(\"5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"21\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 15, \"The solution is incorrect.\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Bwahahahahahaha!!! Your nemesis, the dashingly handsome spy Waco Powers, has at last fallen to your secret volcano base\u2019s deathtraps (or so you assume, being a little too busy to witness it firsthand). At long last, you are all set to Conquer The World!\\n\\nNothing will stand in your way! Well, nothing except a minor problem of logistics. Your evil armies have announced that they will not continue carving their relentless path of destruction across the puny nations of the world without being paid. And unfortunately you are running low on cash \u2013 a volcano lair has many wonderful qualities, but \u201creasonably affordable\u201d is not one of them. You have had to pull funds from the travel budget to pay your ungrateful underlings. Now you are not sure how you will actually get your armies into position to Conquer The World.\\n\\nYou have a map of the nations of the world and all your available transport routes between them. Each route connects two nations and has a fixed cost per army that uses it. The routes are laid out such that there is exactly one way to travel between any two nations. You know the current position of each of your armies and how many you will need to place permanently in each nation in order to subjugate it. How can you move the armies into place as cheaply as possible so you can Conquer The World?\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"15\\n\", \"Expected output: 15\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '''\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 1\\nassert solution(\\\"5 5 3 3 4\\\") == \\\".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\\"\\n\"\nassert solution(\"5 5 3 3 5\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 2\\nassert solution(\\\"5 5 3 3 5\\\") == \\\".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\\"\\n\"\nassert solution(\"5 5 3 4 5\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 3\\nassert solution(\\\"5 5 3 4 5\\\") == \\\".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\\"\\n\"\nassert solution(\"5 5 3 5 5\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 4\\nassert solution(\\\"5 5 3 5 5\\\") == \\\".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\\"\\n\"\nassert solution(\"5 5 4 5 5\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 5\\nassert solution(\\\"5 5 4 5 5\\\") == \\\".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\\"\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC..A.C....C@DDDD\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\"\n\nassert solution(\"1 1 1 1 1\") == \"....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\n....@\\"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\") == \"........\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 100 3 1 4\") == \"........\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed: expected_output: {}, actual_output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 4\\n111\\n001\\n000\\n111\\n000\\n111') == '001\\n001\\n001\\n111\\n000\\n111\\n111'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n111') == '111\\n001\\n001\\n111\\n111\\n200'\nassert solution('5 5\\n111\\n001\\n000\\n111\\n000\\n111\\n111\\n111\\n111\\n111\\n111') == '001\\n001\\n001\\n111\\n000\\n111\\n111\\n111\\n111\\n200'\nassert solution('5 5\\n111\\n001\\n000\\n111\\n000\\n111\\n111\\n111\\n111\\n111\\n111\\n111') == '111\\n001\\n001\\n111\\n000\\n111\\n111\\n111\\n111\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 3\n111\n001\n000\n111\n000\"\"\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\n\nassert solution(\"\"\"5 3\n111\n001\n000\n111\n000\"\"\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\n\nassert solution(\"\"\"5 3\n111\n001\n000\n111\n000\"\"\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\n\nassert solution(\"\"\"5 3\n111\n001\n000\n111\n000\"\"\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\n\nassert solution(\"\"\"5 3\n111\n001\n000\n111\n000\"\"\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 4\\n123456\\n123456\\n123456\\n123456\") == \"123456\\n123456\\n123456\\n123456\\n123456\"\nassert solution(\"6 5\\n123456789\\n123456789\\n123456789\\n123456789\") == \"123456789\\n123456789\\n123456789\\n123456789\\n123456789\"\nassert solution(\"7 6\\n1234567890\\n1234567890\\n1234567890\\n1234567890\") == \"1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\"\nassert solution(\"8 7\\n12345678901\\n12345678901\\n12345678901\\n12345678901\") == \"12345678901\\n12345678901\\n12345678901\\n12345678901\\n12345678901\"\nassert solution(\"9 8\\n123456789012\\n123456789012\\n123456789012\\n123456789012\") == \"123456789012\\n123456789012\\n123456789012\\n123456789012\\n123456789012\"\nassert solution(\"10 9\\n1234567890123\\n1234567890123\\n1234567890123\\n1234567890123\") == \"1234567890123\\n1234567890123\\n1234567890123\\n1234567890123\\n1234567890123\"\nassert solution(\"11 10\\n12345678901234\\n12345678901234\\n12345678901234\\n12345678901234\") == \"12345678901234\\n12345678901234\\n12345678901234\\n12345678901234\\n12345678901234\"\nassert solution(\"12 11\\n123456789012345\\n123456789012345\\n123456789012345\\n123456789012345\") == \"123456789012345\\n1234"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n222\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\\n000\\n222\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\\n000\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\") == \"001\\n001\\n001\\n111\\n200\\n333\\n444\\n555\\n666\\n777\\n888\\n999\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n100\") == \"100\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n010\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n001\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n000\\n100\") == \"100\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n''') == 'Impossible'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n\"\"\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == 'Impossible'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == 'Impossible'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == 'Impossible'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/18\\n18/17\\n18/16\\n17/15\\n15/13\\n14/12\\n12/10\\n11/9\\n8/7\\n6/5\\n4/3\\n2/1\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'\nassert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/16\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n19/17\\n1"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"possible\", \"Expected impossible, got: {}\".format(solution())"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\n\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\n\nassert solution(\n\"\"\"\n1 1\n0 0\n0 0\n0 0\n\"\"\") == \"impossible\"\n\nassert solution(\n\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n1 1 0\n\"\"\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 2\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"possible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 0\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"possible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"5 3\\n1\\n2\\n3\\n\") == \"5\\n\"\nassert solution(\"6 5\\n1\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\nassert solution(\"7 6\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"7\\n\"\nassert solution(\"8 7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"8\\n\"\nassert solution(\"9 8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"9\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"5 2\\n1\\n3\\n\") == \"5\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"The maximum number of colleagues that Mia can uniquely identify in the next few days, if she allocates the burger and salad recipients optimally, is 4.\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n1\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"4 2\\n1\\n1\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Please implement the solution function\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"3 3\\n3\\n2\\n\") == \"3\"\nassert solution(\"4 4\\n2\\n1\\n\") == \"4\"\nassert solution(\"3 3\\n3\\n2\\n\") == \"3\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"The function should return 4.\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Slavko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3)) == \"Mirko\"\nassert solution(str(5)) == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko\\n'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"1\\n5 5\\n5 4\\n5 3\\n\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\", \"Your solution is incorrect.\"\nassert solution(\"1\\n1 2\\n1 3\") == \"Slavko\", \"Your solution is incorrect.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\", \"The solution should be '2 4'\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\"\n\nfrom typing import List"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\", \"Luka's problem cannot be solved\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\", \"Please implement the solution.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n6\n34\n38\n''') == '''\n2 4\n'''\n\nassert solution('''\n5\n2\n1\n3\n4\n5\n''') == '''\n2 3 5\n'''\n\nassert solution('''\n5\n7\n11\n15\n19\n''') == '''\n7 11 19\n'''"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2 4\\n\"\nassert solution(6) == \"2 4\\n4 6\\n8 12\\n12 18\\n20 24\\n48 52\\n60 64\\n80 88\\n120 124\\n160 168\\n240 244\\n320 324\\n400 404\\n640 644\\n960 964\\n1280 1284\\n1920 1924\\n2560 2564\\n3840 3844\\n5120 5124\\n6720 6724\\n10240 10244\\n12000 12004\\n16000 16004\\n20480 20484\\n25600 25604\\n33000 33004\\n40960 40964\\n51200 51204\\n76800 76804\\n102400 102404\\n153600 153604\\n204800 204804\\n262144 262148\\n327680 327684\\n409600 409604\\n524288 524288\\n655360 655364\\n819200 819204\\n1048576 1048576\\n1283710 1283714\\n1638400 1638404\\n2097152 2097156\\n2592192 2592196\\n3276800 3276804\\n4194304 4194308\\n5242880 5242884\\n6553600 6553604\\n8388608 8388612\\n10485760 10485764\\n15728640 15728644\\n2147483648 2147483648\\n281474976710656 281474976710656\\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 34, 38) == ['2 4']\nassert solution(6, 34, 38, 6) == ['2 4', '4 8', '8 12', '12 16', '16 20']\nassert solution(6, 34, 38, 6, 4) == ['2 4', '4 8', '8 12', '12 16', '16 20']\nassert solution(6, 34, 38, 6, 4, 2) == ['2 4', '4 8', '8 12', '12 16', '16 20']"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"12\", \"Sample Input 1 failed\"\nassert solution(sample_input_2) == \"12\", \"Sample Input 2 failed\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test case {i + 1} failed.\" for i, (input, expected) in enumerate(zip(samples, outputs))"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10000, 400000, 500000, 900000) == 12, \"Test case 1 failed\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"12\", \"Your implementation is incorrect. Please check the given test case.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 12, \"The solution for the given problem is not correct.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12\\n', \"The solution is incorrect.\"\nassert solution('5\\n8 10 2 1000000 30556926000') == '12\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 12\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\" # Sample Output 1\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\" # Sample Output 2"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES', 'Your solution is not correct.'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'YES'\nassert solution(8) == 'NO'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\n\", \"Expected YES, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"9 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"2 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"YES\"\nassert solution(\"10 5\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4\\n'\nassert solution('6 3\\n1 2 3 4 5 6') == 'Impossible\\n'\nassert solution('1 1\\n1 1 1 1 1 1') == '5\\n'\nassert solution('5 1\\n1 1 1 1 1 1') == '1\\n'\nassert solution('5 2\\n1 1 1 1 1 1') == '1 2\\n'\nassert solution('5 3\\n1 1 1 1 1 1') == '1 2 3\\n'\nassert solution('5 4\\n1 1 1 1 1 1') == '1 2 3 4\\n'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\\n\", \"Incorrect output\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('7 2\\n3 4 5 6 1 2') == 'Impossible'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n') == '5 6 1 2 3 4'\nprint('All test cases passed!')"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\\n\", \"Test failed\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Marek loves dancing and he has danced a lot in the last couple of years. He has actually danced so much that he became too good in all of the traditional dances like swing, salsa, ballroom, and hip-hop and now all partners he dances with can not keep up with him. Therefore he started to invent his own dances and even tries to convince other people to dance these new dances with him.\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n5 6 1 2 3 4\n'''\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '20512'\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 8 4') == '20512'\nprint('All test cases passed.')"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\\n\"\n\nassert solution(\"10 3 2 1\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"0 0 0 0\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 2 8 4\") == \"20512\\n\", \"Expected output: '20512'\"\nassert solution(stdin=\"1 1 8 8\") == \"IMPOSSIBLE\\n\", \"Expected output: 'IMPOSSIBLE'\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Your solution is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('2 5 4 1') == 'IMPOSSIBLE'\nassert solution('2 3 5 2') == 'IMPOSSIBLE'\nassert solution('3 2 8 4') == 'IMPOSSIBLE'\nassert solution('1 2 3 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([r'H', r'G', r'B', r'A']) == 2\nassert solution([r'X', r'Y', r'Z']) == 3\nassert solution([r'A', r'B', r'C', r'D', r'E']) == 2\nassert solution([r'A', r'B', r'C', r'D', r
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\nBAC\\nABC') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3\\n'\nassert solution('4 2') == '12'\nassert solution('2 4') == '72'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\"  # expected output: 3\nassert solution(\"3 3\") == \"4\"  # expected output: 4\nassert solution(\"4 4\") == \"5\"  # expected output: 5"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"5 6\") == \"12\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\"  # sample output\nassert solution(\"5 3\") == \"2\"  # sample output"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"4 5\\n\") == \"4\\n\"\nassert solution(\"6 7\\n\") == \"4\\n\"\nassert solution(\"8 9\\n\") == \"4\\n\"\nassert solution(\"10 11\\n\") == \"5\\n\"\nassert solution(\"12 13\\n\") == \"5\\n\"\nassert solution(\"14 15\\n\") == \"5\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"6\\n\"\nassert solution(\"4 5\") == \"10\\n\"\nassert solution(\"5 6\") == \"15\\n\"\nassert solution(\"6 7\") == \"21\\n\"\nassert solution(\"7 8\") == \"28\\n\"\nassert solution(\"8 9\") == \"36\\n\"\nassert solution(\"9 10\") == \"45\\n\"\nassert solution(\"10 11\") == \"56\\n\"\nassert solution(\"11 12\") == \"69\\n\"\nassert solution(\"12 13\") == \"84\\n\"\nassert solution(\"13 14\") == \"101\\n\"\nassert solution(\"14 15\") == \"120\\n\"\nassert solution(\"15 16\") == \"141\\n\"\nassert solution(\"16 17\") == \"164\\n\"\nassert solution(\"17 18\") == \"189\\n\"\nassert solution(\"18 19\") == \"216\\n\"\nassert solution(\"19 20\") == \"245\\n\"\nassert solution(\"20 21\") == \"276\\n\"\nassert solution(\"21 22\") == \"309\\n\"\nassert solution(\"22 23\") == \"344\\n\"\nassert solution(\"23 24\") == \"381\\n\"\nassert solution(\"24 25\") == \"420\\n\"\nassert solution(\"25 26\") == \"461\\n\"\nassert solution(\"26 27\") == \"504\\n\"\nassert solution(\"27 28\") == \"549\\n\"\nassert solution(\"28 29\") == \"596\\n\"\nassert solution(\"29 30\") == \"645\\n\"\nassert solution(\"30 31\") == \"696\\n\"\nassert solution(\"31 32\") == \"749\\n\"\nassert solution(\"32 33\") == \"804\\n\"\nassert solution(\"33 34\") == \"861\\n\"\nassert solution(\"34 35\") == \"920\\n\"\nassert solution(\"35 36\") == \"981\\n\"\nassert solution(\"36 37\") == \"1044\\n\"\nassert solution(\"37 38\") == \"1109\\n\"\nassert solution(\"38 39\") == \"1176\\n\"\nassert solution(\"39 40\") == \"1245\\n\"\nassert solution(\"40 41\") == \"1316\\n\"\nassert solution(\"41 42\") == \"1389\\n\"\nassert solution(\"42 43\") == \"1464\\n\"\nassert solution(\"43 44\") == \"1541\\n\"\nassert solution(\"44 45\") == \"1620\\n\"\nassert solution(\"45 46\") == \"1701\\n\"\nassert solution(\"46 47\") == \"1784\\n\"\nassert solution(\"47 48\") == \"1869\\n\"\nassert solution(\"48 49\") == \"1956\\n\"\nassert solution(\"49 50\") == \"2045\\n\"\nassert solution(\"50 51\") == \"2136\\n\"\nassert solution(\"51 52\") == \"2229\\n\"\nassert solution(\"52 53\") == \"2324\\n\"\nassert solution(\"53 54\") == \"2421\\n\"\nassert solution(\"54 55\") == \"2520\\n\"\nassert solution(\"55 56\") == \"2621\\n\"\nassert solution(\"56 57\") == \"2724\\n\"\nassert solution(\"57 58\") == \"2829\\n\"\nassert solution(\"58 59\") == \"2936\\n\"\nassert solution(\"59"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"1 2\\n3 1\\n4 0\\n5 2\") == \"2\\n\"\nassert solution(\"5 3\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\"\nassert solution(\"3 4\\n1 0\\n2 1\\n3 0\\n4 1\\n5 2\") == \"2\\n\"\nassert solution(\"3 2\\n1 0\\n2 1\\n3 1\\n4 0\\n5 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 0\\n2 1\\n3 1\\n4 1\\n5 2\") == \"3\\n\"\nassert solution(\"2 3\\n1 0\\n2 1\\n3 1\\n4 0\\n5 2\") == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution should return '{expected}', but instead returned '{solution(stdin)}'.\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3, \"The size of the largest possible committee is incorrect\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"Expected 3, got {}\".format(solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\"))\nassert solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 4, \"Expected 4, got {}\".format(solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\"))\nassert solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 3\") == 5, \"Expected 5, got {}\".format(solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 3\"))\nassert solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 4\") == 6, \"Expected 6, got {}\".format(solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 4\"))\nassert solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 4\") == 6, \"Expected 6, got {}\".format(solution(\"5 5\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 3\\n2 2 4\"))"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"NO\"\nassert solution(\"1\\n1\\n1 1\\n1 2\\n2 1\\n\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"NO\"\nassert solution(\"1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\") == \"YES\"\nassert solution(\"1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 2\\n2 1\\n2 2\\n3\") == \"YES\"\nassert solution(\"1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"NO\"\nassert solution(\"1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n\\n1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\\n2\") == \"NO\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\\nNO\"\nassert solution(\"1\\n2\\n1 1\\n1 2\") == \"NO\\nYES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 3\\n3 1\\n3 2\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n') == 'YES'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"3.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3.000000000\", \"Test case 1 failed\"\nassert solution() == \"3.000000000\", \"Test case 2 failed\"\nassert solution() == \"3.000000000\", \"Test case 3 failed\"\nassert solution() == \"3.000000000\", \"Test case 4 failed\"\nassert solution() == \"3.000000000\", \"Test case 5 failed\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3.000000000', 'Test case failed'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\"\nassert solution(stdin) == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.000000000\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000000000, 10000) == 1\nassert solution(1000000000, 1000000000) == 1\nassert solution(1000000000, 10000000000) == 1\nassert solution(1000000000, 1000000000000000) == 1\nassert solution(1000000000, 10000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000) == 1\nassert solution(1000000000, 100000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000000000) == 1\nassert solution(1000000000, 100000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000000000000) == 1\nassert solution(1000000000, 100000000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000000) == 1\nassert solution(1000000000, 10000000000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000000000) == 1\nassert solution(1000000000, 100000000000000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000000000000) == 1\nassert solution(1000000000, 1000000000000000000000000000000"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n1 2\n3\n''') == '1'\n\nassert solution(r'''\n2 3\n4\n''') == '1'\n\nassert solution(r'''\n3 4\n5\n6\n''') == '1'\n\nassert solution(r'''\n3 2\n4\n5\n6\n''') == '1'\n\nassert solution(r'''\n5 4\n3\n2\n1\n''') == '2'\n\nassert solution(r'''\n5 6\n4\n3\n2\n1\n''') == '2'\n\nassert solution(r'''\n1 5\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 4\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 3\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n3 3\n2\n1\n4\n5\n''') == '2'\n\nassert solution(r'''\n3 5\n2\n1\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 5\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 4\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 3\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n3 3\n2\n1\n4\n5\n''') == '2'\n\nassert solution(r'''\n3 5\n2\n1\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 5\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 4\n2\n3\n4\n5\n''') == '2'\n\nassert solution(r'''\n1 3\n2\n3\n4\n5\n''') == '2'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4 5\") == \"2\"\nassert solution(\"1 2\\n3 4 5 6\") == \"3\"\nassert solution(\"1 2\\n3 4 5 6 7\") == \"4\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"1\", \"Your solution should return 1 for the given input.\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3\\n') == '1\\n'\nassert solution('3\\n1 2\\n') == '1\\n'\nassert solution('2\\n1 3\\n') == '1\\n'\nassert solution('1 2 3 4\\n') == '0\\n'\nassert solution('5\\n10 20 30\\n') == '3\\n'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\" # TLE"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Your solution is incorrect. Please check the code and the constraints.\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"The output should be 1.\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\"\n) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 4, 0, 1, 2, 3, 4, 1, 1, 4) == 3, \"The correct output should be 3\"\nassert solution(2, 3, 1, 1) == 2, \"The correct output should be 2\"\nassert solution(3, 4, 2, 1, 3, 2) == 3, \"The correct output should be 3\"\nassert solution(3, 2, 3) == 3, \"The correct output should be 3\"\nassert solution(3, 4, 3, 1, 2, 4, 1, 2) == 3, \"The correct output should be 3\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 5) == \"3\\n2\\n3\\n1\"\nassert solution(1, 3, 4) == \"3\\n2\\n3\\n1\"\nassert solution(0, 2, 2, 3, 2) == \"3\\n2\\n3\\n1\"\nassert solution(1, 3, 2) == \"3\\n2\\n3\\n1\"\nassert solution(1, 2, 4) == \"3\\n2\\n3\\n1\"\nassert solution(1, 1, 4) == \"3\\n2\\n3\\n1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 5) == \"3\\n2\\n3\\n1\"\nassert solution(1, 3, 4) == \"3\\n2\\n3\\n1\"\nassert solution(0, 2, 2, 3, 2) == \"3\\n2\\n3\\n1\"\nassert solution(1, 3, 2) == \"3\\n2\\n3\\n1\"\nassert solution(1, 2, 4) == \"3\\n2\\n3\\n1\"\nassert solution(1, 1, 4) == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: \"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\" + \"1\\n\" + \"2\\n\"\nassert solution(input()) == \"2\\n\" + \"1\\n\" + \"2\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n  sum += i;\\nprintf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);\\nprintf(\\\"THE END\\\\n\\\");}\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\") == \"0\\n\"\nassert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n  sum += i;\\nprintf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\") == \"0\\n\"\nassert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n  sum += i;\\nprintf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\") == \"0\\n\"\nassert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n  sum += i;\\nprintf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() {\\n  printf(\\\"Hello %d\\\", i);\\n}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\\\"SUM %d\\\", sum);\\n}\\n***END***\\nint Main() {\\n  printf(\\\"Hello %d\\\", i);\\n  printf(\\\"THE END\\\\n\\\");\\n}\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"def solution(stdin: str) -> str:    pass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == ['2 HelloWorld.c', 'def solution(stdin: str) -> str: pass']"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0\\n'\nassert solution(input()) == '2\\nHelloWorld.c\\nint Main() { printf(\"Hello %d\\n\",i); }\\n***END***\\n'\nassert solution(input()) == '2\\nAdd.c\\nint Main() { for (int i=0; i<10; i++) sum += i; printf(\"SUM %d\", sum); }\\n***END***\\n'\nassert solution(input()) == '0\\n'\nassert solution(input()) == '0\\n'\nassert solution(input()) == '0\\n'"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"HelloWorld.c\", \"r\").read()) == \"Hello 0\\n\"\nassert solution(open(\"Add.c\", \"r\").read()) == \"Hello 0 THE END\\n\"\nassert solution(open(\"Main.cpp\", \"r\").read()) == \"Hello 0 MAIN\\n\"\nassert solution(open(\"Other.java\", \"r\").read()) == \"0 OTHER\\n\"\nassert solution(open(\"Test.java\", \"r\").read()) == \"0 Test\\n\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"HelloWorld.c\", \"r\", encoding=\"utf-8\").read()) == \"SUM 6\\n\"\nassert solution(open(\"Add.c\", \"r\", encoding=\"utf-8\").read()) == \"SUM 16\\n\"\nassert solution(open(\"int Main() { printf(\\\"Hello %d\\\", i); }***END***\", \"r\", encoding=\"utf-8\").read()) == \"0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(data) == expected, f\"Expected output: {expected}\\nGot: {solution(data)}\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"Test data starts with the number $0 \\le N \\le 100\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n1\"\nassert solution(\"4 2 1\\n4 4 1\\n1 2 3\") == \"1\\n2\\n2\\n1\"\nassert solution(\"1 2 3\") == \"1\\n1\\n1\\n1\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1\"\nassert solution(4) == \"1\\n2\"\nassert solution(5) == \"2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n2\\n2\\n2\\n'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"No input provided.\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\nassert solution('3 3\\n2 2 3\\n4 2 1\\n4 3 1') == '2\\n2\\n3'\nassert solution('3 3\\n2 2 3\\n4 2 1\\n4 3 2') == '2\\n3\\n3'\nassert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 2') == '2\\n2\\n4'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\", \"The output is incorrect. Please check the given code and try again.\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"3\\n50\\n10\\n\") == \"5\"\n\nn, C = map(int, input().split())\nB = 0\n\nfor i in range(n):\n    p, b, u = map(int, input().split())\n    B = max(B, b - p - u)\n\nprint(B)"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.input) == solution.output, \"Expected output: {}\\nGot output: {}\".format(solution.output, solution(solution.input))"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"Solution should return an empty string\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test {test_num} failed: Expected: '{expected}', Received: '{solution(input())}'\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please see the provided examples and the provided code.\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5\\n'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"\n3 20\n50 70 10\n100 110 4\n150 190 16\n\"\"\"\n\nsample_output = \"\"\"\n5\n\"\"\"\n\nassert solution(sample_input) == sample_output"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n') == '5'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n    2 5\n    .....\n    .#.#.\n    .#.#.\n    ....#\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(2 5)(5 3)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 26\nassert solution(\"(2 5)(5 3)(2 4)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 14\nassert solution(\"(2 5)(5 3)(2 4)(2 3)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 38\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 60\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 74\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 86\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 94\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 100\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 104\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 112\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 116\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 122\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)(0 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 130\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)(0 0)(0 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 146\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\") == 170\nassert solution(\"(2 5)(5 3)(2 4)(2 3)(2 2)(1 2)(2 1)(2 0)(1 1)(1 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 0)(0 "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\n    pass\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\nassert solution('''\n5 5\n(1 3) (3 3) (2 4) (3 3) (3 3) (2 4) (1 3)\n.....\n.##..\n...#\n.##..\n...#\n.##..\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"26\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#.\n   .#.#.\n   ....#\n   .#.##\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    5 5\n    2 5\n   .....\n   .#.#."
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"4\\n-2 0\\n-1 0\\n0 0\\n1 0\\n2 0\") == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"success\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\"\nassert solution(\"7\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"success\"\nassert solution() == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    6\n    0 -1\n    0 0\n    1 0\n    0 -1\n    0 2\n    1 1\n''') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 1\\n1 0\") == \"failure\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 1\\n1 0\\n3 1\\n2 0\") == \"failure\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 1\\n1 0\\n3 1\\n2 0\\n1 0\") == \"success\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 1\\n1 0\\n3 1\\n2 0\\n1 0\\n4 1\\n2 0\") == \"success\"\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 1\\n1 0\\n3 1\\n2 0\\n1 0\\n4 1\\n2 0\\n2 0\") == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'possible\\n'\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"The expected output is not found.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\"\nassert solution(stdin: str) == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"4 3\\n1 1 1\\n2 2 1\\n3 3 1\\n4 4 1\\n5 5 1\\n6 6 1\\n7 7 1\\n8 8 1\\n9 9 1\\n10 10 1\\n11 11 1\\n12 12 1\\n13 13 1\\n14 14 1\\n15 15 1\\n16 16 1\") == \"1\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 2\\n1 2 1\\n1 1 2\\n-1 1 2\") == \"3\\n\"\nassert solution(\"3 2\\n1 1 2\\n2 1 1\\n-1 1 2\") == \"3\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 1 2\\n-1 1 2\") == \"3\\n\"\nassert solution(\"3 2\\n1 2 1\\n1 2 1\\n-1 1 2\") == \"6\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 1 2\\n-1 1 2\") == \"3\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"3\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\\n\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1234') == '4\\n1313'\nprint('All tests passed!')"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(4, 2) == 4"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"\\n3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='12 30 45 3 11') == 'NO'\nassert solution(stdin='12 0 1 12 1') == 'YES'\nassert solution(stdin='3 47 0 4 9') == 'YES'\n\nfrom typing import List\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Input: {input_string}, Output: {output_string}\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Test 1 failed\"\n\nassert solution() == 2, \"Test 2 failed\"\n\nassert solution() == 0, \"Test 3 failed\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"The output {solution(input())} does not match the expected output {output()}\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\nassert solution('''1 1 2 3 1 0\n2 2 1''') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 0, 1) == 4\nassert solution(3, 0, 2) == 6\nassert solution(3, 0, 2) == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8\n\nfrom typing import List"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data1) == output_data1, f\"Test failed for example {input_data1}\"\nassert solution(input_data2) == output_data2, f\"Test failed for example {input_data2}\"\nassert solution(input_data3) == output_data3, f\"Test failed for example {input_data3}\"\nassert solution(input_data4) == output_data4, f\"Test failed for example {input_data4}\"\nassert solution(input_data5) == output_data5, f\"Test failed for example {input_data5}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', got '{stdin}'\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4, \"The expected output is not found.\"\nassert solution(3) == 6, \"The expected output is not found.\"\nassert solution(3) == 8, \"The expected output is not found.\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"firecrackers_scares_nian_but_they_were_wayyyyy_noisy_maybe_fireworks_make_a_nice_complement.txt\", \"r\")) == 4\nassert solution(open(\"little_tommy_is_watching_a_firework_show.txt\", \"r\")) == 6\nassert solution(open(\"a_wonder_strikes_tommy.txt\", \"r\")) == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 42, \"Solution should return 42, but it returns {}\".format(solution)"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\n\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\n\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'YES'\nassert solution('0 0 6 0 6 6 0 6') == 'NO'\nassert solution('7 3 9 5 11 3 9 1') == 'YES'\nassert solution('6 0 6 6 0 6 0 0') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n').strip() == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n').strip() == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n').strip() == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\\n\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\nassert solution(\"4\\n1 2 0 1\") == \"sjfnb\"\nassert solution(\"5\\n1 1 1 1 1\") == \"sjfnb\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"sjfnb\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"sjfnb\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"sjfnb\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1 1\") == \"sjfnb\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin.readline())) == \"sjfnb\"\nassert solution(solution(stdin.readline())) == \"cslnb\"\nassert solution(solution(stdin.readline())) == \"sjfnb\"\nassert solution(solution(stdin.readline())) == \"cslnb\"\nassert solution(solution(stdin.readline())) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) =='sjfnb'\nassert solution(input()) == 'cslnb'\nassert solution(input()) =='sjfnb'\nassert solution(input()) == 'cslnb'\nassert solution(input()) =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) =='sjfnb' or solution(input()) == 'cslnb', \"Invalid input\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"cslnb\"\n\nassert solution() == \"cslnb\"\n\nassert solution() == \"sjfnb\"\n\nassert solution() == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(3, 't') +'5\\n' + '1 5 3\\n') == 2\nassert solution(str(1, 't') +'2\\n' + '1\\n') == 1\nassert solution(str(1, 't') +'1\\n' + '1\\n') == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\", \"First test case\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\", \"Second test case\"\nassert solution(\"1\\n\") == -1, \"Third test case\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(2) == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(3) == \"3\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(4) == \"4\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(5) == \"5\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(6) == \"6\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(7) == \"7\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(8) == \"8\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(9) == \"9\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(10) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(11) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(12) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(13) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(14) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(15) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(16) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(17) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(18) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(19) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(20) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(21) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(22) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(23) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(24) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(25) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(26) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(27) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(28) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(29) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(30) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(31) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(32) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(33) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(34) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(35) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(36) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(37) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(38) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(39) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(40) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(41) == \"-1\\n0 1\\n0\\n1\\n\"\nassert solution(42) == \"-1\\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(2) == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1, \"Output is incorrect\"\nassert solution(2) == 2, \"Output is incorrect\"\n\nfrom functools import reduce"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"-1\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"-1\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"11\") == \"-1\"\nassert solution(\"12\") == \"-1\"\nassert solution(\"13\") == \"-1\"\nassert solution(\"14\") == \"-1\"\nassert solution(\"15\") == \"-1\"\nassert solution(\"16\") == \"1\"\nassert solution(\"17\") == \"-1\"\nassert solution(\"18\") == \"-1\"\nassert solution(\"19\") == \"-1\"\nassert solution(\"20\") == \"0\"\nassert solution(\"21\") == \"-1\"\nassert solution(\"22\") == \"-1\"\nassert solution(\"23\") == \"-1\"\nassert solution(\"24\") == \"-1\"\nassert solution(\"25\") == \"-1\"\nassert solution(\"26\") == \"1\"\nassert solution(\"27\") == \"-1\"\nassert solution(\"28\") == \"-1\"\nassert solution(\"29\") == \"-1\"\nassert solution(\"30\") == \"-1\"\nassert solution(\"31\") == \"-1\"\nassert solution(\"32\") == \"-1\"\nassert solution(\"33\") == \"-1\"\nassert solution(\"34\") == \"-1\"\nassert solution(\"35\") == \"-1\"\nassert solution(\"36\") == \"1\"\nassert solution(\"37\") == \"-1\"\nassert solution(\"38\") == \"-1\"\nassert solution(\"39\") == \"-1\"\nassert solution(\"40\") == \"-1\"\nassert solution(\"41\") == \"-1\"\nassert solution(\"42\") == \"-1\"\nassert solution(\"43\") == \"-1\"\nassert solution(\"44\") == \"-1\"\nassert solution(\"45\") == \"-1\"\nassert solution(\"46\") == \"1\"\nassert solution(\"47\") == \"-1\"\nassert solution(\"48\") == \"-1\"\nassert solution(\"49\") == \"-1\"\nassert solution(\"50\") == \"-1\"\nassert solution(\"51\") == \"-1\"\nassert solution(\"52\") == \"-1\"\nassert solution(\"53\") == \"-1\"\nassert solution(\"54\") == \"-1\"\nassert solution(\"55\") == \"-1\"\nassert solution(\"56\") == \"1\"\nassert solution(\"57\") == \"-1\"\nassert solution(\"58\") == \"-1\"\nassert solution(\"59\") == \"-1\"\nassert solution(\"60\") == \"-1\"\nassert solution(\"61\") == \"-1\"\nassert solution(\"62\") == \"-1\"\nassert solution(\"63\") == \"-1\"\nassert solution(\"64\") == \"-1\"\nassert solution(\"65\") == \"-1\"\nassert solution(\"66\") == \"1\"\nassert solution(\"67\") == \"-1\"\nassert solution(\"68\") == \"-1\"\nassert solution(\"69\") == \"-1\"\nassert solution(\"70\") == \"-1\"\nassert solution(\"71\") == \"-1\"\nassert solution(\"72\") == \"-1\"\nassert solution(\"73\") == \"-1\"\nassert solution(\"74\") == \"-1\"\nassert solution(\"75\") == \"-1\"\nassert solution(\"76\") == \"1\"\nassert solution(\"77\") == \"-1\"\nassert solution(\"78\") == \"-1\"\nassert solution(\"79\") == \"-1\"\nassert solution(\"80\") == \"-1\"\nassert solution(\"81\") == \"-1\"\nassert solution(\"82\") == \"-1\"\nassert solution(\"83\") == \"-1\"\nassert solution(\"84\") == \"-1\"\nassert solution(\"85\") == \"-1\"\nassert solution(\"86\") == \"1\"\nassert solution(\"87\") == \"-1\"\nassert solution(\"88\") == \"-1\"\nassert solution(\"89\") == \"-1\"\nassert solution(\"90\") == \"-1\"\nassert solution(\"91\") == \"-1\"\nassert solution(\"92\") == \"-1\"\nassert solution(\"93\") == \"-1\"\nassert solution(\"94\") == \"-1\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1\\n0 1\\n0'\nassert solution(2) == '2\\n-1 0 1\\n1'\nassert solution(3) == '-1\\n0 1\\n0'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1 2 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3\\n1 3 3\\n2 3 2\\n1 2 2'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2\\n1 2 2'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"3 1 5 4\\n1 2 1 3\\n\") == [1, 3, 3]\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == [2, 3, 2]\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == [1, 2, 2]"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 3 3 2 1 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n2 3 2\\n1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2  \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 3 2\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"1 2 2\\n\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == [\"1 3 3 \", \"1 3 3 \", \"1 3 3 \"]\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == [\"2 3 2 \", \"1 2 2 \", \"2 3 2 \"]"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\") == \"3\"\nassert solution(\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\") == \"3\"\nassert solution(\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('110\\n2\\n') == '3\\n'\nassert solution('111111011\\n2\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\nassert solution(\"1000\\n2\\n\") == \"0\\n\"\nassert solution(\"1001\\n1\\n\") == \"1\\n\"\nassert solution(\"1010\\n3\\n\") == \"2\\n\"\nassert solution(\"1011\\n3\\n\") == \"3\\n\"\nassert solution(\"1100000000\\n4\\n\") == \"1244986100000\\n\"\nassert solution(\"1000000001\\n2\\n\") == \"0\\n\"\nassert solution(\"1000000010\\n3\\n\") == \"4\\n\"\nassert solution(\"1000000011\\n3\\n\") == \"5\\n\"\nassert solution(\"1000000100\\n4\\n\") == \"12450000000000\\n\"\nassert solution(\"1000000101\\n4\\n\") == \"12450000000001\\n\"\nassert solution(\"1000000110\\n5\\n\") == \"24899689999999\\n\"\nassert solution(\"1000000111\\n5\\n\") == \"24899689999999\\n\"\nassert solution(\"1000001000\\n6\\n\") == \"4979937999999999\\n\"\nassert solution(\"1000001001\\n6\\n\") == \"4979937999999999\\n\"\nassert solution(\"1000001010\\n7\\n\") == \"99598759999999999\\n\"\nassert solution(\"1000001011\\n7\\n\") == \"99598759999999999\\n\"\nassert solution(\"1000001100\\n8\\n\") == \"1991975199999999999\\n\"\nassert solution(\"1000001101\\n8\\n\") == \"1991975199999999999\\n\"\nassert solution(\"1000001110\\n9\\n\") == \"39839503999999999999\\n\"\nassert solution(\"1000001111\\n9\\n\") == \"39839503999999999999\\n\"\nassert solution(\"1000010000\\n10\\n\") == \"7967900799999999999999999\\n\"\nassert solution(\"1000010001\\n10\\n\") == \"796790079999999999999999\\n\"\nassert solution(\"1000010010\\n11\\n\") == \"159358015999999999999999999\\n\"\nassert solution(\"1000010011\\n11\\n\") == \"159358015999999999999999999\\n\"\nassert solution(\"1000010100\\n12\\n\") == \"318716031999999999999999999999\\n\"\nassert solution(\"1000010101\\n12\\n\") =="
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution returned {solution(input())}, but expected {expected}\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('110\\n2') == '3'\nassert solution('111111011\\n2') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Testcase failed: {input()}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == 11.084259940083\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == 33.121375178000"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"11.084259940083\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11.084259940083\\n\"  # expected output\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11.084259940083\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 5\") == \"2\\n\"\nassert solution(\"8 15\") == \"1\\n\"\nassert solution(\"7 20\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\\n\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\\n\"\nassert solution(\"8 15\") == \"1\\n\"\nassert solution(\"7 20\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').readline().strip()) == \"2\"\nassert solution(open('input.txt', 'r').readline().strip()) == \"1\"\nassert solution(open('input.txt', 'r').readline().strip()) == \"0\"\nassert solution(open('input.txt', 'r').readline().strip()) == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\\n8 15\\n7 20\\n1000000000000 1000000000001\\n\") == \"2\\n\"\nassert solution(\"8 10\\n1 5\\n2 7\\n5 3\\n1 6\\n\") == \"0\\n\"\nassert solution(\"10 5\\n10 10\\n20 15\\n50 20\\n10 25\\n5 10\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2, \"Tanechka can choose the pair of toys satisfying the condition above.\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0, \"Your implementation of the solution is not correct!\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\") == 11\nassert solution(\"5 10 1\\n01000\") == 2\nassert solution(\"7 2 3\\n1111111\") == 0"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,1,10) == 11, \"Expected 11, got {}\".format(solution(3,1,10))\nassert solution(5,10,1) == 2, \"Expected 2, got {}\".format(solution(5,10,1))\nassert solution(7,2,3) == 0, \"Expected 0, got {}\".format(solution(7,2,3))"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"11\"\nassert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10\") == 11, \"Invalid output\"\nassert solution(\"5 10 1\") == 2, \"Invalid output\"\nassert solution(\"7 2 3\") == 0, \"Invalid output\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 10\\n01000\\n\\n5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\\n') == '11\\n'\nassert solution('5 10 1\\n01000\\n\\n5 1 10\\n01000\\n\\n7 2 3\\n1111111\\n\\n') == '2\\n'\nassert solution('7 2 3\\n1111111\\n\\n') == '0\\n'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\\n\"\nassert solution(\"5 1 2\") == \"19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"6 1 1\") == \"-1\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 1 10\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"10 1 1\\n10 1 2\\n10 1 3\\n\") == \"-1\"\nassert solution(\"2 1 1\\n2 1 2\\n3 1 3\\n\") == \"-1\"\nassert solution(\"2 1 1\\n3 2 2\\n\") == \"-1\"\nassert solution(\"3 1 1\\n4 1 2\\n5 1 3\\n6 1 4\\n\") == \"-1\"\nassert solution(\"5 1 2\\n6 1 3\\n7 1 4\\n8 1 5\\n9 1 6\\n\") == \"-1\"\nassert solution(\"3 1 1\\n2 2 2\\n1 3 3\\n0 4 4\\n\") == \"-1\"\nassert solution(\"5 1 2\\n4 2 3\\n3 3 4\\n2 4 5\\n1 5 6\\n\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 1\n''') == '''\n2 1\n'''\n\nassert solution('''\n5 1 2\n''') == '''\n19 5\n'''\n\nassert solution('''\n2 1\n''') == '''\n2 1\n'''\n\nassert solution('''\n3 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n4 1 1\n''') == '''\n-1\n'''\n\nassert solution('''\n5 1 1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('100 100 100') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed. Input: {input_str}, Output: {output_str}\" for input_str, output_str in [\n    ('3 1 1', '2 1'),\n    ('5 1 2', '19 5'),\n]"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"10 1 3\") == \"-1\"\nassert solution(\"0 1 1\") == \"-1\"\nassert solution(\"6 1 1\") == \"2 1\"\nassert solution(\"1 1 1\") == \"1 1\"\nassert solution(\"0 1 1\") == \"1 1\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7, 1) == 6\nassert solution(10, 2) == 4\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 1\\n10 2\\n') == '6\\n4'\nassert solution('10 1\\n') == '1'\nassert solution('10 2\\n') == '4'\nassert solution('7 2\\n') == '2'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"10 2\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"10 3\") == \"5\\n\", \"Test case 3 failed\"\nassert solution(\"20 3\") == \"13\\n\", \"Test case 4 failed\"\nassert solution(\"1000000007 2\") == \"6\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '''\n2\n149.154.167.99\n149.154.167.120/29\n'''\nassert solution('''\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '''\n2\n195.0.0.0/8\n127.0.0.4/30\n'''\nassert solution('''\n+127.0.0.1/32\n-127.0.0.1\n''') == '''\n-1\n'''\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('-149.154.167.99') == '0.0.0.0/0'\nassert solution('+149.154.167.100/30') == '149.154.167.100/30'\nassert solution('+149.154.167.128/25') == '149.154.167.128/25'\nassert solution('-149.154.167.120/29') == '149.154.167.120/29'\nassert solution('-127.0.0.4/31') == '127.0.0.4/31'\nassert solution('+127.0.0.8') == '127.0.0.8'\nassert solution('+127.0.0.0/30') == '127.0.0.0/30'\nassert solution('-195.82.146.208/29') == '195.82.146.208/29'\nassert solution('-127.0.0.6/31') == '127.0.0.6/31'\nassert solution('+127.0.0.1/32') == '127.0.0.1/32'\nassert solution('-127.0.0.1') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {index + 1} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case {t} failed. Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n149.154.167.99\\n149.154.167.120/29\"\nassert solution() == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\nassert solution() == \"2\\n127.0.0.1/32\\n-127.0.0.1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n149.154.167.99\\n149.154.167.120/29'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '1'\nassert solution(open('input1.txt').read()) == '2'\nassert solution(open('input2.txt').read()) == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\n00000000008\") == 1\nassert solution(\"22\\n0011223344556677889988\") == 2\nassert solution(\"11\\n31415926535\") == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\"\nassert solution(\"21\\n123456789012345678901234567890\") == \"1\"\nassert solution(\"22\\n000000000000000000000000000000\") == \"2\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '''4\nrow 1\nrow 1\ncol 4\nrow 3\n'''\n\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n''') == '''-1\n'''\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '''3\nrow 1\nrow 2\nrow 3\n'''"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n'\n\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n''') == '-1\\n'\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '''\n4\nrow 1\nrow 1\ncol 4\nrow 3\n'''\n\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n''') == '''\n-1\n'''\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '''\n3\nrow 1\nrow 2\nrow 3\n'''"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\"\"\") == \"\"\"\n4\nrow 1\nrow 1\ncol 4\nrow 3\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n0 0 0\n0 1 0\n0 0 0\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"\"\"\n3\nrow 1\nrow 2\nrow 3\n\"\"\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Solution does not match the expected output. Received: {solution}, Expected: {expected}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\"\nassert solution(\"8 6 4 6\") == \"NO\\n\"\nassert solution(\"10 3 11 4\") == \"NO\\n\"\nassert solution(\"4 2 1 4\") == \"YES\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, \"Test case failed\"\n\nsolution_input = \"\"\"\n4 2\n1 3\n1 4\n\"\"\"\n\nsolution_output = 6\n\nsolution_input = \"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\"\n\nsolution_output = 12\n\nsolution_input = \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n\nsolution_output = -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 12\nassert solution() == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '6\\n'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '12\\n'\nassert solution('2 2\\n1 2\\n2 1\\n\\n') == '-1\\n'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '6'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == '12'\nassert solution('2 2\\n1 2\\n2 1\\n\\n') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\\n\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\\n\"\n\nassert solution(\"3 2\\n0 1\\n1 0\\n1 1\") == \"NO\\n\"\n\nassert solution(\"3 2\\n1 0\\n1 0\\n1 1\") == \"YES\\n\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\", \"Invalid test case\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == \"NO\\n\"\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1\\n') == \"YES\\n\"\n\nsolution('3 2\\n1 0\\n1 1\\n0 1\\n') # This line should raise a SyntaxError\n\nsolution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') # This line should raise a SyntaxError\n\nsolution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') # This line should raise a SyntaxError"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\", \"Please implement the solution function\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 7\") == \"No\"\n\nassert solution(\"4 5\") == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Solution is {solution(input)} expected {output}\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes\\n'\nassert solution('2 7\\n2 3') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output '{expected_output}', but got '{solution(stdin)}'.\"\nfor stdin in inputs:\n    expected_output = output(stdin)\n    assert solution(stdin) == expected_output, f\"Expected output '{expected_output}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 7\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4 5\\n2 3 5 12\\n\\nInput\\n2 7\\n2 3\\n\\nOutput\\nYes\\n\\nOutput\\nNo') == 'Yes\\nNo'\n\nfrom typing import List\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\n\nfrom typing import List"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"3 5 1\") == -1\nassert solution(\"4 2 2\") == -1\nassert solution(\"4 3 2\") == -1\nassert solution(\"1 5 2\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6\nassert solution() == 8\nassert solution() == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(3) == 2\nassert solution(4) == 0"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 2 4 3''') == '2'\nassert solution('''3\n4 1 1''') == '2'\nassert solution('''4\n0 3 0 4''') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '2'\nassert solution(4) == '2'\nassert solution(5) == '-1'\nassert solution(6) == '-1'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4') == '2'\nassert solution('3\\n4 1 1\\n4\\n0 3 0 4') == '2'\nassert solution('4\\n0 3 0 4\\n') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\") == 5, \"Output: 5\"\nassert solution(\"2\\n01\") == 2, \"Output: 2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n01\") == \"2\"\nassert solution(\"8\\n10000011\") == \"5\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(\"8\\n10000011\\n\") == \"5\\n\"\nassert solution(\"2\\n01\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'\n\nprint('All test cases passed')"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3 1 4') == '3\\n'\nassert solution('4\\n4 4 4 4') == '-1\\n'\nassert solution('4\\n2 1 4 3') == '1\\n'\n\nsolution('4\\n2 1 4 3')"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n2 3 1 4\\n\") == \"3\\n\"\nassert solution(\"Input\\n4\\n4 4 4 4\\n\") == \"-1\\n\"\nassert solution(\"Input\\n4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n2 3 1 4\\n\\nOutput\\n3\\n\\nInput\\n4\\n4 4 4 4\\n\\nOutput\\n-1\\n\\nInput\\n4\\n2 1 4 3\\n\\nOutput\\n1\") == \"3\\n\\nInput\\n4\\n4 4 4 4\\n\\nOutput\\n-1\\n\\nInput\\n4\\n4 4 4 4\\n\\nOutput\\n-1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n2 3 1 4\\n\\nOutput\\n3\\n\\nInput\\n4\\n4 4 4 4\\n\\nOutput\\n-1\\n\\nInput\\n4\\n2 1 4 3\\n\\nOutput\\n1\") == \"3\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'\nassert solution(open('input2.txt', 'r').read()) == '1\\n'\nassert solution(open('input3.txt', 'r').read()) == '0\\n'\nassert solution(open('input4.txt', 'r').read()) == '1\\n'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n2\\n1\\n2\\n2\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\"\nassert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n2\\n1\\n3\\n5\\n7\\n2\") == \"0\"\nassert solution(\"2\\n2 2\\n2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\\n7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n2\\n1\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect.\\nInput: {input()}\\nOutput: {output()}\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}\\nExpected output: {output()}\\nGot output: {solution(input())}\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\", \"Test Case not passing\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"504\", \"Incorrect result\"\nassert solution(\"7\") == \"210\", \"Incorrect result\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n6\\n5\\n\") == \"210\"  # expected output: 210\nassert solution(\"9\\n\\n\") == \"504\"  # expected output: 504"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output is '{output}', but the function returned '{solution(input())}'\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9') == '504', \"Expected '504', got '{}'.\".format(solution('9'))\nassert solution('7') == '210', \"Expected '210', got '{}'.\".format(solution('7'))"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1') == '1 1\\n', \"The first rectangle does not have any common point with the third rectangle.\"\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1') == '1 1\\n', \"The second rectangle does not have any common point with the third rectangle.\"\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4') == '1 1\\n', \"The third rectangle does not have any common point with the fourth rectangle.\"\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '3 4\\n', \"The fourth rectangle does not have any common point with the fifth rectangle.\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n1 1\n1 1\n1 1\n1 1\n'''"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n\\n3 4') == '1 1'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n\\n3 4') == '1 1'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n\\n3 4') == '1 1'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n\\n3 4') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nNO\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nYES\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n4\\n18 55 16 17\\n\\nOutput\\nYES\\n\\nInput\\n6\\n40 41 43 44 44 44\\n\\nOutput\\nNO\\n\\nInput\\n8\\n5 972 3 4 1 4 970 971\\n\\nOutput\\nNO\") == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"YES\"\nassert solution == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n\nfrom typing import List\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\\n\"\nassert solution() == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\\n\" # Expected output: 9\nassert solution(input()) == \"10\\n\" # Expected output: 10\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 9\n    1 2 3\n    1 2 3 7 8 9 11 12 13\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    1 2 3 4 5\n    1 2 3 4 5\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Input:\\n{input_data}\\nOutput:\\n{output_data}\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\", \"Solution should return 9\"\nassert solution() == \"10\", \"Solution should return 10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n') == '9\\n'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10\\n'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == 'Vasya', \"Vasya should choose 1 and win\"\nassert solution('2') == 'Petya', \"Petya should choose 2 and win\"\nassert solution('8') == 'Petya', \"Petya should choose 9 and win\"\n\nfrom typing import List"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"1 2\\n1 3\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 3 4\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n\") == \"0\"\nassert solution(\"1 2 3\\n1 4 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n\") == \"0\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test {t+1} failed.\"\n\nt = int(input())\nfor t in range(1, t+1):\n    n, m, q = map(int, input().split())\n    r = []\n    c = []\n    for _ in range(q):\n        r.append(int(input()))\n        c.append(int(input()))\n    r.sort()\n    c.sort()\n\n    # Test 1\n    if n*m == 1:\n        print(0)\n        continue\n\n    # Test 2\n    if n*m == 0:\n        print(0)\n        continue\n\n    # Test 3\n    n_fused = 0\n    for i in range(n):\n        row = r[:i+1]\n        col = c[:i+1]\n        r = row + [row[0] + col[0]]\n        c = col + [col[0] + row[0]]\n        n_fused += 1\n\n    if n_fused == n*m - 1:\n        print(1)\n    else:\n        print(0)"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"0\\n\", \"Test 2 failed\"\nassert solution(stdin) == \"1\\n\", \"Test 3 failed\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example1.txt', 'r')) == '0\\n'\nassert solution(open('example2.txt', 'r')) == '2\\n'\nassert solution(open('example3.txt', 'r')) == '1\\n'\nassert solution(open('example4.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n6\\n1\\n2\\n1\\n3\\n3\\n1\\n2\\n1\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n1\\n5\\n1\\n3\\n1\\n1\\n2\\n1\\n1\\n2\\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test.txt\").read()) == \"2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected: 2\\nActual: \" + solution(input())\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"Output is incorrect\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\", \"Test case 1\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\", \"Test case 2\"\nassert solution(\"5\\nA\\nB\\nB\\nA\\nB\\nA\\nB\\nA\\nC\") == \"5\", \"Test case 3\"\nassert solution(\"6\\nA\\nB\\nB\\nA\\nC\\nA\\nB\\nA\\nC\") == \"7\", \"Test case 4\"\nassert solution(\"7\\nA\\nB\\nB\\nA\\nC\\nA\\nB\\nA\\nC\\nD\") == \"9\", \"Test case 5\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"  # valid input\nassert solution(\"4\\nA\\nB\\nB\\nA\\nB\\nA\") == \"2\"  # valid input\nassert solution(\"4\\nA\\nB\\nC\\nC\\nA\\nA\\nA\\nA\\nC\") == \"1\"  # valid input\nassert solution(\"4\\nA\\nC\\nC\\nA\\nC\\nA\\nC\\nC\") == \"1\"  # valid input\nassert solution(\"4\\nA\\nA\\nB\\nB\\nA\\nA\\nC\\nC\\nA\\nC\\nA\\nC\\nA\") == \"3\"  # valid input\nassert solution(\"4\\nA\\nC\\nC\\nA\\nC\\nA\\nC\\nC\\nC\") == \"3\"  # valid input\nassert solution(\"4\\nA\\nA\\nA\\nC\\nC\\nC\\nA\\nA\\nA\\nA\\nA\") == \"6\"  # valid input\nassert solution(\"4\\nA\\nA\\nB\\nA\\nA\\nB\\nA\\nA\\nA\\nA\\nA\") == \"6\"  # valid input\nassert solution(\"4\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nC\\nC\\nC\\nA\\nA\\nA\\nA\\nA\") == \"6\"  # valid input\nassert solution(\"4\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\") == \"6\"  # valid input\nassert solution(\"4\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\") == \"6\"  # valid input"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(10):\n    print(i)"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n2\n'''"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\"\nassert solution(input3) == output3, f\"Test 3 failed: {solution(input3)}!= {output3}\"\n\ninput1 = \"3\\n2 3 4\\n\"\ninput2 = \"5\\n2 3 4 6 7\\n\"\noutput1 = \"2\"\noutput2 = \"3\"\noutput3 = \"3\"\n\nsolution(input1)"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == 2, \"Expected: 2\\nGot: {}\"\nassert solution(open(\"test_input.txt\", \"r\").read()) == 3, \"Expected: 3\\nGot: {}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\\nOutput\\n2\\n\") == \"2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 6 7\\nOutput\\n3\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\"\n\nprint(\"OK\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Incorrect output\"\nassert solution(\"10\\nCBAAB\") == \"35\\n\", \"Incorrect output\"\nassert solution(\"5\\nABCABCABCABC\") == \"10240\\n\", \"Incorrect output\"\nassert solution(\"5\\nA\\nB\\nC\\nC\") == \"1\\n\", \"Incorrect output\"\nassert solution(\"5\\nAABBB\") == \"1\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '11'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nABAAC') == '11', \"The solution is incorrect\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\", \"Test failed\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '11', 'Testcase 1 failed'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nABAAC') == '11\\n'\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nABAAC') == '11'\nprint('All test cases pass.')"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"Expected output: 3\"\nassert solution() == -1, \"Expected output: -1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\nassert solution(\"1\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"2\\n3 4\\n1 1\\n0 1\\n2 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == 3\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == -1\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Test Case {test_case} failed: expected {expected_output}, got {solution(input)}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4 2\\n1 1\\n0 1\\n2 3\\n') == '3'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Expected '2\\n', but got '{}' instead.\".format(solution(\"2\\n4 5\"))\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output should be 2.\"\nprint(\"The output should be 2.\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"The minimum number of operations required is 2, but the output is: \" + solution()\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"  # Test case 1\nassert solution(\"2\\n4 3\") == \"2\\n\"  # Test case 2\nassert solution(\"2\\n4 2 1\") == \"2\\n\"  # Test case 3\nassert solution(\"2\\n4 3 5\") == \"2\\n\"  # Test case 4\nassert solution(\"2\\n4 5 2 1\") == \"2\\n\"  # Test case 5"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case failed\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n1 2\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n3 1 2 5\") == \"4\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n3 1 2 5\") == \"5\\n\", \"Test case 4 failed\"\nassert solution(\"6\\n3 1 2 5\") == \"2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test 1\"\nassert solution(\"2\\n4 5\\n4 5\\n\") == \"2\\n\", \"Test 2\"\nassert solution(\"2\\n4 5\\n4 5\\n4 5\\n\") == \"4\\n\", \"Test 3\"\nassert solution(\"2\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n\") == \"6\\n\", \"Test 4\"\nassert solution(\"2\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n4 5\\n\") == \"8\\n\", \"Test 5\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n4 5') == '2\\n'\nassert solution('2\\n4 1 2 3 4') == '2\\n'\nassert solution('3\\n4 5') == '2\\n'\nassert solution('3\\n4 1 2 3 4') == '2\\n'\nassert solution('5\\n4 5') == '3\\n'\nassert solution('5\\n4 1 2 3 4') == '3\\n'\nassert solution('10\\n4 5') == '5\\n'\nassert solution('10\\n4 1 2 3 4') == '5\\n'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"3\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"\nassert solution(\"2\\n4 5\") == \"2\\n\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n0 1 0 1 2 3 2\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nassert solution(\"3 4 5 6\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 2 1') == 'YES\\n0 1 0 1 2 3 2'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 2 1') == 'YES\\n0 1 0 1 2 3 2'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n\nfrom typing import List"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'YES'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'\nassert solution('2 4\\n2 1 2\\n1 3 4\\n2 4 1\\n4 2 3') == 'NO'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_id} failed: {expected_output} expected, but got {solution(input())}\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"1 2 1\") == 666666672\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"1 2 1\n\"\"\") == \"0\"\n\nassert solution(r\"\"\"1 2 1\n\"\"\") == \"666666672\"\n\nassert solution(r\"\"\"1 2 2\n\"\"\") == \"666666672\"\n\nassert solution(r\"\"\"1 1 1\n\"\"\") == \"0\"\n\nassert solution(r\"\"\"1 2 2\n\"\"\") == \"666666672\"\n\nassert solution(r\"\"\"1 1 2\n\"\"\") == \"0\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\" # Jon Snow likes the arrangement if all arrangements are equiprobably\nassert solution(input()) == \"666666672\" # Jon Snow likes the arrangement if all arrangements are equiprobably"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '0\\n'\nassert solution('1 2 1') == '666666672\\n'\nassert solution('1 1 2') == 'Infinity\\n'\nassert solution('2 1 1') == '0\\n'\nassert solution('1 1 0') == 'Infinity\\n'\nassert solution('2 2 1') == 'Infinity\\n'\nassert solution('2 2 2') == 'Infinity\\n'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"666666672\\n\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"1 1 1\") == \"0\"\nassert solution(r\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n\nfrom math import factorial"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Your code is not correct\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"9\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"7\"\nassert solution(\"11\\n1 2 3 4 5 6\") == \"8\"\nassert solution(\"12\\n1 2 3 4 5 6\") == \"9\"\nassert solution(\"13\\n1 2 3 4 5 6\") == \"10\"\nassert solution(\"14\\n1 2 3 4 5 6\") == \"11\"\nassert solution(\"15\\n1 2 3 4 5 6\") == \"12\"\nassert solution(\"16\\n1 2 3 4 5 6\") == \"13\"\nassert solution(\"17\\n1 2 3 4 5 6\") == \"14\"\nassert solution(\"18\\n1 2 3 4 5 6\") == \"15\"\nassert solution(\"19\\n1 2 3 4 5 6\") == \"16\"\nassert solution(\"20\\n1 2 3 4 5 6\") == \"17\"\nassert solution(\"21\\n1 2 3 4 5 6\") == \"18\"\nassert solution(\"22\\n1 2 3 4 5 6\") == \"19\"\nassert solution(\"23\\n1 2 3 4 5 6\") == \"20\"\nassert solution(\"24\\n1 2 3 4 5 6\") == \"21\"\nassert solution(\"25\\n1 2 3 4 5 6\") == \"22\"\nassert solution(\"26\\n1 2 3 4 5 6\") == \"23\"\nassert solution(\"27\\n1 2 3 4 5 6\") == \"24\"\nassert solution(\"28\\n1 2 3 4 5 6\") == \"25\"\nassert solution(\"29\\n1 2 3 4 5 6\") == \"26\"\nassert solution(\"30\\n1 2 3 4 5 6\") == \"27\"\nassert solution(\"31\\n1 2 3 4 5 6\") == \"28\"\nassert solution(\"32\\n1 2 3 4 5 6\") == \"29\"\nassert solution(\"33\\n1 2 3 4 5 6\") == \"30\"\nassert solution(\"34\\n1 2 3 4 5 6\") == \"31\"\nassert solution(\"35\\n1 2 3 4 5 6\") == \"32\"\nassert solution(\"36\\n1 2 3 4 5 6\") == \"33\"\nassert solution(\"37\\n1 2 3 4 5 6\") == \"34\"\nassert solution(\"38\\n1 2 3 4 5 6\") == \"35\"\nassert solution(\"39\\n1 2 3 4 5 6\") == \"36\"\nassert solution(\"40\\n1 2 3 4 5 6\") == \"37\"\nassert solution(\"41\\n1 2 3 4 5 6\") == \"38\"\nassert solution(\"42\\n1 2 3 4 5 6\") == \"39\"\nassert solution(\"43\\n1 2 3 4 5 6\") == \"40\"\nassert solution(\"44\\n1 2 3 4 5 6\") == \"41\"\nassert solution(\"45\\n1 2 3 4 5 6\") == \"42\"\nassert solution(\"46\\n1 2 3 4 5 6\") == \"43\"\nassert solution(\"47\\n1 2 3"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 5, \"Expected 5, got {}\".format(solution(input()))"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"7\\n2 3 1 5 6\") == \"3\"\nassert solution(\"6\\n7 2 3 1 4 6\") == \"4\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 5"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nReceived output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"test_case1\"\nassert solution(\"4 2 2 6\") == \"3\", \"test_case2\"\nassert solution(\"3 7 4 6\") == \"1\", \"test_case3\"\nassert solution(\"1 1 1 0\") == \"1\", \"test_case4\"\nassert solution(\"1 1 1 9\") == \"1\", \"test_case5\"\nassert solution(\"1 1 1 10\") == \"1\", \"test_case6\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"test case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"test case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"test case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == 2, \"Expected answer: 2\"\nassert solution(\"4 2 2 6\") == 3, \"Expected answer: 3\"\nassert solution(\"3 7 4 6\") == 1, \"Expected answer: 1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 8') == '2', \"First Test\"\nassert solution('4 2 2 6') == '3', \"Second Test\"\nassert solution('3 7 4 6') == '1', \"Third Test\"\nassert solution('2 2 2 2') == '2', \"Fourth Test\"\nassert solution('3 3 3 3') == '0', \"Fifth Test\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but it returns '{solution(input())}'.\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\", \"The first sample is incorrect.\"\nassert solution(\"-1 4 15\") == \"4\", \"The second sample is incorrect.\"\nassert solution(\"0 -1 5\") == \"-1\", \"The third sample is incorrect.\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\", \"Invalid example 1\"\nassert solution(\"-1 4 15\") == \"4\", \"Invalid example 2\"\nassert solution(\"0 -1 5\") == \"-1\", \"Invalid example 3\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: '{output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\", \"monday is not allowed\"\nassert solution(\"tuesday\") == \"NO\", \"tuesday is not allowed\"\nassert solution(\"wednesday\") == \"NO\", \"wednesday is not allowed\"\nassert solution(\"thursday\") == \"NO\", \"thursday is not allowed\"\nassert solution(\"friday\") == \"NO\", \"friday is not allowed\"\nassert solution(\"saturday\") == \"NO\", \"saturday is not allowed\"\nassert solution(\"sunday\") == \"NO\", \"sunday is not allowed\"\n\nassert solution(\"sunday\") == \"YES\", \"sunday is allowed\"\nassert solution(\"saturday\") == \"YES\", \"saturday is allowed\"\nassert solution(\"monday\") == \"YES\", \"monday is allowed\"\nassert solution(\"tuesday\") == \"YES\", \"tuesday is allowed\"\nassert solution(\"wednesday\") == \"YES\", \"wednesday is allowed\"\nassert solution(\"thursday\") == \"YES\", \"thursday is allowed\"\nassert solution(\"friday\") == \"YES\", \"friday is allowed\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\n\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('monday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"17\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10000000000\") == \"91\"\nassert solution(\"10\") == \"9\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"12\") == \"2\"\nassert solution(\"123456789\") == \"1\"\nassert solution(\"0000000000000000000000000000000000000000000000000000000000000000\") == \"1\"\nassert solution(\"10000000000\") == \"1\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES', \"Test 1 Failed\"\nassert solution('Z') == 'NO', \"Test 2 Failed\"\nassert solution('XO') == 'NO', \"Test 3 Failed\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AHA') == 'YES', \"Invalid test case 1\"\nassert solution('Z') == 'NO', \"Invalid test case 2\"\nassert solution('XO') == 'NO', \"Invalid test case 3\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0' # Jon Snow cannot support steward with strength 1\nassert solution(input()) == '1' # Jon Snow can support steward with strength 2"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\", \"Output: 0\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 5\\n') == '0\\n'\nassert solution('3\\n1 2 5\\n') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\\n\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\\n\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n', \"Expected 'Yes', got '{}'\".format(solution('2 2\\nRU'))\nassert solution('1 2\\nRU') == 'No\\n', \"Expected 'No', got '{}'\".format(solution('1 2\\nRU'))\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n', \"Expected 'Yes', got '{}'\".format(solution('-1 1000000000\\nLRRLU'))\nassert solution('0 0\\nD') == 'Yes\\n', \"Expected 'Yes', got '{}'\".format(solution('0 0\\nD'))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"The solution should be Yes.\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"The solution should be No.\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"The solution should be Yes.\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"The solution should be Yes.\"\n\nfrom typing import List"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Incorrect output\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Incorrect output\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Incorrect output\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Incorrect output\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Case 1 failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Case 2 failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Case 3 failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Case 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"Expected 1, but got {}.\".format(solution(\"10 3 7\"))\nassert solution(\"10   3   7\") == \"1\\n\", \"Expected 1, but got {}.\".format(solution(\"10   3   7\"))\nassert solution(\"314\") == \"0\\n\", \"Expected 0, but got {}.\".format(solution(\"314\"))\nassert solution(\"22 19 3\") == \"1\\n\", \"Expected 1, but got {}.\".format(solution(\"22 19 3\"))\nassert solution(\"   60\\n29\\n   31\\n    \\n    \\n    \\n    \") == \"1\\n\", \"Expected 1, but got {}.\".format(solution(\"   60\\n29\\n   31\\n    \\n    \\n    \\n    \"))"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n   31\\n       35\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n31\\n35\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1', \"Expected output 1, got: {}\".format(solution(input()))\n\nassert solution(input()) == '1', \"Expected output 2, got: {}\".format(solution(input()))\n\nassert solution(input()) == '0', \"Expected output 3, got: {}\".format(solution(input()))\n\nassert solution(input()) == '1', \"Expected output 4, got: {}\".format(solution(input()))\n\nassert solution(input()) == '1', \"Expected output 5, got: {}\".format(solution(input()))\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60 \\n 29 \\n      31 \\n       \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n 29\\n   31\\n    \\n    \\n    \\n    \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n\\n\\n\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 3 7') == '1', 'Test Case 1 failed'\nassert solution('10   3   7') == '1', 'Test Case 2 failed'\nassert solution('314') == '0', 'Test Case 3 failed'\nassert solution('22 19 3') == '1', 'Test Case 4 failed'\nassert solution('   60    ') == '1', 'Test Case 5 failed'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"Expected 1, but got {0}\".format(solution(\"10 3 7\"))\nassert solution(\"10   3   7\") == \"1\\n\", \"Expected 1, but got {0}\".format(solution(\"10   3   7\"))\nassert solution(\"314\") == \"0\\n\", \"Expected 0, but got {0}\".format(solution(\"314\"))\nassert solution(\"22 19 3\") == \"1\\n\", \"Expected 1, but got {0}\".format(solution(\"22 19 3\"))\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\") == \"1\\n\", \"Expected 1, but got {0}\".format(solution(\"60\\n29\\n\\n31\\n\\n\\n\"))\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 3 7') == '1', \"The output should be 1.\"\nassert solution('10   3   7') == '1', \"The output should be 1.\"\nassert solution('314') == '0', \"The output should be 0.\"\nassert solution('22 19 3') == '1', \"The output should be 1.\"\nassert solution('   60\\n 29\\n   31\\n     31\\n     31\\n     31\\n    ') == '1', \"The output should be 1.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '9\\n'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\", \"Test Case 1 failed.\"\nassert solution(input()) == \"9\", \"Test Case 2 failed.\"\nassert solution(input()) == \"9\", \"Test Case 3 failed.\"\nassert solution(input()) == \"9\", \"Test Case 4 failed.\"\nassert solution(input()) == \"9\", \"Test Case 5 failed.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"9\\n\", \"Input and Output should be correct.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(32) == \"9\"\nassert solution(10) == \"9\"\nassert solution(11) == \"10\"\nassert solution(123) == \"12\"\nassert solution(1234) == \"12\"\nassert solution(12345) == \"14\"\nassert solution(123456) == \"16\"\nassert solution(1234567) == \"18\"\nassert solution(12345678) == \"20\"\nassert solution(123456789) == \"22\"\nassert solution(1234567890) == \"24\"\nassert solution(12345678901) == \"26\"\nassert solution(123456789012) == \"28\"\nassert solution(1234567890123) == \"30\"\nassert solution(12345678901234) == \"32\"\nassert solution(123456789012345) == \"34\"\nassert solution(1234567890123456) == \"36\"\nassert solution(12345678901234567) == \"38\"\nassert solution(123456789012345678) == \"40\"\nassert solution(1234567890123456789) == \"42\"\nassert solution(12345678901234567890) == \"44\"\nassert solution(123456789012345678901) == \"46\"\nassert solution(1234567890123456789012) == \"48\"\nassert solution(12345678901234567890123) == \"50\"\nassert solution(123456789012345678901234) == \"52\"\nassert solution(1234567890123456789012345) == \"54\"\nassert solution(12345678901234567890123456) == \"56\"\nassert solution(123456789012345678901234567) == \"58\"\nassert solution(1234567890123456789012345678) == \"60\"\nassert solution(12345678901234567890123456789) == \"62\"\nassert solution(123456789012345678901234567890) == \"64\"\nassert solution(1234567890123456789012345678901) == \"66\"\nassert solution(12345678901234567890123456789012) == \"68\"\nassert solution(123456789012345678901234567890123) == \"70\"\nassert solution(1234567890123456789012345678901234) == \"72\"\nassert solution(12345678901234567890123456789012345) == \"74\"\nassert solution(12345678901234567890123456789012"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"9\", \"Solution is incorrect\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"21\"\nassert solution(\"3\") == \"28\"\nassert solution(\"4\") == \"30\"\nassert solution(\"5\") == \"37\"\nassert solution(\"6\") == \"38\"\nassert solution(\"7\") == \"42\"\nassert solution(\"8\") == \"46\"\nassert solution(\"9\") == \"50\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 28 9\") == 4\nassert solution(\"5 12 9 16 48\") == 3\nassert solution(\"4 1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 253625\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n4\\n3 6 28 9\\n\\nInput\\n5\\n5 12 9 16 48\\n\\nInput\\n4\\n1 2 4 8\\n\\nOutput\\n-1\\n\\nExamples\\nInput\\n4\\n3 6 28 9\\n\\nOutput\\n4\\n\\nInput\\n5\\n5 12 9 16 48\\n\\nOutput\\n3\\n\\nInput\\n4\\n1 2 4 8\\n\\nOutput\\n-1\\n\\nNote\\n\\nIn the first example, the shortest cycle is $(9, 3, 6, 28)$.\\n\\nIn the second example, the shortest cycle is $(5, 12, 9)$.\\n\\nThe graph has no cycles in the third example.') == '4\\n3\\n-1\\n\\nExamples\\nInput\\n4\\n3 6 28 9\\n\\nOutput\\n4\\n\\nInput\\n5\\n5 12 9 16 48\\n\\nOutput\\n3\\n\\nInput\\n4\\n1 2 4 8\\n\\nOutput\\n-1\\n\\nNote\\n\\nIn the first example, the shortest cycle is $(9, 3, 6, 28)$.\\n\\nIn the second example, the shortest cycle is $(5, 12, 9)$.\\n\\nThe graph has no cycles in the third example.'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\"\nassert solution(\"5\\n10 10 10 10 10\\n\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"3\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 4\nassert solution(5) == 3\nassert solution(4) == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n-1\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n-1\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 2\nassert solution(7) == 1"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Expected Output: 2\"\nassert solution() == 1, \"Expected Output: 1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected: {output}\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5\n"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 2, \"Expected 2, got: \" + solution(4)\nassert solution(5) == 5, \"Expected 5, got: \" + solution(5)"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 5\nassert solution(4) == 2\n\nsolution(5)\nsolution(4)"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2, \"Expected 2 but got {}\".format(solution(4))\nassert solution(5) == 5, \"Expected 5 but got {}\".format(solution(5))"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5) +'' + str(2) +'' + str(2)) == '18\\n3 4 \\n1 5 \\n'\nassert solution(str(4) +'' + str(2) +'' + str(2)) == '31\\n1 2 \\n3 4 \\n'\nassert solution(str(5) +'' + str(3) +'' + str(1)) == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''18\n3 4 \n1 5\n'''\n\nassert solution() == '''31\n1 2 \n3 4 \n\nInput\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n\nOutput\n23\n1 3 5 \n4\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\", \"Test 1\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\", \"Test 2\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\", \"Test 3\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str), \"Test failed for input: {}\".format(input_str)"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\\nInput\\n4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\nInput\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\\nOutput\\n18\\n3 4 \\n1 5 \\n\\n18\\n3 4 \\n1 5 \\n\\n31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\\n') == '18\\n3 4 \\n1 5 \\n\\n31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"18\\n3 4\\n1 5\"\nassert solution() == \"31\\n1 2\\n3 4\\n\"\nassert solution() == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\\naa\\nab\\nbb\\ncc\\n\") == \"Yes\"\nassert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\\naa\\nbb\\ncc\\n\") == \"No\"\nassert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\\naa\\nbb\\ncc\\n\") == \"Yes\"\nassert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\\naa\\nab\\nbb\\ncc\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\\naa\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'No', \"Input is not valid\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 1\n1 2\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"4 3\n1 2\n1 3\n1 4\n\"\"\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"Input\\n4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Incorrect output for sample {input_str}\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\naa'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7', \"The solution should be 7.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(0, 1, 1) == 7, \"Expected output: 7\"\nassert solution(0, 2, 2) == 19, \"Expected output: 19\"\nassert solution(0, 2, 1) == 87, \"Expected output: 87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '7\\n'\nassert solution(open('smally.txt', 'r')) == '19\\n'\nassert solution(open('matrix.txt', 'r')) == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 7\nassert solution() == 19\nassert solution() == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"Expected output: 1, actual output: \" + solution(\"Bulbbasaur\")\nassert solution(\"F\") == \"0\", \"Expected output: 0, actual output: \" + solution(\"F\")\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"Expected output: 2, actual output: \" + solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\")"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == 1, \"Expected 1, but got {}\".format(solution(\"Bulbbasaur\"))\nassert solution(\"F\") == 0, \"Expected 0, but got {}\".format(solution(\"F\"))\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2, \"Expected 2, but got {}\".format(solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\"))"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"The solution should return '1' for the given input.\"\nassert solution(\"F\") == \"0\", \"The solution should return '0' for the given input.\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"The solution should return '2' for the given input.\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == 1, \"Expected 1, but got {}\".format(solution(\"Bulbbasaur\"))"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Bulbbasaur') == 1\nassert solution('F') == 0\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == 2\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\nxyz\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\ndef\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\nabc\\n\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\\n\"\nassert solution(\"3 2\\nbac\\nrca\\n\") == \"NO\\n\"\nassert solution(\"4 4\\nbcd\\ncdc\\n\") == \"NO\\n\"\nassert solution(\"4 2\\nbcd\\ncdc\\n\") == \"NO\\n\"\nassert solution(\"3 4\\nbcd\\ncdc\\n\") == \"YES\\n\"\nassert solution(\"5 5\\nbcd\\ncdc\\n\") == \"YES\\n\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\ndef') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\nbcd\") == \"NO\"\nassert solution(\"2 3\\nxyz\\nabc\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES\\n'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"1 3\\nabc\\ndef\\nghi\\n\") == \"NO\"\nassert solution(\"3 3\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\") == \"NO\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\\n0 3 5 6\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\", \"Output should be 4, but it is: \" + solution(\"3 111\\n1111\\n10111\\n10010\\n\")"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"6 111\\n1111\\n1111\\n10111\\n10111\") == \"4\\n\"\nassert solution(\"7 111\\n1111\\n10111\\n10010\\n1111\") == \"4\\n\"\nassert solution(\"7 111\\n1111\\n10111\\n1111\\n10111\") == \"4\\n\"\nassert solution(\"15 111\\n1111\\n10111\\n10111\\n10111\\n10111\") == \"3\\n\"\nassert solution(\"6 111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4', \"The output is incorrect.\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4\\nInitially, 15, 23 and 18 are written on the blackboard. Among the integers not exceeding 7, four integers, 0, 3, 5 and 6, can be written.\\nFor example, 6 can be written as follows:\\n - Double 15 to write 30.\\n - Take XOR of 30 and 18 to write 12.\\n - Double 12 to write 24.\\n - Take XOR of 30 and 24 to write 6.\\n'\nassert solution('5 11\\n111\\n111\\n111') == '5\\nInitially, 0, 2, 4 and 6 are written on the blackboard. Among the integers not exceeding 7, three integers, 1, 3 and 5, can be written.\\nFor example, 3 can be written as follows:\\n - Take XOR of 0 and 1 to write 1.\\n - Take XOR of 1 and 3 to write 3.\\n - Take XOR of 3 and 5 to write 5.\\n'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\"\nassert solution(\"11 2 3\\n\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 11 5\\n11 2 3\\n') == '1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\", \"Test failed\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES', \"Expected YES, but got {}\".format(solution('abacaba'))\nassert solution('jinotega') == 'NO', \"Expected NO, but got {}\".format(solution('jinotega'))"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == f\"{round(6.5, -9)}\", \"The output should be 6.5\"\n\nassert solution(stdin=\"4 2 20\") == f\"{round(20.0, -9)}\", \"The output should be 20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Output: {output}\\nInput: {stdin}\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '2\\n'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1\\n'\nassert solution('3 4\\n....\\n.##.\\n....\\n') == '2\\n'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '2\\n'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1\\n'\nassert solution('3 4\\n....\\n.##.\\n....\\n') == '2\\n'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\", \"The correct answer is 6.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"5\\n2 3\") == \"23\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"24\\n\"\nassert solution(\"6\\n1 1 3 4 5 6\") == \"60\\n\"\nassert solution(\"10\\n2 3 4 5 6 7 8 9 10\") == \"141\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n1 2 4\\n2 2 4\") == \"20\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"5\\n1 1 2 1 2\") == \"40\\n\"\n\nfrom functools import reduce\nfrom itertools import combinations"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\\n1 1 3\\n\"\n) == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 2 3\\n\") == \"16\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"13456\\n\"\nassert solution(\"6\\n3 1 2 3 4\\n\") == \"1222880\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '6\\n', \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '11\\n3\\n1\\n4\\n2'\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n11\n3\n1\n4\n2\n\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4 3 7 5\") == \"11\"\nassert solution(\"2 5 4 3 2\") == \"11\"\nassert solution(\"3 6 5 4 3\") == \"11\"\nassert solution(\"1 4 3 7 5 2 6\") == \"11\"\nassert solution(\"2 5 4 3 2 6\") == \"11\"\nassert solution(\"3 6 5 4 3 2 6\") == \"11\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10.3\", \"Test case 1 failed\"\nassert solution(input()) == \"10.3\", \"Test case 2 failed\"\nassert solution(input()) == \"9.2\", \"Test case 3 failed\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Please check the given input and output.\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'6\\n10.245') == '10.25'\nassert solution(b'6\\n10.245') == '10.25'\nassert solution(b'3\\n9.2') == '9.2'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n10.245\\n\\n6 2\\n10.245\\n\\n3 100\\n9.2\") == \"10.25\\n\\n9.2\\n\\n9.2\\n\\n9.2\\n\"\n\nassert solution(\"6 1\\n10.245\\n\\n6 2\\n10.245\\n\\n3 100\\n9.2\") == \"10.25\\n\\n9.2\\n\\n9.2\\n\\n9.2\\n\"\n\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\\n9.2\\n\\n9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\"\n\nfrom typing import List\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n\nsolution = '''\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"3\"\nassert solution(open(\"input.txt\", \"r\")) == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n*..P*P*\\n\\n10\\n.**PP.*P.*\\n\") == \"3\\n\"\nassert solution(\"10\\n.*.*P\\n\\n3\\n.*.*P\\n\\n2\\n.*.*P\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {case_number} failed: expected {expected_output}, got {solution(stdin=input())}\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {input()}!= {output()}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '16\\n'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Invalid Input\\n\"\nassert solution(\"10 10 5 5 2 1\") == \"Invalid Input\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''9 9 5 5 2 1''') == '1 3 9 7'\nassert solution('''100 100 52 50 46 56''') == '17 8 86 92'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"FTFFTFF\\n4 2\") == \"No\\n\"\nassert solution(\"FTFFTFF\\n4 5\") == \"No\\n\"\nassert solution(\"FTFFTFF\\n4 -2\") == \"No\\n\"\nassert solution(\"FTFFTFF\\n4 10\") == \"No\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('4 2') == 'No'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"TTTTTFF\\n1 1\") == \"Yes\\n\"\nassert solution(\"TTTTTT\\n2 1\") == \"Yes\\n\"\nassert solution(\"TTTTTT\\n2 3\") == \"No\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\"\nassert solution(\"FTFFTTFF\") == \"No\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\"\nassert solution(\"FTFFTTFFTT\") == \"Yes\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\"\nassert solution(\"FTFFTTFFTTFF\") == \"No\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\"\nassert solution(\"FTFFTTFFTTFFF\") == \"No\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\nassert solution('TFCFIIII\\n2 3') == 'No'\nassert solution('FIIIIIB\\n2 1') == 'No'\nassert solution('FIIIIIII\\n1 1') == 'No'\nassert solution('FCIB\\n2 1') == 'No'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"RFRFRRR\\n3 3\") == \"No\\n\"\nassert solution(\"FTFFTTTT\\n4 2\") == \"Yes\\n\"\nassert solution(\"FTRFFRRR\\n3 3\") == \"No\\n\"\nassert solution(\"TFTFFRRR\\n3 3\") == \"Yes\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"BTTTTFF\\n6 1\") == \"No\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 6\nassert solution(5) == 10"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 2, \"Fox Ciel studies number theory.\"\nassert solution(2) == 3, \"She thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S (a can be equal to b), (a ^ b) in S. Where operation xor means exclusive or operation (http://en.wikipedia.org/wiki/Exclusive_or).\"\nassert solution(3) == 5, \"Please calculate the number of perfect sets consisting of integers not greater than k.\"\nassert solution(4) == 6, \"In example 4, there are 6 such sets: {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4} and {0, 1, 2, 3}.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\nassert solution(5) == 10\nassert solution(6) == 20"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2\\n3\\n5\\n6\\n\"\nassert solution(\"2\\n3\\n\") == \"3\\n6\\n\"\nassert solution(\"3\\n4\\n5\\n\") == \"5\\n6\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nimport bisect"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\") == 1.3333333333\nprint(\"All tests passed\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == 1.3333333333\nassert solution(\"3\\na_1 a_2 a_3\\n4\\n\") == 0\nassert solution(\"3\\na_1 a_2 a_3\\n5\\n\") == 0.0\nassert solution(\"3\\na_1 a_2 a_3\\n6\\n\") == 0.0\nassert solution(\"3\\na_1 a_2 a_3\\n7\\n\") == 0.0\nassert solution(\"3\\na_1 a_2 a_3\\n8\\n\") == 0.0\nassert solution(\"3\\na_1 a_2 a_3\\n9\\n\") == 0.0\nassert solution(\"3\\na_1 a_2 a_3\\n10\\n\") == 0.0\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\\na_4 a_5 a_6\\np 2\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'\nassert solution('2\\n1 2 3\\n3') == '2.0'\nassert solution('5\\n1 2 3\\n3') == '5.0'\nassert solution('6\\n1 2 3\\n3') == '6.0'\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"2\\n1 3\\n2\") == \"1.0000000000\"\nassert solution(\"4\\n1 2 3 4\\n4\") == \"1.0000000000\"\nassert solution(\"5\\n1 2 3 4 5\\n5\") == \"1.0000000000\"\nassert solution(\"6\\n1 2 3 4 5 6\\n6\") == \"1.0000000000\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"5\\n1 2 3 4 5\\n10\\n\") == \"0.3333333333\"\nassert solution(\"6\\n1 2 3 4 5 6\\n10\\n\") == \"0.6666666667\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n10\\n\") == \"0.6666666667\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n10\\n\") == \"0.6666666667\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n10\\n\") == \"0.6666666667\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n\") == \"0.6666666667\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"Test 1 failed\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\", \"Test 2 failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == ['13 7', '986 605']"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n') == '13 7\\n986 605'\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\"\nassert solution(\"5 2 3\\n4 5 6\\n7 8 9\\n\") == \"18 15 12\\n\"\nassert solution(\"10000 1 5\\n5000 3 7\\n1000 2 4\\n\") == \"2000 1000 500\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\n\nassert solution('''\n2 100000 569\n605 986\n''') == '986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n') == '13 7'\nassert solution('2 100000 569\\n605 986\\n') == '986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n605 986\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3 2 4 4\n2 5 4 10\n\"\"\") == \"1\"\n\nassert solution(\"\"\"3 3 3 3 5\n2 3 5 4 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"5 5 1 2 3\n2 2 3\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"3 4 1 1 3\n2 3 2\n\"\"\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\n\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\n\nassert solution('''\n5 5 1 2 3\n2 2 3\n''') == '-1'\n\nassert solution('''\n3 4 1 1 3\n2 3 2\n''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 3 2 4 4\n2 5 4 10''') == '1'\nassert solution('''3 3 3 3 5\n2 3 5 4 2''') == '0'\nassert solution('''5 5 1 2 3\n2 2 3''') == '-1'\nassert solution('''3 4 1 1 3\n2 3 2''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '-1'\nassert solution() == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 2 4 4\n2 5 4 10\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n5 5 1 2 3\n2 2 3\n\"\"\") == \"-1\\n\"\n\nassert solution(\"\"\"\n3 4 1 1 3\n2 3 2\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nG3 G3\\n\\n4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\\nB1 Y1 W1 G1 R1\\n\\n5\\nG1 R1 B1 W1 Y1\\n\") == \"2\"\nassert solution(\"5\\nG1 R1 B1 W1 Y1\\n\\nG1 B1 Y1 W1 R1\\n\\nG4 B1 Y1 W1 G1 R1\\n\\nB3 G3 W1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0\nassert solution(4) == 2\nassert solution(5) == 4"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n3 11\\n\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}\\nOutput: {output()}\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Failed for {input()}\\nOutput: {output}\\nInput: {input()}\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\n\nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n\\n2 6\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n1 1\\n11 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2 6\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n1 1\\n3 11\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"2 6\"\"\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n\"\n\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"1 1\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n3 11\"\nassert solution(\"2\\n1 1\\n100 100\\n1\") == \"1 1\\n1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\", \"The solution should output 3B\"\nassert solution(\"2 2\") == \"Impossible\", \"The solution should output Impossible\"\nassert solution(\"3 2\") == \"1A1B\", \"The solution should output 1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3B\"\nassert solution() == \"Impossible\"\nassert solution() == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\\n\", \"Output 1\"\nassert solution(\"2 2\") == \"Impossible\\n\", \"Output 2\"\nassert solution(\"3 2\") == \"1A1B\\n\", \"Output 3\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\nassert solution(3, 5) == 4\nassert solution(5, 3) == 2\nassert solution(7, 9) == 5\nassert solution(15, 29) == 23\nassert solution(5, 17) == 15\nassert solution(21, 33) == 20\nassert solution(11, 19) == 12\nassert solution(7, 11) == 1"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\n\nprint(1)  # Adjust the modulo value in the assert statement based on your problem statement."
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3\\n'\nassert solution('5 4') == '25\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"5 4\\n\") == \"25\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == 1\nassert solution(\"10 10\\n1 3 6\\n2 5 2\\n3 1 4\\n4 8 1\\n5 7 6\\n6 9 5\\n7 4 3\\n8 6 8\\n9 2 4\\n10 9 7\\n\") == 1\nassert solution(\"6 6\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n\") == 1\nassert solution(\"6 6\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n1 2 2\\n2 2 3\\n3 3 4\\n4 4 5\\n5 5 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n\") == 1\nassert solution(\"6 6\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n1 2 2\\n2 2 3\\n3 3 4\\n4 4 5\\n5 5 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n2 3 3\\n3 3 4\\n4 4 5\\n5 5 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n3 4 4\\n4 4 5\\n5 5 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n4 5 5\\n5 5 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n5 6 6\\n6 6 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n6 7 7\\n7 7 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n7 8 8\\n8 8 9\\n9 9 10\\n10 10 11\\n11 11 12\\n8 9 9\\n9 9 10\\n10 10 11\\n11 "
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n3 1 2\n1 2\n2 1\n1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 7\n1 2 3 4 5\n0 0 0 0 0\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 2\n2 1 3\n1 2 3\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 3\n1 2 3\n0 2 3\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 1\n1 1\n1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 2\n3 1 2\n1 2\n2 1\n1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 3\n1 2 3\n0 2 3\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\"\nassert solution(\"4 10\\n1 2 3 4\\n2 5 6 7\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1\\n\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2.\\nTherefore, Snuke\\'s profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.'\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is 0. The score of the component consisting of Vertices 3 and 4 is 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\nRemove the upper-right and lower-left leaves.\\n'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nS.o\\no.o.o\\no.T') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str), \"Test case failed\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.o\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o.o\\nT\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"The solution is incorrect. \\nExpected output: {output_data} \\nActual output: {solution(input_data)} \\n\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 3\nS.o\n.o.\no.T''') == '2'\nassert solution('''3 3\n.o.\no..\n.o.\n...\n..T\n..o\n....T\n..o.\n...T\n...o\n....T''') == '-1'\nassert solution('''4 4\n.o.\n...\n.T.\n...\n...\n....\n..T.\n..T.\n..T.\n..T.\n....\n...T\n...T\n...T\n...T''') == '3'\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 3\nassert solution(199, 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 3\nassert solution(199, 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"The output {output()} does not match the expected output {output()}\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test 1\"\nassert solution(\"3 2\") == \"3\\n\", \"Test 2\"\nassert solution(\"199 200\") == \"200\\n\", \"Test 3\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output is {output}, not {solution(input())}\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"200\\n\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"5\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"2\\n5 3\\n3 4\\n\") == \"Aoki\\n\"\nassert solution(\"2\\n5 2\\n3 5\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 3\\n3 4\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 2\\n3 2\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 3\\n3 1\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 3\\n3 5\\n\") == \"Aoki\\n\"\nassert solution(\"2\\n5 1\\n3 2\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 2\\n3 5\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 3\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"2\\n5 3\\n3 2\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 1\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 2\\n3 2\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 3\\n3 5\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"1\\n2 2\\n3 4\\n4 6\") == \"Takahashi\"\nassert solution(\"1\\n4 2\\n5 4\\n6 8\") == \"Takahashi\"\nassert solution(\"1\\n2 4\\n3 8\\n4 16\\n5 32\") == \"Takahashi\"\nassert solution(\"1\\n16 4\\n8 8\\n16 32\\n32 64\") == \"Takahashi\"\nassert solution(\"1\\n64 4\\n32 8\\n64 32\\n32 128\") == \"Takahashi\"\nassert solution(\"1\\n128 4\\n64 8\\n128 32\\n32 256\") == \"Takahashi\"\nassert solution(\"1\\n256 4\\n128 8\\n256 32\\n32 512\") == \"Takahashi\"\nassert solution(\"1\\n512 4\\n256 8\\n512 32\\n32 1024\") == \"Takahashi\"\nassert solution(\"1\\n1024 4\\n512 8\\n1024 32\\n32 2048\") == \"Takahashi\"\nassert solution(\"1\\n2048 4\\n1024 8\\n2048 32\\n32 4096\") == \"Takahashi\"\nassert solution(\"1\\n4096 4\\n2048 8\\n4096 32\\n32 8192\") == \"Takahashi\"\nassert solution(\"1\\n8192 4\\n4096 8\\n8192 32\\n32 16384\") == \"Takahashi\"\nassert solution(\"1\\n16384 4\\n8192 8\\n16384 32\\n32 32768\") == \"Takahashi\"\nassert solution(\"1\\n32768 4\\n16384 8\\n32768 32\\n32 65536\") == \"Takahashi\"\nassert solution(\"1\\n65536 4\\n32768 8\\n65536 32\\n32 131072\") == \"Takahashi\"\nassert solution(\"1\\n131072 4\\n65536 8\\n131072 32\\n32 262144\") == \"Takahashi\"\nassert solution(\"1\\n262144 4\\n131072 8\\n262144 32\\n32 524288\") == \"Takahashi\"\nassert solution(\"1\\n524288 4\\n262144 8\\n524288 32\\n32 1048576\") == \"Takahashi\"\nassert solution(\"1\\n1048576 4\\n524288 8\\n1048576 32\\n32 2097152\") == \"Takahashi\"\nassert solution(\"1\\n2097152 4\\n1048576 8\\n2097152 32\\n32 4194304\") == \"Takahashi\"\nassert solution(\"1\\n4194304 4\\n2097152 8\\n4194304 32\\n32 8388608\") == \"Takahashi\"\nassert solution(\"1\\n8388608 4\\n4194304 "
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\n\nassert solution(\"3\\n5 2\\n3 3\") == \"Takahashi\"\n\nassert solution(\"4\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Aoki\", \"Incorrect output\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"3\\n10 3\\n1 4\") == \"Takahashi\\n\"\nassert solution(\"4\\n5 2\\n5 1\") == \"Aoki\\n\"\nassert solution(\"3\\n3 3\\n4 1\") == \"Takahashi\\n\"\nassert solution(\"4\\n2 1\\n1 1\") == \"Aoki\\n\"\nassert solution(\"3\\n2 3\\n1 5\") == \"Takahashi\\n\"\nassert solution(\"4\\n10 2\\n10 1\") == \"Aoki\\n\"\nassert solution(\"4\\n2 2\\n1 1\") == \"Aoki\\n\"\nassert solution(\"3\\n3 1\\n5 3\") == \"Takahashi\\n\"\nassert solution(\"4\\n2 2\\n2 1\") == \"Aoki\\n\"\nassert solution(\"3\\n2 3\\n1 4\") == \"Takahashi\\n\"\nassert solution(\"4\\n10 1\\n10 3\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('3\\n5 2\\n3 3') == 'Takahashi'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2,2) == 0\nassert solution(3,3) == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"example.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"sample_output.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"sample_output_2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"sample_output_3.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"sample_output_4.txt\", \"r\").read()) == \"1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed. Output: {}, Expected: {}\".format(solution(input()), output())"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\nassert solution('''\n2 2\n1 2 3 4\n1 5 6 4\n''') == '0'\nassert solution('''\n2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1'\n"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\", \"Example 1\"\nassert solution(\"12\") == \"07:30\", \"Example 2\"\nassert solution(\"24\") == \"09:09\", \"Example 3\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"00:00\"\nassert solution(\"12\") == \"01:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"24\") == \"09:09\"\nassert solution(b\"12\") == \"07:30\"\nassert solution(b\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\\n17:30\") == \"17:30\"\nassert solution(\"12\\n99:99\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == 6\nprint(\"All test cases passed\")"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"10 10\\n2\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\") == \"185830\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'\nassert solution('1 2\\n2\\n1\\n2') == '0\\n'\nassert solution('2 2\\n2\\n1\\n2') == '1\\n'\nassert solution('3 3\\n1\\n1 1\\n1 1') == '3\\n'\nassert solution('1 2\\n3\\n1 1\\n1 1') == '0\\n'\nassert solution('3 3\\n3\\n1 1\\n1 1') == '3\\n'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n\", \"The solution is incorrect. Please check the provided code.\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''6\n2 0 3 0 1 1''') == '''5\n2 1\n2 5\n3 3\n3 6\n5 6'''\n\nassert solution('''1\n0''') == '''0'''\n\nassert solution('''6\n3 2 2 2 1 1''') == '''-1'''"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"0\\n0\"\nassert solution(stdin) == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(stdin) == \"0\\n-1\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 8\\n12 20') == '2\\n0 4 \\n', 'Test 1'\nassert solution('3 10\\n10 20 30') == '1\\n0 \\n', 'Test 2'\nassert solution('2 1\\n10 20\\n30 40\\n50 60\\n70 80\\n90 100') == '2\\n0 4 \\n', 'Test 3'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 8\n12 20\n''') == '2\\n0 4\\n'\n\nassert solution('''\n3 10\n10 20 30\n''') == '1\\n0\\n'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"1\\n2 4 6 8\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"9 9\") == \"0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 8\\n12 20') == '2'\nassert solution('3 10\\n10 20 30') == '1'\nassert solution('2 1\\n10') == '2'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n') == '3.729935587093555327\\n'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n') == '11.547005383792516398\\n'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n').startswith('3.729935587093555327\\n')\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n').startswith('11.547005383792516398\\n')"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.729935587093555327\\n\", \"The answer should be 3.729935587093555327\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\n\nprint('All tests passed!')"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 3.729935587093555327, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\nFirst'\n\nassert solution(r'''\n3\n5\n50\n50\n50\n50\n50\n50\n50\n50\n50\n''') == 'Second'\n\nassert solution(r'''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\n\nassert solution(r'''\n1\n3\n4\n5\n6\n7\n8\n9\n10\n''') == 'First'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"First\"\n\nfor _ in range(int(stdin)):\n    N = int(stdin.readline())\n    a_1 = list(map(int, stdin.readline().split()))\n    a_2 = list(map(int, stdin.readline().split()))\n    a_3 = list(map(int, stdin.readline().split()))\n    a_4 = list(map(int, stdin.readline().split()))\n    a_5 = list(map(int, stdin.readline().split()))\n\n    if N == 5:\n        if 5 * 10 ** 6 <= sum(a_1) + sum(a_2) + sum(a_3) + sum(a_4) + sum(a_5):\n            print(\"Second\")\n        else:\n            print(\"First\")\n    else:\n        print(\"Second\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\nSecond\nFirst\nSecond\nFirst\nFirst\nSecond\nSecond\nFirst\nFirst\nFirst\n'''"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == 'First'\nassert solution('2') == 'First'\nassert solution('3') == 'First'\nassert solution('4') == 'First'\nassert solution('5') == 'First'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\\n\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond', 'Test case 1 failed'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1') == 'First'\nassert solution(stdin='2') == 'Second'\nassert solution(stdin='3') == 'First'\nassert solution(stdin='4') == 'Second'\nassert solution(stdin='5') == 'First'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"3\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 5\") == \"0\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1\\n5 3 2\\n4 3 1 5 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 6\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 1\") == \"0\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"0\"\nassert solution(\"5 3 2\\n4 3 1 5 7\") == \"0\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"24\", \"The output should be '24', but it's actually '{}'\".format(solution())"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output: 24\\n'\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"Output: 24\\n\", \"Your implementation is incorrect.\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('3 2\\n') == '24'\n\nassert solution('1 2\\n') == '5'\nassert solution('1 4\\n') == '12'\nassert solution('3 4\\n') == '32'\nassert solution('2 4\\n') == '6'\nassert solution('5 4\\n') == '20'\n\nassert solution('1 3\\n') == '7'\nassert solution('2 3\\n') == '12'\nassert solution('3 3\\n') == '18'\nassert solution('4 3\\n') == '24'\nassert solution('5 3\\n') == '30'\nassert solution('6 3\\n') == '36'\nassert solution('7 3\\n') == '42'\nassert solution('8 3\\n') == '48'\nassert solution('9 3\\n') == '54'\nassert solution('10 3\\n') == '60'\nassert solution('11 3\\n') == '66'\nassert solution('12 3\\n') == '72'\nassert solution('13 3\\n') == '78'\nassert solution('14 3\\n') == '84'\nassert solution('15 3\\n') == '90'\nassert solution('16 3\\n') == '96'\nassert solution('17 3\\n') == '102'\nassert solution('18 3\\n') == '108'\nassert solution('19 3\\n') == '114'\nassert solution('20 3\\n') == '120'\nassert solution('21 3\\n') == '126'\nassert solution('22 3\\n') == '132'\nassert solution('23 3\\n') == '138'\nassert solution('24 3\\n') == '144'\nassert solution('25 3\\n') == '150'\nassert solution('26 3\\n') == '156'\nassert solution('27 3\\n') == '162'\nassert solution('28 3\\n') == '168'\nassert solution('29 3\\n') == '174'\nassert solution('30 3\\n') == '180'\nassert solution('31 3\\n') == '186'\nassert solution('32 3\\n') == '192'\nassert solution('33 3\\n') == '198'\nassert solution('34 3\\n') == '204'\nassert solution('35 3\\n') == '210'\nassert solution('36 3\\n') == '216'\nassert solution('37 3\\n') == '222'\nassert solution('38 3\\n') == '228'\nassert solution('39 3\\n') == '234'\nassert solution('40 3\\n') == '240'\nassert solution('41 3\\n') == '246'\nassert solution('42 3\\n') == '252'\nassert solution('43 3\\n') == '258'\nassert solution('44 3\\n') == '264'\nassert solution('45 3\\n') == '270'\nassert solution('46 3\\n') == '276'\nassert solution('47 3\\n') == '282'\nassert solution('48 3\\n') == '288'\nassert solution('49 3\\n') == '294'\nassert solution('50 3\\n') == '300'\nassert solution('51 3\\n') == '306'\nassert solution('52 3\\n') == '312'\nassert solution('53 3\\n') == '318'\nassert solution('54 3\\n') == '324'\nassert solution('55 3\\n') == '330'\nassert solution('56 3\\n') == '3"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(31, 8) == 64921457, \"Expected 64921457, got {}\".format(solution(31, 8))\nassert solution(4, 4) == 3, \"Expected 3, got {}\".format(solution(4, 4))\nassert solution(1, 2) == 6, \"Expected 6, got {}\".format(solution(1, 2))\nassert solution(1, 1) == 0, \"Expected 0, got {}\".format(solution(1, 1))\nassert solution(2, 1) == 1, \"Expected 1, got {}\".format(solution(2, 1))\nassert solution(3, 2) == 10, \"Expected 10, got {}\".format(solution(3, 2))"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\", \"Output is incorrect.\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(31) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\nassert solution(\"4 4\") == \"3\\n\"\nassert solution(\"7 3\") == \"1196\\n\"\nassert solution(\"31 8\") == \"64921457\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"The output is incorrect\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == '6'\nassert solution(4, 4) == '3'\nassert solution(7, 3) == '1196'\nassert solution(31, 8) == '64921457'\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs):\n    expected_output = expected_output[i]\n    assert solution(input) == expected_output\n\nassert solution(input) == expected_output\nfor i, input in enumerate(inputs"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"#XXX\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\\n\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\\n\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"#XXX\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"X#.X#\"\nassert solution(\"5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...#\") == \"#XXX\\n#X#.X#\\nX#..#\\n...#X#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"#..#\") == \".X#\"\nassert solution(\"..#.\") == \"X.#.\"\nassert solution(\"#...\") == \"#XXX\"\nassert solution(\"#.#.\").replace(\".\", \"#\") == \"#X#.X#.X#\"\nassert solution(\"...#\").replace(\".\", \"#\") == \"#X#.X#.X#\"\nassert solution(\"#.#.\") == \"#X#.X#.X#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"4 6 10\") == \"#X..#.\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\\n\"\nassert solution(\"5\") == \"3\\n\"\nassert solution(\"18\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Output\" #Correct solution"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 5 3\") == \"5 3 10\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"5 5 5\") == \"-1\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"2 3 1\") == \"-1\"\nassert solution(\"1 1 1\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 5 3\") == \"5 5 5 3 5 5\"\nassert solution(\"1 1 2\") == \"2 2 2 1 1 1\"\nassert solution(\"1 2 2\") == \"2 1 2 2 2 2\"\nassert solution(\"1 2 3\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 2 1\") == \"1 2 5\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"5 4 2\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 2 1\") == \"1 2 5\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"5 4 2\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"7 4 5\") == \"2 5 1 7 6 3\"\nassert solution(\"3 1 1 1\") == \"-1\"\nassert solution(\"1 2 3 4\") == \"-1\"\nassert solution(\"10 5 4\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"6 1 2 3\") == \"1 2 3 6 1\"\nassert solution(\"4 3 2\") == \"-1\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6\\n1 2 -6 4 5 3\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"60\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"22\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"22\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\", \"Test failed\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\", \"The given input is incorrect. The expected output is 5, but it is: \" + solution(\"4 3\\n3 1 4 2\\n\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\" # correct solution\nprint(\"All tests passed\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '5', \"Incorrect output\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(300, 10) == 5"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5', \"Your solution is incorrect.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5', \"Test failed\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 3\\n3 1 4 2\\n') == '5\\n'\nassert solution(stdin='4 5\\n1 2 3 4 5\\n') == '5\\n'\nassert solution(stdin='4 10\\n-2 1 -3 4 5 -6 7\\n') == '10\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n2 1 3\") == \"2 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 0\"\nassert solution() == \"0 1\"\nassert solution() == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0 0\"\nassert solution(3) == \"0 1\"\nassert solution(3) == \"2 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 1\\n3 3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1') == '0 1\\n2 1\\n'\nassert solution('3\\n3 2 1\\n3\\n3 2 1') == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"0 0\"\nassert solution(solution) == \"0 1\"\nassert solution(solution) == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 0\"\nassert solution(input()) == \"0 1\"\nassert solution(input()) == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"Output\\n0 0\\n\"\nassert solution(\"Input\\n3\\n2 3 1\\n\") == \"Output\\n0 1\\n\"\nassert solution(\"Input\\n3\\n3 2 1\\n\") == \"Output\\n2 1\\n\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\"\n\nfrom typing import List"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 4\naa\nbb\n''') == 6\n\nassert solution('''\n3 3\naba\nbba\n''') == 8\n\nassert solution('''\n4 5\nabbb\nbaaa\n''') == 8"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='Input\\n2 4\\na\\nbb\\n\\nOutput\\n6\\n\\nInput\\n3 3\\naba\\nbba\\n\\nOutput\\n8\\n\\nInput\\n4 5\\nabbb\\nbaaa\\n\\nOutput\\n8') == 'Output\\n6\\n\\nOutput\\n8\\n\\nOutput\\n8\\n'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\nbb\\n\") == \"6\"\nassert solution(\"2\\n2\\nbb\\n\") == \"6\"\nassert solution(\"3\\n2\\naba\\n\") == \"8\"\nassert solution(\"4\\n2\\nabab\\n\") == \"8\"\nassert solution(\"5\\n1\\nababa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"6\"\nassert solution(open('input.txt', 'r')) == \"8\"\nassert solution(open('input.txt', 'r')) == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\naab\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\naaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n').strip() == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n').strip() == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_string) == expected_output, f\"Solution should return '{expected_output}', but returns '{solution(input_string)}'.\" for input_string, expected_output in [\n    (\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\", \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"),\n    (\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\", \"NO\"),\n]"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"\"\"\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"2 2 1 1\"\nassert solution() == \"YES\"\nassert solution() == \"2 1 2 1 1\"\nassert solution() == \"NO\"\nassert solution() == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\n2 1 2 1 1\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5 6 15 35 77\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5 6 10 15 1000\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n6\\n7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6\\n15\\n35\\n77\\n22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6\\n10\\n15\\n1000\\n75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1 \"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1 \"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1 \"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1 \"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5 6 15 35 77\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5 6 10 15 1000\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 40, \"Expected 40, got {}\".format(solution())"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test case not passing\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution() == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"40\"\nassert solution() == \"5\"\nassert solution() == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1 1 1 1 1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output'\nprint(\"Output\")"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n1\\n1 1\\n1\\n\", \\\n    \"Please provide the correct input.\"\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\", \"Incorrect answer\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\"\nassert solution(\"4 1\\n1 2 3\") == \"3\"\nassert solution(\"5 1\\n1 3 4\") == \"4\"\nassert solution(\"6 2\\n1 2 3 4 5\") == \"1\"\nassert solution(\"7 2\\n1 2 3 4 5 6\") == \"4\"\n\nimport itertools"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\") == 6\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"3 2\\n1 1 3\\n\") == \"12\"\nassert solution(\"3 3\\n1 2 3\\n\") == \"18\"\nassert solution(\"3 4\\n1 2 3\\n\") == \"24\"\nassert solution(\"3 5\\n1 2 3\\n\") == \"30\"\nassert solution(\"3 6\\n1 2 3\\n\") == \"36\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 3 2\\n\") == \"6\\n\"\nassert solution(\"3 1\\n2 3 1\\n2 2 1\\n\") == \"6\\n\"\nassert solution(\"3 1\\n1 2 2\\n1 1 3\\n\") == \"6\\n\"\nassert solution(\"3 3\\n1 2 3\\n2 1 3\\n1 3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\\n\"\nassert solution(\"2 3\\n1 4 4\") == \"4\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 2 2\\n1 3 2\\n1 4 2\\n1 5 2\\n1 6 2\") == \"10\\n\"\nassert solution(\"5 4\\n2 4\\n1 5\\n1 6\") == \"5\\n\"\nassert solution(\"4 5\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"20\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6'\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('87654 30') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\") == 10\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\") == 10\nassert solution(\"\") == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'\nprint('10')"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"45678\\n321\") == \"-1\"\nassert solution(\"12345678901234567890\\n9876543210\") == \"10\"\nassert solution(\"9876543210\\n12345678901234567890\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\\n\"\nassert solution(\"987654\\n12345\\n\") == \"-1\\n\"\nassert solution(\"1000000000000\\n1000000000000\\n\") == \"1\\n\"\nassert solution(\"1000000000000\\n1000000000000\\n\") == \"1\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654 30\") == 10\nassert solution(\"100 87654\") == 10\nassert solution(\"\") == -1"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\\n\"\nassert solution(\"abc\") == \"First\\n\"\nassert solution(\"aaab\") == \"First\\n\"\nassert solution(\"bbca\") == \"First\\n\"\nassert solution(\"aabbc\") == \"Second\\n\"\nassert solution(\"a\") == \"First\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\", \"Test case 1 failed\"\nassert solution(\"ac\") == \"First\", \"Test case 2 failed\"\nassert solution(\"abcde\") == \"Second\", \"Test case 3 failed\"\nassert solution(\"ab\") == \"Second\", \"Test case 4 failed\"\nassert solution(\"aa\") == \"First\", \"Test case 5 failed\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"bab\") == \"First\"\nassert solution(\"aaba\") == \"First\"\nassert solution(\"aab\") == \"First\"\nassert solution(\"baba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaaa\") == \"Second\"\nassert solution(\"abcd\") == \"First\"\nassert solution(\"abcda\") == \"Second\"\nassert solution(\"defg\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"cdef\") == \"First\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aab\") == \"First\"\nassert solution(\"abac\") == \"Second\"\nassert solution(\"abad\") == \"First\"\nassert solution(\"baab\") == \"Second\"\nassert solution(\"aabb\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaab\") == \"First\"\nassert solution(\"bbcc\") == \"First\"\nassert solution(\"ccba\") == \"Second\"\nassert solution(\"cccc\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6\nassert solution() == 40\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n12345') == '6\\n', \"The correct output should be '6'.\"\nassert solution('16\\n439873893693495623498263984765') == '40\\n', \"The correct output should be '40'.\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\", \"Test case 1 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(a=10, s=\"12345\") == 6\nassert solution(a=16, s=\"439873893693495623498263984765\") == 40\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(a=10, s='12345') == 6\nassert solution(a=16, s='439873893693495623498263984765') == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n12345\") == 6\nassert solution(\"16\\n439873893693495623498263984765\") == 40\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n12345\") == \"6\", \"Expected output: 6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\", \"Expected output: 40\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119\\n332748119\\n'\n\nassert solution('''\n1 2\n1\n1\n''') == '3\\n'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '332748119'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'\nassert solution('AA\\nA\\nA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ORZ\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test 1\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Test 2\"\nassert solution(\"AA\") == \"0\", \"Test 3\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test 1 failed\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Test 2 failed\"\nassert solution(\"AA\") == \"0\", \"Test 3 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 2 1\\n50 100 1\") == \"100\"\nassert solution(\"1 2 1\\n100 100 100\") == \"99\"\nassert solution(\"50 100 1\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\", \"First sample test failed.\"\n\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\", \"Second sample test failed.\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == 99\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99\\n'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0\\n'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"99\\n\"\nassert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"Test 1 failed\"\nassert solution() == \"1\", \"Test 2 failed\"\nassert solution() == \"1\", \"Test 3 failed\"\nassert solution() == \"0\", \"Test 4 failed\"\nassert solution() == \"118606527258\", \"Test 5 failed\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"0\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 1\") == 1, \"Expected 1, got {}\".format(solution(\"1 1\\n1 1\"))\nassert solution(\"3 2\\n3 2\") == 1, \"Expected 1, got {}\".format(solution(\"3 2\\n3 2\"))\nassert solution(\"3 3\\n3 3\") == 0, \"Expected 0, got {}\".format(solution(\"3 3\\n3 3\"))\nassert solution(\"1000000000000 1048576\") == 118606527258, \"Expected 118606527258, got {}\".format(solution(\"1000000000000 1048576\"))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\", \"The first test case should be '1', not '{}'.\".format(solution(\"1 1\"))\nassert solution(\"3 2\") == \"1\", \"The second test case should be '1', not '{}'.\".format(solution(\"3 2\"))\nassert solution(\"3 3\") == \"0\", \"The third test case should be '0', not '{}'.\".format(solution(\"3 3\"))\nassert solution(\"1000000000000 1048576\") == \"118606527258\", \"The fourth test case should be '118606527258', not '{}'.\".format(solution(\"1000000000000 1048576\"))\n\nsolution = \"\"\"\nfrom collections import deque"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(3) == 1\nassert solution(3) == 0\nassert solution(1000000000000) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The function should return '{output}', but it returned '{solution(input())}'.\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(3) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"+-\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"-\") == \"No\", \"Test case 2 failed\"\nassert solution(\"++\") == \"Yes\", \"Test case 3 failed\"\nassert solution(\"+-\") == \"No\", \"Test case 4 failed\"\nassert solution(\"+-\") == \"No\", \"Test case 5 failed\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed: Input and Output do not match.\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"+\") == \"No\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"++\") == \"Yes\", \"The first testcase is incorrect\"\nassert solution(\"-\") == \"No\", \"The second testcase is incorrect\"\nassert solution(\"++\") == \"Yes\", \"The third testcase is incorrect\"\nassert solution(\"-\") == \"No\", \"The fourth testcase is incorrect\"\n\nprint(\"All testcases passed\")"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('-++-') == 'Yes', \"Example 1\"\nassert solution('-+') == 'No', \"Example 2\"\nassert solution('++') == 'Yes', \"Example 3\"\nassert solution('-') == 'No', \"Example 4\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"---\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"Yes\", \"Testcase 1 failed: Expected Yes but got {} instead\".format(solution(\"+-\"))\nassert solution(\"++\") == \"Yes\", \"Testcase 2 failed: Expected Yes but got {} instead\".format(solution(\"++\"))\nassert solution(\"-\") == \"No\", \"Testcase 3 failed: Expected No but got {} instead\".format(solution(\"-\"))\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'Output:\\n12.566370614359172464\\n\\nInput:\\n4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\\nOutput:\\n21.991148575128551812\\n\\n'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12.566370614359172464\", \"12.566370614359172464\"\nassert solution(stdin) == \"21.991148575128551812\", \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed: Solution returned {solution(input())}, expected {expected}\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2\\n') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == \"21.991148575128551812\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\\n\") == \"9 42\\n\"\nassert solution(\"6\\n\") == \"6 6\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('48') == '9 42', 'Input 48'\nassert solution('6') == '6 6', 'Input 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(48) == \"9 42\", \"Test 1 failed\"\nassert solution(6) == \"6 6\", \"Test 2 failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {input_data}\\nExpected output: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(48) == \"9 42\", \"Limak is a little polar bear. He plays by building towers from blocks. Every block is a cube with positive integer length of side. Limak has infinitely many blocks of each side length.\n\nA block with side a has volume a^3. A tower consisting of blocks with sides a_1, a_2,..., a_{k} has the total volume a_1^3 + a_2^3 +... + a_{k}^3.\n\nLimak is going to build a tower. First, he asks you to tell him a positive integer X\u00a0\u2014 the required total volume of the tower. Then, Limak adds new blocks greedily, one by one. Each time he adds the biggest block such that the total volume doesn't exceed X.\n\nLimak asks you to choose X not greater than m. Also, he wants to maximize the number of blocks in the tower at the end (however, he still behaves greedily). Secondarily, he wants to maximize X.\n\nCan you help Limak? Find the maximum number of blocks his tower can have and the maximum X \u2264 m that results this number of blocks.\n\nInput\n48\n\nOutput\n9 42\n\nInput\n6\n\nOutput\n6 6\n\nOutput\n\nThere are 9 blocks in the tower. The total volume is is 3^3 + 2^3 + 7\u00b71^3 = 27 + 8 + 7 = 42."
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(48) == '9 42'\nassert solution(6) == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n\nsolution(\"48\")"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"48\") == \"9 42\", \"Output incorrect for m = 48\"\nassert solution(\"6\") == \"6 6\", \"Output incorrect for m = 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"Yes\"\nassert solution(\"()())\") == \"No\"\nassert solution(\"(()())\") == \"Yes\"\nassert solution(\"(())(()))\") == \"Yes\"\nassert solution(\"(())()())\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n)(\\n') == 'Yes\\n'\nassert solution('3\\n(()\\n') == 'No\\n'\nassert solution('2\\n()') == 'Yes\\n'\nassert solution('10\\n)))(((((\\n') == 'No\\n'\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Yes\"\nassert solution(open(\"example1.txt\", \"r\")) == \"No\"\nassert solution(open(\"example2.txt\", \"r\")) == \"Yes\"\nassert solution(open(\"example3.txt\", \"r\")) == \"No\"\nassert solution(open(\"example4.txt\", \"r\")) == \"No\"\nassert solution(open(\"example5.txt\", \"r\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\\n\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\", \"Petya's friends made him a birthday present \u2014 a bracket sequence.\\nPetya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\\n\\nTo make everything right, Petya is going to move at most one bracket from its original place in the sequence to any other position. Reversing the bracket (e.g. turning \\\"(\\\" into \\\")\\\" or vice versa) isn't allowed.\\n\\nWe remind that bracket sequence $s$ is called correct if:   $s$ is empty;  $s$ is equal to \\\"($t$)\\\", where $t$ is correct bracket sequence;  $s$ is equal to $t_1 t_2$, i.e. concatenation of $t_1$ and $t_2$, where $t_1$ and $t_2$ are correct bracket sequences.\\n\\nFor example, \\\"(()())\\\", \\\"()\\\" are correct, while \\\")()\\\" and \\\"())\\\" are not.\\n\\nHelp Petya to fix his birthday present and understand whether he can move one bracket so that the sequence becomes correct.\\n\\n-----Input-----\\n\\nFirst of line of input contains a single number $n$ ($1 \\leq n \\leq 200\\,000$)\u00a0\u2014 length of the sequence which Petya received for his birthday.\\n\\nSecond line of the input contains bracket sequence of length $n$, containing symbols \\\")\\\" and \\\"(\".\\n\\n-----Output-----\\n\\nPrint \\\"Yes\\\" if Petya can make his sequence correct moving at most one bracket. Otherwise print \\\"No\\\".\\n\\n-----Examples-----\\nInput\\n2\\n)(\\n\\nOutput\\nYes\\n\\nInput\\n3\\n(()\\n\\nOutput\\nNo\\n\\nInput\\n2\\n()\\n\\nOutput\\nYes\\n\\nInput\\n10\\n)))\\n(((\\n\\nOutput\\nNo\\n\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"Petya's friends made him a birthday present \u2014 a bracket sequence.\\nPetya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\\n\\nTo make everything right, Petya is going to move at most one bracket from its original place in the sequence to any other position. Reversing the bracket (e.g. turning \\\"(\\\" into \\\")\\\" or vice versa) isn't allowed.\\n\\nWe remind that bracket sequence $s$ is called correct if:   $s$ is empty;  $s$ is equal to \\\"($t$)\\\", where $t$ is correct bracket sequence;  $s$ is equal to $t_1 t_2$, i.e. concatenation of $t_1$ and $t_2$, where $t_1$ and $t_2$ are correct bracket sequences.\\n\\nFor example, \\\"(()())\\\", \\\"()\\\" are correct, while \\\")()\\\" and \\\"())\\\" are not.\\n\\nHelp Petya to fix his birthday present and understand whether he can move one bracket so that the sequence becomes correct.\\n\\n-----Input-----\\n\\nFirst of line of input contains a single number $n$ ($1 \\leq n \\leq 200\\,000$)\u00a0\u2014 length of the sequence which Petya received for his birthday.\\n\\nSecond line of the input contains bracket sequence of length $n$, containing symbols \\\")\\\" and \\\"(\".\\n\\n-----Output-----\\n\\nPrint \\\"Yes\\\" if Petya can make his sequence correct moving at most one bracket. Otherwise print \\\"No\\\".\\n\\n-----Examples-----\\nInput\\n2\\n)(\\n\\nOutput\\nYes\\n\\nInput\\n3\\n(()\\n\\nOutput\\nNo\\n\\nInput\\n2\\n()\\n\\nOutput\\nYes\\n\\nInput\\n10\\n)))\\n(((\\n\\nOutput\\nNo\\n\")\nassert solution(\"2\\n()\\n\") == \"Yes\", \"Petya's friends made him a birthday present \u2014 a bracket sequence.\\nPetya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\\n\\nTo make everything right, Petya is going to"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())))(((((\") == \"No\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == 1\nassert solution(\"3 100\\n50 50 100\") == 5\nassert solution(\"2 50\\n50 50\") == -1\nassert solution(\"4 50\\n50\") == 0"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is wrong. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 50\") == \"1\\n1\"\nassert solution(\"3 100\") == \"5\\n2\"\nassert solution(\"2 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 6 8\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n2 3 4 9 12\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n5 7 2 9\n\"\"\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n2 6 8\") == \"2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"Input\\n4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == '5'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15') == '6'\nassert solution('2\\n10 16\\n7 17') == '-1'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30') == '5'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution == \"\"\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n17 18\n15 24\n12 15\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2\n10 16\n7 17\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n\"\"\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"6\"\n\nassert solution(stdin) == \"-1\"\n\nassert solution(stdin) == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3\\n'\nassert solution('bb') == '1\\n'\nassert solution('bbbb') == '0\\n'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bb\") == \"1\\n1\\n\"\nassert solution(\"bbbb\") == \"0\\n0\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE\\n'\nassert solution('3\\n1 2\\n4 3 2') == 'POSSIBLE\\n'\nassert solution('3\\n1 2\\n4 3 1') == 'IMPOSSIBLE\\n'\nassert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE\\n'\nassert solution('3\\n1 1\\n4 3 3') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'IMPOSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"POSSIBLE\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 1\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"1\\n1\") == \"POSSIBLE\"\nassert solution(\"3\\n1\\n2\") == \"POSSIBLE\"\nassert solution(\"1\\n1\\n1\") == \"POSSIBLE\"\nassert solution(\"1\\n1\\n1\\n1\") == \"POSSIBLE\"\nassert solution(\"3\\n1\\n2\\n3\\n1\") == \"POSSIBLE\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"POSSIBLE\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n5\") == \"POSSIBLE\"\nassert solution(\"2\\n1\\n3\\n3\") == \"POSSIBLE\"\nassert solution(\"2\\n1\\n2\\n1\\n2\\n3\\n2\\n1\") == \"POSSIBLE\"\nassert solution(\"2\\n2\\n1\\n3\\n1\\n2\\n1\\n1\") == \"POSSIBLE\"\nassert solution(\"2\\n1\\n2\\n1\\n2\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n5 5 5 5 5\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n4 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\"\nassert solution(\"4\\n1 1\\n5 5 5 5 5\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 2 2\") == \"IMPOSSIBLE\"\nassert solution(\"4\\n1 1\\n3 3 3 3\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 1\\n2 2') == 'POSSIBLE'\nassert solution('5\\n1 1\\n1 1') == 'IMPOSSIBLE'\nassert solution('1\\n1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 1000000007\") == \"2\\n\", \"Test 1 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\nassert solution(\"5 1000000007\") == \"1\\n\"\nassert solution(\"6 1000000007\") == \"4\\n\"\nassert solution(\"7 1000000007\") == \"2\\n\"\nassert solution(\"8 1000000007\") == \"4\\n\"\nassert solution(\"9 1000000007\") == \"4\\n\"\nassert solution(\"10 1000000007\") == \"4\\n\"\nassert solution(\"11 1000000007\") == \"2\\n\"\nassert solution(\"12 1000000007\") == \"2\\n\"\nassert solution(\"13 1000000007\") == \"4\\n\"\nassert solution(\"14 1000000007\") == \"4\\n\"\nassert solution(\"15 1000000007\") == \"4\\n\"\nassert solution(\"16 1000000007\") == \"4\\n\"\nassert solution(\"17 1000000007\") == \"4\\n\"\nassert solution(\"18 1000000007\") == \"2\\n\"\nassert solution(\"19 1000000007\") == \"2\\n\"\nassert solution(\"20 1000000007\") == \"2\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Input is invalid.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1000000007') == '2'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n7\\n\\nInput\\n4 1 5 1\\n-\\n\\nOutput\\n999999228\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3\\n+-+') == '7\\n'\nassert solution('4 1 5 1\\n-') == '999999228\\n'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"1\"\nassert solution(\"1 2 3 1\") == \"2\", \"2\"\nassert solution(\"10 2 1 7\") == \"0\", \"3\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"1\"\nassert solution(\"1 2 3 1\") == \"2\", \"2\"\nassert solution(\"10 2 1 7\") == \"0\", \"3\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\nassert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6\\n', \"The correct output for the problem is '6\\n', but the function returned '{}' instead.\".format(solution('3 2'))"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\"  # correct solution\nassert solution(\"5 4\") == \"1\"  # incorrect solution with duplicate numbers"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"10 10\") == \"462649855\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n') == '15\\n'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n5 6\\n') == '26\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n') == '47\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n') == '86\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"2\\n1 2\\n3 4\\n\") == \"2\\n\", \"Test 2 failed\"\nassert solution(\"2\\n1 2\\n2 4\\n5 6\\n\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\", \"Test 4 failed\"\nassert solution(\"2\\n1 2\\n3 2\\n4 5\\n6 7\\n\") == \"2\\n\", \"Test 5 failed\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n1 2\\n3 4\") == \"2\"\nassert solution(\"2\\n1 2\\n3 4\\n5 6\") == \"0\"\nassert solution(\"2\\n1 2\\n3 4\\n5 6\\n1 7\") == \"1\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 4 5 3\") == \"3\\n\"\nassert solution(\"10\\n1 2\\n3 4 5\\n6 7 8\\n9 10 11\") == \"1\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2', \"The provided solution is incorrect. Please submit the correct solution as input.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 101\\n100 102\\n101 103\\n102 104\\n103 105\\n104 106\\n105 107\\n106 108\\n107 109\\n108 110\\n109 111\\n110 112\\n111 113\\n112 114\\n113 115\\n114 116\\n115 117\\n116 118\\n117 119\\n118 120\\n119 121\\n120 122\\n121 123\\n122 124\\n123 125\\n124 126\\n125 127\\n126 128\\n127 129\\n128 130\\n129 131\\n130 132\\n131 133\\n132 134\\n133 135\\n134 136\\n135 137"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n0\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2\\n\"\nassert solution(11) == \"18\\n\"\nassert solution(3) == \"2\\n\"\nassert solution(11) == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example1) == \"2\", \"Example 1\"\nassert solution(example2) == \"18\", \"Example 2\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('3\\n0 2 0\\n3 0 1') == '2'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3\n0 2 0\n3 0 1\n''') == '2'\nassert solution('''1\n0 0 0\n5 0 0\n''') == '4'\nassert solution('''11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Testcase {input_no} failed: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"YES\" or solution == \"NO\", \"Incorrect solution\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('code*s') == 'YES'\nassert solution('codeforces') == 'YES'\nassert solution('vk*cup') == 'YES'\nassert solution('v') == 'NO'\nassert solution('k') == 'NO'\nassert solution('gfgf*gfgf') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed: expected output '{expected_output}', got '{solution(input())}'\"\nprint(\"YES\")"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"aba*aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"abazzzaba\") == \"NO\"\nassert solution(\"ababa\") == \"NO\"\nassert solution(\"abcaaba\") == \"NO\"\nassert solution(\"codeforces\") == \"NO\"\nassert solution(\"aba1aba\") == \"NO\"\nassert solution(\"aba?aba\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces\\n\\n6 5\\nvk*cup\\nvkcup\\n\\n1 1\\nv\\nk\\n\\n9 6\\ngfgf*gfgf\\n\\n1 1\\nv\\nk\\n') == 'YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n'\nprint(\"Test passed!\")"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.26, \"Test case 1 failed\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"0.800000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.8\", \"Expected 0.8, but got {0}\".format(solution(input()))  # Expected 0.8, but got 0.800000000000"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.260000000000\", \"Invalid output\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.800000000000\nassert solution() == 0.260000000000"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(b\"2\\n0.1 0.2\") == \"0.260000000000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'2\\n0.1 0.2') == '0.260000000000\\n'\nassert solution(r'4\\n0.1 0.2 0.3 0.8') == '0.800000000000\\n'\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000\\n'\nassert solution('2\\n0.1 0.2') == '0.260000000000\\n'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(stdin=\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"  # correct answer\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"  # correct answer"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5.0000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 10 1 2 5\n    ''') == '5.0000000000'\n\nassert solution('''\n    3 6 1 2 1\n    ''') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5.0000000000\"\nassert solution(input()) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please check your code.\"\nprint(solution(input()))\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\n\nfrom typing import List"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n''') == '0.250\\n'\n\nassert solution('''\n3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(stdin=\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.250\"\nassert solution() == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.250\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\n\nassert solution(stdin=\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.250\", \"Expected 0.250, got {}.\".format(solution(input()))"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\n\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\" for i, expected_output in enumerate(tests)\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n5 2') == '18', \"Output should be 18.\"\nassert solution('0 1\\n0 0') == '8', \"Output should be 8.\"\nassert solution('1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == '1', \"Output should be 1.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\", \"Test case 1 failed\"\nassert solution(\"0 1\\n0 0\") == \"8\", \"Test case 2 failed\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\") == 18\nassert solution(\"0 1\\n0 0\") == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Output\\n0\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\\n4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'3\\n1 2 3\\n') == 0\nassert solution(r'4\\n1 1 2 2\\n') == 2\nassert solution(r'5\\n1 4 1 4 9\\n') == 2"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"4 1 1 2 2\") == \"2\"\nassert solution(\"5 1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(4)) == \"2\"\nassert solution(str(5)) == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n3\\n1 2 3\\n\\nOutput\\n0\\n\\nInput\\n4\\n1 1 2 2\\n\\nOutput\\n2\\n\\nInput\\n5\\n1 4 1 4 9\\n\\nOutput\\n2\\n') == 'Output\\n0\\n'\nassert solution('Input\\n3\\n1 2 3\\n\\nOutput\\n0\\n\\nInput\\n4\\n1 1 2 2\\n\\nOutput\\n2\\n\\nInput\\n5\\n1 4 1 4 9\\n\\nOutput\\n2\\n') == 'Output\\n2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n\nprint(\"PASSED\")"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaabccc') == 'YES', 'The number of 'c' is equal to the number of 'a'.\nassert solution('bbacc') == 'NO', 'The number of 'c' is equal to the number of 'b'.\nassert solution('aabc') == 'YES', 'The number of 'c' is equal to the number of 'b'.\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"Test 1\"\nassert solution(\"bbacc\") == \"NO\", \"Test 2\"\nassert solution(\"aabc\") == \"YES\", \"Test 3\"\nassert solution(\"\") == \"NO\", \"Test 4\"\nassert solution(\"a\") == \"NO\", \"Test 5\"\nassert solution(\"ab\") == \"NO\", \"Test 6\"\nassert solution(\"aa\") == \"NO\", \"Test 7\"\nassert solution(\"aaa\") == \"YES\", \"Test 8\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n\nsolution = '''def solution(stdin: str) -> str:\n    S = stdin.strip().split()\n    has_a = False\n    has_b = False\n    has_c = False\n    for s in S:\n        if 'a' in s:\n            has_a = True\n        elif 'b' in s:\n            has_b = True\n        elif 'c' in s:\n            has_c = True\n    if has_a and has_b:\n        return \"YES\"\n    elif has_a and not has_b:\n        return \"NO\"\n    elif not has_a and has_b:\n        return \"YES\"\n    elif not has_a and not has_b:\n        return \"NO\"'''"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"The output is not correct. Please check the example inputs.\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\") == 2\nassert solution(\"4\\n4 1 3 2\") == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\"\nassert solution(\"3\\n3 1 1 2\") == \"1\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n4 1 2 5 3\\n4\\n4 1 3 2') == 2\nassert solution('4\\n4 1 3 2') == 2\nassert solution('1\\n1 1') == 0"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n4 1 2 5 3\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(5) == 2"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.958333333333\nassert solution(2, 2) == 1.75"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.958333333333\nassert solution(2, 2) == 1.75\n\nfrom typing import List\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n2 2\\n2 2\") == \"3.500000000000\"\nassert solution(\"6 3\\n6 1\\n2 2\\n2 2\\n2 2\") == \"4.958333333333\"\nassert solution(\"2 2\\n2 2\\n2 2\\n2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.75\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"1 2\") == \"2.0\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6, 1) == 3.5, \"Twilight Sparkle was playing Ludo with her friends Rainbow Dash, Apple Jack and Flutter Shy. But she kept losing. Having returned to the castle, Twilight Sparkle became interested in the dice that were used in the game. Twilight Sparkle is sure that when the dice is tossed, each face appears with probability $\\frac{1}{m}$. Also she knows that each toss is independent from others. Help her to calculate the expected maximum number of dots she could get after tossing the dice n times.\"\nassert solution(6, 3) == 4.958333333333, \"Twilight Sparkle was playing Ludo with her friends Rainbow Dash, Apple Jack and Flutter Shy. But she kept losing. Having returned to the castle, Twilight Sparkle became interested in the dice that were used in the game. Twilight Sparkle is sure that when the dice is tossed, each face appears with probability $\\frac{1}{m}$. Also she knows that each toss is independent from others. Help her to calculate the expected maximum number of dots she could get after tossing the dice n times.\"\nassert solution(2, 2) == 1.75, \"Twilight Sparkle was playing Ludo with her friends Rainbow Dash, Apple Jack and Flutter Shy. But she kept losing. Having returned to the castle, Twilight Sparkle became interested in the dice that were used in the game. Twilight Sparkle is sure that when the dice is tossed, each face appears with probability $\\frac{1}{m}$. Also she knows that each toss is independent from others. Help her to calculate the expected maximum number of dots she could get after tossing the dice n times.\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\", \"The output is not as expected.\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>') == '3\\n5\\n3\\n0'\nassert solution('5\\n1\\n<<<\\n2\\n>>>\\n-') == '1\\n0\\n1\\n0'\nassert solution('1\\n1\\n<<<\\n2\\n>>>\\n-') == '1\\n1\\n0\\n1'\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"The solution for the given input {input_string} is incorrect. It should be {output_string}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0\\n'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\", \"Test case 1 failed\"\nassert solution(input()) == \"3\\n5\\n3\\n0\", \"Test case 2 failed\"\nassert solution(input()) == \"3\\n5\\n3\\n0\", \"Test case 3 failed\"\nassert solution(input()) == \"3\\n5\\n3\\n0\", \"Test case 4 failed\"\nassert solution(input()) == \"3\\n5\\n3\\n0\", \"Test case 5 failed\"\n\ninput = \"\"\"4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\"\"\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed. Expected: {output}, got: {solution(input)}\"\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    belts = [[1, -1] if s[i] == '>' else [-1, 1] if s[i] == '<' else [0, 0] for i in range(n)]\n    def backtrack(belts, room):\n        if not belts or belts[0][1]!= 0:\n            return []\n        res = [room]\n        for i, b in enumerate(belts):\n            if b[1] == 1:\n                res.extend(backtrack(belts[:i] + belts[i+1:], room + i))\n        return res\n\n    def is_returnable(belts, room):\n        return room not in belts[0] and room not in belts[1]\n\n    def num_returnable_rooms(belts):\n        return sum(1 for b in belts if is_returnable(b))\n\n    num_returnable_rooms(belts)"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('snake_exhibition.txt', 'r')) == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"16\\n9 9 10 \\n202\\n101 101 101 101 \"\nassert solution(input()) == \"16\\n9 9 10 \\n202\\n101 101 101 101 \"\nassert solution(input()) == \"202\\n101 101 101 101 \"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n4 5\n4 5\n4 10\n\"\"\") == 16\nassert solution(\"\"\"\n4\n1 100\n100 1\n1 100\n100 1\n\"\"\") == 202\nassert solution(\"\"\"\n3\n1 1\n100 100\n1 1\n\"\"\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([3], ['16']),\n    ([4], ['9 9 10']),\n    ([4], ['101 101 101 101']),\n    ([3], ['-1']),\n]"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10 \"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101 \"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"16\\n9 9 10 \\n202\\n101 101 101 101 \"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2\\n', 'Testcase 1'\nassert solution('3\\n1 2 3') == '0 2\\n', 'Testcase 2'\nassert solution('5\\n1 2 3 2 2') == '0 1 3\\n', 'Testcase 3'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned unexpected output.\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction. \\n\\nFrom the window in your room, you see the sequence of n hills, where i-th of them has height a_{i}. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5, 4, 6, 2, then houses could be built on hills with heights 5 and 6 only. \\n\\nThe Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan? \\n\\nHowever, the exact value of k is not yet determined, so could you please calculate answers for all k in range $1 \\leq k \\leq \\lceil \\frac{n}{2} \\rceil$? Here $\\lceil \\frac{n}{2} \\rceil$ denotes n divided by two, rounded up.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2\\n', \"The first example is incorrect.\"\nassert solution('3\\n1 2 3') == '0 2\\n', \"The second example is incorrect.\"\nassert solution('5\\n1 2 3 2 2') == '0 1 3\\n', \"The third example is incorrect.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0 1 3\", \"The given input is incorrect.\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == '0 2 '\nassert solution(stdin='5\\n1 1 1 1 1\\n') == '1 2 2 '\nassert solution(stdin='3\\n1 2 3\\n') == '0 2 '\nassert solution(stdin='5\\n1 2 3 2 2\\n') == '0 1 3 '\n\nfor k in range(1, int(n/2)+1):\n    print(k, end=' ')\nprint()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, \"1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(3, \"1 2 3\") == \"0 2\\n\"\nassert solution(5, \"1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\"\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\nk = int(n / 2)"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101101\", \"110\") == \"110110\"\nassert solution(\"10010110\", \"100011\") == \"01100011\"\nassert solution(\"10\", \"11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Test case failed: {input_string}\" for input_string, expected_output in [\n    (\"101101\", \"110110\"),\n    (\"10010110\", \"01100011\"),\n    (\"10\", \"01\"),\n]"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '01100011'\nassert solution() == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('101101\\n110\\n') == '110110'\nassert solution('10010110\\n100011\\n') == '01100011'\nassert solution('10\\n11100\\n') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(101101) == \"110110\"\nassert solution(10010110) == \"01100011\"\nassert solution(10) == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101101\", \"110\") == \"110110\", \"Incorrect solution\"\nassert solution(\"10010110\", \"100011\") == \"01100011\", \"Incorrect solution\"\nassert solution(\"10\", \"11100\") == \"01\", \"Incorrect solution\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == -1"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test case {i} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == -1, \"Input error\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\\n1 1 1 0\\n') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 1 1 0\\n') == 0"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nGot: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2  \\n\", \"Test case 1 failed\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 2 3 1 2 3\\n\"\nassert solution() == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(stdin.readline().strip()) + '\\n') + '\\n') + '\\n') + '\\n') == [2, 2, 3, 1, 2]\nprint(solution(solution(solution(solution(stdin.readline().strip()) + '\\n') + '\\n') + '\\n'))"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 2 3 1 2  \\n\"\nassert solution() == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0\"\n\nassert solution(\"11 6\") == \"22\"\nassert solution(\"10 4\") == \"22\"\nassert solution(\"01 3\") == \"22\"\nassert solution(\"00 3\") == \"22\"\nassert solution(\"00 7\") == \"0\"\nassert solution(\"00 9\") == \"0\"\n\nassert solution(\"11 1\") == \"103\"\nassert solution(\"10 1\") == \"103\"\nassert solution(\"01 1\") == \"103\"\nassert solution(\"00 100\") == \"103\"\nassert solution(\"10 1\") == \"103\"\nassert solution(\"01 1\") == \"103\"\n\nassert solution(\"11 19\") == \"105\"\nassert solution(\"10 22\") == \"105\"\nassert solution(\"00 18\") == \"105\"\nassert solution(\"00 29\") == \"105\"\nassert solution(\"11 29\") == \"105\"\nassert solution(\"10 28\") == \"105\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\\nInput\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n22\\n\\nInput\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n103\\n\\nInput\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\\nOutput\\n105\\n\\nInput\\n3\\n00 5000\\n00 5000\\n00 5000\\n\\nOutput\\n0') == '22\\n\\n103\\n\\n105\\n\\n0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == 0\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\nYES\\n1 3 1 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(stdin=\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(stdin=\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(stdin=\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nNO\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\nNO\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\nNO\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"YES\\n1 3 1 3\\nNO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    3 4 9\n    1 3 1 2\n    2 1 3\n    4 3 6''') == '''\n    3 3 2 3\n    1 3 1 3\n    2 3 2 3\n    3 3 2 3'''\n\nassert solution('''\n    3 4 10\n    2 3 1 2\n    2 1 3\n    4 3 6''') == '''\n    1 3 1 3\n    2 3 2 3\n    3 3 2 3'''\n\nassert solution('''\n    3 4 9\n    2 3 1 2\n    2 1 3\n    4 3 6''') == '''\n    3 3 2 3\n    1 3 1 3\n    2 3 2 3\n    3 3 2 3'''\n\nassert solution('''\n    3 4 5\n    1 3 1 2\n    2 1 3\n    5 3 6''') == '''\n    NO'''"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input) == \"YES\\n2 3 2 3\\n3 3 2 3\\nNO\"\nassert solution(solution.input2) == \"YES\\n1 3 1 3\\n3 3 2 3\\nNO\"\nassert solution(solution.input3) == \"YES\\n3 3 2 3\\n3 3 2 3\\nNO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\\n\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"YES\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''1 1\n3 1\n1 5\n4 4\n'''\n\nassert solution(stdin) == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4') == '''\n1 1\n3 1\n1 5\n4 4\n'''\n\nassert solution('7') == '''\n2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4\\n\\nInput\\n7\\n\\nOutput\\n2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case + 1} failed. \\nExpected output: {expected_output}\\nGot output: {solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\") == \"3\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n''') == '-1'\n\nassert solution('''3\n1 2 3\n''') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\\n\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\\n1\\n2\\n3\"\n\nassert solution(\"1\\n1\") == \"-1\"\n\nassert solution(\"4\\n1 2 3 4\") == \"-1\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"-1\"\n\nassert solution(\"1\\n1 2 3 4 5\") == \"1\\n2\\n3\\n4\\n5\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Output:\\n7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(f'The solution is {output}')"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\"\nassert solution(\"46 2\\n2018 214\\n\") == \"7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\\n2018 214\\n3\\n92 205 1\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: expected output '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.000000000000000\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.400000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5.000000000000000'\nassert solution() == '0.400000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\\n\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\\n\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4', \"The output is incorrect. Expected '4', got '{}' instead.\".format(solution('2 3'))\nassert solution('8 2') == '5', \"The output is incorrect. Expected '5', got '{}' instead.\".format(solution('8 2'))"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3') == '4', 'Expected output: 4'\nassert solution('8 2') == '5', 'Expected output: 5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n\nassert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n\") == \"4\\n\"\nassert solution(\"8 2\\n\") == \"5\\n\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4', \"The solution should be 4, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n') == '4'\nassert solution('8 2\\n') == '5'\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n3\\n4 5 7\\n\\nOutput\\nConan\\n\\nInput\\n2\\n1 1\\n\\nOutput\\nAgasa\\n\") == \"Conan\"\nassert solution(\"Input\\n2\\n1 1\\n\\nOutput\\nAgasa\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 5 7\n''') == 'Conan'\n\nassert solution('''\n2\n1 1\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Conan'\nassert solution() == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == solution(stdin='3\\n4 5 7\\n2\\n1 1\\n') # expected output: 'Conan'\n\nassert solution(stdin=input()) == solution(stdin='2\\n1 1\\n') # expected output: 'Agasa'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n..#\\n#.#\"\n\nSolution:\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"3 3\\n#.#\\n..#\"\nassert solution(\"1 1\") == \"1 1\\n#.\"\nassert solution(\"5 5\") == \"5 5\\n#.###\\n#...#\\n...###\\n#...#\\n#.###\\n#...\"\nassert solution(\"7 7\") == \"7 7\\n#...#\\n##..#\\n..#..#\\n...###\\n..##..#\\n..#..#\\n##..#\\n#...#\\n\"\nassert solution(\"3 3\") == \"3 3\\n#.#\\n..#\"\nassert solution(\"2 3 3\") == \"3 3\\n#.#\\n..#\"\nassert solution(\"2 3 3 3\") == \"3 3\\n#.#\\n..#\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n##. \\n..# \\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3.##\\n..#.#\\n#.#.#\"\n\nassert solution(\"5 5\") == \"5 5\\n.##.#\\n#..##\\n####.\\n..###\\n....#\"\n\nassert solution(\"10 10\") == \"10 10\\n#.#....\\n#.##...\\n..#...#\\n..##..#\\n....##.\\n....###\\n...#.#\\n.###..#\\n.###.#.\\n###..##\\n###.#.#\\n...##..\\n....###\\n.....#\\n....##\"\n\nassert solution(\"10 100\") == \"10 100\\n...#.#.#\\n.###.#.#\\n###..##.#\\n##...#..#\\n#.#..##.\\n#.#.#..#\\n.###..##\\n..#.#..#\\n.###.#.#\\n###..#..#\\n.###..##\\n...#.#.#\\n###.#..#\\n.###..##\\n..#.#..#\\n###.#..#\\n#.#..##.\\n#.#....\\n##...#..#\\n..#...#\\n..##..#\\n....##.\\n....###\\n...#.#\\n.###..#\\n.###.#.\\n###..##\\n###.#.#\\n...##..\\n....###\\n.....#\\n....##\"\n\nassert solution(\"20 100\") == \"20 100\\n...#.#.#\\n.###.#.#\\n###..##.#\\n##...#..#\\n#.#..##.\\n#.#.#..#\\n.###..##\\n..#.#..#\\n.###.#.#\\n###..#..#\\n.###..##\\n...#.#.#\\n###.#..#\\n.###..##\\n..#.#..#\\n###.#..#\\n#.#..##.\\n#.#....\\n##...#..#\\n..#...#\\n..##..#\\n....##.\\n....###\\n...#.#\\n.###..#\\n.###.#.\\n###..##\\n###.#.#\\n...##..\\n....###\\n.....#\\n....##\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"\\n3 3\\n##.\\n..#\\n#.#\\n\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n\" + \"#\" + \"#\" * 3 + \"\\n\"\nassert solution(\"3 2\\n\") == \"3 3\\n\" + \"#\" + \"#\" * 3 + \"\\n\"\nassert solution(\"5 6\\n\") == \"5 6\\n\" + \"#\" + \"#\" * 5 + \"\\n\"\nassert solution(\"7 8\\n\") == \"7 8\\n\" + \"#\" + \"#\" * 7 + \"\\n\"\nassert solution(\"10 12\\n\") == \"10 12\\n\" + \"#\" + \"#\" * 10 + \"\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n#.#\\n..#\\n#.#\\n\"\nassert solution(\"1 1\") == \"#\\n#\\n\"\nassert solution(\"10 5\") == \"5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n\"\nassert solution(\"6 6\") == \"6 6\\n3 3\\n2 2\\n1 1\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"\"\"\n    3 3\n    #.\n    #.\n\"\"\"\n\nassert solution(\"3 4\") == \"\"\"\n    4 4\n    .##\n    .##\n\"\"\"\n\nassert solution(\"1 10\") == \"\"\"\n    10 10\n    ...\n    ...\n\"\"\"\n\nassert solution(\"20 20\") == \"\"\"\n    20 20\n    ....\n    ....\n\"\"\"\n\nassert solution(\"4 4\") == \"\"\"\n    4 4\n    ..\n    ..\n\"\"\"\n\nassert solution(\"2 1\") == \"\"\"\n    2 1\n    .\n    .\n\"\"\"\n\nassert solution(\"5 5\") == \"\"\"\n    5 5\n    ...\n    ...\n    ...\n    ...\n\"\"\"\n\nassert solution(\"1 100\") == \"\"\"\n    1 100\n    ....\n    ....\n    ....\n    ....\n    ....\n    ....\n\"\"\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1') == '4\\n1 3 4 5 \\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n- 1\\n+ 2\\n- 2\\n\\n+ 3\\n+ 4\\n- 4') == '1\\n3  \\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n+ 2\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n+ 2\\n+ 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1\\n\\n- 1\\n+ 2\\n- 1\\n\\n- 2\\n+ 1\\n\\n+ 1\\n- 1"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0') == 'Output\\n4\\n1 3 4 5 \\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('+ 1\\n+ 2\\n- 2\\n- 1\\n') == '4\\n1 3 4 5 '\nassert solution('+ 1\\n- 2\\n- 1\\n') == '1\\n3 4 '\nassert solution('+ 1\\n- 1\\n+ 2\\n- 2\\n') == '0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '4\\n1 3 4 5\\n\\n3\\n2 3 5\\n\\n0'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '1\\n3 2\\n\\n0'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output does not match the expected output. Please check the solution.\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1') == 4, \"Expected output: 4, Actual output: {}\".format(solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1'))\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1') == 1, \"Expected output: 1, Actual output: {}\".format(solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1'))\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1') == 0, \"Expected output: 0, Actual output: {}\".format(solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- "
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 3 4 5\", \"Example 1 failed\"\nassert solution() == \"1 3\", \"Example 2 failed\"\nassert solution() == \"0\", \"Example 3 failed\"\nassert solution() == \"3\", \"Example 4 failed\"\nassert solution() == \"2 3 5\", \"Example 5 failed\"\nassert solution() == \"0\", \"Example 6 failed\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n3 3\\n1 2 3\\n1 2 3\\n9\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\") == \"4\\n\\n1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"20\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5') == '1\\n'\nassert solution('1000 1000') == '0\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution is incorrect. Please provide the correct output.\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\ncba\\n') == 'NO'\nassert solution('3 4\\ncba\\n') == 'cbd'\nassert solution('4 4\\nabcd\\n') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'NO\\n'\nassert solution('Input') == 'NO\\n'\nassert solution('Input') == 'NO\\n'\nassert solution('Input') == 'NO\\n'\nassert solution('Input') == 'NO\\n'\nassert solution('Input') == 'NO\\n'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\ncab') == 'NO'\nassert solution('3 4\\ncab') == 'cbd'\nassert solution('4 4\\nabd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\ncaba\") == \"NO\"\nassert solution(\"3 4\\ncaba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\\n\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nassert solution(\"4 2\\n01010\") == \"quailty\"\nassert solution(\"4 2\\n01011\") == \"quailty\"\nassert solution(\"6 1\\n0101\") == \"once again\"\nassert solution(\"4 1\\n001\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == 50\nassert solution(\"1 2 10\\n11\") == 7"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\\n\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\\n\") == \"7\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\\n15 7\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Solution not available\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 4 50\n20 100\n60 10 40 80''') == '50'\n\nassert solution('''1 2 10\n11''') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 50\n20 100\n60 10 40 80\n''') == '50\\n'\n\nassert solution('''\n1 2 10\n11\n15 7\n''') == '7\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}, but got {solution(input_data)}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 1') == '1 6'\nassert solution('3 2\\n0 0') == '1 3'\nassert solution('1 10\\n5 3') == '5 5'\n\nfor n in [2, 3, 10]:\n    for k in [1, 5, 10, 15]:\n        print(f'{n} {k}')"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Incorrect output.\\nExpected: {}\\nActual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''\n2\n2 3\n3 3\n'''\n\nassert solution(stdin) == '''\n4\n0 1 2 3\n'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"-1 1 2\") == \"0\\n1 2\"\nassert solution(\"1 2 3\") == \"1\\n2 3\"\nassert solution(\"0 0 0\") == \"0\\n0 0\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"0\\n999999999 1000000000\"\nassert solution(\"-1000000000 1000000000 1000000000\") == \"0\\n1000000000 1000000000\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"0\\n1000000000 1000000000\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"0\\n1000000000 1000000000\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\nprint(\"Correct\") if test_case_number == 0 else print(\"Incorrect\")\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n-2 5 -1\"\"\") == \"2\\n2 3\\n3 3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n2 3\\n3 3\\n'"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"7\\n-2 1 4 -5 6\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3\\n3 3\\n'"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == str(3)\nassert solution(str(input())) == str(1)\nassert solution(str(input())) == str(3)"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Testcase {i+1} failed: Expected output: {output}, got: {solution(stdin)}\"\n\nprint(f\"Testcase {i+1} passed.\")"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output.\\nInput: {input()}\\nExpected output: {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Received output: {solution}\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the examples given in the problem statement.\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for the given inputs: {stdin}, expected output: {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0 25 50\\n3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \\n', \"Test 1 failed\"\nassert solution('3 50\\n25 25 50') == '3\\n0 25 50 \\n', \"Test 2 failed\"\nassert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \\n', \"Test 3 failed\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Input:\\n{stdin}\\nExpected:\\n{expected}\\nOutput:\\n{solution(stdin)}\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == 3, \"6\"\nassert solution(2) == 2, \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"10\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 180, \"The expected output is 180. However, your function is returning {}\".format(solution(3))"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21'\nassert solution('1\\n5 10\\n') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\nassert solution('9') == '9'\nassert solution('10') == '10'\nassert solution('11') == '11'\nassert solution('12') == '12'\nassert solution('13') == '13'\nassert solution('14') == '14'\nassert solution('15') == '15'\nassert solution('16') == '16'\nassert solution('17') == '17'\nassert solution('18') == '18'\nassert solution('19') == '19'\nassert solution('20') == '20'\nassert solution('21') == '21'\nassert solution('22') == '22'\nassert solution('23') == '23'\nassert solution('24') == '24'\nassert solution('25') == '25'\nassert solution('26') == '26'\nassert solution('27') == '27'\nassert solution('28') == '28'\nassert solution('29') == '29'\nassert solution('30') == '30'\nassert solution('31') == '31'\nassert solution('32') == '32'\nassert solution('33') == '33'\nassert solution('34') == '34'\nassert solution('35') == '35'\nassert solution('36') == '36'\nassert solution('37') == '37'\nassert solution('38') == '38'\nassert solution('39') == '39'\nassert solution('40') == '40'\nassert solution('41') == '41'\nassert solution('42') == '42'\nassert solution('43') == '43'\nassert solution('44') == '44'\nassert solution('45') == '45'\nassert solution('46') == '46'\nassert solution('47') == '47'\nassert solution('48') == '48'\nassert solution('49') == '49'\nassert solution('50') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == '180'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('1\\n5 10') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21\\n'\nassert solution('1\\n5 10\\n') == '50\\n'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3\\n10 1\\n20 2\\n30 3\\n\\nInput\\n3\\n3 1\\n2 2\\n4 3\\n\\nInput\\n1\\n5 10\\n\\nOutput\\n180') == '180'\nassert solution('Input\\n3\\n3 1\\n2 2\\n4 3\\n\\nInput\\n1\\n5 10\\n\\nOutput\\n21') == '21'\nassert solution('Input\\n1\\n5 10\\n\\nOutput\\n50') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n2 2\\n3 3\") == \"180\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"21\"\nassert solution(\"1 5\\n2 10\\n3 15\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"180\", \"Input 1\"\nassert solution() == \"21\", \"Input 2\"\nassert solution() == \"50\", \"Input 3\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 180\nassert solution(3) == 180\nassert solution(1) == 50"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Test failed for solution: {solution(stdin)}, Expected: {output}, Got: {solution(stdin)}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output, f\"Solution({stdin})!= Output({output})\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\"\nassert solution(5) == \"1\"\nassert solution(4) == \"4\"\nassert solution(9) == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(5) == 1\nassert solution(4) == 4\nassert solution(9) == 3"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 10\\n5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3') == '2\\n'\n\nassert solution('5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3') == '1\\n'\n\nassert solution('4\\n0 0 0 0\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3') == '4\\n'\n\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n3') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 10') == '2'\nassert solution('5\\n0 1 2 3 4') == '1'\nassert solution('4\\n0 0 0 0') == '4'\nassert solution('9\\n0 1 0 2 0 1 1 2 10') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\n\nprint(solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\"))"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nprint(\"Correct\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\", \"The correctness of the solution has not been checked.\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\nassert solution('4\\n0 0\\n1 0\\n1 1\\n0 1\\n') == '5'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 4\n\"\"\") == \"10\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"4\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(\"2\\nB 1\\nW 3\\nB 2\") == \"2\"\nassert solution(\"1\\nB 2\\nW 3\\nB 1\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nB 2\\nB 3\\n\") == \"4\\n\"\nassert solution(\"5\\nW 1\\nW 2\\nW 3\\nW 4\\nW 5\\n\") == \"6\\n\"\nassert solution(\"5\\nB 1\\nB 2\\nB 3\\nB 4\\n\") == \"6\\n\"\nassert solution(\"5\\nB 1\\nB 2\\nB 3\\nB 4\\nW 5\\n\") == \"6\\n\"\nassert solution(\"3\\nW 1\\nB 2\\nB 3\\nW 4\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nB 2\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nB 2\\nW 3\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nB 2\\nW 3\\nB 4\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == 4\nassert solution(\"5\\n3\\n5\\n\") == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\"\nfor testcase in [input(), input(), input()]:\n    solution(testcase)"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n4\"\nassert solution(input()) == \"Output\\n4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\") == \"1\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 2\\n') == '2\\n'\nassert solution('8\\n1 2 4 8 16 32 64 576\\n') == '32\\n'\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8 1 2 4 8 16 32 64 576\") == \"32\"\nassert solution(\"5 3 5 7\") == \"3\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\", \"The output does not match the expected output\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\", \"The output does not match the expected output\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"First example\"\nassert solution(input()) == \"32\\n\", \"Second example\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Output: {}, expected: {}\".format(solution(input()), \"2\")"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == 2\nassert solution('8') == 32"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2\\n'\nassert solution('50 2\\n100 25\\n') == '3\\n'\nassert solution('') == '-1\\n'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\nassert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\n\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\"\n\nassert solution(\"50 0\\n100 0\\n\") == \"-1\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('400 4\\n100 300 450 500') == '2\\n'\nassert solution('50 2\\n100 25') == '3\\n'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n400 4\n100 300 450 500\n''') == '2'\n\nassert solution('''\n50 2\n100 25\n''') == '3'\n\nassert solution('''\n50 2\n100 25\n''') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('400 4\\n100 300 450 500') == '2'\nassert solution('50 2\\n100 25') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"5 2\") == \"10\\n\", \"Test case 2 failed\"\nassert solution(\"10 3\") == \"20\\n\", \"Test case 3 failed\"\nassert solution(\"10 4\") == \"30\\n\", \"Test case 4 failed\"\nassert solution(\"5 4\") == \"60\\n\", \"Test case 5 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Output should be 6.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test case 1 failed.\"\nassert solution(\"3 1\") == \"1\\n\", \"Test case 2 failed.\"\nassert solution(\"4 5\") == \"1\\n\", \"Test case 3 failed.\"\nassert solution(\"4 6\") == \"2\\n\", \"Test case 4 failed.\"\nassert solution(\"5 4\") == \"1\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The solution is incorrect\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '6\\n', f\"Expected: '6', Actual: {solution(input())}\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\", \"Output does not match expected output.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n', \"Test case not passed.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '499122178\\n499122178\\n499122178'\nprint('All test cases passed')"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected: {output_data}, Actual: {solution(input_data)}\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\nassert solution(\"6\") == \"499122178\"\nassert solution(\"7\") == \"499122178\"\nassert solution(\"8\") == \"499122178\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\n') == '499122178\\n499122178\\n499122178\\n'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"499122178\"\nassert solution(4) == \"499122178\"\nassert solution(5) == \"499122178\"\nassert solution(6) == \"499122178\"\nassert solution(7) == \"499122178\"\nassert solution(8) == \"499122178\"\nassert solution(9) == \"499122178\"\nassert solution(10) == \"499122178\"\nassert solution(11) == \"499122178\"\nassert solution(12) == \"499122178\"\nassert solution(13) == \"499122178\"\nassert solution(14) == \"499122178\"\nassert solution(15) == \"499122178\"\nassert solution(16) == \"499122178\"\nassert solution(17) == \"499122178\"\nassert solution(18) == \"499122178\"\nassert solution(19) == \"499122178\"\nassert solution(20) == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"6\\n\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"10\\n\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"15\\n\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"20\\n\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"25\\n\") == \"499122178\\n499122178\\n499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"499122178\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"6\", \"The solution should be 6.\"\nassert solution(\"3\") == \"6669\", \"The solution should be 6669.\"\nassert solution(\"10\") == \"-1\", \"The solution should be -1.\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n\nfrom typing import List"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"6\", \"Test 1 failed\"\nassert solution(\"3\") == \"6669\", \"Test 2 failed\"\nassert solution(\"10\") == \"-1\", \"Test 3 failed\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 6\nassert solution(\"3\") == 6669\nassert solution(\"10\") == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\\n\"\n\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input') == 'Yes\\n'\nassert solution('Input') == 'No\\n'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\n\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\n\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\", \"Test case 1 failed.\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"Yes\" if \"Yes\" == output else \"No\")"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == '24500'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\\n2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n\") == 24500\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\"\"\") == 24500\n\nassert solution(\"\"\"\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n\"\"\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '24500'\nassert solution(stdin) == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 24500\nassert solution(input()) == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\\n2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n') == 24500\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n') == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 24500"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\", \"The output should be 0.828427125.\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\", \"The output should be 19.668384925.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\", \"1. Should return the area of the region which belongs to both given rectangles.\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\", \"2. Should return the area of the region which belongs to both given rectangles.\"\nassert solution(\"1 1 0\") == \"0.0\\n\", \"3. Should return the area of the region which belongs to both given rectangles.\"\nassert solution(\"1 2 45\") == \"0.0\\n\", \"4. Should return the area of the region which belongs to both given rectangles.\"\nassert solution(\"100 100 45\") == \"0.0\\n\", \"5. Should return the area of the region which belongs to both given rectangles.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3000\", \"Incorrect output\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\n\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\n\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\"\n\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3000\", \"Test case 1 failed\"\nassert solution() == \"992\", \"Test case 2 failed\"\nassert solution() == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, \"ATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(3, \"ATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(2, \"DEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n        2 3\n            ATK 2000\n            DEF 1700\n        2500\n        2500\n        2500\n        \"\"\"), 3000\n\nassert solution(\"\"\"\n        3 4\n            ATK 10\n            ATK 100\n            ATK 1000\n            1\n            11\n            101\n            1001\n        \"\"\"), 992\n\nassert solution(\"\"\"\n        2 4\n            DEF 0\n            ATK 0\n            0\n            0\n            1\n            1\n        \"\"\"), 1"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == '992'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"992\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"Input\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"Input\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6, \"Test failed\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2, \"Test failed\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62, \"Test failed\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\"\"\") == 6\n\nassert solution(\"\"\"\n2 2\n1 2\n0 0\n2 1 -100 -100\n\"\"\") == 2\n\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n\"\"\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6\\n'\nassert solution('2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2\\n'\nassert solution('5\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62\\n'\nassert solution('2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2\\n'\nassert solution('5\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62\\n'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Test failed.\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n    1 2 3 4 5 6 7 8 9\n    \"\"\") == \"6\\n\"\nassert solution(\"\"\"\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100\n    \"\"\") == \"2\\n\"\nassert solution(\"\"\"\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4\n    \"\"\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\", \"aaba is not equivalent to aabb\"\nassert solution(\"aabb\") == \"YES\", \"aabb is not equivalent to aabb\"\nassert solution(\"abaa\") == \"NO\", \"abaa is equivalent to abaa\"\nassert solution(\"abab\") == \"NO\", \"abab is not equivalent to abba\"\nassert solution(\"aaab\") == \"YES\", \"aaab is equivalent to aaaab\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == 'NO\\n'\n\nassert solution('1') == 'YES\\n1\\n2\\n'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\") == \"NO\"\nassert solution(stdin=\"1\") == \"YES\\n2\\n1\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12345\") == \"YES\\n1 3\\n2 4\\n3 5\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\" # Correct"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n\") == \"NO\\n\"\nassert solution(\"1\\n\") == \"YES\\n(1, 0)\\n(2, 1)\\n(3, 2)\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\nab\\nac\\ncd\\n1 2\") == \"Yes\\na?\"\nassert solution(\"5 3\\ntest\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\") == \"Yes\\nes?\"\nassert solution(\"4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\") == \"No\"\nassert solution(\"6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\") == \"Yes\\n.???def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes\\na?'\nassert solution('1 2 3 4') == 'No'\nassert solution('1 2 3 4 5') == 'No'\nassert solution('1 2 3 4 5 6') == 'Yes\\n.??\\ndef solution(stdin: str) -> str:pass'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"Yes\\na?\"\nassert solution(\"tezt\") == \"Yes\\n?t\"\nassert solution(\"test.est\") == \"Yes\\n?s?\"\nassert solution(\"tes.\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\\n???\"\nassert solution(\"def solution(stdin: str) -> str:\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"Yes\\na?\\n\"\nassert solution(str(input())) == \"No\\n\"\nassert solution(str(input())) == \"Yes\\n?es?\\n\"\nassert solution(str(input())) == \"No\\n\"\nassert solution(str(input())) == \"Yes\\n.???\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(str(input())) == \"No\\n\"\nassert solution(str(input())) == \"Yes\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\nab\\nac\\ncd\\n1 2\\n\") == \"Yes\\na?\"\nassert solution(\"5 3\\ntest\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\\n\") == \"Yes\\nes?\"\nassert solution(\"4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\\n\") == \"No\"\nassert solution(\"6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\\n\") == \"Yes\\n.???\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == 'Yes\\na?'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes\\n?es?'\nassert solution('''\n4 4\na\nb\nc\ndd\n1 2 3 4\n''') == 'No'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'Yes\\n.???def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\nab\\nac\\ncd\\n1 2\\n') == 'Yes\\na?'\nassert solution('5 3\\ntest\\tezt\\ttest.est\\tes.\\n1 4 5\\n') == 'Yes\\n?es?'\nassert solution('4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\\n') == 'No'\nassert solution('6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\\n') == 'Yes\\n.???def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\nca\"\nassert solution(\"cd\") == \"Yes\\ncd\"\nassert solution(\"1 2\") == \"Yes\\n1?2\"\nassert solution(\"1 4 5\") == \"Yes\\n1?4?5\"\nassert solution(\"a\") == \"No\\n\"\nassert solution(\".svn\") == \"Yes\\n.svn?\"\nassert solution(\".git\") == \"Yes\\n.git?\"\nassert solution(\"....\") == \"Yes\\n..?\"\nassert solution(\"...\") == \"Yes\\n.??\"\nassert solution(\".??\") == \"Yes\\n.??\"\nassert solution(\".??\") == \"Yes\\n.??\"\nassert solution(\".??\") == \"Yes\\n.??\"\n\nfrom typing import List\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\" or solution(input()) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abacde') == 'Yes\\na?b?c?d'\nassert solution('testtezt') == 'Yes\\ntezt'\nassert solution('a.ba9') == 'Yes\\nba9'\nassert solution('aaba') == 'No'\nassert solution('aabaa') == 'No'\nassert solution('aabaaa') == 'Yes\\naaabaaa'\nassert solution('a') == 'No'\nassert solution('def') == 'No'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\", \"Test case 1 failed.\"\nassert solution(\"1\\n1\") == \"1\\n\", \"Test case 2 failed.\"\nassert solution(\"1\\n2\") == \"2\\n\", \"Test case 3 failed.\"\nassert solution(\"1\\n3\") == \"3\\n\", \"Test case 4 failed.\"\nassert solution(\"3\\n1 2 4\") == \"4\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case not passed.\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"6\\n1 1 1 2 2 2\") == \"6\"\nassert solution(\"8\\n1 1 1 1 2 2 2 3 3\") == \"3\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '2'\n\nprint('2')"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n1 2 3\") == \"2\"\nassert solution(stdin=\"5\\n2 3 1 4 5\") == \"1\"\nassert solution(stdin=\"6\\n1 1 1 1 1\") == \"1\"\nassert solution(stdin=\"7\\n1 1 1 1 1 1\") == \"1\"\nassert solution(stdin=\"8\\n1 1 1 1 1 1 1\") == \"1\"\nassert solution(stdin=\"9\\n1 1 1 1 1 1 1 1\") == \"1\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2', 'Incorrect output.'\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Solution is incorrect.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"4\\n3 2 1 4\") == \"4\"\nassert solution(\"5\\n1 2 3 1 2\") == \"3\"\nassert solution(\"4\\n3 2 1 4 5\") == \"5\"\nassert solution(\"3\\n1 2\") == \"2\"\nassert solution(\"2\\n1 2 3\") == \"1\"\nassert solution(\"3\\n2 1 3\") == \"3\"\nassert solution(\"5\\n3 2 1 2 3\") == \"3\"\nassert solution(\"5\\n3 2 1 3 4\") == \"2\"\nassert solution(\"5\\n3 2 1 3 4 5\") == \"4\"\nassert solution(\"4\\n3 2 1 4 5 6\") == \"4\"\nassert solution(\"5\\n3 2 1 3 4 5 6\") == \"4\"\nassert solution(\"4\\n3 2 1 4 5 6 7\") == \"5\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7\") == \"5\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8\") == \"6\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8\") == \"7\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8\") == \"7\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9\") == \"7\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9\") == \"7\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10 11\") == \"8\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10 11\") == \"8\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10 11 12\") == \"9\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10 11 12\") == \"9\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10 11 12 13\") == \"10\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10 11 12 13\") == \"10\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10 11 12 13 14\") == \"11\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10 11 12 13 14\") == \"11\"\nassert solution(\"4\\n3 2 1 4 5 6 7 8 9 10 11 12 13 14 15\") == \"12\"\nassert solution(\"5\\n3 2 1 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"12\"\nassert solution(\"4\\n3 2 1"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\") == \"2\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\") == \"2\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\") == \"2\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"2\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\") == \"2\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\") == \"2\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\") == \"2\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\") == \"2\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\") == \"2\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\") == \"2\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\") == \"2\"\nassert solution(\"16\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\") == \"2\"\nassert solution(\"17\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\") == \"2\"\nassert solution(\"18\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n\") == \"4\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"5\"\nassert solution(\"7\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"3\"\nassert solution(\"8\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2\\n'\nprint('pass')"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"Input should be 4 1 2 2 3 3 4\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5\\n1 2\\n1 4\\n2 3\\n\") == \"1\"\nassert solution(\"6\\n1 2\\n1 4\\n2 3\\n1 5\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n\") == \"1\"\nassert solution(\"8\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n\") == \"2\"\nassert solution(\"9\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n\") == \"1\"\nassert solution(\"10\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"2\"\nassert solution(\"11\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n\") == \"1\"\nassert solution(\"12\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n\") == \"2\"\nassert solution(\"13\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n\") == \"1\"\nassert solution(\"14\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"15\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n\") == \"1\"\nassert solution(\"16\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n\") == \"2\"\nassert solution(\"17\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n\") == \"1\"\nassert solution(\"18\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n\") == \"2\"\nassert solution(\"19\\n1 2\\n1 4\\n2 3\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n\") == \"1\"\nassert solution(\"20\\n1 2\\n1 "
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n5\"\n\ninput() is a function from the standard library that reads input from the console and returns a string as the input. Here we use it to read the input from the console. Then we pass the input to the solution() function and assert that the output matches the expected output."
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\\n10 3 10\\n\") == \"4\\n5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\n\nfrom typing import List"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2 5') == '4\\n'\nassert solution('10 3 10') == '5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {tc_num} is incorrect. Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 1"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n2 3\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n2 3 \"\nassert solution() == \"1\\n1 \"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"your code here\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n2 3\"\nassert solution(input()) == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5') == '2'\nassert solution('4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n') == '1'\nassert solution('1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n') == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\"\n) == \"2\\n2 3\\n\"\n\nassert solution(\n    \"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\"\n) == \"1\\n1\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\\n\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\\n\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\nassert solution(\"4\\n500 250 750 500\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\", \"Solution should return 'Yes' for the given test cases.\"\nassert solution(input()) == \"No\", \"Solution should return 'No' for the given test cases.\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\nassert solution('4\\n300 200 100 50\\n') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n1 2 3 4 5\") == \"60\\n\", \"Test case 3 failed\"\nassert solution(\"2\\n-1 -100\") == \"100\\n\", \"Test case 4 failed\"\nassert solution
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n2\\n50 50 50\\n\\nOutput\\n150\\n\\nInput\\n2\\n-1 -100 -1\\n\\nOutput\\n100') == '150\\n100\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\\n\"\nassert solution(\"2\\n-1\\n-1\\n-1\") == \"100\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"af e\\ndc d\\ncc f\\nbc b\\nda b\\nee a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\na ab\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\na b\\nc c\\nc a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\na f\\ncc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 4, \"Expected 4, but got {}.\".format(solution(open(\"input.txt\", \"r\").read()))\nassert solution(open(\"input_2.txt\", \"r\").read()) == 1, \"Expected 1, but got {}.\".format(solution(open(\"input_2.txt\", \"r\").read()))\nassert solution(open(\"input_3.txt\", \"r\").read()) == 0, \"Expected 0, but got {}.\".format(solution(open(\"input_3.txt\", \"r\").read()))"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 5\nab a\ncc c\nca a\nee c\nff d''') == 4\n\nassert solution('''2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c''') == 1\n\nassert solution('''6 2\nbb a\nba a''') == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 5) == 4\nassert solution(2, 8) == 1\nassert solution(6, 2) == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ab a\") == \"4\\n\"\nassert solution(\"ca a\") == \"2\\n\"\nassert solution(\"eb a\") == \"1\\n\"\nassert solution(\"aa a\") == \"0\\n\"\nassert solution(\"dd a\") == \"0\\n\"\nassert solution(\"ab c\") == \"0\\n\"\nassert solution(\"bb c\") == \"0\\n\"\nassert solution(\"cc a\") == \"4\\n\"\nassert solution(\"cc b\") == \"4\\n\"\nassert solution(\"cc d\") == \"4\\n\"\nassert solution(\"cc e\") == \"4\\n\"\nassert solution(\"dd a\") == \"4\\n\"\nassert solution(\"dd b\") == \"4\\n\"\nassert solution(\"ee a\") == \"4\\n\"\nassert solution(\"ee b\") == \"4\\n\"\nassert solution(\"ff a\") == \"4\\n\"\nassert solution(\"ff b\") == \"4\\n\"\nassert solution(\"ff c\") == \"4\\n\"\nassert solution(\"ff d\") == \"4\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\ne c\\nd d\\n\") == 4\nassert solution(\"2 8\\na f\\nc d\\nc f\\nb c\\nd b\\na b\\nb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nimport math"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '10\\n'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n\nimport math"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\nassert solution('5 5') == '1.000000000000'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\", \"Test 1\"\nassert solution(\"1 3\") == \"-1\", \"Test 2\"\nassert solution(\"4 1\") == \"1.250000000000\", \"Test 3\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1.000000000000\\n', \"Incorrect output for sample 1\"\nassert solution('1 3') == '-1\\n', \"Incorrect output for sample 3\"\nassert solution('4 1') == '1.250000000000\\n', \"Incorrect output for sample 4\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.000000000000\", \"Input is incorrect.\"\nprint(\"1.000000000000\")"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n1.250000000000\\n\"\nassert solution(\"1 3\\n4 1\\n1 3\\n4 1\\n\") == \"-1\\n1.250000000000\\n\"\nassert solution(\"4 1\\n1 3\\n4 1\\n1 3\\n4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n1 3\\n4 1\\n') == '1.000000000000\\n'\nassert solution('1 3\\n') == '-1\\n'\nassert solution('4 1\\n') == '1.250000000000\\n'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n12\n11 8\n7 5''') == '''10.0000000000'''\nassert solution('''3\n1\n1 4 1\n2 5 3''') == '''-1'''\nassert solution('''6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3''') == '''85.4800000000'''"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed: Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10.0000000000\\n'\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test failed: {solution(input)}!= {expected}\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected, f\"Expected: {expected}, got: {solution()}\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10.0000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10.0000000000\\n\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 0\nassert solution(10) == 4"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"10\\n\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"0\\n\"\nassert solution(\"10\\n10\\n10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('2\\n') == '0\\n'\n\nassert solution('10\\n') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == 0\nassert solution('10') == 4"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\\n0\", \"The expected output is not obtained. Please check the code.\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Wh.', 'The output does not match.'\n\nassert solution(input()) == 'abdef', 'The output does not match.'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Wh.', 'Test failed'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Areyoubusy\\n\", \"Incorrect Output\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Wh.', 'Test 1'\nassert solution('1 2') == 'Wh.', 'Test 2'\nassert solution('1 111111111111') == 'Wh.', 'Test 3'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Wh.\\n\"\nassert solution(input()) == \"abdef\\n\"\nassert solution(input()) == \"Areyoubusy\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"Input\\n5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"Input\\n10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\nadef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Wh.\\n\"\nassert solution(\"1 2\") == \"Wh.\\nWh.\\n\"\nassert solution(\"1 111111111111\") == \"Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible', \"Solution does not match the expected output\"\nassert solution('? -? = 1') == 'Impossible', \"Solution does not match the expected output\"\nassert solution('? = 1000000') == 'Possible', \"Solution does not match the expected output\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"? +? =?\") == \"Impossible\"\nassert solution(\"? +? =?\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -?"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Possible\"\nassert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\n\nassert solution('? -? = 1') == 'Impossible'\n\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\" + \"\\n\" + \"9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\" + \"\\n\" + \"1000000 = 1000000\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test case 3 failed\"\n\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test case 4 failed\"\n\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 0\\n1\\n0\\n0\\n0\") == \"7 4 5\"\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n0\") == \"7 4 5\"\nassert solution(\"6\\n1 2 0 2\\n0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"2\\n1 2 0 2\\n0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"3\\n1 2 0 2\\n0\\n0\\n0\\n0\") == \"0\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"The solution is incorrect.\"\nassert solution(\"5\\n1 2 0 1\\n0\\n0\\n0\\n\") == \"0 0 0\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'\nassert solution('2\\n1 2\\n0') == '0 0'\nassert solution('1\\n1\\n0') == '1'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na0\\na"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7 4 5\", \"Test case failed\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nab\") == \"No\"\nassert solution(\"3\\njji\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\naabddc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Output: {output()}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n7 4\\n\") == \"1728\"\nassert solution(\"5 1\\n5 2\\n\") == \"12\"\nassert solution(\"5 2\\n2 3\\n\") == \"28\"\nassert solution(\"5 2\\n2 1\\n\") == \"28\"\nassert solution(\"5 2\\n5 3\\n\") == \"17\"\nassert solution(\"5 2\\n5 1\\n\") == \"17\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n\") == \"54\\n\"\nassert solution(\"7 4\\n\") == \"1728\\n\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"54\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n7 4\\n\") == \"54\"\nassert solution(\"1000 1000000000\\n\") == \"1000000000\"\nassert solution(\"3 4\\n2 5\\n\") == \"0\"\nassert solution(\"6 2\\n1 6\\n\") == \"2\"\nassert solution(\"1 1\\n2 2\\n\") == \"2\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}\\nOutput: {}\\nExpected output: {}\".format(input(), solution(input()), output())"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 4\", \"Test 1 failed\"\nassert solution() == \"2 1\", \"Test 2 failed\"\nassert solution() == \"1 2\", \"Test 3 failed\"\nassert solution() == \"1 1\", \"Test 4 failed\"\nassert solution() == \"3 2\", \"Test 5 failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\", \"Test 1 failed\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\"\nassert solution(\"5 7\\n1 2\\n\") == \"5\"\nassert solution(\"1 2\\n1 2\\n1 2\\n\") == \"3\"\nassert solution(\"3 4\\n4 1\\n5 3\\n\") == \"6\"\nassert solution(\"5 7\\n5 8\\n\") == \"0\"\nassert solution(\"1 2\\n1 2\\n1 2\\n\") == \"0\"\nassert solution(\"1 2\\n1 2\\n1 2\\n\") == \"0\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6 \\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '''\n10 9 10 10 9\n'''\n\nassert solution('''\n2 3\n1 2\n1 2\n1 2\n''') == '''\n5 6\n'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\\n\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\"\n\nfrom collections import deque"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please provide the correct input and output.\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n2 1 1\\n1 -1 1\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 0\") == \"0\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data}!= {expected_output}\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"The minimum number of steps you have to perform to get to the block containing the university is 2.\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'\nassert solution('1 2\\n1 2\\n') == 'Nicky'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, \"1 2 3\") == 3\nassert solution(3, \"2 2 2\") == 1\nassert solution(2, \"2 1\") == -1\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, \"1 2 3\\n\") == \"3\"\nassert solution(3, \"2 2 2\\n\") == \"1\"\nassert solution(2, \"2 1\\n\") == \"-1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(2) == 1\nassert solution(2) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"1\"\nassert solution(2) == \"1\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 3) == 3\nassert solution(2, 2, 2) == 1\nassert solution(2, 2, 1) == 1\nassert solution(-1) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, [1, 2, 3]) == 3\nassert solution(3, [2, 2, 2]) == 1\nassert solution(2, [2, 1]) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"3\"\nassert solution(str(input())) == \"1 2 3\"\nassert solution(str(input())) == \"1 2 3\"\nassert solution(str(input())) == \"1 2 3\"\nassert solution(str(input())) == \"-1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1, 2, 3, 1, 2, 3) == \"3\\n1 2 3\\n1 2 3\"\nassert solution(3, 2, 2, 2) == \"1\\n1 1 1\\n2\"\nassert solution(2, 2, 1) == \"-1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(3) == 1\nassert solution(3) == 2"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case_number} failed: got '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"6\", \"Test 1 failed\"\nassert solution(\"01\") == \"2\", \"Test 2 failed\"\nassert solution(\"1\") == \"1\", \"Test 3 failed\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\"\nassert solution(\"2\\n5 7\\n\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"5\\n1 0 2 3 0\\n0 3 2 1 4\\n\") == \"NO\"\nassert solution(\"6\\n1 0 2 3 4 0\\n0 3 2 1 4 5\\n\") == \"NO\"\nassert solution(\"7\\n1 0 2 3 4 5 0\\n0 3 2 1 4 5 6\\n\") == \"NO\"\nassert solution(\"8\\n1 0 2 3 4 5 6 0\\n0 3 2 1 4 5 6 7\\n\") == \"NO\"\nassert solution(\"9\\n1 0 2 3 4 5 6 7 0\\n0 3 2 1 4 5 6 7 8\\n\") == \"NO\"\nassert solution(\"10\\n1 0 2 3 4 5 6 7 8 0\\n0 3 2 1 4 5 6 7 8 9\\n\") == \"NO\"\nassert solution(\"11\\n1 0 2 3 4 5 6 7 8 9 0\\n0 3 2 1 4 5 6 7 8 9 10\\n\") == \"NO\"\nassert solution(\"12\\n1 0 2 3 4 5 6 7 8 9 10 0\\n0 3 2 1 4 5 6 7 8 9 10 11\\n\") == \"NO\"\nassert solution(\"13\\n1 0 2 3 4 5 6 7 8 9 10 11 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12\\n\") == \"NO\"\nassert solution(\"14\\n1 0 2 3 4 5 6 7 8 9 10 11 12 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12 13\\n\") == \"NO\"\nassert solution(\"15\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"NO\"\nassert solution(\"16\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13 14 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"NO\"\nassert solution(\"17\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"NO\"\nassert solution(\"18\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 0\\n0 3 2 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"NO\"\nassert solution(\"19\\n1 0 2 3 4 5 6 7 8 9 10 11 12"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == 'YES', \"Test case 1 failed\"\nassert solution(sample_input2) == 'YES', \"Test case 2 failed\"\nassert solution(sample_input3) == 'NO', \"Test case 3 failed\"\n\nsample_input1 = \"\"\"\n3\n1 0 2\n2 0 1\n\"\"\"\n\nsample_input2 = \"\"\"\n2\n1 0\n0 1\n\"\"\"\n\nsample_input3 = \"\"\"\n4\n1 2 3 0\n0 3 2 1\n\"\"\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'NO\\n'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"Input\\n2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n').strip() == 'YES'\nassert solution('2\\n1 0\\n0 1\\n').strip() == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n').strip() == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9000\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9000\"\nassert solution(input()) == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The output is incorrect. Expected: {}, but got: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == 9000, 'Failed'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10') == 1160, 'Failed'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9000\"\nassert solution(input()) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9000\", \"Expected output: 9000, but got: \" + solution(stdin)"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\", \"Incorrect output\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\", \"Expected output: 6\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"1\\n\"\n\nfor i in range(2, 3):\n    assert solution(stdin) == str(i).strip() + \"\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\" # Example 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == 6\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == 5\nassert solution(\"4\\n2 4 6 8\") == -1\nassert solution(\"3\\n2 6 9\") == 4"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == 5\nassert solution(\"4\\n2 4 6 8\\n\") == -1\nassert solution(\"3\\n2 6 9\\n\") == 4\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"4\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"5\\n2 2 2 2 2\\n\") == \"5\\n\"\nassert solution(\"5\\n2 2 2 2 2\\n\") == \"5\\n\"\nassert solution(\"5\\n2 2 2 2 2\\n\") == \"5\\n\"\nassert solution(\"5\\n2 2 2 2 2\\n\") == \"5\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected: '{expected}', Received: '{solution(input())}'\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 2 3 4 6\n''') == '5'\nassert solution('''\n4\n2 4 6 8\n''') == '-1'\nassert solution('''\n3\n2 6 9\n''') == '4'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == '5\\n'\nassert solution('4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4') == 'Output\\n5\\n\\n'\nassert solution('Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4') == 'Output\\n5\\n\\n'\nassert solution('Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4') == 'Output\\n5\\n\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input_, output in [\n    (5, 5),\n    (4, -1),\n    (3, 4),\n]"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Expected {expected_output}, got {solution(input_str)}\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == [\"aca\", \"ba\", \"ca\"]\nassert solution(\"abaca\") == [\"aca\"]\nassert solution(\"\") == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == [\"aca\", \"ba\", \"ca\"]\nassert solution(\"abaca\") == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"aca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3\\nOutput\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"Output\\n2\\n-1\\n\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == \"2\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 5\n    11..2\n    #..22\n    #.323\n    .#333\n    ''') == '2\\n'\n\nassert solution('''\n    1 5\n    1#2#3\n    ''') == '-1\\n'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\") == \"2\\nInput\\n1 5\\n1#2#3\\nOutput\\n-1\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n))((())(\") == 6\nassert solution(\"3\\n(()\") == -1\n\nprint(solution(\"8\\n))((())(\"))\nprint(solution(\"3\\n(()\"))"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n()))((())(') == 6\nassert solution('3\\n(()') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"()()\"\nassert solution(8) == \"()()()()\"\nassert solution(1) == \"-\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\n\nsolution(\"8)\")"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6', \"Incorrect solution\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n((())()\\n\") == 6\nassert solution(\"3\\n(()\\n\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {case_num} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1' # should print 1\nassert solution() == '3 1' # should print 3 1\nassert solution() == '4' # should print 4\nassert solution() == '1 2 3 4' # should print 1 2 3 4"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=r\"\"\"\n    3 3 5\n    4 4 0\n    1 3\n    3 2\n    3 1\n    4 5 4\n    2 1 0 3\n    4 3\n    3 2\n    1 2\n    1 4\n    1 3\n    \"\"\") == \"1\\n3 4 5 6\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 2\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"\n1\n3 \nInput\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nOutput\n4\n1 2 3 4\n\"\"\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n3 3\\n1 2\\n3 1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\"\"\"\n) == \"1\\n3 3\\n\"\n\nassert solution(\n\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\"\n) == \"4\\n1 2 3 4\\n\"\n\nassert solution(\n\"\"\"\n1 2 3 4\n0 1 2 3\n0 0 0 0\n1 1 1 1\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 "
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"8\\n\" # pass\nassert solution(\"3 2\\n\") == \"8\\n\" # pass\nassert solution(\"5 5\\n\") == \"4\\n\" # pass"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(12, 13) == \"8\"\nassert solution(5, 6) == \"3\"\nassert solution(7, 8) == \"6\"\nassert solution(2, 2) == \"0\"\nassert solution(1, 1) == \"1\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"7 3\") == \"0\"\nassert solution(\"8 2\") == \"1\"\nassert solution(\"9 3\") == \"0\"\nassert solution(\"10 3\") == \"1\"\nassert solution(\"11 3\") == \"1\"\nassert solution(\"12 3\") == \"0\"\nassert solution(\"13 3\") == \"1\"\nassert solution(\"14 3\") == \"1\"\nassert solution(\"15 3\") == \"0\"\nassert solution(\"16 3\") == \"1\"\nassert solution(\"17 3\") == \"1\"\nassert solution(\"18 3\") == \"0\"\nassert solution(\"19 3\") == \"1\"\nassert solution(\"20 3\") == \"1\"\nassert solution(\"21 3\") == \"0\"\nassert solution(\"22 3\") == \"1\"\nassert solution(\"23 3\") == \"1\"\nassert solution(\"24 3\") == \"0\"\nassert solution(\"25 3\") == \"1\"\nassert solution(\"26 3\") == \"1\"\nassert solution(\"27 3\") == \"0\"\nassert solution(\"28 3\") == \"1\"\nassert solution(\"29 3\") == \"1\"\nassert solution(\"30 3\") == \"0\"\nassert solution(\"31 3\") == \"1\"\nassert solution(\"32 3\") == \"1\"\nassert solution(\"33 3\") == \"0\"\nassert solution(\"34 3\") == \"1\"\nassert solution(\"35 3\") == \"1\"\nassert solution(\"36 3\") == \"0\"\nassert solution(\"37 3\") == \"1\"\nassert solution(\"38 3\") == \"1\"\nassert solution(\"39 3\") == \"0\"\nassert solution(\"40 3\") == \"1\"\nassert solution(\"41 3\") == \"1\"\nassert solution(\"42 3\") == \"0\"\nassert solution(\"43 3\") == \"1\"\nassert solution(\"44 3\") == \"1\"\nassert solution(\"45 3\") == \"0\"\nassert solution(\"46 3\") == \"1\"\nassert solution(\"47 3\") == \"1\"\nassert solution(\"48 3\") == \"0\"\nassert solution(\"49 3\") == \"1\"\nassert solution(\"50 3\") == \"1\"\nassert solution(\"51 3\") == \"0\"\nassert solution(\"52 3\") == \"1\"\nassert solution(\"53 3\") == \"1\"\nassert solution(\"54 3\") == \"0\"\nassert solution(\"55 3\") == \"1\"\nassert solution(\"56 3\") == \"1\"\nassert solution(\"57 3\") == \"0\"\nassert solution(\"58 3\") == \"1\"\nassert solution(\"59 3\") == \"1\"\nassert solution(\"60 3\") == \"0\"\nassert solution(\"61 3\") == \"1\"\nassert solution(\"62 3\") == \"1\"\nassert solution(\"63 3\") == \"0\"\nassert solution(\"64 3\") == \"1\"\nassert solution(\"65 3\") == \"1\"\nassert solution(\"66 3\") == \"0\"\nassert solution(\"67 3\") == \"1\"\nassert solution(\"68 3\") == \"1\"\nassert solution(\"69 3\") == \"0\"\nassert solution(\"70 3\") == \"1\"\nassert solution(\"71 3\") == \"1\"\nassert solution(\"72 3\") == \"0\"\nassert solution(\"73 3\") == \"1\"\nassert solution(\"74 3\") == \"1\"\nassert solution(\"75 3\") == \"0\"\nassert solution(\"76 3\") == \"1\"\nassert solution(\"77 3\") == \"1\"\nassert solution(\"78 3\") == \"0\"\nassert solution(\"79 3\") =="
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\\n\"  # Empty input\nassert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"  # Correctly constructed beautiful array with two pairs\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"  # Correctly constructed beautiful array with three pairs\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"  # Correctly constructed beautiful array with two pairs, but with a couple of elements that are not beautiful"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Write 5 lines of code to test the correctness of solution:Let's call an array consisting of n integer numbers a_1, a_2,..., a_{n}, beautiful if it has the following property:\n\n  consider all pairs of numbers x, y (x \u2260 y), such that number x occurs in the array a and number y occurs in the array a;  for each pair x, y must exist some position j (1 \u2264 j < n), such that at least one of the two conditions are met, either a_{j} = x, a_{j} + 1 = y, or a_{j} = y, a_{j} + 1 = x. \n\nSereja wants to build a beautiful array a, consisting of n integers. But not everything is so easy, Sereja's friend Dima has m coupons, each containing two integers q_{i}, w_{i}. Coupon i costs w_{i} and allows you to use as many numbers q_{i} as you want when constructing the array a. Values q_{i} are distinct. Sereja has no coupons, so Dima and Sereja have made the following deal. Dima builds some beautiful array a of n elements. After that he takes w_{i} rubles from Sereja for each q_{i}, which occurs in the array a. Sereja believed his friend and agreed to the contract, and now he is wondering, what is the maximum amount of money he can pay.\n\nHelp Sereja, find the maximum amount of money he can pay to Dima."
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '4\\n'\nassert solution() == '100\\n'\nassert solution() == '100\\n'\nassert solution() == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The given input is incorrect.\"\nassert solution(\"usaco\") == \"1\", \"The given input is incorrect.\"\nassert solution(\"lol\") == \"2\", \"The given input is incorrect.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == 6, \"The solution is not correct\"\nassert solution(\"usaco\") == 1, \"The solution is not correct\"\nassert solution(\"lol\") == 2, \"The solution is not correct\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The number of occurrences of the secret message is incorrect.\"\nassert solution(\"usaco\") == \"1\", \"The number of occurrences of the secret message is incorrect.\"\nassert solution(\"lol\") == \"2\", \"The number of occurrences of the secret message is incorrect.\"\n\nclass Solution:\n    def findSecretMessage(self, s: str) -> int:\n        s = list(s)\n        count = 0\n        for i in range(len(s)):\n            for j in range(i+1, len(s)):\n                if s[i] == s[j]:\n                    count += 1\n        return count\n\nsol = Solution()\nprint(sol.findSecretMessage(\"aaabb\")) # Output: 6\nprint(sol.findSecretMessage(\"usaco\")) # Output: 1\nprint(sol.findSecretMessage(\"lol\")) # Output: 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Error: Incorrect solution\"\nassert solution(\"usaco\") == \"1\", \"Error: Incorrect solution\"\nassert solution(\"lol\") == \"2\", \"Error: Incorrect solution\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The solution should return the number of occurrences of the secret message.\"\nassert solution(\"usaco\") == \"1\", \"The solution should return the number of occurrences of the secret message.\"\nassert solution(\"lol\") == \"2\", \"The solution should return the number of occurrences of the secret message.\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case failed: solution(input()) == output(), expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [1, 2], \"Expected 1 2, got {}\".format(solution())"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == \"-1\"\nassert solution(\"1\\n1 1\") == \"1 1\"\nassert solution(\"1\\n2 1\\n2 2\") == \"1 1\"\nassert solution(\"1\\n2 1\\n2 2\\n3 3\\n3 3\\n3 3\") == \"1 1\"\nassert solution(\"1\\n2 1\\n2 2\\n3 3\\n3 3\\n3 3\\n4 4\\n4 4\\n4 4\") == \"-1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"3\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\nassert solution(\n    \"\"\"4\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\nassert solution(\n    \"\"\"5\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\n\nassert solution(\n    \"\"\"3\n1 2\n2 1\n3 2\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 2\n2 1\n3 2\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 2\n2 1\n3 2\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 1\n2 1\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 1\n2 1\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 1\n2 1\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 5\n2 6\n3 5\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\n\nassert solution(\n    \"\"\"4\n1 5\n2 6\n3 5\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\n\nassert solution(\n    \"\"\"5\n1 5\n2 6\n3 5\"\"\"\n) == \"\"\"1 2\n2 1\n1 2\"\"\"\n\nassert solution(\n    \"\"\"3\n1 2\n2 3\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 2\n2 3\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 2\n2 3\n3 1\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 1\n2 2\n3 3\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 1\n2 2\n3 3\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 1\n2 2\n3 3\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 2\n2 3\n3 4\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 2\n2 3\n3 4\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 2\n2 3\n3 4\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 3\n2 4\n3 5\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 3\n2 4\n3 5\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 3\n2 4\n3 5\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"4\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"5\n1 4\n2 5\n3 6\"\"\"\n) == \"\"\"1 1\n2 1\n1 1\"\"\"\n\nassert solution(\n    \"\"\"3\n1 5\n2 6\n3 7\"\"\"\n) == \"\"\"1 1\n2 "
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"-1\"\nassert solution(\"1 1\\n2 1\\n3 1\\n\") == \"-1\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"1 1\"\nassert solution(\"1 2\\n2 2\\n3 1\\n\") == \"1 1\"\nassert solution(\"1 1\\n2 1\\n3 2\\n\") == \"1 1\"\nassert solution(\"1 1\\n2 1\\n3 2\\n4 1\\n\") == \"2 1\"\nassert solution(\"1 1\\n2 1\\n3 2\\n4 2\\n\") == \"2 1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [1, 1]\nassert solution(3) == [1, 1, 1]\nassert solution(8) == [4, 3, 2, 1, 1, 1, 1, 1, 1, 1]"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\"\n\nfor input in [1, 2, 3, 8]:\n    assert solution(str(input)) == str(input)"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\", \"Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1. Please print the values of the slimes in the row from left to right.\"\nassert solution(\"2\") == \"2\", \"Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1. Please print the values of the slimes in the row from left to right.\"\nassert solution(\"3\") == \"2 1\", \"Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1. Please print the values of the slimes in the row from left to right.\"\nassert solution(\"8\") == \"4\", \"Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1. Please print the values of the slimes in the row from left to right.\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '2 1\\n2 1\\n2 1'\nassert solution(8) == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0rTrT022') == '02TrrT20', '0rTrT022'\nassert solution('aA') == 'a A', 'aA'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, \"aabaac\") == 2\nassert solution(8, \"0rTrT022\") == 1\nassert solution(2, \"aA\") == 2"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\naabaac') == '2\\naba aca\\n'\nassert solution('8\\n0rTrT022') == '1\\n02TrrT20\\n'\nassert solution('2\\naA') == '2\\na A\\n'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabaac\") == \"aba aca\\n\"\nassert solution(\"0rTrT022\") == \"02TrrT20\\n\"\nassert solution(\"aA\") == \"a A\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, \"aabaac\") == 2\nassert solution(8, \"0rTrT022\") == 1\nassert solution(2, \"aA\") == 2"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {stdin}!= {expected_output}\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0rTrT022') == '102TrrT20', 'Input 0rTrT022 does not produce the expected result'\nassert solution('aA') == 'a A', 'Input aA does not produce the expected result'\nassert solution('aabaac') == '2aba aca', 'Input aabaac does not produce the expected result'\nassert solution('6') == '2', 'Input 6 does not produce the expected result'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == ['aba aca', '02TrrT20']\nassert solution(stdin) == ['a A', 'def']"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\naA\") == \"2\\nA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabaac\") == [\"aba\", \"aca\"]\nassert solution(\"0rTrT022\") == [\"02TrrT20\"]\nassert solution(\"aA\") == [\"a A\", \"A A\", \"A A\"]"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\\n\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\\n\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\\n\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Got {solution(input())}, expected {output()}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a**d\\n2\\nabcd\\nacbd\\n\") == \"2\", \"Your code is not correct\"\nassert solution(\"lo*er\\n2\\nlover\\nloser\\n\") == \"0\", \"Your code is not correct\"\nassert solution(\"a*a\\n2\\naaa\\aba\\n\") == \"1\", \"Your code is not correct\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"2\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n    4\n     a**d\n    2\n     abcd\n     acbd\n     \"\"\") == \"2\"\n\nassert solution(r\"\"\"\n    5\n     lo*er\n    2\n     lover\n     loser\n     \"\"\") == \"0\"\n\nassert solution(r\"\"\"\n    3\n     a*a\n    2\n     aaa\n     aba\n     \"\"\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n\\n6 1 2\\n3 8 0 1 0 0\\n\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"  # Solution 1\n\nassert solution(stdin) == \"2\\n\"  # Solution 2\n\nassert solution(stdin) == \"2\\n\"  # Solution 3"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\", \"The solution is incorrect\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"40\", \"The output should be 40\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\", \"Test failed\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected, f\"Test {test_case} failed: {expected}!= {solution(stdin)}\"\n\ntest_cases = [\n    ([1, 1], 40),\n    ([1, 42], 1),\n    ([6, 4], 172),\n]\n\nexpected = \"Palindromic tree is better than splay tree\"\nfor test_case, expected in test_cases:\n    assert expected == solution(str(test_case)), f\"Test {test_case} failed: {expected}!= {solution(str(test_case))}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1 1\\n') == '40\\n'\nassert solution(stdin='1 42\\n') == '1\\n'\nassert solution(stdin='6 4\\n') == '172\\n'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '172'\nassert solution(stdin) == '40'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\" # expected output: 1"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1) == 40, \"Expected 40, got {}\".format(solution(1, 1))\nassert solution(1, 42) == 1, \"Expected 1, got {}\".format(solution(1, 42))\nassert solution(6, 4) == 172, \"Expected 172, got {}\".format(solution(6, 4))"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"6\"\nassert solution(\"4\\n3 1 4 1\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Expected {solution_output}, got {solution(solution_input)}\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"6\"\nassert solution(\"4\\n3 1 4 1\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 1 4\") == 5\nassert solution(\"4\\n3 1 4 4\") == 6\nassert solution(\"4\\n3 1 4 1\") == 6\nassert solution(\"5\\n3 1 4 1 5\") == 11\nassert solution(\"\") == 0\nassert solution(\"3\\n2 1 4\\n5\\n3 1 4 1 5\") == 11\nassert solution(\"3\\n2 1 4\\n3 1 4 4\\n3 1 4 1\\n5\\n3 1 4 1 5\") == 11\nassert solution(\"5\\n3 1 4 1 5\\n2 1 4\\n3 1 4 4\\n3 1 4 1\\n3 1 4 1 5\") == 11\nprint(\"All test cases passed\")"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"5\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 126\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be 1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n0\\n-1\") == \"1\"\nassert solution(\"2\\n1\\n-1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 0 -1\\n\") == 1\nassert solution(\"2\\n1 -1\\n\") == 2"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\\n\"\nassert solution(\"2 1 -1\") == \"2\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4\\n1 0 0 -1') == '1\\n'\nassert solution(stdin='2\\n1 -1') == '2\\n'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='''\n4\n1 0 0 -1\n''') == '1'\n\nassert solution(stdin='''\n2\n1 -1\n''') == '2'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"The solution should be 1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n0\\n-1\\n\") == 1\nassert solution(\"2\\n1\\n-1\\n\") == 2"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected '{expected}', got '{solution(stdin=input())}'\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output the minimum possible value of error after k_1 operations on array A and k_2 operations on array B have been performed.\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3') == '2\\n'\nassert solution('2 1 0\\n1 2\\n2 2') == '0\\n'\nassert solution('2 5 7\\n3 4\\n14 4') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2\\n'\n\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0\\n'\n\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3\\n') == '2\\n'\nassert solution('2 1 0\\n1 2\\n2 2\\n') == '0\\n'\nassert solution('2 5 7\\n3 4\\n14 4\\n') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"1 10\\n0001\") == \"1010\"\nassert solution(\"1 100\\n
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution(stdin='1 1\\n1\\n') == '2\\n'\nassert solution(stdin='1 1\\n1\\n') == '2\\n'\nassert solution(stdin='3 3\\n1 2\\n1 2\\n1 2\\n') == '30\\n'\nassert solution(stdin='10 20\\n00111001\\n01110011\\n11111111\\n10111110\\n10111110\\n10111110\\n') == '170000000000\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n00101\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01010\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n00101\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01100\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"The expected output is not correct.\"\nprint(\"The expected output is correct.\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6\\n'\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n\nHere's the code for the solution:\n\n```python\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Test 1 failed\"\nassert solution(\"1 2 1 2 1 2\") == 13, \"Test 2 failed\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\\n\") == \"6\"\nassert solution(\"1 2 1 2 1 2\\n\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is not correct. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n\" # Wrong output, should be 6\nassert solution() == \"13\\n\" # Correct output"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n\nsolution(\"5\\n2 3 4 6 9\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'\n\nprint(solution('5\\n2 3 4 6 9'))\nprint(solution('9\\n1 2 3 5 6 7 8 9 10'))"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'\n\nfrom functools import reduce"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\", \"Expected output: 4\\nGot: {}\".format(solution(input()))"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11''') == '''SURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE'''\n\nassert solution('''5\n1 2 3 4 5\nE 6 7 8 9 10\n11 12 13 14 15\n20 21 22 23 24\n25 26 27 28 29\n30 31 32 33 34\n35 36 37 38 39\n40 41 42 43 44\n45 46 47 48 49\n50 51 52 53 54\n55 56 57 58 59\n60 61 62 63 64\n65 66 67 68 69\n70 71 72 73 74\n75 76 77 78 79\n80 81 82 83 84\n85 86 87 88 89\n90 91 92 93 94\n95 96 97 98 99\n100 101 102 103 104\n105 106 107 108 109\n110 111 112 113 114\n115 116 117 118 119\n120 121 122 123 124\n125 126 127 128 129\n130 131 132 133 134\n135 136 137 138 139\n140 141 142 143 144\n145 146 147 148 149\n150 151 152 153 154\n155 156 157 158 159\n160 161 162 163 164\n165 166 167 168 169\n170 171 172 173 174\n175 176 177 178 179\n180 181 182 183 184\n185 186 187 188 189\n190 191 192 193 194\n195 196 197 198 199\n200 201 202 203 204\n205 206 207 208 209\n210 211 212 213 214\n215 216 217 218 219\n220 221 222 223 224\n225 226 227 228 229\n230 231 232 233 234\n235 236 237 238 239\n240 241 242 243 244\n245 246 247 248 249\n250 251 252 253 254\n255 256 257 258 259\n260 261 262 263 264\n265 266 267 26"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"SURGERY COMPLETE\"\nprint(\"SURGERY COMPLETE\")"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\"\"\") == \"SURGERY COMPLETE\"\nassert solution(\"\"\"2\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY COMPLETE\"\nassert solution(\"\"\"3\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"4\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"2\n3\n1 2 3 5 6 E\n8 9 10 4 11 12 13\n11\"\"\") == \"SURGERY COMPLETE\"\nassert solution(\"\"\"2\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY COMPLETE\"\nassert solution(\"\"\"3\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"4\n4\n1 2 3 4 5 E\n1 3 2 4 5 6\n8 9 10 4 11 12 13\nE\"\"\") == \"SURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 4"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"SURGERY COMPLETE\", \"Please complete the solution\"\nassert solution() == \"SURGERY FAILED\", \"Please complete the solution\"\nassert solution() == \"DONE\", \"Please complete the solution\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution({input()})!= expected solution({expected})\"\n\nfrom typing import List"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE'\nassert solution('1\\n2\\n3 4 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY FAILED'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n13"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\", \"Solution is incorrect. Please fix it and submit the corrected code.\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nS\\nrr\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nS\\nrr\\nI\\nlldll\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nS\\nrr\\nI\\nlldll\\nDONE\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 4"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\\n3 2 1\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"7 6 5\\n1 2 3\") == \"9 8 7 6 5 4 3 2 1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"10 2 1\") == \"-1\"\n\nprint(\"All tests pass\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [1, 2, 3]\nassert solution(2) == [1, 2]\nassert solution(1) == [1]\nassert solution(5) == [-1, -1, -1, -1, -1]\nassert solution(9) == [-1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(10) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(11) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(12) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(13) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(14) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(15) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(16) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(17) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(18) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(19) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(20) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(21) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(22) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(23) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(24) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\nassert solution(25) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == 5000000000\nassert solution(\"3 2\\n1 0 1\\n\") == 2\nassert solution(\"4 4\\n2 8 4 1\\n\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(3, 2, 1) == 3\nassert solution(5, 1, 1000000000, 1000000000, 1000000000, 1000000000) == 5000000000\nassert solution(3, 2, 1) == 2\nassert solution(4, 4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))  # expected 5, got 5\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))  # expected 3, got 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('bwwwbwwbw') == 5, \"Expected 5, got {}\".format(solution('bwwwbwwbw'))\nassert solution('bwwbwwb') == 3, \"Expected 3, got {}\".format(solution('bwwbwwb'))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Expected '5' but got: {}\".format(solution(\"bwwwbwwbw\"))\n\nassert solution(\"bwwbwwb\") == \"3\", \"Expected '3' but got: {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The solution is not correct\"\nassert solution(\"bwwbwwb\") == 3, \"The solution is not correct\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Expected output: 5\"\nassert solution(\"bwwbwwb\") == \"3\", \"Expected output: 3\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n') == '10'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10, \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"Incorrect output\"\nprint(\"Correct\")"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Solution should be {expected}, but is {solution}\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == \"Output\\n10\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\nOutput\\n7\\n\\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1, \"Expected: {}, Received: {}\".format(expected1, solution(input1))\nassert solution(input2) == expected2, \"Expected: {}, Received: {}\".format(expected2, solution(input2))\nassert solution(input3) == expected3, \"Expected: {}, Received: {}\".format(expected3, solution(input3))\nassert solution(input4) == expected4, \"Expected: {}, Received: {}\".format(expected4, solution(input4))\nassert solution(input5) == expected5, \"Expected: {}, Received: {}\".format(expected5, solution(input5))"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 4 2 2\\n\\nOutput\\n2\\n\\nInput\\n6\\n1 2 4 4 4 9\\n\\nOutput\\n2\") == \"2\\n\"\nassert solution(\"Input\\n5\\n1 2 4 4 9\\n\\nOutput\\n3\") == \"3\\n\"\nassert solution(\"Input\\n6\\n1 2 4 4 4 9\\n\\nOutput\\n2\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 2 2') == 2\nassert solution('6\\n1 2 4 4 4 9') == 2\n\nfrom typing import List"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'Input\\n4\\n1 4 2 2') == '2\\n'\nassert solution(r'Input\\n6\\n1 2 4 4 4 9') == '2\\n'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 1\\naba\\n') == '7'\nassert solution('4 1 1\\nabcd\\n') == '4'\nassert solution('4 10 1\\naaaa\\n') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\naba\\n\") == \"7\"\nassert solution(\"4 1 1\\nabcd\\n\") == \"4\"\nassert solution(\"4 10 1\\naaaa\\n\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\", \"Incorrect answer\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 1\") == \"2\\n\"\nassert solution(\"4 1\") == \"3\\n\"\nassert solution(\"5 1\") == \"4\\n\"\nassert solution(\"1 1\") == \"1\\n\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n', \"The solution is incorrect\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '2'\n\nfrom collections import deque"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\n\nN, K = map(int, stdin.split())"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"1\"  # Test Case 1\nassert solution(\"\") == \"1\"  # Test Case 2\nassert solution(\"2 1\") == \"1\"  # Test Case 3\nassert solution(\"2 1\\n\") == \"1\"  # Test Case 4\nassert solution(\"2 2\\n\") == \"2\"  # Test Case 5"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\\n3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"8\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\\n\"\nassert solution() == \"3\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA a\") == \"5\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA a\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nAA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '11', 'The output should be \"11\".'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA\") == \"5\"\nassert solution(\"2 2 1 2 100\\nA A\\nA aa\\naa AA\\nA AA\") == \"3\"\nassert solution(\"3 3 1 1 100\\nA A\\nA aa\\naa AA\\nA AA\") == \"2\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nAaa a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\na AA\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n5\\n1 1 5 2 1\\n') == 'YES', 'Your solution is incorrect.'\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1 1 4') == 'YES\\n'\nassert solution('5\\n1 1 5 2 1') == 'NO\\n'\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: The output is not as expected. Expected '{output}', but got '{solution(input())}'.\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"NO\"\nassert solution(4) == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES' or solution(input()) == 'NO', \"Test case failed.\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '-15', 'The solution is incorrect. Expected -15, got {}'.format(solution())"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5)) == \"-15\"\nassert solution(str(4)) == \"1\"\nassert solution(str(3)) == \"-5\"\nassert solution(str(2)) == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '-15\\n1\\n-5\\n1100\\n'\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n') == '-15\\n'\nassert solution('4\\n1 1 1 1\\n') == '1\\n'\nassert solution('3\\n5 1 -5\\n') == '-5\\n'\nassert solution('2\\n900 1000\\n') == '1100\\n'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'YES'\nassert solution('Input\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput') == 'YES'\nassert solution('Input\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\nInput\\"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    1 2\n    ''') == 'YES\\n'\nassert solution('''\n    3\n    1 2\n    2 3\n    ''') == 'NO\\n'\nassert solution('''\n    5\n    1 2\n    1 3\n    1 4\n    2 5\n    ''') == 'NO\\n'\nassert solution('''\n    6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n    ''') == 'YES\\n'\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"YES\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"NO\"\nassert solution(\"2\\n2\\n3\\n3\\n3\\n3\\n\") == \"YES\"\n\nassert solution(\"1 2 3\\n\") == \"NO\"\nassert solution(\"1 2 3 3\\n\") == \"YES\"\n\nassert solution(\"1 2 3 4 5\\n1 2 3\\n\") == \"NO\"\nassert solution(\"1 2 3 4 5\\n1 2\\n\") == \"YES\"\n\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"YES\"\n\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"2\\n2 6\\n\") == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n0\\n\", \"Function should return the expected output.\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Solution for {stdin} is not correct. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"1\"\nassert solution(2) == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n2\\n\", \"First test case failed\"\nassert solution(stdin) == \"0\\n\\n\", \"Second test case failed\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\", \"The output must be 6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\ncco\\n\") == \"6\"\nassert solution(\"3\\nbaa\\nhhh\\n\") == \"1\"\nassert solution(\"4\\nnnn\\n\") == \"1\"\nassert solution(\"4\\nnn\\n\") == \"2\"\nassert solution(\"4\\nn\\n\") == \"1\"\nassert solution(\"5\\nnnnnnnnnnnnnnnnnnn\\n\") == \"4\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nbbb\\ncab\\ndab\\neab\\nfab\\ngab\\nhab\\niab\\njab\\nkit\\nkit\\nkit\\nkit\\nkit\\niab\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\nkit\\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\ncab\") == \"6\"\nassert solution(\"3\\nab\\naba\") == \"5\"\nassert solution(\"3\\naab\\ncba\") == \"4\"\nassert solution(\"3\\naab\\nbac\") == \"4\"\nassert solution(\"3\\nab\\nbab\") == \"3\"\nassert solution(\"3\\naab\\ncab\") == \"2\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\ncab\") == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\naab\\nccb\") == 6\nassert solution(\"5\\naabbbccd\\nddddddd\") == 36\nassert solution(\"6\\naabbcdefghij\\nghijjkklmno\") == 1208\nassert solution(\"7\\naabbcdefghij\\nghijjkklmno\") == 1208"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\nabc\\ndef\\nghi\") == \"6\\n\"\nassert solution(\"5\\naaa\\nbbb\\nccc\\nddd\\neee\") == \"15\\n\"\nassert solution(\"6\\naaa\\nbbb\\nccc\\nddd\\neee\\nfff\") == \"21\\n\"\nassert solution(\"7\\naaa\\nbbb\\nccc\\nddd\\neee\\nfff\\nggg\") == \"28\\n\"\nassert solution(\"8\\naaa\\nbbb\\nccc\\nddd\\neee\\nfff\\nggg\\nhhh\") == \"35\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"1\\na\\nb\\nc\") == \"1\\n\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"6\\n\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\", \"Input: 100 100 5\\n5 2 1 2 1\\nOutput: YES\\n\\nSample 1. The tenth row of table G starts from sequence {1, 2, 1, 2, 5, 2, 1, 2, 1, 10}. As you can see, elements from fifth to ninth coincide with sequence a.\\n\\nSample 2. This time the width of table G equals 8. Sequence a doesn't occur there.\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4'\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n10 2\\n4 1 5 10\\n1 4 10 5\\n\\nOutput\\n4\\n\\nInput\\n7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\\nOutput\\n3\\n\") == \"Output\\n4\\n\\nInput\\n7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\\nOutput\\n3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'output', 'Incorrect output'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'\nassert solution() == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, '3') == 'no'\nassert solution(2, '1') == 'yes'\nassert solution(3, '1') == 'yes'\nassert solution(4, '3') == 'no'\nassert solution(5, '1') == 'yes'\nassert solution(6, '1 6') == 'yes'\nassert solution(7, '1 2 3') == 'no'\nassert solution(8, '1 2 3') == 'no'\nassert solution(9, '1 2 3') == 'no'\nassert solution(10, '1 2 3 4 5 6 7 8 9 10') == 'yes'\nassert solution(11, '1 2 3 4 5 6 7 8 9 10') == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"\nassert solution(stdin) == \"yes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 'no'\nassert solution(6) == 'yes'\nassert solution(7) == 'yes'\nassert solution(8) == 'no'\nassert solution(9) == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\"\nassert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n\") == \"1\\n0 2 1\\n\"\nassert solution(\"3 3\\n3 3\\n2 2\\n\") == \"2\\n0 2\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n\") == \"3\\n1 0\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n1 0 2 1 0\\n'\nassert solution(input()) == '3\\n5 2 0 1\\n'\nassert solution(input()) == '3\\n5 2 0 1\\n'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5\\n') == '2\\n1 0 2 1 0\\n'\nassert solution('4 2\\n1 4\\n2 4\\n') == '3\\n5 2 0 1\\n'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\\n3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n2\n1 0 2 1 0\n\n3\n5 2 0 1\n\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\"\n\nsolution(\"5 3\\n1 3\\n2 5\\n4 5\") # Test the correctness of solution\nsolution(\"4 2\\n1 4\\n2 4\\n\") # Test the correctness of solution"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'YES'\n\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n''') == 'NO'\n\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'NO'\n\nfrom typing import List"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"NO\" # Replace with your solution\n\nfrom typing import List"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\\nOutput\\nNO\\nInput\\n3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\\nOutput\\nYES\\nInput\\n3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\\nOutput\\nNO') == 'NO\\nYES\\nNO\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"1\\n2\\n\") == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n-1\\n\"\nassert solution(\"(#)\") == \"-1\\n-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(())((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n(((#)((#)\n''') == 1\nassert solution('''\n()((#((#(#()\n''') == 2\nassert solution('''\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"((#)((#)\")) == \"12\\n\"\nassert solution(\"()((#((#(#()\")) == \"22\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"#()\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\"\nassert solution(\"()(())()\") == \"2\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n(((#)((#)\n''') == 1\nassert solution('''\n()((#((#(#()\n''') == 2\nassert solution('''\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"(((#)((#)#((#)\")) == \"1\\n2\\n1\\n2\\n\", \"(((#)((#)#())\")) == \"-1\\n\", \"()((#((#(#()\")) == \"2\\n2\\n1\\n\", \"#\") == \"-1\\n\", \"()((#))\") == \"2\\n2\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"#((#))\") == \"-1\\n\"\nassert solution(\"()((#))\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1\n\nprint('All tests passed!')"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {t} failed: Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\noooo\"\nassert solution(\"0 4\") == \"-16\\nxxxx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '-1\\nxoxox\\n'\nassert solution(open('input2.txt', 'r')) == '16\\no\\n'\nassert solution(open('input3.txt', 'r')) == '-16\\no\\n'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0') == '-16'\nassert solution('0 4') == '-16'\nassert solution('2 3') == '-1'\nassert solution('4 1') == 'o' * 3 + 'x' * 1 + 'o' * 2 + 'x' * 1 + 'o' * 1\nassert solution('0 3') == 'o' * 3 + 'x' * 1 + 'o' * 2 + 'x' * 1 + 'o' * 1\nassert solution('1 1') == 'oo'\nassert solution('1 0') == 'ox'\nassert solution('0 1') == 'oo'\nassert solution('1 2') == 'ox'\nassert solution('2 2') == 'ox'\nassert solution('1 3') == 'oo'\nassert solution('3 3') == 'oo'\nassert solution('1 4') == 'oo'\nassert solution('4 4') == 'oo'\nassert solution('0 0') == 'oo'\nassert solution('0 2') == 'oo'\nassert solution('1 5') == 'oo'\nassert solution('2 1') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('2 3') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('3 2') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('1 2') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('2 2') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('3 3') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('4 4') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('5 5') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('0 5') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('5 0') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('5 5') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('6 6') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('7 7') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('8 8') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('9 9') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('10 10') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('11 11') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('12 12') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('13 13') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('14 14') == 'o' * 2 + 'x' * 2 + 'o' * 1 + 'o' * 1\nassert solution('15 15') == 'o' * 2 + 'x' * 2 + 'o' *"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\no\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\\no\\no\"\nassert solution(\"0 4\") == \"-16\\no\\no\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '-1'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == '-1\\nxoxox'\nassert solution(\"4 0\") == '16\\noooo'\nassert solution(\"0 4\") == '-16\\nxxxx'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\\n\") == \"-1\\nxoxox\\n16\\no\\n-16\\no\\n\"\nassert solution(\"4 0\\n0 4\\n\") == \"16\\no\\n-16\\no\\n\"\nassert solution(\"0 4\\n\") == \"-16\\no\\nxxxx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"-1\", \"Input 2 3\"\nassert solution(\"4 0\") == \"16\", \"Input 4 0\"\nassert solution(\"0 4\") == \"-16\", \"Input 0 4\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Test Case 1\"\nassert solution(\"2 2 2\") == \"17\", \"Test Case 2\"\nassert solution(\"3 3 3\") == \"17\", \"Test Case 3\"\nassert solution(\"1 1000 1\") == \"1000000000\", \"Test Case 4\"\nassert solution(\"1000 1 1\") == \"1000000000\", \"Test Case 5\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '17\\n', \"Test case 1 failed\"\nprint(\"Test case 1 passed\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1 1 1\") == \"17\"\n\nprint(17 % 1000000007)"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 2') == '17'\nassert solution('1 2 1') == '17'\nassert solution('1 2 2') == '17'\nassert solution('1 3 1') == '17'\nassert solution('1 3 2') == '17'\nassert solution('2 1 1') == '17'\nassert solution('2 1 2') == '17'\nassert solution('2 2 1') == '17'\nassert solution('2 2 2') == '17'\nassert solution('2 3 1') == '17'\nassert solution('2 3 2') == '17'\nassert solution('3 1 1') == '17'\nassert solution('3 1 2') == '17'\nassert solution('3 2 1') == '17'\nassert solution('3 2 2') == '17'\nassert solution('3 3 1') == '17'\nassert solution('3 3 2') == '17'"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"17\\n\", \"Test case not passing\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2\\n2 2 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 2 2\\n2 2 2\"\nassert solution(input()) == \"2 3\\n3 2\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2 2 2\\n2 2 2\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n2 2 2 \n2 2 2 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4') == '2 3\\n3 2 '\nassert solution('2 2\\n1 2\\n3 4') == '2 3\\n3 2'\nassert solution('2 2\\n1 2\\n3 4') == '2 3\\n3 2'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '332748119\\n332748119\\n'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\"\nassert solution(\"1 2\\n1\") == \"3\"\n\nfrom functools import reduce"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '332748119'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_result, f\"Test failed. Input: {input_str}, Expected Output: {expected_result}, Got: {solution(input_str)}\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '332748119'\nprint(solution(open('input.txt', 'r')))"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"11\", \"Output is incorrect.\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1 5 2 6\\n\\n5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1') == '11\\n\\n6\\n1 100 101 100 1'\nassert solution('5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1') == '6\\n\\n102\\n\\n102\\n\\n102'\n\nfrom typing import List"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed for input '{stdin}':\\nExpected output: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n5\\n3 1 5 2 6\\n\\nOutput\\n11\\n\\nInput\\n5\\n1 2 3 4 5\\n\\nOutput\\n6\\n\\nInput\\n5\\n1 100 101 100 1\\n\\nOutput\\n102\\n\") == \"Correct!\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 1 5 2 6\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(1, 6):\n    assert solution(f\"5\\n{i} {i} {i} {i} {i}\") == output(f\"{i}\\n\"), f\"Test failed for case {i}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\nOutput\\nYes\\nInput\\n3 1\\n1 3\\n2 3\\nOutput\\nNo\") == \"Yes\\n\"\nassert solution(\"Input\\n14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\nOutput\\nYes\\nInput\\n3 1\\n1 3\\n2 3\\nOutput\\nNo\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes', \"Expected 'Yes', got '{}' instead\".format(solution(input()))"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\", \"Testcase 1 failed\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\", \"Testcase 2 failed\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\nassert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == \"No\"\nassert solution(14, 2) == \"No\"\nassert solution(2, 4) == \"No\"\nassert solution(3, 4) == \"No\"\nassert solution(4, 13) == \"No\"\nassert solution(10, 5) == \"No\"\nassert solution(11, 5) == \"No\"\nassert solution(12, 5) == \"No\"\nassert solution(14, 5) == \"No\"\nassert solution(5, 13) == \"No\"\nassert solution(6, 7) == \"No\"\nassert solution(8, 6) == \"No\"\nassert solution(13, 6) == \"No\"\nassert solution(9, 6) == \"No\"\nassert solution(3, 1) == \"No\"\nassert solution(1, 3) == \"No\"\nassert solution(2, 3) == \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\n\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\n\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\n\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n\nOutput\n1\n\nInput\n4 2\n##\n.#\n.#\n##\n\nOutput\n-1\n\nInput\n4 5\n....#\n####.\n.###.\n.#...\n\nOutput\n2\n\nInput\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n##.\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"1\\n\"\nassert solution(\"4 5\\n....#\\n####.#\\n.###.#\\n.#...\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\n#.\\n\") == \"1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####.#\\n.###.#\\n.#...\\n\") == \"2\"\nassert solution(\"2 1\\n.\\n#.\\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.##\\n.###.##\\n.#...##\\n\\n2 1\\n.##\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n') == '1'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.##\\n.###.##\\n.#...##\\n\\n2 1\\n.##\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n') == '-1'\nassert solution('4 5\\n....#\\n####.##\\n.###.##\\n.#...##\\n\\n2 1\\n.##\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n') == '2'\nassert solution('2 1\\n.##\\n#.\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n') == '-1'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##. \") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n.#\\n###\\n##\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n5 4 2\" # expected output\nassert solution() == \"NO\" # expected output\nassert solution() == \"YES\\n10 10 10\" # expected output\nassert solution() == \"NO\" # expected output\nassert solution() == \"YES\\n1 2 2 3\" # expected output\nassert solution() == \"NO\" # expected output\nassert solution() == \"YES\\n10 10 10\" # expected output\nassert solution() == \"NO\" # expected output\nassert solution() == \"YES\\n1 2 2 3\" # expected output\nassert solution() == \"YES\\n5 4 2\" # expected output\nassert solution() == \"NO\" # expected output\nassert solution() == \"YES\\n0 0 0\" # expected output\nassert solution() == \"YES\\n5 4 2\" # expected output"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4 3\\n1 0 2 3\\n\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2\\n') == 'YES\\n1 2 2 3\\nNO\\nNO\\nNO\\n'\nassert solution('Input\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2\\n') == 'YES\\n10 10 10 \\nNO\\nYES\\nNO'\nassert solution('Input\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2\\n') == 'NO\\nNO\\nYES\\nYES'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_result, f\"The solution is incorrect.\\nExpected result: {expected_result}\\nActual result: {solution}\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4 3 6 2'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\") == \"4 3 6 2\", \"Test 1\"\nassert solution(\"1\\n42\\n\") == \"42\", \"Test 2\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\", \"Test 3\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == ['4', '3', '6', '2']\nassert solution('1\\n42') == ['42']\nassert solution('2\\n1 1 1 1') == ['1', '1']"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4 3 6 2\\n42\\n1 1\\n1 1\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4 3 6 2\\n42\\n1 1\\n1 1\\n'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1') == '4 3 6 2\\n42'\nassert solution('1\\n42\\n2\\n1 1 1 1') == '42'\nassert solution('2\\n1 1 1 1\\n') == '1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\") == \"4 3 6 2\\n\", \"Test Case 1 Failed\"\nassert solution(\"Input\\n1\\n42\\n\") == \"42 42\\n\", \"Test Case 2 Failed\"\nassert solution(\"Input\\n2\\n1 1 1 1\\n\") == \"1 1\\n\", \"Test Case 3 Failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\", \"Input 1\"\nassert solution(\"1\\n42\") == \"42 0\", \"Input 2\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Input 3\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n\") == \"4 3 6 2\\n42\\n1 1 1 1\\n\"\nassert solution(\"1\\n42\\n\") == \"42\\n\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed with input '{input()}' and expected output '{expected}'\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3\\n\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6\\n\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6\\n\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 3\\n\") == \"Output\\n3\\n\\n\"\nassert solution(\"Input\\n3\\n1 1\\n2 1\\n3 1\\n\") == \"Output\\n6\\n\\n\"\nassert solution(\"Input\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"Output\\n6\\n\\n\"\nassert solution(\"Input\\n3\\n1 1\\n2 1\\n3 1\\n\") == \"Output\\n3\\n\\n\"\nassert solution(\"Input\\n3\\n1 1\\n2 1\\n3 1\\n\") == \"Output\\n6\\n\\n\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output\nassert solution() == '3\\n6\\n6' # expected output"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Output\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\"\nassert solution(1) == \"3\"\nassert solution(2) == \"6\"\nassert solution(3) == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 3\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 1\\n2 1\\n3 1\\n\\nOutput\\n6\\n\\nInput\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\nOutput\\n6\") == \"3\\n6\\n6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"3\"\nassert solution(\"1 1\\n2 1\\n3 1\") == \"6\"\nassert solution(\"2 1\\n2 2\\n3 1\\n3 2\") == \"6\"\nassert solution(\"4 2\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '''1 1\n2 2\n3 3\n'''\n\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '''-1'''\n\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''3 3\n1 3\n2 2\n4 4\n5 3\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"\"\nassert solution(\"Input\\n3\\n.E.\\nE.E\\n.E.\\n\\nOutput\\n1 1\\n2 2\\n3 3\\n\\nInput\\n3\\nEEE\\nE..\\nE.E\\n\\nOutput\\n-1\\n\\nInput\\n5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\\nOutput\\n3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\") == \"\"\nassert solution(\"Input\\n3\\n.E.\\nE.E\\n.E.\\n\\nOutput\\n1 1\\n2 2\\n3 3\\n\\nInput\\n3\\nEEE\\nE..\\nE.E\\n\\nOutput\\n-1\\n\\nInput\\n5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\\nOutput\\n3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\") == \"1 1\\n2 2\\n3 3\\n\\n\"\nassert solution(\"Input\\n3\\nEEE\\nE..\\nE.E\\n\\nOutput\\n-1\\n\\nInput\\n5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\\nOutput\\n3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\") == \"-1\\n\"\nassert solution(\"Input\\n5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\\nOutput\\n3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E.\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n.E.\\nE.E.\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Wrong output. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n.E.\\ne.E.\\n.E.') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output: 32\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '32', 'The solution is incorrect.'\nassert solution(stdin) == '32', 'The solution is incorrect.'\nassert solution(stdin) == '32', 'The solution is incorrect.'\nassert solution(stdin) == '32', 'The solution is incorrect.'\nassert solution(stdin) == '32', 'The solution is incorrect.'\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\n\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"32\", \"Incorrect output\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution for {input()} does not match the expected output.\\nOutput: {output}\\nInput: {input()}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output the maximum value of a bitwise OR of sequence elements after performing operations.\\nThe maximum value is 79.\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Passed!\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\"\n\nfrom typing import List"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"1 1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"5 1\") == \"15\\n15\\n7\\n15\\n15\"\nassert solution(\"100 1000\") == \"997928671\\n997928671\\n1000000000\\n997928671\\n997928671\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 2\") == \"4\\n4\\n4\\n\"\nassert solution(\"4 3\") == \"4\\n4\\n4\\n\"\nassert solution(\"3 4\") == \"4\\n4\\n4\\n\"\nassert solution(\"5 4\") == \"5\\n4\\n4\\n\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"7\\n7\\n5\\n7\\n7\"\nassert solution(\"10 3\") == \"7\\n7\\n9\\n7\\n7\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"7\\n7\\n5\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\n7\\n4\\n7\\n7\", \"Test case 1 failed\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == 7, \"Error: The solution is incorrect\"\nassert solution(2, 3) == 7, \"Error: The solution is incorrect\"\nassert solution(2, 2) == 4, \"Error: The solution is incorrect\"\nassert solution(3, 3) == 7, \"Error: The solution is incorrect\"\nassert solution(1, 2000) == 2000, \"Error: The solution is incorrect\"\nassert solution(2000, 1) == 2000, \"Error: The solution is incorrect\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"2 2\") == \"7\\n4\\n7\\n7\\n7\\n\"\nassert solution(\"3 4\") == \"4\\n4\\n7\\n7\\n7\\n\"\nassert solution(\"1 1\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"2 1\") == \"7\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"1 1000000000\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == 6\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == 9\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n'\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 6\nprint(\"Test passed.\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n\", \"Expected output: 6\\nActual output: {}\".format(solution(stdin))"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == 9, \"The solution is incorrect\"\n\nassert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == 6, \"The solution is incorrect\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\"\nassert solution(open(\"input2.txt\").read()) == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6\\n'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9\\n'\n\nsolution = '''def solution(stdin: str) -> str:\n    n, k = map(int, stdin.split())\n    universities = list(map(int, stdin.split()))\n\n    cable = {}\n    for u in universities:\n        for v in universities:\n            if u!= v:\n                if (u, v) not in cable:\n                    cable[(u, v)] = 1\n                else:\n                    cable[(u, v)] += 1\n\n    total_distance = 0\n    for u in universities:\n        for v in universities:\n            if u!= v:\n                if (u, v) in cable:\n                    total_distance += cable[(u, v)] * 1\n                else:\n                    total_distance += 1\n\n    return str(total_distance)\n'''"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"\n3\n3 1 3 4\n3 2 5 6\n1 7\n\"\"\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(b\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3\\n2 1 2\\n2 2 3\"\n) == \"1\\n\"\n\nassert solution(\n    \"1 3\\n3 1 2 3\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"2 4\\n2 1 2\\n3 2 3 4\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"2 2\\n3 2 2 1\\n2 1 2\\n\"\n) == \"1\\n\"\n\nassert solution(\n    \"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\"\n) == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"The solution for the input '{input}' does not match the expected output '{output}'.\" for input, output in [\n    (input, output) for input in [\n        \"2 3\", \"2 1 2\", \"2 2 3\",\n        \"1 3\", \"3 1 2 3\",\n        \"2 4\", \"2 1 2\", \"3 2 3 4\",\n        \"2 2\", \"3 2 2 1\", \"2 1 2\",\n        \"3 7\", \"2 1 2\", \"2 3 4\", \"3 5 6 7\",\n    ]\n]"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 1\nassert solution(open('input1.txt', 'r')) == 6\nassert solution(open('input2.txt', 'r')) == 2\nassert solution(open('input3.txt', 'r')) == 1\nassert solution(open('input4.txt', 'r')) == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 1 2\n    2 2 3\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    1 3\n    3 1 2 3\n    \"\"\"\n) == \"6\"\nassert solution(\n    \"\"\"\n    2 4\n    2 1 2\n    3 2 3 4\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    2 2\n    3 2 2 1\n    2 1 2\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    3 7\n    2 1 2\n    2 3 4\n    3 5 6 7\n    \"\"\"\n) == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == \"1\"\nassert solution(input2) == \"6\"\nassert solution(input3) == \"2\"\nassert solution(input4) == \"1\"\nassert solution(input5) == \"24\"\n\nfrom typing import List\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5 4 7\\n\") == \"6\"\nassert solution(\"5\\n1 4 2 3 1\\n\") == \"3\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n') == '3\\n6\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5 4 7\") == \"6\"\nassert solution(\"5\\n1 4 2 3 1\") == \"3\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output\\n3', \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 5 4 7') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n') == '3\\n'\nassert solution('4\\n1 5 4 7\\n') == '6\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 20\nassert solution(3) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, output {output}.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\\nGot {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, \"Your function is wrong. Please check your solution.\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"The output should be 4.\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4, \"1\"\nassert solution(2) == 20, \"2\"\nassert solution(3) == 62, \"3\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\", \"Your solution is incorrect.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"4\"\nassert solution(10) == \"20\"\nassert solution(100) == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 1\\n1 1\\nOutput\\n6\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\nOutput\\n15\\nInput\\n1\\n5 6\\nOutput\\n7\") == \"Output\\n6\\n\"\nassert solution(\"Input\\n3\\n1 1\\n1 1\\n1 1\\nOutput\\n6\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\nOutput\\n15\\nInput\\n1\\n5 6\\nOutput\\n7\") == \"Output\\n6\\n\"\nassert solution(\"Input\\n1\\n5 6\\nOutput\\n7\") == \"Output\\n7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {input()}, expected {expected}\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n5 6') == '15\\n'\nassert solution('1\\n5 6') == '7\\n'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\") == 6\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == 15\nassert solution(\"1\\n5 6\") == 7\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"15\\n\"\nassert solution() == \"7\\n\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1\\n1 1\\n1\\n1\\n1\\n1\\n1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n1\\n5 6\\n1\\n\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"1\"\nassert solution(\"14\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"1\"\nassert solution(\"17\") == \"1\"\nassert solution(\"18\") == \"1\"\nassert solution(\"19\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"21\") == \"1\"\nassert solution(\"22\") == \"1\"\nassert solution(\"23\") == \"1\"\nassert solution(\"24\") == \"1\"\nassert solution(\"25\") == \"1\"\nassert solution(\"26\") == \"1\"\nassert solution(\"27\") == \"1\"\nassert solution(\"28\") == \"1\"\nassert solution(\"29\") == \"1\"\nassert solution(\"30\") == \"1\"\nassert solution(\"31\") == \"1\"\nassert solution(\"32\") == \"1\"\nassert solution(\"33\") == \"1\"\nassert solution(\"34\") == \"1\"\nassert solution(\"35\") == \"1\"\nassert solution(\"36\") == \"1\"\nassert solution(\"37\") == \"1\"\nassert solution(\"38\") == \"1\"\nassert solution(\"39\") == \"1\"\nassert solution(\"40\") == \"1\"\nassert solution(\"41\") == \"1\"\nassert solution(\"42\") == \"1\"\nassert solution(\"43\") == \"1\"\nassert solution(\"44\") == \"1\"\nassert solution(\"45\") == \"1\"\nassert solution(\"46\") == \"1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"48\") == \"1\"\nassert solution(\"49\") == \"1\"\nassert solution(\"50\") == \"1\"\nassert solution(\"51\") == \"1\"\nassert solution(\"52\") == \"1\"\nassert solution(\"53\") == \"1\"\nassert solution(\"54\") == \"1\"\nassert solution(\"55\") == \"1\"\nassert solution(\"56\") == \"1\"\nassert solution(\"57\") == \"1\"\nassert solution(\"58\") == \"1\"\nassert solution(\"59\") == \"1\"\nassert solution(\"60\") == \"1\"\nassert solution(\"61\") == \"1\"\nassert solution(\"62\") == \"1\"\nassert solution(\"63\") == \"1\"\nassert solution(\"64\") == \"1\"\nassert solution(\"65\") == \"1\"\nassert solution(\"66\") == \"1\"\nassert solution(\"67\") == \"1\"\nassert solution(\"68\") == \"1\"\nassert solution(\"69\") == \"1\"\nassert solution(\"70\") == \"1\"\nassert solution(\"71\") == \"1\"\nassert solution(\"72\") == \"1\"\nassert solution(\"73\") == \"1\"\nassert solution(\"74\") == \"1\"\nassert solution(\"75\") == \"1\"\nassert solution(\"76\") == \"1\"\nassert solution(\"77\") == \"1\"\nassert solution(\"78\") == \"1\"\nassert solution(\"79\") == \"1\"\nassert solution(\"80\") == \"1\"\nassert solution(\"81\") == \"1\"\nassert solution(\"82\") == \"1\"\nassert solution(\"83\") == \"1\"\nassert solution(\"84\") == \"1\"\nassert solution(\"85\") == \"1\"\nassert solution(\"86\") == \"1\"\nassert solution(\"87\") == \"1\"\nassert solution(\"88\") == \"1\"\nassert solution(\"89\") == \"1\"\nassert solution(\"90\") == \"1\"\nassert solution(\"91\") == \"1\"\nassert solution(\"92\") == \"1\"\nassert solution(\"93\") == \"1\"\nassert solution(\"94\") == \"1\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 3\nassert solution(\"3\") == 6"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3\\n3\\n\") == \"6\"\n\nfrom typing import List\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1', \"Incorrect output: %s\" % solution(stdin)\nprint(\"Correct output: 1\")"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\n2\\n\\n2\\n\\n3\\n3 3\\n10 10 10\\n17\\n\\n\\n2\\n\\n') == '1\\n\\n3\\n\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3 3 100\n    1 1 1\n    3 5 6 11\n    1 2 1\n    \"\"\"\n) == '10\\n'\n\nassert solution(\n    \"\"\"\n    3 6 5 1000000007\n    1 2 3\n    3 5 6 11\n    1 2 1\n    \"\"\"\n) == '0\\n'\n\nassert solution(\n    \"\"\"\n    3 3 3 100\n    1 1 1\n    3 5 6 11\n    1 2 1\n    \"\"\"\n) == '10\\n'\n\nassert solution(\n    \"\"\"\n    3 6 5 1000000007\n    1 2 3\n    3 5 6 11\n    1 2 1\n    \"\"\"\n) == '0\\n'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and expected output {expected_output}\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\\n\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\\n\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '10', \"Expected output: 10, but got: {}\".format(solution())"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\\n\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\", \"The solution provided is incorrect. The correct solution is 'YES'.\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n') == 'NO'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\nr\"\"\"\n3\n2 2 3\nintel\ncode\nch allenge\n\"\"\"\n) == \"YES\"\n\nassert solution(\nr\"\"\"\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\"\"\"\n) == \"NO\"\n\nassert solution(\nr\"\"\"\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\"\"\"\n) == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\nYES\\nNO\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\\nNO\\nYES\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\\nYES\\nYES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"intel\") == \"YES\"\nassert solution(\"code\") == \"NO\"\nassert solution(\"ch allenge\") == \"YES\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"bcdefghi\") == \"NO\"\nassert solution(\"jklmnopqrstu\") == \"NO\"\nassert solution(\"vwxyz\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\nA\\nBCDEFGHI\\nJKLMNSRUVWXYZ\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstuvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\\nOutput\\nYES\\n\\nInput\\n4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\\nOutput\\nNO\\n\\nInput\\n4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\\nOutput\\nYES\\n') == 'YES\\nNO\\nYES\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n1\\n10\\n') == '26'\nassert solution('1\\n10\\n') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\"\nassert solution(\"\") == \"0\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"Appleman and Toastman play a game. Initially Appleman gives one group of n numbers to the Toastman, then they start to complete the following tasks: Each time Toastman gets a group of numbers, he sums up all the numbers and adds this sum to the score. Then he gives the group to the Appleman. Each time Appleman gets a group consisting of a single number, he throws this group out. Each time Appleman gets a group consisting of more than one number, he splits the group into two non-empty groups (he can do it in any way) and gives each of them to Toastman. After guys complete all the tasks they look at the score value. What is the maximum possible value of score they can get?\"\nassert solution(\"1\\n10\") == \"10\\n\", \"Initially Toastman gets group [10] and adds 10 to the score, then he give the group to Appleman. Appleman splits group [10] into two groups: [10] and [5]. Both of them should be given to Toastman. When Toastman receives group [5], he adds 5 to the score and gives the group to Appleman (he will throw it out). When Toastman receives group [10], he adds 5 to the score and gives the group to Appleman. Appleman splits [10] in the only possible way: [10] and [5]. Finally Toastman have added 10 + 5 = 15 to the score. This is the optimal sequence of actions.\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5') == '26'\nassert solution('1\\n10') == '10'\nassert solution('') == '0'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4') == '3\\n'\nassert solution('3 40') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == 3\nassert solution(\"3 40\") == 32"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('tests/test_solution.txt', 'r')) == '3'\nassert solution(open('tests/test_solution.txt', 'r')) == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'\nassert solution('4 5\\n10 20 30\\n') == '6'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == [1, 4, 5, 6, 7, 8, 9]\n\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n\"\"\") == [1, 2, 4]\n\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == [1, 2]"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1 4 5 6 7 8 9'\nassert solution(stdin) == '1 2 4'\nassert solution(stdin) == '1 2'\nassert solution(stdin) == '1'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5\\n1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\"\nassert solution(\"5\\n1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"10\\n1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == \"1 4 5 6 7 8 9\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '''\n1 4 5 6 7 8 9\n'''\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '''\n1 2 4\n'''\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '''\n1 2\n'''"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == \"1 2\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9'\\n    assert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4'\\n    assert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2'\\n    assert solution('5 1\\n1 1\\n3 3\\n') == '1 2'\\n    assert solution('5 1\\n1 1\\n3 3\\n3 3\\n') == '1 2'\\n    assert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2'\"\nassert len(solution(open(\"input.txt\", \"r\").read().strip())) == 2\nassert len(solution(open(\"sample_input1.txt\", \"r\").read().strip())) == 4\nassert len(solution(open(\"sample_input2.txt\", \"r\").read().strip())) == 2\nassert len(solution(open(\"sample_input3.txt\", \"r\").read().strip())) == 1\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"inputs/sample_inputs/sample_input1.txt\", \"r\")) == \"1 4 5 6 7 8 9\"\nassert solution(open(\"inputs/sample_inputs/sample_input2.txt\", \"r\")) == \"1 2 4\"\nassert solution(open(\"inputs/sample_inputs/sample_input3.txt\", \"r\")) == \"1 2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\"\nassert solution(\"2 4\\n2.2 2.5\\n1.5 3.0\\n2.0 1.5\\n3.0 3.5\\n\") == \"0\\n\"\nassert solution(\"1 1 1\") == \"0\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1\\n', \"Expected 1, got: \" + solution(stdin)"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 3\\n1 2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"6 1\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"1 1\\n1\") == \"1\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"10 1\\n1 2 3 4 5 6\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 6 5 4 10') == '3\\n'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output\\n3\\n'\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\nassert solution(\"5 2\\n2 4 7 6 10 9\") == \"2\\n\"\nassert solution(\"3 2\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"3 1\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"1 2\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n3'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"10\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 27"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test {test_case} failed\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\\n3') == '2\\n4\\n10\\n\\n'\nassert solution('3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\\n1') == '4\\n10\\n10\\n\\n'\nassert solution('9\\n1 2 1 3 2 2 2 2 2 3\\n\\n2') == '10\\n10\\n10\\n\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test 2\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test 3\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n2\\n3\\n1 2 3\\n2\\n1 3\\n3\\n1 2 1 3 2 2 2 2 3\\n4\\n5 6 7 8 9\\n10\\n1 2 1 3 2 2 2 2 3\\n\") == \"4\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"8\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == \"9\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"11\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"12\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"13\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == \"14\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == \"15\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == \"16\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"17\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"18\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test 2\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test 3\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"10\\n1 2 1 3 2 2 2 2 2 3\") == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4\\n\", \"Test Case 1\"\nassert solution(10) == \"10\\n\", \"Test Case 2\"\nassert solution(20) == \"10\\n\", \"Test Case 3\"\nassert solution(30) == \"10\\n\", \"Test Case 4\"\nassert solution(40) == \"10\\n\", \"Test Case 5\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"The number of sequences that satisfy the conditions is not 4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\") == \"4\\n\"  # 1, 1, 1, 1\nassert solution(stdin=\"2\") == \"4\\n\"  # 1, 2, 2, 2\nassert solution(stdin=\"3\") == \"4\\n\"  # 2, 1, 1, 1\nassert solution(stdin=\"4\") == \"4\\n\"  # 2, 2, 2, 2\nassert solution(stdin=\"5\") == \"4\\n\"  # 1, 1, 2, 2\nassert solution(stdin=\"6\") == \"4\\n\"  # 1, 2, 1, 2\nassert solution(stdin=\"7\") == \"4\\n\"  # 2, 1, 1, 2\nassert solution(stdin=\"8\") == \"4\\n\"  # 2, 2, 2, 2\nassert solution(stdin=\"9\") == \"4\\n\"  # 1, 1, 2, 1\nassert solution(stdin=\"10\") == \"4\\n\"  # 1, 2, 1, 1\nassert solution(stdin=\"11\") == \"4\\n\"  # 2, 1, 1, 1\nassert solution(stdin=\"12\") == \"4\\n\"  # 2, 2, 2, 1\nassert solution(stdin=\"13\") == \"4\\n\"  # 1, 1, 2, 2\nassert solution(stdin=\"14\") == \"4\\n\"  # 1, 2, 1, 2\nassert solution(stdin=\"15\") == \"4\\n\"  # 2, 1, 1, 2\nassert solution(stdin=\"16\") == \"4\\n\"  # 2, 2, 2, 2\nassert solution(stdin=\"17\") == \"4\\n\"  # 1, 1, 2, 1\nassert solution(stdin=\"18\") == \"4\\n\"  # 1, 2, 1, 1\nassert solution(stdin=\"19\") == \"4\\n\"  # 2, 1, 1, 1\nassert solution(stdin=\"20\") == \"4\\n\"  # 2, 2, 2, 1\nassert solution(stdin=\"21\") == \"4\\n\"  # 1, 1, 2, 2\nassert solution(stdin=\"22\") == \"4\\n\"  # 1, 2, 1, 2\nassert solution(stdin=\"23\") == \"4\\n\"  # 2, 1, 1, 2\nassert solution(stdin=\"24\") == \"4\\n\"  # 2, 2, 2, 2\nassert solution(stdin=\"25\") == \"4\\n\"  # 1, 1, 2, 1\nassert solution(stdin=\"26\") == \"4\\n\"  # 1, 2, 1, 1\nassert solution(stdin=\"27\") == \"4\\n\"  # 2, 1, 1, 1\nassert solution(stdin=\"28\") == \"4\\n\"  # 2, 2, 2, 1\nassert solution(stdin=\"29\") == \"4\\n\"  # 1, 1, 2, 2\nassert solution(stdin=\"30\") == \"4\\n\"  # 1, 2, 1, 2\nassert solution(stdin=\"31\") == \"4\\n\"  # 2, 1, 1, 2\nassert solution(stdin=\"32\") == \"4\\n\"  # 2, 2, 2, 2\nassert solution(stdin=\"33\") == \"4\\n\"  # 1, 1, 2, 1\nassert solution(stdin=\"34\") == \"4\\n\"  # 1, 2, 1, 1\nassert solution(stdin=\"35\") == \"4\\n\"  # 2, 1, 1, 1\nassert solution(stdin=\"36\") == \"4\\n\"  # 2, 2, 2, 1\nassert solution(stdin=\"37\") == \"4\\n\"  # 1, 1, 2, 2"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\", \"Incorrect output\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '4\\n', f\"Output does not match expected output. Received: {solution(input())}\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"4\"\nassert solution(\"2\\n\") == \"4\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\", \"Output not correct.\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n') == '4\\n', \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"10 12\\n3 4 2 1\\n\") == \"10\"\nassert solution(\"1 10\\n3 5 2 4\\n\") == \"10\"\nassert solution(\"5 5\\n1 2 3 4\\n\") == \"5\"\nassert solution(\"4 10\\n1 5 1 4\\n\") == \"10\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5'\nassert solution('8 9\\n4 5 6\\n') == '7'\nassert solution('3 10\\n1 2 3\\n') == '2'\nassert solution('1 2 3\\n1 2 3\\n') == '1'\nassert solution('1 2 3\\n4 5 6\\n') == '2'\nassert solution('2 3 4 5 6\\n2 3 4 5 6\\n') == '1'\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"Your solution is incorrect. Please check the constraints and sample inputs.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"7 1\\n2 6 4\\n\") == \"8\"\nassert solution(\"5 7\\n2 3 5\\n\") == \"10\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n2 6 2 5\\n\") == \"4\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n2 6 2 5\\n\") == \"4\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n2 3 1 4\\n\") == \"3\\n\"\nassert solution(\"4 6\\n5 6 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"+++\") == \"1\"\nassert solution(\"+++---\") == \"1\"\nassert solution(\"+++-----\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == 1, \"Test 1\"\nassert solution(\"---\") == 3, \"Test 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == 1, \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == 3, \"Polycarpus just has been out of luck lately!\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == 1, \"The minimum number of distinct people should be 1.\"\nassert solution(\"---\") == 3, \"The minimum number of distinct people should be 3.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"The correct minimum number of people should be 1.\"\nassert solution(\"---\") == \"3\", \"The correct minimum number of people should be 3.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+-+-+') == '1\\n'\nassert solution('---') == '3\\n'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\", \"The solution should be '10110'.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, \"The output and expected outputs are not matching.\"\nfor i, (input_str, output_str) in enumerate(zip(input_strs, output_strs)):\n    assert solution(input_str) == output_str, f\"The output is not matching for input {i+1}.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\" # expected output: \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '11110', \"The correct answer is 11110, but the function returned '{}' instead.\".format(solution())"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10110', 'The solution is not correct. It should be \"10110\", but it is \"{solution()}\"'.format(solution=solution())"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example) == '10110', 'The example solution does not match the expected output'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\" # Solution provided by the problem statement"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1 3\\n'\nassert solution() == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n1 3\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n1 3\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3\\n6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n') == '2\\n1 3\\n'\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1 3\\n1 2\"\nassert solution(stdin) == \"2\\n1 3\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'pass' # your code here"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2\\n'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n4 1 2\n1 3\n1 2\n\"\"\") == \"2\\n\"\n\nassert solution(r\"\"\"\n3 3 1\n2\n1 2\n1 3\n2 3\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\nassert solution(\"2\\n\\n\") == \"2\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Incorrect answer\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2\\n'\n\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0\\n'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example.txt').read()) == '3', \"Output:3\"\nassert solution(open('example_2.txt').read()) == '1', \"Output:1\"\nassert solution(open('example_3.txt').read()) == '4', \"Output:4\"\nassert solution(open('example_4.txt').read()) == '1', \"Output:1\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\nassert solution(\"100 100 100 100\") == \"1\"\nassert solution(\"1000 1000 1000 1000\") == \"3\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()}) should return {output}, but got {solution(input())}.\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n10 2 3 5 4 2\\n') == '3\\n'\nassert solution('4\\n100 100 100 100\\n') == '1\\n'\nassert solution('8\\n7 6 5 4 3 2 2 3\\n') == '4\\n'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\", \"Example 1 failed\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\", \"Example 2 failed\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\", \"Example 3 failed\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 3, \"Expected output is 3, but got {}\".format(solution(6)) # test case 1\nassert solution(4) == 1, \"Expected output is 1, but got {}\".format(solution(4)) # test case 2\nassert solution(8) == 4, \"Expected output is 4, but got {}\".format(solution(8)) # test case 3\nassert solution(10) == 1, \"Expected output is 1, but got {}\".format(solution(10)) # test case 4\nassert solution(2) == 3, \"Expected output is 3, but got {}\".format(solution(2)) # test case 5"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3', \"The correct solution is '3'.\"\nassert solution('4\\n100 100 100 100') == '1', \"The correct solution is '1'.\"\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4', \"The correct solution is '4'.\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Yes', 'Expected \"Yes\", got \"{}\"'.format(solution())"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes\\n2\\n2 3 \\n2'\nassert solution(open('input1.txt', 'r').read()) == 'Yes\\n2\\n2 3 \\n2'\nassert solution(open('input2.txt', 'r').read()) == 'No'\nassert solution(open('input3.txt', 'r').read()) == 'No'\nassert solution(open('input4.txt', 'r').read()) == 'No'\nassert solution(open('input5.txt', 'r').read()) == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\\nOutput\\nYes\\n2\\n2 3\\n\\nInput\\n6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\\nOutput\\nYes\\n0\\n\\nInput\\n4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\\nOutput\\nNo\\n\\nInput\\n6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\\nOutput\\nYes\\n0\\n\") == \"Yes\\n2\\n2 3\\n\\nNo\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\"\"\") == \"Yes\\n2\\n2 3 \\n\"\nassert solution(\"\"\"6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\"\"\") == \"No\\n0\"\nassert solution(\"\"\"4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\"\"\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3 '\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'Yes\\n0'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4') == 20\nassert solution('10') == 21\nassert solution('15') == 27\nassert solution('20') == 29\nassert solution('25') == 31"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"20\"\nassert solution(\"2\") == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\nassert solution(5) == \"3720\\n0 2 1 4 3 5 7 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\nassert solution(10) == \"118259\\n0 2 1 4 3 5 7 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\\n\"\nassert solution(\"7\\n\") == \"19\\n0 4 2 5 6 3\\n\"\nassert solution(\"12\\n\") == \"18\\n0 3 5 4 7 6\\n\"\nassert solution(\"19\\n\") == \"16\\n0 2 4 6 8 7\\n\"\nassert solution(\"24\\n\") == \"15\\n0 1 3 4 6 5 7\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\"\nassert solution(10) == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 20, \"Output should be 20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 20, \"Expected 20, but got {}\".format(solution(4))\nassert solution(5) == 11, \"Expected 11, but got {}\".format(solution(5))\nassert solution(6) == 7, \"Expected 7, but got {}\".format(solution(6))\nassert solution(7) == 5, \"Expected 5, but got {}\".format(solution(7))\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0 2 1 4 3\\n20\"\nassert solution(10) == \"0 2 4 8 6 5 3 1 7 9\"\nassert solution(5) == \"0 2 1 3 4\"\nassert solution(1) == \"0 1\"\nassert solution(4) == \"0 2 1 3\"\nassert solution(7) == \"0 2 1 5 3 4\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 4]"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1''') == 'YES'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Incorrect output. Received '{solution(input())}' instead of '{expected}'.\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES', \"Your solution is incorrect. Please, follow the specifications provided.\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'\n\nassert solution('''\n4 5\n1 1\n0 0\n0 1\n1 0\n0 1\n''') == 'YES'\n\nassert solution('''\n4 5\n1 1\n0 0\n0 1\n1 0\n0 1\n''') == 'NO'\n\nassert solution('''\n5 6\n1 1\n0 0\n0 1\n1 0\n0 1\n0 1\n''') == 'YES'\n\nassert solution('''\n5 6\n1 1\n0 0\n0 1\n1 0\n0 1\n0 1\n''') == 'NO'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n3\\n7\\n\"\nassert solution(input()) == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(input()) == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == solution\nprint(solution(3))\nprint(solution(5))\nprint(solution(9))"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n3\\n7\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n1\n1''') == '1\\n3\\n7\\n'\nassert solution('''1\n1\n0\n1\n0\n1''') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('''1\n1\n1\n0\n0\n0\n1\n1\n0\n1\n''') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'\n\nfrom typing import List"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1000\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n3\\n7\\n'\nassert solution(open('input.txt', 'r').read()) == '1\\n4\\n10\\n22\\n43\\n'\nassert solution(open('input.txt', 'r').read()) == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n3\\n7\\n\\n1\\n4\\n10\\n22\\n43\\n\\n1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond'\nassert solution('4\\n5 1\\n6 3\\n7 4\\n8 5\\n9 6\\n10 7\\n11 8\\n12 9\\n13 10\\n14 11\\n15 12\\n16 13\\n17 14\\n18 15\\n19 16\\n20 17') == 'First\\nSecond'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''First\nSecond'''"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n4 0\\n5 4\\n1 2\\n3 1\\n2 4\\n6 7\\n7 5\\n1 8\\n1 3\\n2 1\\n3 5\\n4 7\") == \"Second\\nFirst\\nFirst\"\nassert solution(\"10\\n3 1\\n7 2\\n1 2\\n3 3\\n5 4\\n6 5\\n8 7\\n10 9\\n12 11\\n15 12\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"First\\nSecond\\nFirst\", \"Your solution is incorrect. It should return First or Second, but it returns: {}\".format(solution())"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst\\n'\n\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n2"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'First\\nSecond'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('abcde') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Mike\\nAnn\\nAnn\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == [\"Mike\", \"Ann\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\\n\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcde\") == \"Mike\"\nassert solution(\"fedcba\") == \"Mike\"\nassert solution(\"gfedcba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == [\"Mike\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abba') == ['Mike']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def', 'def', 'def']"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution(stdin='3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\nassert solution(stdin='3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\", \"Test Case 1\"\n\nassert solution() == \"0\", \"Test Case 2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"Expected 0, but got {} instead\".format(solution())\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\", \"Incorrect output\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\", \"The code is not correct.\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 4) == \"ababacd\"\nassert solution(4, 7) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"ababacd\"\nassert solution() == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4\n1 2 1 2\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n10\n1 1 2 2 2 1 1 2 2 1\n\"\"\"\n) == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\", \"Incorrect output\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\", \"The output is not correct.\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n1 2 1 2\\n\") == \"Output\\n4\\n\\n\"\nassert solution(\"Input\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"Output\\n9\\n\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2\\n-\\n2\\n+'\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3') == '6\\n++-\\n2\\n+-+'\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n2 2 1\n1 1 2\n2 2 1\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n\"\"\") == \"6\\n+-\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n-2\\n2\\n+2\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"6 6 3\") == \"6\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3') == '6\\n++-+\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\", \"Incorrect output for example 1\"\nassert solution(\"18906\") == \"18690\", \"Incorrect output for example 2\"\nassert solution(\"0\") == \"0\", \"Incorrect output for example 3\"\nassert solution(\"19876\") == \"0\", \"Incorrect output for example 4\"\nassert solution(\"1689\") == \"1869\", \"Incorrect output for example 5\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test 1\"\nassert solution(\"18906\") == \"18690\", \"Test 2\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"18899\") == \"0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"4 2\n1 3\n3 4\n\nInput\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\nOutput\n-1\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\nOutput\n-1\"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\nOutput\n3\"\"\"\n) == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\nprint('All tests passed!')"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\\"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n2 3\\n3 4\\n\\n-1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n2 3\\n3 4\\n\\n3') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n2 3\\n3 4\\n\\n3') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n2 3\\n3 4\\n\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n2 3\\n3 4\\n\\n5 1\\n1 2\\n2 3\\n3') == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Expected '{output_str}', got '{solution(input_str)}'.\"\nfor i, (input_str, output_str) in enumerate(zip(input_data, output_data)):\n    print(f\"Example {i+1}:\")\n    print(\"Input\")\n    print(input_str)\n    print(\"Output\")\n    print(output_str)"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 7') == '3'\nassert solution('3 4 3 1') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\", \"Please provide the correct input\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\", \"Incorrect output\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\", \"Incorrect output\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n4 8 5''') == '9'\nassert solution('''5\n3 10 2 1 5''') == '2'\nassert solution('''4\n0 5 15 10''') == '0'\nassert solution('''1\n1''') == '-1'\nassert solution('''1\n2\n3\n4\n5''') == '17'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Test failed for input {input} and expected output {expected_output}\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"example.txt\").read()) == \"9\\n\"\nassert solution(open(\"example2.txt\").read()) == \"2\\n\"\nassert solution(open(\"example3.txt\").read()) == \"0\\n\"\nassert solution(open(\"example4.txt\").read()) == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in test_cases"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4 5\\n3 5 7 10\\n') == '3'\nassert solution('13 4 5\\n7 8 9 10\\n') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"\n\ninput_ = \"\"\"\n10 4 5\n3 5 7 10\n13 4 5\n7 8 9 10\n\"\"\"\n\noutput_ = \"3\"\n\nprint(solution(input_))  # expected output: 3\n\ninput_ = \"\"\"\n13 4 5\n7 8 9 10\n\"\"\"\n\noutput_ = \"1\"\n\nprint(solution(input_))  # expected output: 1"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4 5\\n3 5 7 10\\n') == '3\\n'\nassert solution('13 4 5\\n7 8 9 10\\n') == '1\\n'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect\"\nassert solution() == \"4\", \"Your solution is incorrect\"\nassert solution() == \"6\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Expected 2, got: {} instead\".format(solution())"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2\nassert solution() == 4\nassert solution() == 6\nassert solution() == 2\nassert solution() == 4\nassert solution() == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"Test failed\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n3\\n101\\n3 3\\n3 2\\n3 1') == 'Output\\n2\\n'\nassert solution('Input\\n4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == 'Output\\n4\\n'\nassert solution('Input\\n6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == 'Output\\n6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1111\", \"Expected 1111, but got {}\".format(solution())\n\nassert solution() == \"01010\", \"Expected 01010, but got {}\".format(solution())\n\nassert solution() == \"1011011\", \"Expected 1011011, but got {}\".format(solution())"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1111\\n\", \"The first test case is not correct.\"\nassert solution(\"5 3\") == \"01010\\n\", \"The second test case is not correct.\"\nassert solution(\"7 3\") == \"1011011\\n\", \"The third test case is not correct.\"\nassert solution(\"4 3\") == \"1111\\n\", \"The fourth test case is not correct.\"\nassert solution(\"5 4\") == \"01010\\n\", \"The fifth test case is not correct.\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 4\n\"\"\") == \"1111\"\n\nassert solution(\"\"\"5 3\n\"\"\") == \"01010\"\n\nassert solution(\"\"\"7 3\n\"\"\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1111'\nassert solution(stdin) == '01010'\nassert solution(stdin) == '1011011'\n\nassert solution(stdin) == '1111'\nassert solution(stdin) == '01010'\nassert solution(stdin) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1111\", \"Incorrect output: \" + solution()"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1111\", \"Test 1 failed\"\nassert solution(input()) == \"01010\", \"Test 2 failed\"\nassert solution(input()) == \"1011011\", \"Test 3 failed\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1111\", \"Please provide a correct answer for the problem.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n\nfrom fractions import gcd\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n') == '1/2\\n0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1\\n2\\n') == '1/2\\n'\nassert solution(stdin='3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0/1\"\nassert solution(1) == \"1/2\"\nassert solution(4) == \"1/1\"\nassert solution(10) == \"1/1\"\nassert solution(100) == \"1/1\"\nassert solution(1000000000) == \"1/1\"\nassert solution
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"The output of the test case is incorrect. Please check the solution and input data.\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"1 0 1 0 0\\n4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6''') == ['1 0 1 0 0']\n\nassert solution('''5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1''') == ['4 3 2 1 0']"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"Input\\n5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n4 3 2 1 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"Test case {case} failed: expected output {expected_output}, but got {solution(input_string)}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\n\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'\n\nfrom typing import List"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n\\n\\n\\n0\\n1\\n\\n\\n\\n\\n\\n1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\"\"\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Testcase {test_case_number} failed. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000''', \"The solution is incorrect.\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1\nprint(\"Test Passed\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\nassert solution(stdin=\"5\\n1 2 3 4 5\\n6 7 8 9 10\\n7 8 9 10 11\\n8 9 10 11 12\\n9 10 11 12 13\\n10 11 12 13 14\\n\") == \"1\\n\"\nassert solution(stdin=\"10\\n0 1 2 3 4 5 6 7 8 9\\n0 4 6 1 5 9 2 8 10 3\\n1 6 7 2 8 10 3 9 11 4\\n2 7 5 3 9 10 4 12 13 5\\n3 5 7 4 12 13 6 10 14 7\\n4 8 10 5 13 14 9 15 16 8\\n5 9 11 6 15 16 10 16 17 9\\n6 11 13 7 14 17 11 12 15 11\\n7 12 14 8 16 16 12 17 15 12\\n8 13 15 9 17 16 13 17 18 13\\n9 14 16 10 15 18 14 16 19 14\\n10 16 17 11 16 18 15 17 19 15\\n11 17 15 12 17 19 16 19 20 16\\n12 18 16 13 18 19 17 19 21 17\\n13 19 17 14 19 20 18 19 22 18\\n14 18 19 15 19 22 19 23 20\\n15 19 21 16 19 23 21 23 24\\n16 19 22 17 19 24 22 24 25\\n17 19 23 18 19 25 23 25 26\\n18 19 24 19 25 26 24 26 27\\n19 19 25 20 19 27 25 27 28\\n20 19 26 21 19 28 26 28 29\\n21 19 27 22 19 29 27 29 30\\n22 19 28 23 19 30 28 30 31\\n23 19 29 24 19 31 29 31 32\\n24 19 30 25 19 32 30 32 33\\n25 19 31 26 19 33 31 33 34\\n26 19 32 27 19 34 32 34 35\\n27 19 33 28 19 35 33 35 36\\n28 19 34 29 19 36 34 36 37\\n29 19 35 30 19 37 35 "
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', \"Output should be 1 but instead is {}\".format(solution(input()))"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1\\n'\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\n"
    }
]