[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 79, \"Test failed!\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\", \"Test 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\", \"Test 2\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\", \"Test 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\", \"Test 4\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\", \"Test 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the value of the given bracket sequence.\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\", \"Sample Input 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\", \"Sample Input 2\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\", \"Sample Input 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\", \"Sample Input 4\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\", \"Sample Input 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"79\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == 0, \"Test failed\"\nassert solution(\"009990001\") == 3, \"Test failed\"\nassert solution(\"29998\") == 5, \"Test failed\"\nassert solution(\"610\") == 4, \"Test failed\"\nassert solution(\"981\") == 2, \"Test failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\nassert solution(\"0011\") == \"0\"\nassert solution(\"0123\") == \"2\"\nassert solution(\"0001234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter a number: \")) == output, f\"Expected '{output}', got '{solution(input(\"Enter a number: \"))}'.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == 0, \"Error: Please enter an integer.\"\nassert solution(\"009990001\") == 3, \"Error: Please enter an integer.\"\nassert solution(\"29998\") == 5, \"Error: Please enter an integer.\"\nassert solution(\"610\") == 4, \"Error: Please enter an integer.\"\nassert solution(\"981\") == 2, \"Error: Please enter an integer.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The given input '{input()}' is incorrect. Expected output '{expected}', but got '{solution(input())}'.\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"seems legit\" # correct output\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"tampered odometer\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(4) == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\", \"Test 1\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\", \"Test 2\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\", \"Test 3\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\", \"Test 4\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\n\nassert solution(stdin=\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\") == \"insufficient service\"\n\nassert solution(stdin=\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n\nassert solution(stdin=\"\"\"\n2\n2013 1 0\n2013 2 0\n\"\"\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"seems legit\", \"Test 1 failed.\"\nassert solution(sample_input_2) == \"insufficient service\", \"Test 2 failed.\"\nassert solution(sample_input_3) == \"tampered odometer\", \"Test 3 failed.\"\nassert solution(sample_input_4) == \"seems legit\", \"Test 4 failed.\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 1:3\\n\\n4\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n2\\nSample Output 2:2\\n\\n5\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3:2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 4:4\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1\\n2\\n3\\n4\\n5\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 1:2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 2:2\\n\\n5\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3:2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 4:4\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 1:2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 2:2\\n\\n5\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3:2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 4:4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 1:4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 2:4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 3:4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\nSample Output 4:4\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"No solution.\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"9\") == \"2\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input 1\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\nInput 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nInput 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nInput 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"Output 1\\n3\\nOutput 2\\n2\\nOutput 3\\n2\\nOutput 4\\n4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input {stdin}, expected {expected}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input {input()} expected output {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n2 4\\nSample Output 1: 3\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 2: 2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 3: 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4: 4\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 1: 2\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 2: 2\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 3: 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4: 4\" ) == \"2\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1: 2\\n\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2: 3\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3: IMPOSSIBLE\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4: IMPOSSIBLE\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1\\nWHITE\\nSample Output 5: IMPOSSIBLE\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Sample Input {input_num}:\\n{stdin}\\nExpected Output {expected}\\nOutput: {solution(stdin)}\"\ninput_num += 1"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Solution should return {output}, but instead returned {solution(stdin)}\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\"\n\nfrom typing import List\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Invalid output\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Invalid output\"\nassert solution(\"PRIME\") == \"5\", \"Invalid output\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Invalid output\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Test 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"The solution is not correct.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"The solution is not correct.\"\nassert solution(\"PRIME\") == \"5\", \"The solution is not correct.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"The solution is not correct.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Wrong output for sample input 1.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Wrong output for sample input 2.\"\nassert solution(\"PRIME\") == \"5\", \"Wrong output for sample input 3.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Wrong output for sample input 4.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Test Case 1\"\nassert solution(\"GGGGGGGGG\") == 1, \"Test Case 2\"\nassert solution(\"PRIME\") == 5, \"Test Case 3\"\nassert solution(\"BABBABABBABBA\") == 6, \"Test Case 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Input 2\"\nassert solution(\"PRIME\") == \"5\", \"Sample Input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Input 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    D 1\n    D 2\n    E\n    D 3\n    D 1\n    E\n    '''\n) == '0'\n\nassert solution(\n    '''\n    D 2\n    D 1\n    E\n    D 1\n    D 2\n    E\n    '''\n) == '1'\n\nassert solution(\n    '''\n    I 1 X\n    D 1\n    E\n    E\n    '''\n) == '0'\n\nassert solution(\n    '''\n    I 14 B\n    I 14 A\n    E\n    I 14 A\n    I 15 B\n    E\n    '''\n) == '0'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input_1.txt\").read()) == \"0\"\nassert solution(open(\"input_2.txt\").read()) == \"1\"\nassert solution(open(\"input_3.txt\").read()) == \"0\"\nassert solution(open(\"input_4.txt\").read()) == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\", \"Error: Incorrect output for sample input 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\", \"Error: Incorrect output for sample input 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\", \"Error: Incorrect output for sample input 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"Error: Incorrect output for sample input 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\", \"Test 1\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\", \"Test 2\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\", \"Test 3\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\", \"Test 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('inputs/input1.txt', 'r').read()) == '300\\n'\nassert solution(open('inputs/input2.txt', 'r').read()) == '1900\\n'\nassert solution(open('inputs/input3.txt', 'r').read()) == '2300\\n'\nassert solution(open('inputs/input4.txt', 'r').read()) == '399\\n'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 0 1 0 0 0\n    \"\"\"\n) == \"300\"\n\nassert solution(\n    \"\"\"\n    5 0 1 0 1 0\n    \"\"\"\n) == \"1900\"\n\nassert solution(\n    \"\"\"\n    6 0 1 1 0 0\n    \"\"\"\n) == \"2300\"\n\nassert solution(\n    \"\"\"\n    10 399 0 0 0 0\n    \"\"\"\n) == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 300, \"Solution does not work as expected\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 399, \"The correct answer is 399, but it is actually {}\".format(solution())"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('tests/test_case_1.txt', 'r').read()) == '300\\n'\nassert solution(open('tests/test_case_2.txt', 'r').read()) == '1900\\n'\nassert solution(open('tests/test_case_3.txt', 'r').read()) == '2300\\n'\nassert solution(open('tests/test_case_4.txt', 'r').read()) == '399\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 10\n    1 12\n    1 13\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 12\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 4\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"1 5\\n1 12\\n4 1\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\nassert solution(\"2 10\\n1 5 4 1\") == \"2\\n\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2\\n'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2\\n'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\"\n\nsolution(stdin)"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10\\n1 12\\n1 13') == 2\nassert solution('2 10\\n1 5\\n1 12') == 2\nassert solution('2 10\\n1 5\\n1 4') == 2\nassert solution('2 10\\n1 5\\n4 1') == 2"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 12\\n1 13\\n2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"1 12\\n1 13\\n2 10\\n1 5\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input:\\n{input()}\\nOutput:\\n{output}\\nYour answer: {solution(input())}\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28'\n\nassert solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8''') == '36.2842712475'\n\nassert solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3''') == '28.970562748'\n\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '28', 'The output is incorrect.'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\"\n) == 28\n\nassert solution(\n    \"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\"\n) == 36.2842712475\n\nassert solution(\n    \"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\"\n) == 28.970562748\n\nassert solution(\n    \"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\"\n) == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28.0\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32.0\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    1 3 9 5\n    2 2 6 8\n    4 8 9 3\n    ''') == '3'\n\nassert solution('''\n    3\n    5 2 7 10\n    7 4 4 10\n    2 4 10 8\n    ''') == '1'\n\nassert solution('''\n    3\n    2 1 6 5\n    2 5 5 4\n    5 1 7 7\n    ''') == '1'\n\nassert solution('''\n    2\n        -1 -2 -1 -1\n        -1 2 -1 -1\n    ''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(stdin=\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(stdin=\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(stdin=\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"Your solution does not match the expected output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\"\n\nfrom collections import Counter"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed. Solution provided is incorrect.\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Please check the examples and the problem statement for more information.\"\n\nfrom typing import List"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'Output'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"10\", \"Test Case 1\"\nassert solution(\"55\") == \"55\", \"Test Case 2\"\nassert solution(\"101\") == \"-1\", \"Test Case 3\"\nassert solution(\"1234321\") == \"94708\", \"Test Case 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 10, \"Expected Output: 10, Actual Output: \" + str(solution(10))\nassert solution(55) == 55, \"Expected Output: 55, Actual Output: \" + str(solution(55))\nassert solution(101) == -1, \"Expected Output: -1, Actual Output: \" + str(solution(101))\nassert solution(1234321) == 94708, \"Expected Output: 94708, Actual Output: \" + str(solution(1234321))"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 10, \"Test case 1 failed\"\nassert solution(55) == 55, \"Test case 2 failed\"\nassert solution(101) == -1, \"Test case 3 failed\"\nassert solution(1234321) == 94708, \"Test case 4 failed\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == 10\nassert solution(\"55\") == 55\nassert solution(\"101\") == -1\nassert solution(\"1234321\") == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Output '{solution(input())}' is not equal to expected output '{expected}'.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 0, 0, 5) == 2, \"Sample Input 2\"\nassert solution(1, 2, 0, 0, 4) == 4, \"Sample Input 3\"\nassert solution(1, 2, 0, 0, 6) == 0, \"Sample Input 4\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('') == ''"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"6\"\nassert solution(2) == \"2\"\nassert solution(3) == \"4\"\nassert solution(4) == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0 0 3\") == 6\nassert solution(\"1 2 0 0 5\") == 2\nassert solution(\"1 2 0 0 4\") == 4\nassert solution(\"1 2 0 0 6\") == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(f\"\"\"\n0.5 -5.301 3.098\n\"\"\") == \"\"\"\n-1.26167861 3.88425357\n\"\"\"\n\nassert solution(f\"\"\"\n0.5 8 8\n\"\"\") == \"\"\"\n9.21068947 2.56226688\n\"\"\"\n\nassert solution(f\"\"\"\n1 8 8\n\"\"\") == \"\"\"\n6.22375968 -0.31921472\n\"\"\"\n\nassert solution(f\"\"\"\n0.5 -8 8\n\"\"\") == \"\"\"\n-4.36385220 9.46891588\n\"\"\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}\\nExpected: {output}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 -10000 -10000\\n1 8 8\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 -10000 -10000\") == \"-4.36385220 9.46891588\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\n\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 10000\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 10000\") == \"9.21068947 2.56226688\"\nassert solution(\"0.5 0.5 10000\\n-10000 10000 1"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == (\"-1.26167861\", \"3.88425357\")\nassert solution(\"0.5 8 8\") == (\"9.21068947\", \"2.56226688\")\nassert solution(\"1 8 8\") == (\"6.22375968\", \"-0.31921472\")\nassert solution(\"0.5 -8 8\") == (\"-4.36385220\", \"9.46891588\")\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='0.5 -5.301 3.098\\n0.5 8 8\\n0.5 -8 8\\n1 8 8\\n0.5 0.5 1') == '9.21068947 2.56226688\\n9.21068947 2.56226688\\n6.22375968 -0.31921472\\n-4.36385220 9.46891588\\n'\nassert solution(stdin='0.5 -0.5 -1\\n0.5 1 1\\n0.5 0.5 1') == '0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n'\nassert solution(stdin='0.5 -1 1\\n0.5 0.5 1\\n0.5 1 1\\n0.5 0.5 1\\n0.5 -1 1\\n') == '0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n'\nassert solution(stdin='0.5 -0.5 -0.5\\n0.5 1 1\\n0.5 0.5 1\\n0.5 0.5 1\\n0.5 -1 1\\n0.5 -0.5 -0.5\\n') == '0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n'\nassert solution(stdin='0.5 0.5 1\\n0.5 -1 1\\n0.5 1 1\\n0.5 -0.5 -0.5\\n0.5 -1 1\\n0.5 0.5 1\\n') == '0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n'\nassert solution(stdin='0.5 -0.5 -0.5\\n0.5 -1 1\\n0.5 1 1\\n0.5 0.5 1\\n0.5 -1 1\\n0.5 -0.5 -0.5\\n') == '0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n0.00000000 0.00000000\\n'\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\nfrom typing import List"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(stdin=stdin))) == \"5.2999999999999995 1.5499999999999996\"\nassert solution(solution(solution(stdin=stdin))) == \"8.329999999999999 3.9299999999999997\"\nassert solution(solution(solution(stdin=stdin))) == \"3.6499999999999998 -4.4899999999999995\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098\\n') == '0.49451777 -1.25543039'\nassert solution('0.5 8 8\\n') == '12.03015630 2.56482066'\nassert solution('1 8 8\\n') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8\\n') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n2\\n1\\n'\nassert solution() == '1\\n1\\n'\nassert solution() == '0\\n2\\n'\nassert solution() == '2\\n4\\n5\\n'\nassert solution() == '2\\n4\\n5\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n1\\n0\\n2\\n4\\n5'\nassert solution(open('input2.txt', 'r')) == '1\\n1\\n1\\n1\\n2'\nassert solution(open('input3.txt', 'r')) == '0\\n0\\n2\\n2\\n4\\n4'\nassert solution(open('input4.txt', 'r')) == '2\\n4\\n5'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Sample Input 1') == '1\\n2'\nassert solution('Sample Input 2') == '1\\n1'\nassert solution('Sample Input 3') == '0'\nassert solution('Sample Input 4') == '2\\n4'\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"1\\n2\"\n\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\") == \"1\\n1\"\n\nassert solution(\"\"\"\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\"\"\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['1', '2', '1']\nassert solution() == ['1', '1']\nassert solution() == ['0']\nassert solution() == ['2', '4']"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1\\n2'\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1\\n1'\n\nassert solution('''\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n''') == '0'\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2\\n4\\n5'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1, f\"Test case 1 failed: {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Test case 2 failed: {solution(input_2)}\"\nassert solution(input_3) == output_3, f\"Test case 3 failed: {solution(input_3)}\"\nassert solution(input_4) == output_4, f\"Test case 4 failed: {solution(input_4)}\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n\"\"\") == \"infinity\"\n\nassert solution(\"\"\"\n4 5 1 5\n0 1 1\n1 2 1\n2 0 1\n2 3 1\n3 0 1\n2 4 1\n\"\"\") == \"infinity\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4 2 1 2 1\n    2 1 2\n    2 3 4\n    ''') == '6\\n'\n\nassert solution('''\n    3 3 1 1\n    1 1\n    2 2 3\n    ''') == '0\\n'\n\nassert solution('''\n    3 2 2 3\n    1 1\n    2 2 3\n    ''') == '18\\n'\n\nassert solution('''\n    3 1 2 3\n    2 1 2\n    0\n    ''') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"\n\ni = 1\nstdin = input()\nexpected_output = solution(stdin)\nsolution(stdin)"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\") == \"12\"\nassert solution(\"4 1 2 3 1\") == \"30\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\"\nassert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 2 1 2 1\n    2 1 2\n    2 3 4\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    3 3 1 1\n    1 1\n    2 2 3\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 2 2 3\n    1 1\n    2 2 3\n    \"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"\n    3 1 2 3\n    2 1 2\n    0\n    \"\"\"\n) == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output\nprint(f\"Output: {solution(stdin=input())}\")"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed: solution returned {solution(input())}, expected {output}\" for i, (input, output) in enumerate([(1000000, 468559), (1000000, 49401), (1000000, 20), (9000000000000000000, 1)]), i + 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {stdin} and expected output {expected_output}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1000000 1\") == \"468559\"\nassert solution(stdin=\"1000000 5\") == \"49401\"\nassert solution(stdin=\"1000000 16\") == \"20\"\nassert solution(stdin=\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect. Please check the implementation and try again.\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 9\\n5 4 1') == '1\\n'\nassert solution('4 13\\n2 2 2 2') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\n\"\nassert solution() == \"3\\n\", \"Expected output: 3\\n\"\nassert solution() == \"12\\n\", \"Expected output: 12\\n\"\nassert solution() == \"1\\n\", \"Expected output: 1\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 12"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 9\\n5 4 1') == '1\\n'\nassert solution('4 13\\n2 2 2 2') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '12', 'Incorrect output'\nassert solution() == '3', 'Incorrect output'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input(1)) == 0\nassert solution(sample_input(2)) == 3\nassert solution(sample_input(3)) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 0\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Sample Input {input()}, Output {output}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 5, \"Correct output for Sample Input 3\"\nassert solution(1) == 0, \"Correct output for Sample Input 1\"\nassert solution(2) == 0, \"Correct output for Sample Input 2\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3, \"Expected output 3, got {}\".format(solution(3))\nassert solution(4) == 1, \"Expected output 1, got {}\".format(solution(4))\nassert solution(5) == 5, \"Expected output 5, got {}\".format(solution(5))"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\nfrom typing import List"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == \"4\"\nassert solution(149) == \"17\"\nassert solution(123476544) == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"17\"\nassert solution(sample_input_3) == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 4, \"The solution is incorrect\"\nassert solution(149) == 17, \"The solution is incorrect\"\nassert solution(123476544) == 11112, \"The solution is incorrect\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4, \"The output is incorrect.\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\nfcb\") == \"AMBIGUOUS\"\n\nfrom typing import List"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(stdin=\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    'd 4\\n'\n    'cab\\n'\n    'cda\\n'\n    'ccc\\n'\n    'badca\\n'\n) == 'adcb\\n'\n\nassert solution(\n    'c 4\\n'\n    'abc\\n'\n    'bca\\n'\n    'cab\\n'\n    'aca\\n'\n) == 'IMPOSSIBLE\\n'\n\nassert solution(\n    'f 2\\n'\n    'dea\\n'\n    'cfb\\n'\n) == 'AMBIGUOUS\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'adcb'\nassert solution(open('sample_input2.txt', 'r')) == 'IMPOSSIBLE'\nassert solution(open('sample_input3.txt', 'r')) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"adcb\"\nassert solution() == \"IMPOSSIBLE\"\nassert solution() == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\") == 9, \"Test case 1 failed.\"\nassert solution(\"10 20 0 0\") == 10, \"Test case 2 failed.\"\nassert solution(\"100 20 543 12\") == 164, \"Test case 3 failed.\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\\n164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3 3 3\n    \"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n    10 20 0 0\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    100 20 543 12\n    \"\"\"\n) == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 9, \"3 cases test\"\nassert solution(10) == 10, \"10 cases test\"\nassert solution(100) == 164, \"100 cases test\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    Sample Input 1:\n    2 3 3 3\n    Sample Output 1:\n    9\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    Sample Input 2:\n    10 20 0 0\n    Sample Output 2:\n    10\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    Sample Input 3:\n    100 20 543 12\n    Sample Output 3:\n    164\n    \"\"\"\n) == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\") == 9, \"Test case 1 failed\"\nassert solution(\"10 20 0 0\") == 10, \"Test case 2 failed\"\nassert solution(\"100 20 543 12\") == 164, \"Test case 3 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed with input {input()}, expected output {output()}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Input: {input}\\nExpected Output: {expected}\\nOutput: {solution(input)}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    4 2 3\n    0 1\n    1 0\n    -1 0\n    0 -1\n    -1 1 0\n    2 1 0\n    ''') == 'yes'\n\nassert solution('''\n    4 3 3\n    0 1\n    1 2\n    -1 2\n    0 -1\n    -1 1 -2\n    -1 -1 2\n    0 -1 0\n    ''') == 'no'\n\nassert solution('''\n    3 2 3\n    2 1\n    0 0\n    -1 -2\n    1 1 -2\n    3 6 12\n    ''') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\", \"Expected 'yes' but got '{}'\".format(solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\"))\n\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\", \"Expected 'no' but got '{}'\".format(solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\"))\n\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\", \"Expected 'yes' but got '{}'\".format(solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\"))"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"no\"\nassert solution(sample_input3) == \"yes\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\", \"Test 1\"\nassert solution(\"12121131221\") == \"7\", \"Test 2\"\nassert solution(\"123456789\") == \"1\", \"Test 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"652526\") == \"4\"\nassert solution(r\"12121131221\") == \"7\"\nassert solution(r\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'652526') == '4'\nassert solution(r'12121131221') == '7'\nassert solution(r'123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 800, \"Test Failed\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == 0\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == 24\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"0\", \"Expected output: 0\"\nassert solution(sample_input2) == \"24\", \"Expected output: 24\"\nassert solution(sample_input3) == \"800\", \"Expected output: 800\"\n\nsample_input1 = \"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\"\n\nsample_input2 = \"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\"\n\nsample_input3 = \"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '0'\nassert solution(open('input2.txt').read()) == '24'\nassert solution(open('input3.txt').read()) == '800'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output a single integer, indicating the maximum amount of gold that the bandits can purloin and still get safely home.\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n\nfor i, test_case in enumerate(test_input):\n    try:\n        n, m = map(int, test_case.split())\n        g = list(map(int, input().split()))\n        road_map = [list(map(int, input().split())) for _ in range(m)]\n        max_gold = sum(g[0] * (n - i - 1) + g[1] for i in range(n))\n        for i in range(n - 1):\n            for j in range(m - 1):\n                a, b = road_map[i][j], road_map[i][j + 1]\n                if i == a - 1 and j == b - 1:\n                    continue\n                max_gold = max(max_gold, sum(g[0] * (n - i - 1) + g[1] for k in range(a, b) if k!= i) + sum(g[0] * (n - i - 1) + g[1] for k in range(b + 1, n)))\n        print(max_gold)\n    except Exception as e:\n        print(\"Error at test case\", i + 1, \":\", e)"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Input '{stdin}' not matched with output '{output}'\"\n\nfor line in [\"\", \"\\n\"]:\n    stdin, output = line.strip(), \"\"\n    assert solution(stdin) == output, f\"Input '{stdin}' not matched with output '{output}'\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n'\nassert solution('4\\n2 1 4 3\\n') == '-1\\n'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: Input {input()} should produce output {output}, but it produced {solution(input())}.\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\", \"The output is not correct\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\", \"The output is not correct\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\", \"The output is not correct\"\n\nfrom typing import List"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\", \"Test 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\", \"Test 2\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\", \"Test 3\"\n\nfrom typing import List"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 4\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_solution.py')) == '1 4\\n'\nassert solution(open('test_solution.py')) == '1 4\\n'\nassert solution(open('test_solution.py')) == '1 4\\n'\nassert solution(open('test_solution.py')) == '1 4\\n'\nassert solution(open('test_solution.py')) == '-1\\n'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 8\nassert solution() == 8\nassert solution() == 8\nassert solution() == 8\nassert solution() == 8"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n') == '8\\n'\nassert solution('3 3\\n...\\n.#.\\n...\\n') == '1\\n'\nassert solution('2 6\\n.#####\\n#####.\\n') == '5\\n'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read().strip()) == \"8\", \"The given code is not working as expected. Please fix the code and test again.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 8, \"Your solution is incorrect.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\", \"The solution should return 8.\"\nassert solution(stdin) == \"1\", \"The solution should return 1.\"\nassert solution(stdin) == \"5\", \"The solution should return 5.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"8\\n\"\nassert solution(input2) == \"1\\n\"\nassert solution(input3) == \"5\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test case {i + 1} failed. Got: '{solution(stdin: str)}', expected: '{expected_output}'\" for i, expected_output in enumerate(test_cases)"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 8\nassert solution(input()) == 8"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == 8\n\nassert solution('''\n3 3\n...\n.#.\n...\n''') == 1\n\nassert solution('''\n2 6\n.#####\n#####.\n''') == 5"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {output}\\n\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 5 5\n    2 1 1 1 2\n    5 3 4 4 3\n    4 3 3 3 2\n    3 1 3 3 1\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    3 3 3\n    3 1 1\n    1 3 2\n    3 2 3\n    \"\"\"\n) == \"13\"\n\nassert solution(\n    \"\"\"\n    3 2 2\n    1 2\n    2 1\n    1 2\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == -1\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\\n\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n6 6 6\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n5 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output\nfor i in range(2, N):\n    assert parents[i] == parents[i-1]\nprint(f\"{L} {M}\")"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n\") == \"\"\nassert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\"\n\nfrom math import isprime"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5 1\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1 5\\n\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 5\", \"Incorrect output for sample Input 1\"\nassert solution(stdin) == \"3 2\", \"Incorrect output for sample Input 2\"\nassert solution(stdin) == \"3 2\", \"Incorrect output for sample Input 3\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '''1 5'''\n\nassert solution('''\n5\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '''3 2'''\n\nassert solution('''\n4\n1\n5\n3\n6\n1\n2\n3\n''') == '''3 2'''"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"your_answer_here\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    ''') == '1'\n\nassert solution('''\n    5\n    4 0\n    3 1\n    2 2\n    1 3\n    0 4\n    ''') == '5'\n\nassert solution('''\n    6\n    3 0\n    1 1\n    2 1\n    3 1\n    4 1\n    5 1\n    ''') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(4) == 5\nassert solution(5) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5, \"Your implementation is incorrect.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"Output a single integer representing the number of nodes in the largest subset satisfying the Heap Property.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"5\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"\n    5\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    \"\"\"), \"Expected Output: 1\\n\" # Expected Output: 1\n\nassert solution( \"\"\"\n    5\n    4 0\n    3 1\n    2 2\n    1 3\n    0 4\n    \"\"\"), \"Expected Output: 5\\n\" # Expected Output: 5\n\nassert solution( \"\"\"\n    6\n    3 0\n    1 1\n    2 1\n    3 1\n    4 1\n    5 1\n    \"\"\"), \"Expected Output: 5\\n\" # Expected Output: 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1'\nassert solution(open('input2.txt', 'r').read()) == '5'\nassert solution(open('input3.txt', 'r').read()) == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == 5"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"\"\"\n4\n3\n4\n5\n6\n\"\"\"\n\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"\"\"\n0\n\"\"\"\n\nassert solution(open(\"test_input_3.txt\", \"r\").read()) == \"\"\"\n5\n1\n2\n3\n6\n7\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n\"\"\") == \"4\\n3\\n4\\n5\\n6\\n\"\n\nassert solution(\"\"\"8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n\"\"\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4\\n3\\n4\\n5\\n6\\n'\n\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0\\n'\n\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n0\n1\n3\n5\n6\n\"\"\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n4\n3\n4\n5\n6\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5', 'Your solution is incorrect.'\nassert solution() == '6', 'Your solution is incorrect.'\nassert solution() == '30', 'Your solution is incorrect.'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\nSample Output 1:\\n5\\nSample Input 2:\\n2 1\\nSample Output 2:\\n6\\nSample Input 3:\\n1 2\\nR10 V1 V2 V1 E\\nSample Output 3:\\n30\\ndef solution(stdin: str) -> str: pass') == '5\\n'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\nSample Output 2:\\n6\\nSample Input 3:\\n1 2\\nR10 V1 V2 V1 E\\nSample Output 3:\\n30\\ndef solution(stdin: str) -> str: pass') == '6\\n'\nassert solution('1 2\\nR10 V1 V2 V1 E\\nSample Output 3:\\n30\\ndef solution(stdin: str) -> str: pass') == '30\\n'\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5\\n'\nassert solution(open('input2.txt', 'r').read()) == '6\\n'\nassert solution(open('input3.txt', 'r').read()) == '30\\n'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Output mismatch: got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of memory banks and the number of variables: \")) == \"The minimum number of instructions required is: 5\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '30'\nassert solution() == '6'\nassert solution() == '5'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == \"38\\n\"\nassert solution(\"10 11\") == \"impossible\\n\"\nassert solution(\"9 216\") == \"546\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 24\") == \"38\", \"Solution 1\"\nassert solution(\"10 11\") == \"impossible\", \"Solution 2\"\nassert solution(\"9 216\") == \"546\", \"Solution 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 24\\n\") == \"38\\n\"\nassert solution(\"10 11\\n\") == \"impossible\\n\"\nassert solution(\"9 216\\n\") == \"546\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 24\") == \"38\\n\"\nassert solution(\"10 11\") == \"impossible\\n\"\nassert solution(\"9 216\") == \"546\\n\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10, 24) == 38, \"Test 1 Failed\"\nassert solution(10, 11) == \"impossible\", \"Test 2 Failed\"\nassert solution(9, 216) == 546, \"Test 3 Failed\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 24') == 38\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == 38\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == 546"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {case_num} failed. Solution output: {solution(solution_input)}, expected output: {solution_output}\" for case_num, solution_input, solution_output in enumerate(zip(solution_inputs, solution_outputs)):\n    assert solution(solution_input) == solution_output, f\"Test case {case_num} failed. Solution output: {solution(solution_input)}, expected output: {solution_output}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"466.662\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '466.662'\nassert solution(open('input2.txt', 'r')) == '10.00005'\nassert solution(open('input3.txt', 'r')) == '2.0'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    20 60 2 1\n    5 15 0.33333 30\n    22 60 0.66666 70\n    0 10\n    \"\"\"\n) == 466.662\n\nassert solution(\n    \"\"\"\n    3 4 2 1\n    1 3 0.25 8\n    2 4 0.66667 15\n    1 2\n    \"\"\"\n) == 10.00005\n\nassert solution(\n    \"\"\"\n    3 4 1 0\n    0 2 0.25 8\n    \"\"\"\n) == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"466.662\", \"The given test cases are invalid.\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"466.662\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', Got: '{solution(stdin)}'\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == 1.5\nassert solution(\"blue red 1.0\\nred pink 1.5\\n\") == 0\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == 10"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.5\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == 1.5\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == 0\nassert solution('3\\nblue pink 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == 10"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\\n\"\n\nfrom typing import List\nfrom functools import reduce"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '1.500000000000000'\nassert solution(sample_input2) == '0.000000000000000'\nassert solution(sample_input3) == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.5000000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.0000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.0000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\noffice apple 1.9\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1.500000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\") == \"180\"\n\nassert solution(\"\"\"\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n\"\"\") == \"22\"\n\nassert solution(\"\"\"\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '180\\n'\nassert solution(open('input2.txt', 'r')) == '22\\n'\nassert solution(open('input3.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"too many\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\") == \"180\"\n\nassert solution(\"\"\"3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n\"\"\") == \"22\"\n\nassert solution(\"\"\"3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '20 20'\nassert solution(open('input2.txt', 'r').read()) == '17 17'\nassert solution(open('input3.txt', 'r').read()) == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}\"\nassert solution(input3) == output3, f\"Test 3 failed: {solution(input3)}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"17 17\"\nassert solution(\"3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"-1 -1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\\n17 17\\n-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    6 8 5\n    ........\n    ........\n        #..#...#\n        #..#####\n        #.......\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        left 4\n        up 3\n        right 7\n        down 2\n        "
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\") == \"20 20\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"20 20\\n17 17\\n-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:20 20\\n\\nSample Input 2:6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:17 17\\n\\nSample Input 3:3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\") == \"20 20\\n17 17\\n-1 -1\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(371) == 'impossible', \"Solution for input 371 should be impossible.\"\nassert solution(310) == '300', \"Solution for input 310 should be 300.\"\nassert solution(90) == '88', \"Solution for input 90 should be 88.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\n\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == '300'\n\nassert solution('90\\n2\\n2 20 35\\n2 88 200') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'impossible', 'Test failed'\nassert solution() == '300', 'Test failed'\nassert solution() == '88', 'Test failed'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'cannot fold'\n\nassert solution('''\n......\n......\n......\n......\n...#..\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n...') == 'can fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n...') == 'cannot fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n...') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'cannot fold'\n\nassert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'cannot fold'\n\nassert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\n\nassert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\".......\") == \"cannot fold\"\nassert solution(\".....#\") == \"cannot fold\"\nassert solution(\"#.....\") == \"cannot fold\"\nassert solution(\"#...##\") == \"can fold\"\nassert solution(\"....#...\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n\nfrom typing import List"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test Input 1\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Test Input 2\"\nassert solution(\"aaaa\") == \"aaa\", \"Test Input 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution should return {expected}, but returned {solution(input())} instead.\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '4', \"Test 1\"\nassert solution(3) == '4', \"Test 2\"\nassert solution(3) == '4', \"Test 3\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"The output is incorrect\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 1, 4, 2, 5) == 4\nassert solution(10, 1, 4, 2, 10005) == 6\nassert solution(10, 0, 15, 2, 10) == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"4\\n\"\nassert solution(sample_input_2) == \"6\\n\"\nassert solution(sample_input_3) == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == 4\nassert solution('2\\n1 4\\n2 10005\\n') == 6\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == '4\\n'\nassert solution('2\\n1 4\\n2 10005\\n') == '6\\n'\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == '4\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2\nassert solution(\"3\\n7 7 7\") == 3\nassert solution(\"5\\n1 2 3 2 1\") == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == f\"{2}\\n\", \"Expected 2, got {solution(stdin)}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2\\n'\nassert solution('3\\n7 7 7') == '3\\n'\nassert solution('5\\n1 2 3 2 1') == '0\\n'\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([7], [2]),\n    ([3], [3]),\n    ([5], [0]),\n]"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '3\\n'\nassert solution(open('sample_input_3.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS\\n') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == 3\nassert solution(\"1 2 1\\nGS\") == 1\nassert solution(\"2 2 10\\nS#\") == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\n\nassert solution('''\n1 2 1\nGS\n''') == '1'\n\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1: 3\\n\\nSample Input 2: 1 2 1\\nGS\\nSample Output 2: 1\\n\\nSample Input 3: 2 2 10\\nS# #G\\nSample Output 3: -1\\n') == '3\\n1\\n1\\n-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"3\", \"Sample Input 1\"\nassert solution(sample_input_2) == \"1\", \"Sample Input 2\"\nassert solution(sample_input_3) == \"-1\", \"Sample Input 3\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n3 7\\nS..\\n.#.\\n..G\\nDRRDD') == '1\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"S..\") == \"1\"\nassert solution(\"S..#\") == \"1\"\nassert solution(\"S..#S.\") == \"1\"\nassert solution(\"S..#S.G.\") == \"1\"\nassert solution(\"S..#S.G.#\") == \"1\"\nassert solution(\"S..#S.G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.#\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.#G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.#G.\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.#G..\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G.#G..G.#G..G.#G..G.#G..G\") == \"1\"\nassert solution(\"S..#S.G.#G..G.#G..G."
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n\", \"Sample Input 1\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\\n\", \"Sample Input 2\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"2\\n\", \"Sample Input 3\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n....... \\n.G.#.S. \\n....... \\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S. \\n....... \\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\", \"Your friend's command string is incorrect.\"\nassert solution(input()) == \"1\\n\", \"Your friend's command string is incorrect.\"\nassert solution(input()) == \"1\\n\", \"Your friend's command string is incorrect.\"\nassert solution(input()) == \"2\\n\", \"Your friend's command string is incorrect.\"\nassert solution(input()) == \"2\\n\", \"Your friend's command string is incorrect.\"\nassert solution(input()) == \"2\\n\", \"Your friend's command string is incorrect.\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"S..\") == \"1\\n\", \"Sample Input 1 failed.\"\nassert solution(\"S..G..#.#.#.G.G.S.G..\") == \"1\\n\", \"Sample Input 2 failed.\"\nassert solution(\"S..G..#.#.#.G.G.S.G..\") == \"2\\n\", \"Sample Input 3 failed.\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\nassert solution(open('sample_input_1.txt', 'r').read()) == '1\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == '1\\n'\nassert solution(open('sample_input_3.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1:\\n3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\nSample Output 1:\\n1000200 799\\n\") == \"1000200 799\\n\", \"Incorrect output 1\"\nassert solution(\"Sample Input 2:\\n2\\n100 0 101\\n0 200 199\\nSample Output 2:\\nuncertain\\n\") == \"uncertain\\n\", \"Incorrect output 2\"\nassert solution(\"Sample Input 3:\\n2\\n100 0 100\\n0 200 199\\nSample Output 3:\\nimpossible\\n\") == \"impossible\\n\", \"Incorrect output 3\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == output_1\nassert solution(sample_input_2) == output_2\nassert solution(sample_input_3) == output_3"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_num + 1} failed\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1000200 799\"\nassert solution() == \"uncertain\"\nassert solution() == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''1000200 799'''\nassert solution == '''uncertain'''\nassert solution == '''impossible'''"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1000200 799\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == expected_output(1)\nassert solution(sample_input(2)) == expected_output(2)\nassert solution(sample_input(3)) == expected_output(3)"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    4 7\n    9 8\n    14 17\n    19 18\n    \"\"\"\n) == \"2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    4 7\n    14 17\n    9 8\n    19 18\n    \"\"\"\n) == \"1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    4 8\n    9 7\n    14 18\n    19 17\n    \"\"\"\n) == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n'\nassert solution(open('input2.txt', 'r')) == '1\\n2\\n'\nassert solution(open('input3.txt', 'r')) =='syntax error\\n'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == [\"syntax error\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2\"\nassert solution(sample_input_3) == sample_output_3, \"Test case 3\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == []\nassert solution(\"4 7\\n9 8\\n14 17\\n19 18\\n\") == [1, 2]\nassert solution(\"4 7\\n14 17\\n9 8\\n19 18\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == [1, 2, 2, 3]\nassert solution(\"4 7\\n14 17\\n9 8\\n19 18\\n4 7\\n14 17\\n9 8\\n19 18\\n4 7\\n14 17\\n9 8\\n19 18\\n4 7\\n14 17\\n9 8\\n19 18\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == [1, 2, 2, 3, 1, 2, 2, 3]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Your solution is incorrect for input '{input1}'.\"\nassert solution(input2) == output2, f\"Your solution is incorrect for input '{input2}'.\"\nassert solution(input3) == output3, f\"Your solution is incorrect for input '{input3}'.\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\") == \"1\\n\"\n\nassert solution(r\"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\") == \"1\\n\"\n\nassert solution(r\"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '1', 'Sample Input 1'\nassert solution(sample_input2) == '1', 'Sample Input 2'\nassert solution(sample_input3) == '8640', 'Sample Input 3'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"  # expected output: \"1\\n\"\nassert solution(stdin) == \"many\\n\"  # expected output: \"many\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"many\" # Add your test case here\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"_\\n_ 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(r\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(r\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('') =='many'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1, "
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n1 3') == 2\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3') == 8\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10') == 24"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution() == '2'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n1\\n3\\n1\\n2') == '2', \"Solution is incorrect\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2\\n'\n\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8\\n'\n\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24\\n'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test.txt', 'r')) == \"2\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 3\\n\") == \"2\"\nassert solution(\"2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2\", \"Sample Input 3\"\nassert solution(5) == \"8\", \"Sample Input 5\"\nassert solution(10) == \"24\", \"Sample Input 10\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage\\nboot') == 'essa'\nassert solution('treetreetreetree\\nwood') == '3'\nassert solution('oranges\\napples') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Secret message not found in the encrypted message.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Message fragment not found in the encrypted message.\"\nassert solution(\"oranges\") == \"0\", \"Message fragment not found in the encrypted message.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()}) should return {expected_output}, but instead returned {solution(input())}.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Expected 'essa', got {}\".format(solution(\"secretmessage\"))\nassert solution(\"treetreetreetree\") == \"3\", \"Expected '3', got {}\".format(solution(\"treetreetreetree\"))\nassert solution(\"oranges\") == \"0\", \"Expected '0', got {}\".format(solution(\"oranges\"))"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('secretmessage\\nboot\\n') == 'essa', \"The correct message 'essa' is not found.\"\nassert solution('treetreetreetree\\nwood\\n') == '3', \"The correct message '3' is not found.\"\nassert solution('oranges\\napples\\n') == '0', \"The correct message '0' is not found.\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == 2\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == 4\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\nprint(solution(stdin))"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1  # output: 1\nassert solution(4) == 4  # output: 4\nassert solution(4) == 4  # output: 4\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '1\\n'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input(1)) == '2'\nassert solution(read_input(2)) == '4'\nassert solution(read_input(3)) == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    6\n    >^<^\n    ######\n    #.#..#\n    #....#\n    #..R.#\n    #....#\n    ######\n    '''\n) == '2'\n\nassert solution(\n    '''\n    4\n    v<^>\n    ####\n    #.R#\n    #..#\n    ####\n    '''\n) == '4'\n\nassert solution(\n    '''\n    4\n    <<<\n    ####\n    #.R#\n    #..#\n    ####\n    '''\n) == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == 2\n\nassert solution(stdin=\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == 4\n\nassert solution(stdin=\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution() == \"4\"\nassert solution() == \"1\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2''') == 3\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1''') == 6\nassert solution('''2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7''') == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 3, \"Your solution should return the correct output\"\nassert solution(sample_input2) == 6, \"Your solution should return the correct output\"\nassert solution(sample_input3) == 11, \"Your solution should return the correct output\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Test case 1 failed\"\nassert solution() == 6, \"Test case 2 failed\"\nassert solution() == 11, \"Test case 3 failed\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output the total number of fogs that are missed.\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Test failed.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Solution not correct\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Solution not correct\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Solution not correct\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\", \"Sample Output 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\", \"Sample Output 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\", \"Sample Output 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"168.7916512460\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Example 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Example 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Example 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Solution 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Solution 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Solution 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460\\n', 'First example test failed'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179\\n', 'Second example test failed'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076\\n', 'Third example test failed'\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\nSample Input 1\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\nSample Output 1\\n168.7916512460\\n\\n\\nSample Input 2\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\nSample Output 2\\n163.5274740179\\n\\n\\nSample Input 3\\n0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\nSample Output 3\\n3.7320508076\") == \"168.7916512460\"), \"Test 1 failed\")\nassert solution(solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\nSample Input 1\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\nSample Output 1\\n168.7916512460\\n\\n\\nSample Input 2\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\nSample Output 2\\n163.5274740179\\n\\n\\nSample Input 3\\n0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\nSample Output 3\\n3.7320508076\") == \"163.5274740179\"), \"Test 2 failed\")\nassert solution(solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\nSample Input 1\\n0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\nSample Output 1\\n3.7320508076\"), \"Test 3 failed\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"168.7916512460\", \"Test failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\", \"Expected Output: 168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\", \"Expected Output: 163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\", \"Expected Output: 3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 80.0\n    \"\"\"\n) == \"168.7916512460\\n\"\n\nassert solution(\n    \"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 100.0\n    \"\"\"\n) == \"163.5274740179\\n\"\n\nassert solution(\n    \"\"\"\n    0.0 1.0 4.0 1.0\n    1\n    0.0 0.0 4.0 0.0\n    \"\"\"\n) == \"3.7320508076\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 5, 3) == 'rarity'\nassert solution(9, 8, 1) == 'canterlot'\nassert solution(5, 3, 5) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 'rarity'\nassert solution(5) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5 3\") == \"rarity\\n\"\nassert solution(\"9 8 1\") == \"canterlot\\n\"\nassert solution(\"5 3 5\") == \"madam\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"rarity\"\nassert solution(input()) == \"canterlot\"\nassert solution(input()) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == \"canterlot\"\nassert solution(10) == \"madam\"\nassert solution(8) == \"rarity\"\nprint(\"All test cases passed\")\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'rarity'\nassert solution(2) == 'canterlot'\nassert solution(3) =='madam'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"fly I!? Ssshhh!\") == \"fly I!? Ssshhh!\"\nassert solution(\"cake ale pale able pales witches verses\") == \"cake ale pale able pales witches verses\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun,fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\"\nassert solution(\"Hello world!\") == \"Hello world!\"\nassert solution(\"Is it raining outside? It's fine outside.\") == \"Is it raining outside? It's fine outside.\"\nassert solution(\"The quick brown fox jumps over the lazy dog. The dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog. The dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\"\nassert solution(\"The quick brown fox jumps over the lazy dog, the dog runs over the couch.\") == \"The quick brown fox jumps over the"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\").strip() == \"International contest- motivation high Programmers have fun!.\".strip()"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\\n\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\\n    pass\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"This is a sample input 1.\") == \"This is a sample input 1.\\n\"\n\nassert solution(\"This is a sample input 2.\") == \"This is a sample input 2.\\n\"\n\nassert solution(\"This is a sample input 3.\") == \"This is a sample input 3.\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Thore is awesome'\nassert solution(input()) == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ThoreTiemann') == 'ThoreH'\nassert solution('ThoreHusfeldt') == 'Thore is awesome'\nassert solution('ThoreHusfeldter') == 'Thore sucks'\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt') == 'ThoreH\\n'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'Thore is awesome\\n'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"ThoreH\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"Thore is awesome\"\nassert solution(open(\"sample_input3.txt\", \"r\")) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\nassert solution(\"2\\nThoreHusfeldt\\nThoreHusfeldt\\n\") == \"ThoreHusfeldt\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == 6, \"Invalid Solution\"\nassert solution(\"L*R\") == 25, \"Invalid Solution\"\nassert solution(\"**\") == 33, \"Invalid Solution\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n\nfrom typing import List"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == \"6\\n\", \"Test Case 1 failed\"\nassert solution(\"L*R\") == \"25\\n\", \"Test Case 2 failed\"\nassert solution(\"**\") == \"33\\n\", \"Test Case 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test case 1 failed\"\nassert solution(\"L*R\") == \"25\", \"Test case 2 failed\"\nassert solution(\"**\") == \"33\", \"Test case 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect output for sample input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect output for sample input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect output for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == 6, \"Solution 1\"\nassert solution(\"L*R\") == 25, \"Solution 2\"\nassert solution(\"**\") == 33, \"Solution 3\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"herp is derp\") == \"yes\\n\"\nassert solution(\"derp is herp\") == \"yes\\n\"\nassert solution(\"herp is herp\") == \"yes\\n\"\nassert solution(\"derp is derp\") == \"yes\\n\"\nassert solution(\"oskar not lukas\") == \"wait what?\\n\"\nassert solution(\"oskar is poptart\") == \"yes\\n\"\nassert solution(\"lukas is smart\") == \"yes\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"yes\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\"\nassert solution(open(\"input.txt\", \"r\")) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nderp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\n lukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"wait what?\"\nassert solution(\"lukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\"\nassert solution(open(\"input2.txt\", \"r\")) == \"wait what?\"\nassert solution(open(\"input3.txt\", \"r\")) == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"wait what?\"\nassert solution(input()) == \"yes\"\nassert solution(input()) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'yes'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin)) == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt')) == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nA\\nACA\\nACMAA\\n'\n\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible\\n'\n\nassert solution('1\\nAM\\nMA\\n') == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''1 4\nMM\nA\nAA\nACA\nACMAA'''\n\nassert solution(stdin) == '''impossible\n\nSample Input 3:\n1\nAM\nMA\nSample Output 3:\nimpossible\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'\nassert solution(open('sample_input1.txt', 'r')) == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA'\nassert solution(open('sample_input2.txt', 'r')) == 'impossible'\nassert solution(open('sample_input3.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"impossible\\n\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=example_input_1) == example_output_1\nassert solution(stdin=example_input_2) == example_output_2\nassert solution(stdin=example_input_3) == example_output_3"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"18.9029850746\", \"The solution for the given problem is not correct\"\n\nfrom typing import List"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\n\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    '''\n) == '124'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\\n\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\\n\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\\n\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"\n    2 4 1\n    1 0.5 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    10 20 3\n    5 0.3 8\n    6 0.8 3\n    8 0.9 3\n    \"\"\"\n) == \"18.9029850746\"\n\nfrom typing import List"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {t+1} failed\" for t in range(len(solution_input))\n\nsolution_input = [\n    \"100 111 5\",\n    \"20 0.5 10\",\n    \"80 0.5 2\",\n    \"85 0.5 2\",\n    \"90 0.5 2\",\n    \"95 0.5 2\",\n]\n\nsolution_output = [\n    124,\n]\n\nsolution(solution_input)"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2 1 2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\") == \"2 1 4 3\"\nassert solution(\"4 2\\n1 1\\n3 1\") == \"1\"\nassert solution(\"3 2\\n2 2\\n3 3\") == \"3\"\nassert solution(\"1 1\\n1 2\\n2 1\") == \"1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 2\\n4 4\\n5 5\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2 1 2', 'Test case 1 failed'\nassert solution('2 1') == '1', 'Test case 2 failed'\nassert solution('5 22') == '4 3 4 2', 'Test case 3 failed'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'\nassert solution(open('input2.txt', 'r').read()) == '2\\n'\nassert solution(open('input3.txt', 'r').read()) == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\", \"The correct output is not given.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2\\n'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2\\n'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0\\n'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\\n\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\\n\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.00000000\nassert solution(\"5 0\\n2.00 0.20\\n\") == 1.17384923\nassert solution(\"0 0\\n1.00 0.10\\n\") == 1.00000000\nassert solution(\"-10 10\\n10.00 1.00\\n\") == 3.14159265"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10, 1, 10, 1, 1) == 28.26445910, \"Invalid answer for example 1\"\nassert solution(20, 0, 10, 1, 1) == 20.00000000, \"Invalid answer for example 2\"\nassert solution(10, 1, 10, 1, 10) == 3.14159265, \"Invalid answer for example 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == 20.00000000\nassert solution('-10 10\\n10.00 1.00\\n') == 3.14159265\nassert solution('0 20\\n1.00 0.10\\n') == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"20.00000000\", \"Test case 1\"\nassert solution(input_2) == \"3.14159265\", \"Test case 2\"\nassert solution(input_3) == \"28.26445910\", \"Test case 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'20 0\\n1.00 0.10') == '20.00000000'\nassert solution(r'-10 10\\n10.00 1.00') == '3.14159265'\nassert solution(r'0 20\\n1.00 0.10') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '170'\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"170\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 100\\n1 100\\n4 70\\n3 70') == '170\\n'\nassert solution('3\\n2 120\\n3 50\\n2 80') == '150\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"170\", \"Test 1 failed\"\nassert solution(stdin) == \"150\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\", \"The solution is incorrect.\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\\n\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"170\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '170', 'Your solution is incorrect. Expected 170, but got {}'.format(solution(sample_input_1))\nassert solution(sample_input_2) == '150', 'Your solution is incorrect. Expected 150, but got {}'.format(solution(sample_input_2))\n\nfrom typing import List"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([4, 3]) == 2\nassert solution([6, 6]) == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == 2\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == 5"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\nassert solution(stdin) == \"5\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5 # Replace this line with your solution"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == 0.5\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Expected {expected}, but got {solution}\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"0.5\", \"Test 1 failed\"\nassert solution(input2) == \"0.0446429\", \"Test 2 failed\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.5\"\nassert solution() == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"Output incorrect.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0.5', 'Your solution is incorrect.'\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 3 3 2 1\n    \"\"\"\n) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 1 2\n    \"\"\"\n) == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"6\n    1 2 3 3 2 1\"\"\"\n) == \"\"\"3\n1 6 1\n2 5 2\n3 4 3\"\"\"\n\nassert solution(\n    \"\"\"4\n    1 2 1 2\"\"\"\n) == \"\"\"IMPOSSIBLE\"\"\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(4) == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE'\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='6\\n1 2 3 3 2 1\\n') == ['3', '1 6 1', '2 5 2', '3 4 3']\n\nassert solution(stdin='4\\n1 2 1 2\\n') == ['IMPOSSIBLE']\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'\nassert solution(sample_input_2) == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == ['1', '2', '100'], \"The sample output 1 is incorrect.\"\nassert solution(sample_input2) == ['10', '20', '28', '27', '30', '40', '50'], \"The sample output 2 is incorrect.\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n') == '1 2 100\\n1 100 20\\n2 28 27 30 40 50'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n') == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 100\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n1 10 100\\n2 28 27\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"1 2 100\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 2 100\\n1 100 1\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\"\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\n\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1 2 100\"\nassert solution(2) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '506', \"Expected: 506, but got: \" + solution(stdin)"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n0\nSample Output 1:\n2600\n\n3\nAB 1 1\nAC 2 1\nBC 2 1\nSample Output 2:\n506\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\n\") == 2600, \"Incorrect solution\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 2600\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"2600\"\nassert solution(sample_input2) == \"506\"\n\nfrom typing import List\nimport itertools"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '2600', 'Sample Output 1'\nassert solution(sample_input_2) == '506', 'Sample Output 2'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2600\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\\nSample Output 1\\nSample Input 2\\n0\") == \"2600\"\nassert solution(\"3\\nAC 2 1\\nBC 2 1\\nAC 1 1\\nBC 1 1\\nAC 2 2\\nBC 1 1\\nAC 2 2\\nBC 2 2\\n\") == \"506\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('()))') == 'possible'\nassert solution('()))((())') == 'possible'\nassert solution('(()()))') == 'possible'\nassert solution('()())') == 'impossible'\nassert solution('()))(())') == 'impossible'\nassert solution('()))(())')) == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"((()))(())()())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('())') == 'possible'\nassert solution('())))') == 'possible'\nassert solution('())))(') == 'impossible'\nassert solution('()(') == 'impossible'\nassert solution('()(') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\")()\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"(()(()))\") == \"impossible\"\nassert solution(\"(()))\") == \"impossible\"\nassert solution(\"(()))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\\n(())\") == \"possible\"\nassert solution(\"())()\\n(())\\n(())\\n(())\") == \"possible\"\nassert solution(\"(a)b(c)d\\n((e)f)g\\n((h)i)j\\n(())\") == \"impossible\"\nassert solution(\"(a)b(c)d\\n((e)f)g\\n((h)i)j\\n(())\\n((a)b(c)d)e\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(()()))()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"(())()(()())\") == \"impossible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"(()())(())\") == \"possible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"())()()\") == \"impossible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"()))())\") == \"impossible\"\nassert solution(\"())()())\") == \"impossible\"\nassert solution(\"())()()()()()())\") == \"impossible\"\nassert solution(\"()()()()())())\")) == \"impossible\"\nassert solution(\"()())())(()())())\") == \"impossible\"\nassert solution(\"(()()())())\") == \"possible\"\nassert solution(\"(())()(()())\")) == \"possible\"\nassert solution(\"(()())())\") == \"possible\"\nassert solution(\"(())()(()()))\")) == \"possible\"\nassert solution(\"()())())(()())()))\") == \"possible\"\nassert solution(\"()())())(())()))\") == \"possible\"\nassert solution(\"(()())())(()())()))\")) == \"possible\"\nassert solution(\"(()())())(()())()))()))\") == \"possible\"\nassert solution(\"(()())()))(()()))\")) == \"possible\"\nassert solution(\"()())()))(()()))\")) == \"possible\"\nassert solution(\"(()()))())(()()))\")) == \"possible\"\nassert solution(\"())())()))(()()))\")) == \"possible\"\nassert solution(\"(()())()))(()())()))\")) == \"possible\"\nassert solution(\"(()())()))()))()))\")) == \"possible\"\nassert solution(\"(()())()))))\")))) == \"possible\"\nassert solution(\"())())()))()))))\")) == \"possible\"\nassert solution(\"())())()))))()))\")) == \"possible\"\nassert solution(\"())())()))()))))))\")) == \"possible\"\nassert solution(\"())()))()))()))))())) == \"possible\"\nassert solution(\"())()))()))()))()))))())) == \"possible\"\nassert solution(\"())()))()))()))))()))))\")) == \"possible\"\nassert solution
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"((()))\") == \"possible\"\nassert solution(\"(()()))\") == \"possible\"\nassert solution(\"(())())\") == \"possible\"\nassert solution(\"((())()))\") == \"possible\"\nassert solution(\"(()()())\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"(())((())(())\") == \"possible\"\nassert solution(\"(()(()))(())\") == \"possible\"\nassert solution(\"(())(())())\") == \"possible\"\nassert solution(\"((())(())())\") == \"possible\"\nassert solution(\"((()))(())()()\") == \"possible\"\nassert solution(\"(()(())()))\") == \"possible\"\nassert solution(\"()()())\") == \"possible\"\nassert solution(\"())(())())\") == \"possible\"\nassert solution(\"(())(())(()))\") == \"possible\"\nassert solution(\"(()()))(())(()))\") == \"possible\"\nassert solution(\"())(())(())())\") == \"possible\"\nassert solution(\"(())(()()))(())(()))\") == \"possible\"\nassert solution(\"(()()))(())(()))(()))\") == \"possible\"\nassert solution(\"(()())(())(()()))\") == \"possible\"\nassert solution(\"(())())(())(())()\") == \"possible\"\nassert solution(\"(())())(())())(())(())\") == \"possible\"\nassert solution(\"(())())(())(())())(())()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())(())()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())(())())()\") == \"possible\"\nassert solution(\"(())())(())())(())(())(())())(())()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())()()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())()()()()()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())()()()()()()()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())())())())()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())())())())())())())())())())())())())\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())())())())())())())())())())())())())\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())())())())())())())())())())())())())()()()()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"(())())(())())(())(())())(())())())())())())())())())())())())())())())())())())())())())())())())())()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()()()()\") == \"impossible\"\nassert solution(\"()())()\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"(())(())())\") == \"impossible\"\nassert solution(\"(())(())())(())\") == \"impossible\"\nassert solution(\"(())(())())(())(()))\") == \"possible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"((()))(())\") == \"impossible\"\nassert solution(\"((()))(())())\") == \"impossible\"\nassert solution(\"((()))(())())(())\") == \"impossible\"\nassert solution(\"((()))(())())(())(()))\") == \"possible\"\nassert solution(\"(()())(())(()))\") == \"possible\"\nassert solution(\"((()))(()()))(())(()()))\") == \"possible\"\nassert solution(\"(())(())()(()()))(())\") == \"possible\"\nassert solution(\"(()())(())()(())()(()))\") == \"possible\"\nassert solution(\"(()())(())()(())()())(())(()))\") == \"possible\"\nassert solution(\"(()())(())(())(())()(()))\") == \"impossible\"\nassert solution(\"(()())(())(())(())(())())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())()(()()))\") == \"impossible\"\nassert solution(\"(())(())(())(())()())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())(())())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())(())(())())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())(())(())(())())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())(())(())(())())(())(()))\") == \"impossible\"\nassert solution(\"(())(())(())(())(())(())(()()))(())(()))\") == \"possible\"\nassert solution(\"(())(())(())(())(())(())(()()))(())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(())(()()))()\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))))(())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())()()()()\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())(())())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())(())())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())(())())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())(())()))\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())(())()))()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())(())()))()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())(()))\") == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())()()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())())())())()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())())())())())())()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())())())())())())())())())())())()) == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())())())())())())())())())())())())() == \"possible\"\nassert solution(\"(())(())(())(())(())(()()))())())())())())())())())())())())())())())())())())())())())())())())())())()())()() == \"possible\"\nassert solution(\"(())(())(())"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '1800'\nassert solution(sample_input_2) == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(Solution().test_input1) == \"1800\"\nassert solution(Solution().test_input2) == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n\") == \"1800\\n\"\n\nassert solution(stdin=\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n\") == \"impossible\\n\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1800\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"impossible\\n\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\") == \"\"\"\n1800\n\"\"\"\n\nassert solution(\"\"\"\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n\"\"\") == \"\"\"\nimpossible\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1, \"sample_input1 incorrect\"\nassert solution(sample_input2) == sample_output2, \"sample_input2 incorrect\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n''') == '''\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n'''\n\nassert solution('''\n2 3\n''') == '''\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n3 2\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n2 3\\n') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\n\"\nassert solution() == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"7\\n\"\nassert solution(sample_input2) == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The solution does not meet the expected output. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == \"7\"\nassert solution(input2) == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\"\nassert solution(\"2 2\\n..\") == \"7\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == 7\n\nassert solution('''\n4 4\nX.XX\nX..X\n..X.\n..XX\n''') == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X."
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\\n\", \"Expected Output: 7\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == 9\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == solution()\nassert solution == solution(\"\")\nassert solution == solution(\"abc\")\nassert solution == solution(\"a b c\")\nassert solution == solution(\"r c d e\")\nassert solution == solution(\"r c d e f\")\nassert solution == solution(\"r c d e f g\")\nassert solution == solution(\"r c d e f g h\")\nassert solution == solution(\"r c d e f g h i\")\nassert solution == solution(\"r c d e f g h i j\")\nassert solution == solution(\"r c d e f g h i j k\")\nassert solution == solution(\"r c d e f g h i j k l\")\nassert solution == solution(\"r c d e f g h i j k l m\")\nassert solution == solution(\"r c d e f g h i j k l m n\")\nassert solution == solution(\"r c d e f g h i j k l m n o\")\nassert solution == solution(\"r c d e f g h i j k l m n o p\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 0\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 1\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 2\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 3\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 4\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 5\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 6\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 7\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 8\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 9\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 10\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 11\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 12\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 13\")\nassert solution == solution(\"r c d e f g h i j k l m n o p q r s t u v w x y z 14\")\nassert solution == solution(\"r c d"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 600"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n3 3 2 2 100\n1 1 1 1 500\n'''\n) == \"600\\n\"\n\nassert solution(\n'''\n2\n2 0 2 1 100\n6 0 8 1 1\n'''\n) == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1000) == 600"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"600\"\nassert solution() == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 600, \"Expected 600, got {}\".format(solution())"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500') == 600\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1') == 100"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n361\\n\") == 3\nassert solution(\"2\\n11\\n\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(361) == 3\nassert solution(11) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"361\") == \"3\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect solution: expected {expected_output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(361) == 3, \"Incorrect output for sample input 1\"\nassert solution(11) == 0, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, \"361\") == 3\nassert solution(2, \"11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3\nassert solution() == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '3', \"Expected '3', but got '{}'.\".format(solution(sample_input1))\nassert solution(sample_input2) == '0', \"Expected '0', but got '{}'.\".format(solution(sample_input2))"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match the expected output\\nExpected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '10'\nassert solution(open('input2.txt', 'r')) == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(sample_input_1) == \"10\"\\nassert solution(sample_input_2) == \"cancel road trip\"\\n\\nsample_input_1 = '''\\n3 10\\n2 100\\n1 10\\n11 5\\n'''\\n\\nsample_input_2 = '''\\n3 10\\n2 100\\n1 10\\n13 5\\n'''\\n\\nprint(solution(sample_input_1))\\nprint(solution(sample_input_2))\\n\\n# Test cases with extra line breaks\\nprint(solution('''\\n\\n\\n3 10\\n2 100\\n1 10\\n11 5\\n''' + '\\n\\n\\n'))\\n'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\nassert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1 8 9 9 100 101 108 109 109\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 8 9 9 100 101 108 109 109\", \"The solution is not correct.\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"1 8 9 9 100 101 108 109 109\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\", \"The given solution is not correct.\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\", \"The given solution is not correct.\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == [1, 8, 9, 9, 100, 101, 108, 109, 109]\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == [0, 7, 8, 11, 15, 16, 19]\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n0 7 8 11 15 16 19\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == []"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\", \"Sample Output 1: Expected 1, got {}\".format(solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\", \"Sample Output 2: Expected 3, got {}\".format(solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\"))"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n', \"Sample Output 1\"\n\nassert solution(stdin) == '3\\n', \"Sample Output 2\"\n\nfrom typing import List"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"Sample Input 1 is incorrect.\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"Sample Input 2 is incorrect.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n3\\n3\\n3\\n1\\n\", \"Incorrect output for sample case 1\"\n\nassert solution(stdin) == \"3\\n3\\n\", \"Incorrect output for sample case 2\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n4\\n2\\n2\\n0\\n\", \"The correct output is not given.\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\\n0\\n0\\n2\\n0\"\nassert solution(5) == \"4\\n4\\n2\\n2\\n0\"\nassert solution(10) == \"2\\n0\\n0\\n2\\n0\"\nassert solution(100001) == \"2\\n0\\n0\\n2\\n0\"\nassert solution(2000000) == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='5 10000\\n1\\n1\\n1\\n1\\n1\\n') == ['4', '4', '2', '2', '0']\nassert solution(stdin='5 9\\n1\\n1\\n10\\n1\\n9\\n') == ['2', '0', '0', '2', '0']"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\nkava') == 'NE'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\") == \"NE\\n\"\n\nassert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('Sample Input 1\\n2\\nSample Output 1\\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2\\nne\") == \"NE\\n\"\nassert solution(stdin=\"4\\nkava\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"NE\", \"The output should be 'NE'.\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\") == \"NE\\nak\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\ne\\n\") == \"NE\"\nassert solution(stdin=\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n0\\n2\\n1\\n\"\nassert solution() == \"0\\n0\\n3\\n2\\n\"\nassert solution() == \"3\\n2\\n2\\n1\\n\"\nassert solution() == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '''\n2\n0\n2\n1\n'''\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '''\n0\n0\n3\n2\n'''"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Sample Input 1') == '2\\n0\\n2\\n1\\n'\nassert solution('Sample Input 2') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Solution1 should be {output_1}, but is {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Solution2 should be {output_2}, but is {solution(input_2)}\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == [\"2\", \"0\", \"2\", \"1\"]\n\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == [\"0\", \"0\", \"3\", \"2\", \"1\", \"1\", \"0\", \"2\", \"0\"]"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == [\"2\\n0\\n2\\n1\\n\"]\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == [\"0\\n0\\n3\\n2\\n\"]"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n0\\n2\\n1\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n0\\n2\\n1\\n', \"Test 1 failed\"\nassert solution() == '0\\n0\\n3\\n2\\n', \"Test 2 failed\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == \"2\\n\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n\") == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Expected output: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\") == 2\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"49.000000000\\n\"\nassert solution(stdin) == \"40.500000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1''') == 40.5\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == 49"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Test case failed: {input_string}\"\nfor case in test_cases:\n    assert case[0] == expected_output, f\"Test case failed: {case}\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"40.500000000\\n\"\nassert solution() == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"40.500000000\\n\", \"Test 1 Failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '40.500000000', \"Test case 1 failed\"\nassert solution() == '49.000000000', \"Test case 2 failed\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '''5 4 9 3 1 10 7 6 2'''\n\nassert solution('''10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == '''fail'''"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Input {input_str} should produce Output {output_str}, but it produces {solution(input_str)}\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '5 4 9 3 1 10 7 6 2'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\\n\", \"Test 1 failed\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\")) == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3\\n00:00\\n01:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n00:00\\n01:00\\n01:01\\n\", \"The output is incorrect\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"(()())\"\n) == \"4,8:8,8:\"\n\nassert solution(\n    \"()()\"\n) == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"abc\") == \"abc\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('())') == '4,8:8,8:'\nassert solution('()()') == '4,8:8,8:'\nassert solution('(())(())') == '4,8:8,8:'\nassert solution('(())(()())()()()') == '4,8:8,8:'\nassert solution('(()(())(())))') == '4,8:8,8:'\nassert solution('()()()()()())()()()()()()()') == '4,8:8,8:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(a(b)c)\") == \"a,b:c,c:\"\nassert solution(\"()()()\") == \"4,4:4,4:\"\nassert solution(\"()(())\") == \"4,4:4,4:\"\nassert solution(\"()()\") == \"4,4:4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"((()))\") == \"4,8:8,8:\"\nassert solution(\"((()\")) == \"4,8:8,8:\"\nassert solution(\"(()))\") == \"4,8:8,8:\"\nassert solution(\"(())()\") == \"4,8:8,8:\"\nassert solution(\"(())()\") == \"4,8:8,8:\"\nassert solution(\"((()))(())\") == \"4,8:8,8:\"\nassert solution(\"(()(())()))\") == \"4,8:8,8:\"\nassert solution(\"(()()))(())\") == \"4,8:8,8:\"\nassert solution(\"(()()())(())\") == \"4,8:8,8:\"\nassert solution(\"()())(())()\") == \"4,4:\"\nassert solution(\"()())(())(())\") == \"4,8:8,8:\"\nassert solution(\"(())()(()())(())(()())(())\") == \"4,8:8,8:\"\nassert solution(\"(()(()())(())(())(())()))\") == \"4,8:8,8:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(a))') == 'a,a:a,a:'\nassert solution('(ab))') == 'ab,ab:ab,ab:'\nassert solution('(ab(c)))') == 'ab,ab:ab,ab:c,c:c:c:c:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n185\\n\", \"The function should return the correct output.\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n26 03 04 05 1\\n26 05 06 07 1\\n26 07 08 09 1\\n26 09 10 11 1\\n26 11 12 13 1\\n26 13 14 15 1\\n26 15 16 17 1\\n26 17 18 19 1\\n26 19 20 21 1\\n26 21 22 23 1\\n26 23 24 25 1\\n26 25 26 27 1\\n26 27 28 29 1\\n26 29 30 31 1\\n26 31 01 01 2\\n') == '5\\n185\\n'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 04 04 2\\n26 03 01 01 3\\n26 03 02 02 4\\n26 03 03 03 5\\n26 03 04 04 6\\n26 04 01 01 7\\n26 04 02 02 8\\n26 04 03 03 9\\n26 04 04 04 10\\n26 05 01 01 11\\n26 05 02 02 12\\n26 05 03 03 13\\n26 05 04 04 14\\n26 06 01 01 15\\n26 06 02 02 16\\n26 06 03 03 17\\n26 06 04 04 18\\n26 07 01 01 19\\n26 07 02 02 20\\n26 07 03 03 21\\n26 07 04 04 22\\n26 08 01 01 23\\n26 08 02 02 24\\n26 08 03 03 25\\n26 08 04 04 26\\n26 09 01 01 27\\n26 09 02 02 28\\n26 09 03 03 29\\n26 09 04 04 30\\n26 10 01 01 31\\n26 10 02 02 32\\n26 10 03 03 33\\n26 10 04 04 34\\n26 11 01 01 35\\n26 11 02 02 36\\n26 11 03 03 37\\n26 11 04 04 38\\n26 12 01 01 39\\n26 12 02 02 40\\n26 12 03 03 41\\n26 12 04 04 42\\n26 13 01 01 43\\n26 13 02 02 44\\n26 13 03 03 45\\n26 13 04 04 46\\n26 14 01 01 47\\n26 14 02 02 48\\n26 14 03 03 49\\n26 14 04 04 50\\n26 15 01 01 51\\n26 15 02 02 52\\n26 15 03 03 53\\n26 15 04 04 54\\n26 16 01 01 55\\n26 16 02 02 56\\n26 16 03 03 57\\n26 16 04 04 58\\n26 17 01 01 59\\n26 17 02 02 60\\n26 17 03 03 61\\n26 17 04 04 62\\n26 18 01 01 63\\n26 18 02 02 64\\n26 "
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"5\"\nassert solution(sample_input_2) == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\"\n\nassert solution(\"1 1\\n26 02 03 03 3\\n26 02 03 03 4\\n\") == \"-1\\n\"\n\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n\") == \"-1\\n\"\n\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n\") == \"-1\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''\n1 1\n26 02 03 03 1\n5\n1 1\n26 02 03 03 2\n185\n'''"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n30\\n\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 2\\n30\\n\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"185\"\nassert solution(\"1 1\\n26 02 03 03 2\\n30\\n\") == \"185\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n30\\n\") == \"-1\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"5\\n185\"\nassert solution(\"1 1\\n26 02 03 03 3\\n26 02 03 03 2\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 1\\n26 02 03 03 1\\n26 02 03 03 1\") == \"5\\n185\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"\n5 6 1 2 3 4\n\"\"\"\n\nassert solution(\"\"\"\n4 2\n3 4 1 2\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"6 2\n3 4 5 6 1 2\"\"\"\nsample_input_2 = \"\"\"4 2\n3 4 1 2\"\"\"\nexpected_output_1 = \"\"\"5 6 1 2 3 4\"\"\"\nexpected_output_2 = \"\"\"2 3 4 1\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"5 6 1 2 3 4\"\nassert solution(sample_input_2) == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\"\n\nfrom typing import List"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5 6 1 2 3 4\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1374 2\\n\") == \"7413\\n\"\nassert solution(\"210 1\\n\") == \"201\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n1374 2\n\"\"\"\nsample_input_2 = \"\"\"\n210 1\n\"\"\"\n\nsample_output_1 = \"\"\"\n7413\n\"\"\"\nsample_output_2 = \"\"\"\n201\n\"\"\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()}), expected output: {expected_output}, got: {solution(input())}\"\n\nn, k = map(int, input().split())"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\n\nimport re\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1374 2\") == \"7413\", \"Test 1 failed\"\nassert solution(\"210 1\") == \"201\", \"Test 2 failed\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output the largest number you can get after exactly k swaps.\\n\"\n\nn, k = map(int, input().split())"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7413\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.666666666666667\nassert solution() == 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0.733333333333333, \"The expected result for the given example is not as expected\"\nassert solution(4) == 0.666666666666667, \"The expected result for the given example is not as expected\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\ninput_data = [int(x) for x in input().split()]\nn = input_data[0]\nx_coords = [int(x) for x in input().split()]\ny_coords = [int(x) for x in input().split()]\n\nx_min, y_min, x_max, y_max = min(x_coords), min(y_coords), max(x_coords), max(y_coords)\n\ncx, cy = x_min + x_max // 2, y_min + y_max // 2\n\nvx, vy = 0, 0\nfor i in range(n):\n    x, y = x_coords[i], y_coords[i]\n    dx, dy = x - cx, y - cy\n    dist = abs(dx) + abs(dy)\n    if dist > vx:\n        vx, vy = dx, dy\n    elif dist == vx:\n        vy += dy if dy > 0 else -dy\n    elif dist < vx:\n        vx, vy = dx, dy\n\nerror = abs(vx - 1) / max(vx, abs(vy)) * 100000\n\nprint(round(error, 6))"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.666666666666667\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"0.666666666666667\"\nassert solution(sample_input2) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == 0.666666666666667\nassert solution(input2) == 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.666666666666667\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"0.666666666666667\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"0.733333333333333\"\n\nfrom typing import List"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'TODO'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9\\n'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21\\n'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 3 4\n    10 1 3\n    0 1 20\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    2 3 100\n    10 1 10\n    10 1 10\n    \"\"\"\n) == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution, \"No solution provided\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 9\nassert solution == 21\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"4\\n\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '4'\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2') == 2\nassert solution('9 2 7 -\\n1 1 1 2') == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Your solution should return the number of valid ways in which the section could be filled in for a KenKen puzzle of the given size.'"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Expected output: {}, but got: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\\n\", \"Test 1 failed\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3\\n4\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n4\\n3\\n2\\n1'\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6\nassert solution() == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Expected output 6, but got {}\".format(solution())"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n24\\n\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 1') == 6\nassert solution('3 4\\n2 3 1') == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"Expected output: 6, but got: {}\".format(solution())"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected output is: {expected_output_1}, but got: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected output is: {expected_output_2}, but got: {solution(sample_input_2)}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected, f\"Test case failed. Expected: {expected}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"The correct output is 2, but it is: \" + str(solution())\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The expected output is 2, but it is: {}\".format(solution())"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Incorrect Answer\" # correct answer: 2\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == 2\nassert solution('5') == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\nSample Output 1:\\n2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\nSample Output 2:\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"\n    3 3\n    1 4 10\n    5 2 6\n    11 1 3\n    \"\"\") == \"9\"\n\nassert solution( \"\"\"\n    3 3\n    1 3 1\n    2 1 2\n    1 1 1\n    \"\"\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0', \"Solution is incorrect\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == 9\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"9\\n\", \"Expected output: 9, actual output: \" + str(solution())"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"0\\n\"\n\nR, S = map(int, input().split())\nA = []\nfor _ in range(R):\n    A.append(list(map(int, input().split())))\n\ncount = 0\nfor i in range(R):\n    for j in range(S):\n        if i == j:\n            continue\n        for k in range(i + 1, R):\n            for l in range(j + 1, S):\n                if A[k][l] + A[i][j] + A[k][l] + A[i][l] + A[k][j] + A[i][j] == 0:\n                    count += 1\n                    break\n        if count == R * S:\n            return str(R * S)\n        elif count > 0:\n            return str(count)\n\nassert False"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'\nassert solution('') == '0'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\"\nassert solution() == \"4\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input1) == \"6\"\nassert solution(solution_input2) == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Incorrect output\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr'4\\n2 1 3 4\\n1 2\\n1 3\\n3 4'\n) == '6\\n'\n\nassert solution(\nr'4\\n3 4 5 6\\n1 2\\n1 3\\n2 4'\n) == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"6\\n\"\nassert solution(sample_input2) == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case} failed: Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6, \"Your solution is not correct.\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected output '{expected_output1}', but got '{solution(sample_input1)}'\"\nassert solution(sample_input2) == expected_output2, f\"Expected output '{expected_output2}', but got '{solution(sample_input2)}'\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 10\\n5 8') == '18\\n8'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'\nassert solution('4\\n1 1000\\n2 2000\\n3 3000\\n4 4000') == '1000000\\n2000\\n3000'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for solution: {solution(stdin)}\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"18\\n8\", \"Sample Output 1\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Sample Output 1:\\n18\\n8\\n'\n\nimport math"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(Q)) == expected, f\"Test failed: solution({Q})!= expected\"\nprint(expected)\nfor _ in range(Q):\n    A, B = map(int, stdin.readline().split())\n    expected = int(stdin.readline())\n    solution = solution(str(A) + \" \" + str(B))\n    print(solution)"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"18\n8\n\"\"\"\n\nassert solution(stdin) == \"\"\"265\n25\n10\n\"\"\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n') == '0.5'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n') == '12.5'"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 0.50000000\nassert solution(open('input2.txt').read()) == 12.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number} failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.50000000, \"Expected 0.50000000, but got {}\".format(solution())"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '2\\n'\nassert solution(sample_input2) == '1\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '2'\n\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3''') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\", \"First Test Case\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\", \"Second Test Case\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the value of A: \")) == \"6\"\nassert solution(input(\"Enter the value of A: \")) == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 1) == 6\nassert solution(3, 3, 1) == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 6"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1 2 1) == 6\nassert solution(2 2 2) == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == '6', 'Sample Input 1'\nassert solution('2 2 2') == '30', 'Sample Input 2'"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6, \"Expected 6, got {}\".format(solution())\nassert solution() == 30, \"Expected 30, got {}\".format(solution())"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected output: {expected_output_1}\\nGot: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected output: {expected_output_2}\\nGot: {solution(sample_input_2)}\"\n\nsample_input_1 = \"\"\"\n3\n2020 2020 2020\n\"\"\"\n\nsample_input_2 = \"\"\"\n2\n1 9999999\n\"\"\"\n\nexpected_output_1 = \"\"\"\n2021 2020 2020\n\"\"\"\n\nexpected_output_2 = \"\"\"\nimpossible\n\"\"\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed: Expected output not found\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2021 2020 2020\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n2020 2020 2020\n2020 2020 2021\n2020 2020 2022\n2020 2020 2023''') == '2021 2020 2020'\nassert solution('''2\n1 9999999''') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2020 2020 2020\n2\n1 9999999\n''') == '2021 2020 2020\\nimpossible'\n\nassert solution('''\n4\n2000000 2000000 2000000 2000000\n2\n1 9999999\n''') == '2020000 2020000 2020000 2020000\\nimpossible'\n\nassert solution('''\n5\n
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\\n\", \"Test 1\"\nassert solution(\"66 69\") == \"2\\n\", \"Test 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 70\") == \"11\", \"Expected Output: 11, Actual Output: {}\".format(solution(\"30 70\"))\nassert solution(\"66 69\") == \"2\", \"Expected Output: 2, Actual Output: {}\".format(solution(\"66 69\"))\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\", \"Sample Input 1\"\nassert solution(\"66 69\") == \"2\", \"Sample Input 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"30 70\") == \"11\"\nassert solution(stdin=\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 70\") == \"11\\n\"\nassert solution(\"66 69\") == \"2\\n\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(30, 70) == 11, \"Expected 11, got {}\".format(solution(30, 70))\nassert solution(66, 69) == 2, \"Expected 2, got {}\".format(solution(66, 69))"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 70\") == \"11\\n\", \"The output should be 11.\"\nassert solution(\"66 69\") == \"2\\n\", \"The output should be 2.\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 70\") == \"11\\n\"\nassert solution(\"66 69\") == \"2\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2\\n'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"begin repairs\"\nassert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2 0\n>@\n>~\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 2 0\n>@\n>~''') == '2'\n\nassert solution('''3 5 1\n>>@<<\n>~#~<\n>>>>~''') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\"\nassert solution(\"1 0 0\\n>#\\n>~#\") == \"begin repairs\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\", \"Incorrect output.\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2\\n'\n\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4\\n'\n\nassert solution('''\n2 2 0\n>>@<<\n>~#~<\n>>>>~\n''') == '2\\n'\n\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('143175=120') == '14+31+75=120', \"Test case 1 failed.\"\nassert solution('5025=30') == '5+025=30', \"Test case 2 failed.\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('143175=120\\n5025=30\\n') == '14+31+75=120\\n5+025=30\\n'\n\nSolution:\nWe can solve this problem by first determining the number of addition operations needed on the left side of the equation. We can use the given equation, which is $A=S$, to determine the number of addition operations needed. We can use the fact that $A+S=0$, where $A$ and $S$ are the same.\n\nTo determine the number of addition operations needed on the left side, we can use the fact that addition operations always add the same number of digits. We can replace the digits in the equation with zeros to get $A=0$. Then, we can check how many addition operations there are on the left side.\n\nLet's implement this in a function."
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    143175=120\n    \"\"\"\n) == '14+31+75=120'\n\nassert solution(\n    \"\"\"\n    5025=30\n    \"\"\"\n) == '5+025=30'\n\nassert solution(\n    \"\"\"\n    143175=120\n    143175=5025\n    \"\"\"\n) == '14+31+75=120'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(8, 1, 3, 2, 4, 1, 5, 2, 4) == \"1 2\"\nassert solution(8, 1, 2, 3, 4, 5, 6, 7, 1) == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(1) == \"1 1\"\nassert solution(2) == \"1 2\"\nassert solution(4) == \"2 2\"\nassert solution(10) == \"1 2\"\nassert solution(20) == \"1 2\"\nassert solution(30) == \"1 3\"\nassert solution(40) == \"1 3\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 2\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution(r'8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == solution\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1101') == '1\\n'\nassert solution('1') == '0\\n'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == 1, \"Incorrect output\"\nassert solution(\"1\") == 0, \"Incorrect output\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\", \"The input is not correct.\"\nassert solution(\"1\") == \"0\", \"The input is not correct.\"\nassert solution(\"01\") == \"0\", \"The input is not correct.\"\nassert solution(\"11\") == \"0\", \"The input is not correct.\"\nassert solution(\"1101\") == \"1\", \"The input is not correct.\"\nassert solution(\"10101\") == \"3\", \"The input is not correct.\"\nassert solution(\"11110\") == \"2\", \"The input is not correct.\"\nassert solution(\"110011\") == \"6\", \"The input is not correct.\"\nassert solution(\"00010\") == \"1\", \"The input is not correct.\"\nassert solution(\"00001\") == \"0\", \"The input is not correct.\"\nassert solution(\"0110001\") == \"3\", \"The input is not correct.\"\nassert solution(\"1111111\") == \"2\", \"The input is not correct.\"\nassert solution(\"0000001\") == \"0\", \"The input is not correct.\"\nassert solution(\"1111100\") == \"0\", \"The input is not correct.\"\nassert solution(\"11111111\") == \"2\", \"The input is not correct.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output}.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\", \"Incorrect output for sample input 1\"\nassert solution(\"1\") == \"0\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == ['1', '0', '2']"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"1\n0\n2\n\n\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\nSample Input 2\") == \"3\\n0\\n2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\"\nassert solution(\"10 1\\n1 2 3 4\\n5 6 7 8\\n9 10 11\\n12 13 14 15\") == \"3\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1\n0\n2\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\\n3\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"output.txt\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '''\n1\n0\n2\n'''\n\nassert solution(open('sample_input2.txt', 'r')) == '''\n3\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected '{output}', got '{solution(stdin)}'.\"\nfor solution in solutions:\n    assert solution(stdin) == output, f\"Expected '{output}', got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output 2: 3.666666\\n\", \"Solution should return the expected output.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    input1 = \"\"\"\n4 1\n1 2 3 4\n\"\"\",\n    input2 = \"\"\"\n4 2\n2 4 3 4\n\"\"\"\n) == \"\"\"\n4.000000\n\"\"\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(stdin=\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\"\n\nassert solution(\"4 2\\n2 4 3 4\\n4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4.000000\\n\", \"Your implementation is incorrect.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4.000000\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.0 0.0\n    0.0 2.0\n    \"\"\"\n) == \"0.750\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    \"\"\"\n) == \"0.625\\n\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '0.750'\nassert solution(sample_input_2) == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. The output is {solution(input())}, but the expected output is {output}.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n\") == \"0.750\\n\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.625\\n\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.75\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"0.750\"\nassert solution(sample_input2) == \"0.625\"\n\nfrom typing import List"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.0 0.0\n    0.0 2.0''') == '0.750'\nassert solution('''\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0''') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\", \"Your solution is incorrect.\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\", \"Your solution is incorrect.\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\\n\", \"Test 1 Failed\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\\n\", \"Test 2 Failed\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\nassert solution(\"3 3 1 1\\n1.0\\n1.0\") == \"0.0\"\nassert solution(\"3 3 1 1\\n1.0\\n2.0\") == \"0.0\"\nassert solution(\"3 3 1 1\\n1.0\\n2.0\\n1.0\\n0.0\") == \"0.0\"\nassert solution(\"3 3 1 1\\n1.0\\n2.0\\n1.0\\n0.0\\n1.0\\n0.0\") == \"0.0\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2\\n'\nassert solution(stdin='3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37\\n'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"2\", \"The code for the first example is incorrect. It should be '2'\"\nassert solution(sample_input2) == \"37\", \"The code for the second example is incorrect. It should be '37'\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '37'\n\nfrom typing import List"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3\n    1 2 4\n    0 3 6\n    4 0 3''') == '2\\n'\n\nassert solution('''\n    3 4\n    2 3 0 7\n    0 0 2 1\n    0 0 3 0''') == '37\\n'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match with the expected output. Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2\", \"Test case 1 failed.\"\nassert solution(sample_input_2) == \"37\", \"Test case 2 failed.\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [10, 14, 18]\nprint(\"All test cases passed\")"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == [\"10\", \"14\", \"18\"]\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == [\"1\", \"4\", \"9\", \"16\"]\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\"\n\nfrom typing import List"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n1\n4\n9\n16\n'''"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\n\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    4 2 3\n    1 3\n    2 3\n    3 4\n    5 2 4\n    1 3\n    3 4\n    2 4\n    4 5\n    ''') == '2'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"2\", \"Expected: 2, Actual: {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"1\", \"Expected: 1, Actual: {}\".format(solution(sample_input2))"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4\\n') == '2'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"You have to implement the function solution\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4') == '2'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Incorrect output\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    4 2 3\n    1 3\n    2 3\n    3 4\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    5 2 4\n    1 3\n    3 4\n    2 4\n    4 5\n    \"\"\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 2 3\n1 3\n2 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"n = \")) == \"yes\"\nassert solution(input(\"n = \")) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'yes\\n'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes\\n'\nassert solution(open('input_2.txt', 'r')) == 'no\\n'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no'\n\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"no\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 3, 1, 2, 2, 1, 3, 1, 3, 1, 4]) == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution([4, 3, 1, 2, 1, 3, 1, 4]) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution() == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2') == 'consistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\n\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\"\n\nfrom typing import List"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test case 1 failed: Expected {expected_output_1}, got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Test case 2 failed: Expected {expected_output_2}, got {solution(sample_input_2)}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.57079633, \"Sample Output 1\"\nassert solution() == 41938.65135885, \"Sample Output 2\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\", \"Test 1\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\", \"Test 2\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1.57079633\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1.57079633, \"Your solution is incorrect.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1.57079633, \"Error in solution\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_case.txt', 'r')) == 1.57079633\nassert solution(open('test_case2.txt', 'r')) == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\n\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0''') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n\nn = int(input())\nstars = list(map(int, input().split()))"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"11\\nsabcabcfabc\\n\")) == \"3\"\nassert solution(input(\"18\\ntrutrutiktiktappop\\n\")) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input1.txt', 'r')) == '3\\n'\nassert solution(open('sample_input2.txt', 'r')) == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nfrom typing import List"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nsabcabcfabc\\n\") == \"3\\n\"\nassert solution(\"18\\ntrutrutiktiktappop\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3, \"Incorrect output for sample input 1.\"\nassert solution(\"18\\ntrutrutiktiktappop\") == 4, \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('input2.txt', 'r')) == '4\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11\\nsabcabcfabc') == 3\nassert solution('18\\ntrutrutiktiktappop') == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11sabcabcfabc\") == 3\nassert solution(\"18trutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 0 # test case 1\nassert solution('') == 0 # test case 2\nassert solution('sabcabcfabc') == 3 # test case 3\nassert solution('trutrutiktiktappop') == 4 # test case 4"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    6\n    5 1 6 3 2 4\n    \"\"\"\n) == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Test Case 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test Case 2 failed: {solution(input_2)}!= {output_2}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed.\"\nassert solution(input2) == output2, \"Test case 2 failed.\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output 1\", \"The solution is not correct.\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\"\n\nfrom math import pi, sqrt"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\" # your solution here"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == 4\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == 9"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4\\n'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40') == '9\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\", \"The solution is incorrect.\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output Here'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"concat(sorted([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"equal\"\nassert solution(input()) == \"not equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'not equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal\\n'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'not equal', \"Test case 1 failed.\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\"\n                     \"shuffle([1,2,1,2])\\n\") == \"not equal\\n\"\n\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n\"\n                     \"[1,2,3,4,5,6]\\n\") == \"equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Oh no\", \"Expected 'Oh no', got '{}'\".format(solution())\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == \"Oh no\", \"Expected 'Oh no', got {}\".format(solution(input1))\nassert solution(input2) == \"1\", \"Expected '1', got {}\".format(solution(input2))"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 'Oh no'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Oh no\", \"Please provide the correct input\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {index + 1} failed: Input: {input()}, Output: {output}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the number of ares in the cave: \")) == 'Oh no'\nprint(solution(input(\"Enter the number of ares in the cave: \")))"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == 3\nassert solution(stdin=\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"3\\n\"\nassert solution(sample_input_2) == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3\\n'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == 3\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n2 1 1 1 3\\n1\\n22\\n\"\n) == 2\n\nassert solution(\n    \"1\\n22\\n\"\n) == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2', \"Test 1 failed\"\nassert solution('1\\n22\\n') == '4', \"Test 2 failed\"\nassert solution('') == '', \"Test 3 failed\"\nassert solution('5\\n2 1 1 1 3\\n4 5 6 7 8\\n') == '4', \"Test 4 failed\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The solution is incorrect.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '2', \"The given solution is incorrect\"\nassert solution(sample_input2) == '4', \"The given solution is incorrect\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\\n\"\nassert solution(\"1\\n22\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2', 'The output is incorrect for the first example.'\nassert solution('1\\n22\\n') == '4', 'The output is incorrect for the second example.'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\\n\"\nassert solution(\"1\\n22\") == \"4\\n\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 5') == '3\\n'\nassert solution('4 1 2 3 4') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output should be 3\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test case failed. Expected: {output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"4 1 2 3 4\") == \"2\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\", \"Test Case 1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\", \"Test Case 2\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"3 1 5\") == \"1\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == [\"- +d-\", \"- +d-\"]\nassert solution(\"a-b+d-c\") == [\"- +d-\", \"- +d-\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any> <empty>\"]\nassert solution(\"knuthmorrispratt\") == [\"<any> <empty>\"]\nassert solution(\"\") == [\"<empty>\", \"<empty>\"]\nassert solution(\"a\") == [\"<empty>\", \"<empty>\"]\nassert solution(\"abcd\") == [\"<empty>\", \"<empty>\"]\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a+b-c\") == [\"- +d-\", \"def\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\\n\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\\nknuthmorrispratt\\n\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a+b-c\") == [\"-+d-\", \"+d-\"]\nassert solution(\"a-b+d-c\") == [\"-+d-\", \"+d-\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, \"Expected: {}\\nGot: {}\".format(output1, solution(input1))\nassert solution(input2) == output2, \"Expected: {}\\nGot: {}\".format(output2, solution(input2))"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\", \"Invalid answer\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"<any> <empty>\", \"Invalid answer\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- -d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a+b-c\\na-b+d-c\\nknuth-morris-pratt\\knuthmorrispratt') == \"\"\"\n- +d-\n<any> <empty>\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d- <any> <empty>'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'\nassert solution('abcdefg\\nhijklmno\\nuvwxyz\\n') == 'def <any> <empty>'\nassert solution('') == '<empty>'\nassert solution('abcdefg\\nhijklmno\\nuvwxyz\\n') == 'abcdefg\\nhijklmno\\nuvwxyz\\n'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nassert solution(\"10\") == \"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"The function should return the expected output.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str1) == output_str1\nassert solution(input_str2) == output_str2"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output here'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''\n2\n4 6\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"2\", \"4 6\"]\nassert solution() == [\"0\"]"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n4 6\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n4 6\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n5\\n6\\n1\\n2\\n3\\n\", \"Test failed\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\n\nassert solution(input()) == \"1\\n2\\n3\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected_output, f\"Solution should return {expected_output}, but returned {solution()}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed.\"\nfor i in range(Q):\n    q, x = input().split()\n    if q == \"1\":\n        if 1 <= x <= n + 1:\n            print(f\"{x}\")\n        else:\n            print(\"Invalid input\")\n    else:\n        if 1 <= x <= n:\n            print(f\"{x}\")\n        else:\n            print(\"Invalid input\")\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n2\\n3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'1\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '4\\n5\\n6\\n1\\n2\\n3\\n'\nassert solution(b'2\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Input 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Input 2\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PPPPCCCC\") == \"1\"\nassert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPPPPPPP\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\", \"1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('CPCC') == '1', \"The expected output is not found.\"\nassert solution('PPPPCCCC') == '8', \"The expected output is not found.\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2, 1) == \"1 2 3\"\nassert solution(3, 2, 1) == \"1 3\"\nassert solution(3, 2, 1) == \"2 3\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received output: {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 2 3\\n\", \"Expected output is 1 2 3, but got: {}.\".format(solution(stdin))"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n3\\n4\\n5\") == \"1 2 3\\n4\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 1) == [1, 2, 3], \"Expected: [1, 2, 3], Received: {}\".format(solution(3, 2, 1))\n\nassert solution(3, 2, 2) == [3], \"Expected: [3], Received: {}\".format(solution(3, 2, 2))\n\nassert solution(3, 2, 1000) == [], \"Expected: [], Received: {}\".format(solution(3, 2, 1000))"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1 2 3\"\nassert solution(2) == \"3\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2') == ['1', '2', '3']\n\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == ['3']\n\nassert solution('3 2 1\\n1 3\\n2 3\\n4') == []"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1 2 3\"\nassert solution(2) == \"3\"\nassert solution(3) == \"3\"\nassert solution(4) == \"1 2 3\"\nassert solution(5) == \"1 2 3\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 39\nassert solution() == 4\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"39\\n\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\", \"Perica is playing the piano\"\n\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\", \"Perica plays the keys\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"39\", \"Incorrect output\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass\\n\\n    pass"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == output_1\nassert solution(sample_input_2) == output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(stdin=\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"\"\"1 1 2\n2 3 1\"\"\"\n\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"\"\"1 1 2\n2 4 3\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([\n    '3 3',\n    'xx.',\n    'xxx',\n    '..',\n    '.xx',\n    'x.x',\n    'xx.',\n    'xx.',\n    'xxx',\n    '.xx',\n    'x.x',\n    'xx.'\n]) == '1 1 2\\n2 3 1\\n'\n\nassert solution([\n    '4 6',\n    'xx....',\n    'xx.xxx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx',\n    '....xx"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\n\nsolution(\"2 0 1\\n1 1 1\\n0 0 0\")"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"indistinguishable\", \"Expected output: 'indistinguishable', got: '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"indistinguishable\", \"Please provide the correct input and output.\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'indistinguishable'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0110') == '1111\\n0111\\n1110\\n1111'\nassert solution('0') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1\\n') == '-1'\nassert solution('0110\\n1001\\n0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111'\nassert solution('1111\\n0111\\n1110\\n1111\\n1111\\n') == '1111\\n0111\\n1110\\n1111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10000') == '+0000', '10000'\nassert solution('1111') == '+000-', '1111'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10000) == '+0000', 'Expected output 1: +0000, got {}'.format(solution(10000))\nassert solution(1111) == '+000-', 'Expected output 2: +000-, got {}'.format(solution(1111))"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output. Got: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\", \"Test 1\"\nassert solution(\"1111\") == \"+000-\", \"Test 2\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'10000') == b'+0000'\nassert solution(b'1111') == b'+000-'\n\nfrom typing import List"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'10000') == b'+0000', 'Test 1 failed'\nassert solution(b'1111') == b'+000-', 'Test 2 failed'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string_1) == \"9\", \"Output: \" + str(solution(input_string_1))\nassert solution(input_string_2) == \"2\", \"Output: \" + str(solution(input_string_2))"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n\"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n2 1 1 1\n2 2\n1\n1\n1 2 1\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == 9\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"9\"\nassert solution(sample_input2) == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\\n\", \"Solution is incorrect.\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\\n\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\n\nfrom typing import List"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Expected output: 2, but got: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == 7\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2\\n'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7\\n'\nassert solution('4 5 3\\n2 3\\n4 5 L\\n5421\\n8003\\n3210\\n5025') == '-1\\n'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"The solution is incorrect.\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == -1  # no input"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n\"\"\") == \"7\"\nassert solution(\"\"\"\n1 1 1\n2 2\n1 1 U\n010\n000\n000\n\"\"\") == \"-1\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5\\n2 2 1 2 3\") == \"2\"\nassert solution(stdin=\"8\\n1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\nprint(expected)"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 2 1 2 3\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 2 3\") == 2\nassert solution(\"8 1 2 4 1 1 2 5 1\") == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The correct output is not as expected.\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == [\"NE\"]\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == [\"3\", \"1\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"NE\\nNE\\nNE\"\nassert solution(sample_input_2) == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"NE\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"3\\n1\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'NE\\nNE\\nNE'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"NE\\nNE\\nNE\\nNE\\nNE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Output 1:NE\\nNE\\nNE\\n\\n6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Output 2:3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'NE\\nNE\\nNE\\n\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"NE\"\n\nfrom typing import List"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\"\nassert solution(stdin) == \"NE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n'\n) == 'NE\\nNE\\nNE\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(\n    '6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n'\n) == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE'\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"5\"\n\nsample_input_1 = \"2 2 1 10\\n0 0\\n1 4\\n3 2\"\nsample_input_2 = \"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2\\n'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Please fix the given code\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == '2.0000000000\\n', \"Expected '2.0000000000', but got '{}'.\".format(solution(input1))"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.0000000000\", \"The correct output is: 2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert abs(solution(stdin) - 2.0) < 1e-4\"\n\nimport math"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2.0000000000', \"The expected output is not found.\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.0000000000\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '2.0000000000\\n'\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.0000000000\"\nassert solution(input()) == \"2.0000000000\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\", \"Test case 1 failed.\"\nassert solution(\"1 9 10\\n1 100 50\") == \"2\\n10\\n50\", \"Test case 2 failed.\"\nassert solution(\"1 100 100\") == \"1\\n100\", \"Test case 3 failed.\"\nassert solution(\"1 100 100\") == \"1\\n100\", \"Test case 4 failed.\"\nassert solution(\"1 100 100\") == \"1\\n100\", \"Test case 5 failed.\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1)) == str(int(input()) + 1)\n\nassert solution(str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) + str(int(input()) + 1) +"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n5\\n\"\nassert solution(input()) == \"9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 9 5\\n1 100 10') == '1\\n5\\n9\\n19'\nassert solution('2 100 5\\n10 200 20') == '2\\n10\\n20'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1\n1''') == '1\\n1'\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1''') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '1\\n1'\nassert solution(sample_input2) == '7\\n4 4 2 4 4 1 4'\n\nfrom typing import List"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n1\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n7\n4 4 2 4 4 1 4\n\"\"\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '1\\n1\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected output: {}, got: {}\".format(input(), output(), solution(input()))"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n1') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 10 3 2\") == \"4\"\nassert solution(stdin=\"10 10 5 0\") == \"10\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 10 3 2\\n10 10 5 0') == '4\\n'\nassert solution('10 10 5 0\\n10 10 5 0') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 3 2\") == 4\nassert solution(\"10 10 5 0\") == 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Test case 1 failed: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == sample_output_2, f\"Test case 2 failed: {solution(sample_input_2)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\\n\") == \"4\"\nassert solution(\"10 10 5 0\\n\") == \"10\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"10 10 5 0\") == \"10\\n\", \"Sample Input 2\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 3 2\") == \"4\", \"Output should be 4\"\nassert solution(\"10 10 5 0\") == \"10\", \"Output should be 10\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\", \"Expected 4, but got {}\".format(solution())"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"output\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '10', 'Your solution should return the correct output.'\nassert solution() == '111', 'Your solution should return the correct output.'\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10\\n'\nassert solution('6 100 9294\\n23689\\n') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 20\\n0123456789') == '10\\n'\nassert solution('6 100 9294\\n23689') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"111\\n\" # expected output: \"111\\n\"\nassert solution(\"2 1 20\\n0123456789\") == \"10\\n\" # expected output: \"10\\n\"\nassert solution(\"6 100 9294\\n23689\") == \"111\\n\" # expected output: \"111\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.500000 2.666667\", \"The code is incorrect.\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"1.500000 2.666667\\n\"\n\nassert solution(\n    \"\"\"\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n    \"\"\"\n) == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\\n\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test.in', 'r')) == '1.500000 2.666667'\nassert solution(open('test.in', 'r')) == '1.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\" or solution(stdin) == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3 6\\n101010\\n111001\\n101001') == 3\nassert solution(stdin='4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected output: '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\nassert solution(\"1 1\\n0\") == \"1\"\nassert solution(\"1 0\\n1\") == \"1\"\nassert solution(\"3 2\\n11101111\") == \"2\"\nassert solution(\"1 1\\n10101010\\n11101111\\n10101010\") == \"2\"\nassert solution(\"10 5\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\") == \"5\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(data1) == \"3\\n\", \"Sample Input 1\"\nassert solution(data2) == \"3\\n\", \"Sample Input 2\"\n\ndata1 = \"\"\"\n3 6\n101010\n111001\n101001\n\"\"\"\n\ndata2 = \"\"\"\n4 5\n10010\n01010\n10101\n01001\n\"\"\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"-3 -1\n3 1\"\"\"\n\nprint(\"Test Passed\")"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"-3 -1\n3 1\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 -1\\n3 1\"\nassert solution() == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\") == \"3 4\\n3 -1\\n\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"abc\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"2 5.086781\"\n\nassert solution(\n    \"\"\"\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 6 5 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"\"\"2 5.086781\"\"\"\n\nassert solution(\"\"\"3 0.25 2 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"\"\"1 12.715255\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\n\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Output does not match\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 5.086781\"\n\nfrom math import atan2, cos, sin, sqrt"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 5.086781\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\") == \"8\"\n\nassert solution(r\"4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(6)) == \"8\"\nassert solution(str(4)) == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"1\\n\"\nassert solution(5) == \"8\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 8\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8\\n'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_case.txt\").read()) == \"8\\n\"\nassert solution(open(\"test_case2.txt\").read()) == \"1\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '8\\n'  # Expected output: 8\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"1\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"4 3\"\nassert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == (4, 3)\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"impossible\"\nassert solution(3) == \"impossible\"\nassert solution(4) == \"impossible\"\nassert solution(5) == \"impossible\"\nassert solution(6) == \"impossible\"\nassert solution(7) == \"impossible\"\nassert solution(8) == \"impossible\"\nassert solution(9) == \"impossible\"\nassert solution(10) == \"impossible\"\nassert solution(11) == \"impossible\"\nassert solution(12) == \"impossible\"\nassert solution(13) == \"impossible\"\nassert solution(14) == \"impossible\"\nassert solution(15) == \"impossible\"\nassert solution(16) == \"impossible\"\nassert solution(17) == \"impossible\"\nassert solution(18) == \"impossible\"\nassert solution(19) == \"impossible\"\nassert solution(20) == \"impossible\"\nassert solution(21) == \"impossible\"\nassert solution(22) == \"impossible\"\nassert solution(23) == \"impossible\"\nassert solution(24) == \"impossible\"\nassert solution(25) == \"impossible\"\nassert solution(26) == \"impossible\"\nassert solution(27) == \"impossible\"\nassert solution(28) == \"impossible\"\nassert solution(29) == \"impossible\"\nassert solution(30) == \"impossible\"\nassert solution(31) == \"impossible\"\nassert solution(32) == \"impossible\"\nassert solution(33) == \"impossible\"\nassert solution(34) == \"impossible\"\nassert solution(35) == \"impossible\"\nassert solution(36) == \"impossible\"\nassert solution(37) == \"impossible\"\nassert solution(38) == \"impossible\"\nassert solution(39) == \"impossible\"\nassert solution(40) == \"impossible\"\nassert solution(41) == \"impossible\"\nassert solution(42) == \"impossible\"\nassert solution(43) == \"impossible\"\nassert solution(44) == \"impossible\"\nassert solution(45) == \"impossible\"\nassert solution(46) == \"impossible\"\nassert solution(47) == \"impossible\"\nassert solution(48) == \"impossible\"\nassert solution(49) == \"impossible\"\nassert solution(50) == \"impossible\"\nassert solution(51) == \"impossible\"\nassert solution(52) == \"impossible\"\nassert solution(53) == \"impossible\"\nassert solution(54) == \"impossible\"\nassert solution(55) == \"impossible\"\nassert solution(56) == \"impossible\"\nassert solution(57) == \"impossible\"\nassert solution(58) == \"impossible\"\nassert solution(59) == \"impossible\"\nassert solution(60) == \"impossible\"\nassert solution(61) == \"impossible\"\nassert solution(62) == \"impossible\"\nassert solution(63) == \"impossible\"\nassert solution(64) == \"impossible\"\nassert solution(65) == \"impossible\"\nassert solution(66) == \"impossible\"\nassert solution(67) == \"impossible\"\nassert solution(68) == \"impossible\"\nassert solution(69) == \"impossible\"\nassert solution(70) == \"impossible\"\nassert solution(71) == \"impossible\"\nassert solution(72) == \"impossible\"\nassert solution(73) == \"impossible\"\nassert solution(74) == \"impossible\"\nassert solution(75) == \"impossible\"\nassert solution(76) == \"impossible\"\nassert solution(77) == \"impossible\"\nassert solution(78) == \"impossible\"\nassert solution(79) == \"impossible\"\nassert solution(80) == \"impossible\"\nassert solution(81) == \"impossible\"\nassert solution(82) == \"impossible\"\nassert solution(83) == \"impossible\"\nassert solution(84) == \"impossible\"\nassert solution(85) == \"impossible\"\nassert solution(86) == \"impossible\"\nassert solution("
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(10) == 4\nassert solution(1) == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n3\\n') == '16'\nassert solution('4\\n2\\n4\\n1\\n4\\n') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"16\", \"Test case 1 failed\"\nassert solution() == \"109\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == expected_output, f\"Solution {solution(read_input())} is incorrect. Expected: {expected_output}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n3\\n4\\n2\\n1\\n4\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n3\\n\\n4\\n2\\n4\\n1\\n4\\n\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\"\n\nsolution(\"2\\n1\\n3\\n\\n4\\n2\\n4\\n1\\n4\\n\\n\") == \"16\"\nsolution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"109\", \"Test case 2 failed\"\nassert solution(input()) == \"16\", \"Test case 3 failed\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"109\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 109"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n3\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0', 'Please implement the solution function'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution() == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 2 1'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n2 3\n5 1\n1 2\n1 2\n1 2\n\"\"\"\nsample_output_1 = \"\"\"\n3\n1 2 1\n1 2 2\n1 2 2\n\"\"\"\n\nsample_input_2 = \"\"\"\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n\"\"\"\nsample_output_2 = \"\"\"\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Solution does not match expected output: {solution(input)}!= {expected}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution() == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution() == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution() == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    \"\"\"\n) == [\"1 2\"]\n\nassert solution(\n    \"\"\"\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    \"\"\"\n) == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2\\n'\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 2\", \"Test case 1 failed\"\nassert solution(stdin) == \"impossible\", \"Test case 2 failed\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == [\"impossible\"]\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == ['1 2']\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == ['impossible']\n\nfrom typing import List"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"5 2\", \"The solution is incorrect\"\nassert solution(2020) == \"2020 1\", \"The solution is incorrect\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == '5 2'\nassert solution(2020) == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2), \"Test case 1 failed\"\nassert solution(2020) == (2020, 1), \"Test case 2 failed\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == (5, 2), \"Expected (5, 2), got ({0}, {1})\".format(solution(10), (5, 2))\nassert solution(2020) == (2020, 1), \"Expected (2020, 1), got ({0}, {1})\".format(solution(2020), (2020, 1))"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible\\n'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique\\nambiguous\\n'\nassert solution('4\\n5\\napple\\nbanana\\nbanana\\napple\\n5\\nbanana\\napple\\nSample Input 2: 4\\n5\\napple\\nbanana\\nbanana\\napple\\n5\\nbanana\\napple\\napple\\napple\\n') == 'unique\\nambiguous\\n'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"impossible\"\nassert solution(sample_input_2) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == \"impossible\"\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3\\n0 chocolate 1 icecream 2 cookies 3\\nchocolate cookies icecream') == 'impossible'\nassert solution('3\\n4\\n0 chocolate 1 icecream 2 cookies 2 chocolate 3\\nchocolate icecream cookies') == 'unique'\nassert solution('3\\n3\\n0 chocolate 1 icecream 2 cookies 3\\nchocolate cookies icecream') == 'impossible'\nassert solution('3\\n3\\n0 chocolate 1 icecream 2 cookies 3\\nchocolate cookies icecream') == 'impossible'\nassert solution('3\\n3\\n0 chocolate 1 icecream 2 cookies 3\\nchocolate cookies icecream') == 'impossible'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'unique'\nassert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n4\\napple\\nbanana\\napple\\nbanana\\n') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"impossible\"\nassert solution(open('input2.txt', 'r')) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n3\\nchocolate\\ncookies\\nicecream\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 3, \"0 chocolate\", \"1 icecream\", \"2 cookies\", 3, \"chocolate\", \"cookies\", 2, \"chocolate\", \"icecream\", \"cookies\") == \"unique\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\", \"Test case 1 failed.\"\nassert solution(\"1 2 10\") == \"1\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '0', 'Input 1'\nassert solution(open('input.txt', 'r')) == '1', 'Input 2'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()}) should return {output}, but it returned {solution(input())}.\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12345.\\n12345.\\n12345.\\n12345.\\n12345.\\n12345.\") == \"1 pan\"\nassert solution(\"12345.\\n12345.\\n12345.\\n12345.\\n12345.\\n12345.\") == \"3 zoom out\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"...\") == \"...\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Expected: {expected1}, Received: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected: {expected2}, Received: {solution(input2)}\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 pan\\n'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1\") == \"1 pan\"\nassert solution(\"Sample Input 2\") == \"3 zoom out\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n..............\n.............."
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\n....XXXX\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 20\napples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == '''\n apples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n\n'''\n\nassert solution('''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n       \n       \n       \n       \n       \n       \n'''"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 20\\napplnes are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\\n\\n\\n') =='apples are great!\\n check out our    \\nfresh apples!\\n'\n\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       \n       "
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n                    \n                            check out our fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"            \n                            \"\n\nassert solution(\"8 30\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n                    \n                            check out our fresh apples!\\n\"\n\nassert solution(\"8 10\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"            \n                            \"\n\nassert solution(\"8 15\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"            \n                            \"\n\nassert solution(\"8 20\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"            \n                            \"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"            \n                            \"\n\nassert solution(\"8 20\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" apples are great!\\n                    \n                            check out our fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\nSample Output 1:\\n apples are great!\\n                    \n                    \n                    \n                    \n                    \n                    \n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n                    \n                    \n                    \n                    \n                    \n                    \n assert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\nSample Output 2:\\n\\n\\n\\n\\n\" ) == \" ++ + +\\n\\n\\n\\n\\n\\n++ + +\\n\\n\\n\\n\\n\\n++ + +\\n\\n\\n\\n\\n\\n++ + +\\n\\n\\n\\n\\n\\n++ + +\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == 'apples are great!'\nassert solution(sample_input_2) =='   '\n\nsample_input_1 = '''\n8 20\napples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n'''\n\nsample_input_2 = '''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\nsample_output_1 = '''\n apples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n\n'''\n\nsample_output_2 = '''\n       \n       \n       \n       \n       \n       \n'''\n\nassert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 6\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'8 20\\napplles are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') == b' apples are great!\\n fresh apples!\\n'\nassert solution(b'7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == b'  =  +\\n +++ +\\n + + +\\n +++++\\n'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HH') == 2.0, 'Output should be 2.0'\nassert solution('H?') == 1.5, 'Output should be 1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"HH\") == \"2.0\"\nassert solution(stdin=\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HH') == '2.0', 'Sample Input 1'\nassert solution('H?') == '1.5', 'Sample Input 2'\n\nfrom typing import List"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Output 1 should be: {output1}, but got: {solution(input1)}\"\nassert solution(input2) == output2, f\"Output 2 should be: {output2}, but got: {solution(input2)}\"\n\ninput1 = \"\"\"\n4\n0001\n0001\n0011\n1110\n\"\"\"\noutput1 = \"\"\"\n1\n0001\n0001\n0011\n1111\n\"\"\"\n\ninput2 = \"\"\"\n4\n1111\n1111\n1111\n1111\n\"\"\"\noutput2 = \"\"\"\n6\n0011\n0011\n0111\n1101\n\"\"\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The provided solution is incorrect.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    N = int(stdin.readline().strip())\\n    picture = ''\\n    for _ in range(N):\\n        picture += stdin.readline().strip()\\n    difference = 0\\n    for i in range(N):\\n        for j in range(N):\\n            if picture[i][j]!= picture[(i+1)%N][j]:\\n                difference += 1\\n    print(min(difference, N))\\n\\nif __name__ == '__main__':\\n    main()\"\nassert solution == solution\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\\n\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"h 1 4 1\\n\" + \"v 2 4 2\\n\" + \"h 10 2 2\\n\" + \"v 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\"\nassert solution(\"h 2 2 1\\nh 2 2 2\\nh 2 2 3\\nh 2 2 4\\nh 2 2 5\\nh 2 2 6\\nh 2 2 7\\nh 2 2 8\\nh 2 2 9\\nh 2 2 10\\nh 2 2 11\\nh 2 2 12\\nh 2 2 13\\nh 2 2 14\\nh 2 2 15\\nh 2 2 16\\nh 2 2 17\\nh 2 2 18\\nh 2 2 19\\nh 2 2 20\\nh 2 2 21\\nh 2 2 22\\nh 2 2 23\\nh 2 2 24\\nh 2 2 25\\nh 2 2 26\\nh 2 2 27\\nh 2 2 28\\nh 2 2 29\\nh 2 2 30\\nh 2 2 31\\nh 2 2 32\\nh 2 2 33\\nh 2 2 34\\nh 2 2 35\\nh 2 2 36\\nh 2 2 37\\nh 2 2 38\\nh 2 2 39\\nh 2 2 40\\nh 2 2 41\\nh 2 2 42\\nh 2 2 43\\nh 2 2 44\\nh 2 2 45\\nh 2 2 46\\nh 2 2 47\\nh 2 2 48\\nh 2 2 49\\nh 2 2 50\\nh 2 2 51\\nh 2 2 52\\nh 2 2 53\\nh 2 2 54\\nh 2 2 55\\nh 2 2 56\\nh 2 2 57\\nh 2 2 58\\nh 2 2 59\\nh 2 2 60\\nh 2 2 61\\nh 2 2 62\\nh 2 2 63\\nh 2 2 64\\nh 2 2 65\\nh 2 2 66\\nh 2 2 67\\nh 2 2 68\\nh 2 2 69\\nh 2 2 70\\nh 2 2 71\\nh 2 2 72\\nh 2 2 73\\nh 2 2 74\\nh 2 2 75\\nh 2 2 76\\nh 2 2 77\\nh 2 2 78\\nh 2 2 79\\nh 2 2 80\\nh 2 2 81\\nh 2 2 82\\nh 2 2 83\\nh 2 2 84\\nh 2 2 85\\nh 2 2 86\\nh 2 2 87\\nh 2 2 88\\nh 2 2 89\\nh 2 2 90\\nh 2 2 91\\nh 2 2 92\\nh 2 2 93\\nh 2 2 94\\nh 2 2 95\\nh 2 2 96\\nh 2 2 97\\nh 2 2 98\\nh 2 2 99\\nh 2 2 100\\nh 2 2 101\\nh 2 2 102\\nh 2 2 103"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Your implementation of solution is incorrect.\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect solution\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example.in', 'r')) == 2, \"Test case 1 failed\"\nassert solution(open('example.in', 'r')) == 4, \"Test case 2 failed\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(f\"\"\"\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n\"\"\") == \"2\\n\"\n\nassert solution(f\"\"\"\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nassert solution() == 4"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 4 2') == '2\\n', \"Test failed for example 1\"\nassert solution('8\\n1 2 1 3 1 3 1 2') == '4\\n', \"Test failed for example 2\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(6)) == \"2\"\nassert solution(str(8)) == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\") == \"2\\n4\\n\", \"Test 1\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n10\\n1 2 3 4 5 6 7 8 9\") == \"2\\n10\\n\", \"Test 2\"\n\nassert solution(\"7\\n1 2 3 4 5 6 7\\n7\\n1 2 3 4 5 6 7\") == \"2\\n4\\n\", \"Test 3\"\n\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n9\\n1 2 3 4 5 6 7 8 9\") == \"2\\n10\\n\", \"Test 4\"\n\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10\\n11\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n12\\n\", \"Test 5\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 2, \"Zapray has already finished his homework and is working on it.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2, \"Solution should return 2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4, \"Solution should return 4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\\n\", \"Test 2 failed\"\nassert solution(\"3\\n1 1 1 1 1 1\") == \"1\\n\", \"Test 3 failed\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"1\\n\", \"Test 4 failed\"\nassert solution(\"4\\n1 1 1 1 1\") == \"1\\n\", \"Test 5 failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 3 4 2\") == 2\nassert solution(\"1 2 1 3 1 3 1 2\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Zapray is missing the answer to the given problem.\"\nassert solution() == 4, \"Zapray is missing the answer to the given problem.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Incorrect result\" # Example 1\n\nassert solution() == 4, \"Incorrect result\" # Example 2"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Error: Expected output {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    input = list(map(int, stdin.split()))\\n    N, K, P = input\\n    board = [[0] * N for _ in range(N)]\\n    seen = set()\\n\\n    for _ in range(P):\\n        r1, c1, r2, c2 = input\\n        for i in range(abs(r1 - r2)):\\n            for j in range(abs(c1 - c2)):\\n                board[r1 + i][c1 + j] = 1\\n                for r, c in [(r1, c1), (r1, c1 + j), (r1 + i, c1), (r1 + i, c1 + j)]:\\n                    if r < 0 or r >= N or c < 0 or c >= N:\\n                        continue\\n                    if board[r][c]!= 1 or seen.add((r, c)):\\n                        continue\\n                    for x in range(1, X):\\n                        board[r + x][c] ^= 1\\n                    if board[r + i][c + j] == 0 and board[r1 + i][c1 + j] == 0:\\n                        break\\n\\n    total_attacked = sum(1 for row in board for col in row if row & col > 0)\\n    print(total_attacked)\\n\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 2 2\n    1 1 1\n    2 2 1\n    2 2 2 1\n    1 1 1 2\n''') == '4\\n0'\n\nassert solution('''\n    2 2 2\n    1 1 1\n    2 2 2\n    2 2 2 1\n    1 1 1 2\n''') == '4\\n2'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\"\n) == \"4\\n0\\n\"\n\nassert solution(\n    \"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\"\n) == \"4\\n2\\n\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_data/sample_input_1.txt', 'r')) == \"1\\n\"\nassert solution(open('test_data/sample_input_2.txt', 'r')) == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1', 'incorrect output'\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution, \"No solution provided for this problem\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n'''\n) == '1'\n\nassert solution(\nr'''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n'''\n) == 'impossible'\n\nassert solution(\nr'''\n4 3\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n'''\n) == '1'\n\nassert solution(\nr'''\n4 3\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n'''\n) == '2'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '35\\n18\\n3\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n\") == \"8\\n2\\n1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\n\", \"Test 1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n\") == \"8\\n2\\n1\\n\", \"Test 2\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Your solution does not match the output. Please check the code and run again.\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35\\n18\\n3\\n\\n8\\n2\\n1\\n'"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Error in solution 1\"\nassert solution(sample_input_2) == expected_output_2, \"Error in solution 2\"\n\nsample_input_1 = \"\"\"\n4\n1\n2\n3\n4\n\"\"\"\n\nsample_input_2 = \"\"\"\n5\n3\n2\n4\n1\n5\n\"\"\"\n\nexpected_output_1 = \"0\\n1\\n3\\n6\\n\"\nexpected_output_2 = \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output N integers each on its own line, the values of the counter C after each number is inserted into the tree.\\n0\\n1\\n3\\n6\\n0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n1\\n3\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_number} failed.\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '''\n0\n1\n3\n6\n'''\n\nassert solution('''\n5\n3\n2\n4\n1\n5\n''') == '''\n0\n1\n2\n4\n6\n'''"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 4 1 3\\n4 3 1 2\"\nassert solution(stdin) == \"4 3 1 2\\n1 2 0 3\\n2 2 3 3\\n0 0 1 1\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 4 1 3\", \"Expected output: 2 4 1 3\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '''\n2 4 1 3\n''', \"Your solution is incorrect\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Your solution is incorrect. Please check the examples and input.\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3 2 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\nassert solution('1\\n3 2 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == solution(open(\"test_input.txt\", \"r\"))"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Incorrect output for sample input 1\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', \"Solution 1 incorrect\"\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', \"Solution 2 incorrect\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Expected output 'Theta wins', got: \" + solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\")"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"The solution should return 'Theta wins' for the given input.\"\n\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"The solution should return 'Theta wins' for the given input.\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Test 1 failed for input1: {input1}, expected {expected1}\"\nassert solution(input2) == expected2, f\"Test 2 failed for input2: {input2}, expected {expected2}\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    1 charlatan 1\n    1 not charlatan 1\n    \"\"\"\n) == \"charlatan\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    1 and fabulist 1 fabulist 2\n    \"\"\"\n) == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther']\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\", \"Your solution is incorrect. Please check the given code.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\\n\", \"John's game is not quite ready yet.\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\\n\", \"John's game is not quite ready yet.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4\\n'\n\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n8.00 8.00\\n\") == \"8\\n\"\nassert solution(\"0.00 0.00\\n1.00 0.00\\n2.00 0.00\\n3.00 0.00\\n4.00 0.00\\n5.00 0.00\\n\") == \"16\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == 4\nassert solution(\"1.00 0.00\\n0.00 1.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\") == 1\nassert solution(\"0.00 1.00\\n1.00 0.00\\n0.00 0.00\\n0.00 0.00\\n0.00 0.00\") == 0\nassert solution(\"1.00 0.00\\n1.00 0.00\\n1.00 0.00\\n1.00 0.00\\n1.00 0.00\") == 1"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '16'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\n\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'\n\nfrom typing import List"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"The function should return {expected}, but instead it returns {solution}.\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '16', 'Expected output: 16\\nActual output: {}'.format(solution())"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.414\", \"Incorrect answer\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.414\", \"Incorrect output: 1.414\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\", \"Test Case 1\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\", \"Test Case 2\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"1.4140\"\nassert solution(sample_input2) == \"5.6567\"\n\nfrom typing import List"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.414\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1.414\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 1 1 1') == '1.0\\n'\nassert solution('3 1 1 1') == '0.433\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 1 1 1') == 1.0\nassert solution('3 1 1 1') == 0.433\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"1.0\"\nassert solution(open('input2.txt', 'r')) == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1.0\\n\", \"Expected output 1, got: {}\".format(solution())"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1 1 1 1\\n3 1 1 1') == '1.0\\n'\nassert solution('3 1 1 1') == '0.433\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, f\"The output is {solution()}, but the expected output is {expected}.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nGot output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\"\nassert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output the final energy level on the first line.\\n5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\\n2 1\\n2 1\\n1 2\\n\\n2 1\\n2 1\\n1 2\\n\") == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\nassert solution(\"\") == \"0\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Arrange\\n2 1\\n2 1\\n1 2\\n\\nArrange\\n3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"1\\n3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2 1\\n2 1\\n1 2\\n2 3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\nassert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\", \"Arrange\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\", \"Arrange\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == -1 # Solution 1 fails"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5') == 0, \"Test 1 failed.\"\n\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6') == 5, \"Test 2 failed.\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n') == -1\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution failed for {input()}, expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"Tests Passed\")"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4.00\", \"Test 1 failed\"\nassert solution(stdin) == \"4.00\", \"Test 2 failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == '4.00', \"Testcase 1 failed\"\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00', \"Testcase 2 failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4.00\", \"Incorrect output. Expected: 4.00, but got: {}\".format(solution())"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\"\n) == \"4.00\"\n\nassert solution(\n    \"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\"\n) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4.00, \"Expected output 4.00 but got {}\".format(solution())\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4.00\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 3 2\n    PAINT 2 0 0 3 3\n    PAINT 3 0 3 3 3\n    \"\"\"\n) == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\n\nassert solution(\n    \"\"\"\n    3 3 4\n    PAINT 3 0 0 1 1\n    LOAD\n    PAINT 2 1 1 2 2\n    \"\"\"\n) == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution for sample input {sample_input} is not correct. Solution: {solution_output}, Sample Output: {sample_output}\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n'''\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\n\nsolution()"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\\n\"\nassert solution(\"4 2\\n3 3\\n1 1\\n\") == \"1 2 3\\n-1\\n\"\nassert solution(\"3 2\\n2 2\\n1 1\\n\") == \"1 2\\n-1\\n\"\nassert solution(\"5 1\\n4 2\\n3 3\\n\") == \"1 4 2 3\\n-1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '-1', \"The required sequence doesn't exist.\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Sample Output 1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    \"\"\"\n) == \"\"\"\n1 4 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 2\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 3) == '1 4 2 3'\nassert solution(5, 1) == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\\n\"\nassert solution(\"10 3\\n10 1\\n\") == \"1 2 3 4 5 6 7 8 9\\n-1\\n\"\nassert solution(\"10 4\\n10 1\\n\") == \"1 2 3 4 5 6 7 8 9\\n-1\\n\"\nassert solution(\"10000000 3\\n10000000 1\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == 'Output', 'Test Case 1 failed'\nassert solution(open('input_2.txt').read()) == 'Output', 'Test Case 2 failed'\n\nfrom typing import List"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(\"pass\")"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == 1\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 4, 2, 2, 1, 1, 3]) == 1\nassert solution([4, 5, 0, 2, 6, 8, 6, 5, 7]) == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 2, 1, 1, 3, 5, 0, 2, 6, 8, 6, 5, 7) == 1\nassert solution(4, 5, 0, 2, 6, 8, 6, 5, 7) == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n'\n\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"4 140\"\nassert solution(sample_input_2) == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Test 1 failed\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Test 2 failed\"\n\nassert solution(\"1 1 0 0\\n0 1 1 1\") == \"0 1\\n\", \"Test 3 failed\"\n\nassert solution(\"1 1 0 1\\n0 1 1 1\") == \"1 1\\n\", \"Test 4 failed\"\n\nassert solution(\"1 1 0 10\\n0 1 1 10\") == \"10 10\\n\", \"Test 5 failed\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr'''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n'''\n) == \"4 140\"\n\nassert solution(\nr'''\n2 1 0 1\n0 1 1000 100\n'''\n) == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Incorrect output\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Incorrect output\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input2.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    100 7\n    1 50\n    50 70\n    70 90\n    90 40\n    20 60\n    60 80\n    80 20\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    8 2\n    8 3\n    5 7\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21\n\nfrom typing import List"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"120\") == 5, \"120\"\nassert solution(\"51090942171709440000\") == 21, \"51090942171709440000\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120\") == 5, \"Sample Input 1 failed\"\nassert solution(\"51090942171709440000\") == 21, \"Sample Input 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120\") == \"5\", \"Example 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Example 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(120) == 5, \"Input 1\"\nassert solution(51090942171709440000) == 21, \"Input 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the number of ways.\\n\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output the number of ways.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 45, \"Solution is incorrect\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 45"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() # Test Case"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 1 2') == 45, \"Test 1 failed\"\nassert solution('3 3 3') == 10, \"Test 2 failed\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20\\n'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n2\\n10\\n') == 'impossible\\n'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == 'impossible\\n'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n1\\n') == '18\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Possible\"\nprint(\"Possible\")"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '18\\n'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"18\"\nassert solution(open(\"input2.txt\").read()) == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'Test case 1 passed'\nassert solution == 'Test case 2 passed'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\" # This should pass the test"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\", \"Test failed\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"3\\n\", \"The output is incorrect\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Output should be 3\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2', \"The output is not correct\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test cases do not match\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\\n\"\nprint(solution(stdin=\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\"))"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == 2\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\n') == '1\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\nSample Input 1:\\n3\\n1 2 3\\n3\\nSample Output 1:\\n1\\nSample Input 2:\\n3\\n1 3 2\\n2\\nSample Output 2:\\n5\\n') == '1\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 0, \"Invalid input\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('sample input 1') == '0'\nassert solution('sample input 2') == '19'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"hello\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"crashed\", \"The program did not crash.\"\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Crash\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\"\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"def solution(stdin: str) -> str:\\n\\tprintf(\\\"Hello, world!\\\\n\\\")\\n\") == \"Hello, world!\\\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\")\\n\") == \"Hello, world!\\\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\", end='')\\n\") == \"Hello, world!\\\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\".encode(), end='')\\n\") == \"Hello, world!\\\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\".upper(), end='')\\n\") == \"HELLO, WORLD!\\\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\".isalpha(), end='')\\n\") == \"True\"\nassert solution(\"def solution(stdin: str) -> str:\\n\\tprint(\\\"Hello, world!\\\\n\\\".split(), end='')\\n\") == \"('Hello', 'world!')\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"hello\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Input and output are not matching.\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"classa classb myfilec execd libe\") == \"c\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\") == \"c\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nclassa 1\\nimport myfilec, libe\\nexecd 1\\nimport libe\") == \"SHIP IT\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nclassa 1\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassb 1\\nimport myfilec, libe\\nimport execd\\nimport libe\") == \"c, d, myfilec, libe\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nclassa 1\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassb 1\\nimport myfilec, libe\\nimport execd\\nimport libe\\nclassc 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\") == \"SHIP IT\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nclassa 1\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassb 1\\nimport myfilec, libe\\nimport execd\\nimport libe\\nclassc 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassd 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclasse 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\") == \"SHIP IT\"\nassert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nclassa 1\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassb 1\\nimport myfilec, libe\\nimport execd\\nimport libe\\nclassc 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassd 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclasse 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassf 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassg 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassh 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassi 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassj 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassk 1\\nimport classb\\nimport myfilec, libe\\nexecd 1\\nimport libe\\nclassl 1\\nimport classb\\nimport myfilec, libe\\"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''\n2\na b\na 1\nb 2\n''') == 'SHIP IT'\nassert solution('''\n3\nclassa classb\nclassa 1\nimport classb\nclassb 2\nimport classa\n''') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of files: \")) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin.read()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('classa classb myfilec execd libe') == 'c'\nassert solution('a b c d') == 'SHIP IT'\nassert solution('a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'c'\nassert solution('classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5+3+x\") == \"1\\n\"\nassert solution(\"20+3+x\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5+3+x') == '1', \"The solution to the given problem is incorrect.\"\nassert solution('9 10') == '1', \"The solution to the given problem is incorrect.\"\nassert solution('20+3+x') == '2', \"The solution to the given problem is incorrect.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\", \"The first input is not correct.\"\nassert solution(\"9 10\") == \"1\", \"The second input is not correct.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Test 1 failed.\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Test 2 failed.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test Failed: Expected output is: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"9 10\") == \"1\"\nassert solution(\"20+3+x\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5+3+x\\n9 10') == '1'\nassert solution('20+3+x\\n0 5') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5+3+x\\n9 10') == '1', \"Invalid expression\"\n\nassert solution('20+3+x\\n0 5') == '2', \"Invalid expression\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'no', \"No solution\"\nassert solution() == 'yes', \"No solution\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no\\n'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input {i+1}, Output {solution(sample_input)}!= {sample_output}\" for i, sample_input, sample_output in enumerate(test_cases)"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_id} failed. Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\", \"Incorrect solution. Please fix it.\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'yes', \"Please implement the solution\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n2 10\n0 15\n5 20\n\"\"\"\n) == \"yes\\n\"\n\nassert solution(\n    \"\"\"\n2 10\n1 15\n0 20\n\"\"\"\n) == \"no\\n\"\n\nassert solution(\n    \"\"\"\n10\n0 15\n5 20\n5 25\n5 30\n5 35\n5 40\n5 45\n5 50\n5 55\n5 60\n5 65\n5 70\n5 75\n5 80\n5 85\n5 90\n5 95\n5 100\n0 105\n5 110\n5 115\n5 120\n5 125\n5 130\n5 135\n5 140\n5 145\n5 150\n5 155\n5 160\n5 165\n5 170\n5 175\n5 180\n5 185\n5 190\n5 195\n5 200\n5 205\n5 210\n5 215\n5 220\n5 225\n5 230\n5 235\n5 240\n5 245\n5 250\n5 255\n5 260\n5 265\n5 270\n5 275\n5 280\n5 285\n5 290\n5 295\n5 300\n5 305\n5 310\n5 315\n5 320\n5 325\n5 330\n5 335\n5 340\n5 345\n5 350\n5 355\n5 360\n5 365\n5 370\n5 375\n5 380\n5 385\n5 390\n5 395\n5 400\n5 405\n5 410\n5 415\n5 420\n5 425\n5 430\n5 435\n5 440\n5 445\n5 450\n5 455\n5 460\n5 465\n5 470\n5 475\n5 480\n5 485\n5 490\n5 495\n5 500\n5 505\n5 510\n5 515\n5 520\n5 525\n5 530\n5 535\n5 540\n5 545\n5 550\n5 555\n5 560\n5 565\n5 570\n5 575\n5 580\n5 585\n5 590\n5 595\n5 600\n5 605\n5 610\n5 615\n5 620\n5 625\n5 630\n5 635\n5 640\n5 645\n5 650\n5 655\n5 660\n5 665\n5 670\n5 675\n5 680\n5 685\n5 690\n5 695\n5 700\n5 705\n5 710\n5 715\n5 720\n5 725\n5 730\n5 735\n5 740\n5 745\n5 750\n5 755\n5 760\n5 765\n5 770\n5 775\n5 780\n5 785\n5 790\n5 795\n5 800\n5 805\n5 810\n5 815\n5 82"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.25\", \"Incorrect output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n\"\"\") == \"0.25\"\n\nassert solution(\"\"\"\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n\"\"\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Your code is incorrect. Please check the output and submit it again.\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'\n\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {index+1} failed\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Test case {i+1} is incorrect. Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\n\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\\n\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"inf\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == 3\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Got '{solution(input)}', expected '{expected_output}'.\"\nfor i in range(max(len(input), len(expected_output))):\n    assert isinstance(input[i], int)\n    assert isinstance(expected_output[i], int)\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 2\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 3\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 2\\n') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == '3'\nassert solution('''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4 4\n    1 2 3 4\n    ''') == '4\\n'\n\nassert solution('''\n    12 3\n    2 3 4 5 6 7 4 7 8 8 12 12\n    ''') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n\nassert solution(\"4 4\\n1 2 3 4\\n\") == \"4\"\n\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Expected output: {expected_output_1}, but got: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Expected output: {expected_output_2}, but got: {solution(sample_input_2)}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == 4\nassert solution(solution(solution)) == 4\nassert solution(solution(solution(solution)))) == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '4\\n'\nassert solution(sample_input2) == '2\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hoose\") == [\"hoose\"], \"Output mismatch: expected ['hoose'], got '{}'\".format(solution(\"hoose\"))\nassert solution(\"hose\") == [\"hose\"], \"Output mismatch: expected ['hose'], got '{}'\".format(solution(\"hose\"))\nassert solution(\"nose\") == [\"nose\"], \"Output mismatch: expected ['nose'], got '{}'\".format(solution(\"nose\"))\nassert solution(\"noises\") == [\"noises\"], \"Output mismatch: expected ['noises'], got '{}'\".format(solution(\"noises\"))\nassert solution(\"noise\") == [\"noise\"], \"Output mismatch: expected ['noise'], got '{}'\".format(solution(\"noise\"))\nassert solution(\"def\") == [\"def\"], \"Output mismatch: expected ['def'], got '{}'\".format(solution(\"def\"))\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"hoose\\nnoises\\nnoise\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'hoose\\noises\\noise\\n'\nassert solution('4\\nhose\\nhoose\\oose\\moose\\n') == 'hose\\moose\\def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match the expected output. Input: {stdin}, Expected Output: {expected_output}\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"4\\nhose\\nhoose\\oose\\moose\\n\"\n) == \"hoose\\moose\\n\"\n\nassert solution(\n    \"5\\nhoose\\nhose\\nose\\noises\\noise\\n\"\n) == \"hoose\\noises\\noise\\n\"\n\nassert solution(\n    \"5\\nhose\\nhose\\nose\\noises\\noise\\n\"\n) == \"hoose\\noises\\noise\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hoose\\nhose\\nose\\noises\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"hose\\hoose\\oose\\moose\") == \"hoose\\moose\"\nassert solution(\"hose\\nooses\\noise\") == \"hose\\noises\\noise\"\nassert solution(\"hose\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\noise\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noise\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\noise\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\nooses\\nooses\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\nooses\\nooses\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\nooses\\nooses\\nooses\\noises\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\nooses\\nooses\\noises\\nooses\\nooses\\nooses\\nooses\\nooses\\nooses\\nooses\\nooses\\noises\\noises\\noises\") == \"hose\\noises\"\nassert solution(\"hose\\nooses\\nooses\\nooses\\noises\\"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"hoose\\nnoises\\nnoise\\n\"\nassert solution(stdin) == \"hoose\\nnoises\\nnoise\\n\"\nassert solution(stdin) == \"hoose\\nnoises\\nnoise\\n\"\nassert solution(stdin) == \"hoose\\nnoises\\nnoise\\n\"\nassert solution(stdin) == \"hoose\\nnoises\\nnoise\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\") == \"hoose\\moose\"\nassert solution(\"\") == \"NO TYPOS\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\nSample Input 1:\\n1 1\\n3\\nSample Output 1:\\n2\\n2\\n5\\n\\nSample Input 2:\\n2 3\\n4\\nSample Output 2:\\n0\\n16\\n8\") == \"2\\n2\\n5\\n\\n0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n3\\n2 3\\n4\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n2\\n5\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test failed: incorrect output\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2\n2\n5\"\"\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Test 1\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Test 2\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n3\\n2 3\\n4\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n1 1\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"2\\n2\\n5\"\nassert solution(sample_input2) == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n3') == '2\\n2\\n5'\nassert solution('2 3\\n4') == '0\\n16\\n8'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"44.72135955\\n\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    1\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    50 45 45\n    5"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 10 10\\n15 20 20\\n10 10 20\\n15 20 20\") == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Testcase {test_case_id} failed\" for test_case_id, expected_output in [\n    (1, 44.72135955),\n    (2, 68.52419365),\n]\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nSample Input 1\\nSample Output 1\\n\") == \"44.72135955\\n\"\nassert solution(\"2\\n50 45 45\\nSample Output 2\\n\") == \"68.52419365\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"68.52419365\"\nassert solution(\"1\\n50 45 45\") == \"68.52419365\"\nassert solution(\"2\\n42 10 40\\n30 50 40\") == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"44.72135955\", \"Sample Output 1\"\nassert solution() == \"68.52419365\", \"Sample Output 2\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSample Input 1:\\n1\\nSample Output 1:\\n44.72135955\\n\\n2\\n50 45 45\\nSample Output 2:\\n68.52419365\") == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed for {stdin}\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\"\n                     \"50 45 45\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 40 40\\n\"\n                     \"40 "
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 5\n    1 2\n    \"\"\"\n) == \"1\\n3\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 2 3\n    1 3 1\n    \"\"\"\n) == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n3\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\"\nassert solution(\"1 2 3 4\") == \"1\\n2\\n3\\n4\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n3\\n2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 5\n    1 2\n    \"\"\"\n) == '1\\n3\\n2\\n'\n\nassert solution(\n    \"\"\"\n    3 4 2 3\n    1 3 1\n    \"\"\"\n) == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 3 1 5\n1 2\n\"\"\") == \"1\\n3\\n2\\n\"\n\nassert solution(\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\n\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\"\nassert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\"\nassert solution(\"1 2\\n3 4\") == \"1\\n3\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 1 5\n1 2\n''') == '1\\n3\\n2\\n'\n\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '1\\n1\\n0\\n2\\n'\n\nassert solution('''\n2 3 1 5\n1 2\n''') == '1\\n3\\n2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"The output should be 3.\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"The output should be 2.\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"The solution should return 3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"The solution should return 2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 1\\n2 2 3 2 2\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n1 1\\n\") == \"2\"\nassert solution(\"5 2\\n3 2 3 2 2\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution returned {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: {output()}!= {output()}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == 3\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == 2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The output of solution should be: {output()}, but it is: {solution(input())}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 1\\nSample Input 1:\\n2 5\\n1 1\\nSample Output 1:\\n3\\nSample Input 2:\\n5 3\\n2 2 3 2 2\\nSample Output 2:\\n2') == 3\nassert solution('5 3\\n2 2 3 2 2\\nSample Input 2:\\n5 3\\n2 2 3 2 2\\nSample Output 2:\\n2') == 2\nassert solution('5 3\\n2 2 3 2 3\\nSample Input 2:\\n5 3\\n2 2 3 2 3\\nSample Output 2:\\n0') == 0\nassert solution('5 3\\n2 2 3 2 2\\nSample Input 2:\\n5 3\\n2 2 3 3 2\\nSample Output 2:\\n2') == 2\nassert solution('5 3\\n2 2 3 2 2\\nSample Input 2:\\n5 3\\n2 3 2 2 2\\nSample Output 2:\\n3') == 2"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 50"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '50', 'Expected \"50\", but got \"{}\"'.format(solution())"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n100 100\n50 50\n''') == '50'\n\nassert solution('''\n2\n0 50\n50 0\n''') == '25'\n\nfrom typing import List"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2\n100 100\n50 50\n\"\"\") == \"50\"\n\nassert solution(\n\"\"\"\n2\n0 50\n50 0\n\"\"\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"50\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"160\", \"Sample Input 1\"\nassert solution(sample_input2) == \"250\", \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"250\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '160'\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 160\nassert solution(3) == 250"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution should return {expected}, but got {solution(stdin)} instead.\"\nfor i in range(1, N+1):\n    T_i = int(T[i])\n    if T_i < 60:\n        continue\n    elif T_i + 20 > T[i-1]:\n        continue\n    else:\n        bridge_unavailable = T_i\n        for j in range(i-1, 0, -1):\n            if T_i - T[j] > 60:\n                continue\n            elif T_i + 20 > T[j]:\n                continue\n            else:\n                bridge_unavailable -= 20\n                break\n        else:\n            return f\"{bridge_unavailable}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n100\\n200') == '160\\n'\nassert solution('3\\n100\\n200\\n2010') == '250\\n'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == expected, f\"Got {solution(read_input())}, expected {expected}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"160\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"\"\"\n2\n\"\"\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"\"\"\n0\n\"\"\"\n\nassert solution(\"\"\"\n5 100000\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"\"\"\n50000\n\"\"\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Expected output 0, got {}\".format(solution())\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == ['1 1', '1 2', '2 3 4']\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == ['-1']\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    3 3 2 1\n    3 3 3\n    \"\"\"\n) == \"1 1\\n1 2\\n2 3 4\"\n\nassert solution(\n    \"\"\"\n    4 2\n    3 3 2 2\n    6 3\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == [\"1 1\", \"1 2\"]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == [\"-1\"]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"1 1\n1 2\n2 3 4\"\"\"\nassert solution() == \"\"\"-1\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 3) == 2\nassert solution(3, 3, 2, 2) == 1\nassert solution(4, 2, 3, 3) == -1"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [1, 1], \"Test 1 failed\"\nassert solution() == [1, 2, 3, 4], \"Test 2 failed\"\nassert solution() == [-1], \"Test 3 failed\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '''\n10.0\n10.0\n0.0\n'''\n\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '''\n10.0\n4.0\n1.0\n'''"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '''\n10.0\n10.0\n0.0\n'''\n\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '''\n10.0\n4.0\n1.0\n'''"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == ['10.0', '10.0', '0.0']\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == ['10.0', '4.0', '1.0']"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\n\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '68.3'\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Hamburg Bremen', 3, 'Hamburg Bremen 15 68 10 5', 'Hamburg Bremen 46 55 50 60', 'Bremen Frankfurt 14 226 10 120') == 68.3, \"The solution is not correct\"\nassert solution('Amsterdam Rotterdam', 1, 'Amsterdam Utrecht 10 22 5 10') == \"IMPOSSIBLE\", \"The solution is not IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\n\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\", \"Expected: 68.3, Actual: \" + str(solution(\"Hamburg Bremen\"))\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\", \"Expected: IMPOSSIBLE, Actual: \" + str(solution(\"Amsterdam Rotterdam\"))"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n') == '3\\n4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == 3\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == 4\n\nfrom typing import List"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"  # Expected output: \"impossible\"\nassert solution() == \"4\"  # Expected output: \"4\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\") == \"4\\n\", \"The expected output is incorrect. Please check the function definition.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=sample_input_1) == '4\\n'\nassert solution(stdin=sample_input_2) == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4\\n'\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    500 500 499\n    0 0 999\n    1000 1000 200\n    \"\"\"\n) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution(\n    \"\"\"\n    4\n    250 250 300\n    750 250 300\n    250 750 300\n    750 750 300\n    \"\"\"\n) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, \"Incorrect output1\"\nassert solution(input2) == output2, \"Incorrect output2\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"PASS\" if \"PASS\" in output else \"FAIL\")"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\"\n\nfrom typing import List"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''8 3\n++xx+x++''') == '''++xx+o++''', \"Expected: ++xx+o++\"\nassert solution('''8 3\nxxxxxxxx''') == '''xxoooooo''', \"Expected: xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''8 3\n++xx+x++''') == '''xxoooooo'''\nassert solution('''8 3\nxxxxxxxx''') == '''xxoooooo'''"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '++xx+o++'\nassert solution(open('sample_input2.txt', 'r')) == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Sample Input 1\") == \"++xx+o++\"\nassert solution(\"Sample Input 2\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8, 3) == \"++xx+o++\"\nassert solution(8, 1) == \"x++x\"\nassert solution(10, 3) == \"xooxoo\"\nassert solution(5, 1) == \"x++x\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\"\nassert solution(\"8 1\\n++xx++\\n\") == \"++xx+o++\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"The output for sample input 1 is incorrect. It should be '{sample_output_1}', but it is '{solution(sample_input_1)}'.\"\n\nassert solution(sample_input_2) == sample_output_2, f\"The output for sample input 2 is incorrect. It should be '{sample_output_2}', but it is '{solution(sample_input_2)}'.\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\nin: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nen: it\\nhe: hen when\\nis: it\\nhe: hen the\\nwhen: hen\\nwill: till\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"The cat sat on the mat, but the dog barked, and the cat jumped.\") == \"cat: mat\\ncat: mat\\ndog: barked\\ndog: barked\\nhe: the\\njumped: jumped\\nmat: mat\\nmat: mat\\nsat: sat\\nsat: sat\\n\"\nassert solution(\"My name is John, and I am in love with you.\") == \"love: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\nlove: love\\"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\"\"\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\" + \n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\" + \n                 \"next generation of word processors,\\n\" + \n                 \"he said.  \" + \n                 \"Lost is Close to Lose\\n\\n\" + \n                 \"The fox said, \\\"When?\\\"\\n\" + \n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" + \n                 \"\\\"That clock is stopped, it will never strike.\\\"\"), \"Solution failed!\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\\n\\n\\n\\n***\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\\n\\n\\n\\n\\n***\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input_1.txt\", \"r\").read()) == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(open(\"test_input_2.txt\", \"r\").read()) == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Lost is Close to Lose\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                 \"next generation of word processors,\\n\"\n                 \"he said.\\n\"\n                 \"***\\n\"\n                 \"Sample Output 1: close: lose\\n\"\n                 \"he: the\\n\"\n                 \"in: inc is\\n\"\n                 \"inc: in\\n\"\n                 \"is: in\\n\"\n                 \"lose: close lost\\n\"\n                 \"lost: lose\\n\"\n                 \"the: he\\n\\n\") == \"close: lose\\n\" \\\n                                              \"he: the\\n\" \\\n                                              \"in: inc is\\n\" \\\n                                              \"inc: in\\n\" \\\n                                              \"is: in\\n\" \\\n                                              \"lose: close lost\\n\" \\\n                                              \"lost: lose\\n\" \\\n                                              \"the: he\\n\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n                 \"\\\"That clock is stopped, it will never strike.\\\",\\n\"\n                 \"he said.\\n\"\n                 \"***\\n\"\n                 \"Sample Output 2: clock: oclock\\n\"\n                 \"he: hen the\\n\"\n                 \"hen: he when\\n\"\n                 \"is: it\\n\"\n                 \"it: is\\n\"\n                 \"oclock: clock\\n\"\n                 \"the: he\\n\"\n                 \"till: will\\n\"\n                 \"when: hen\\n\"\n                 \"will: till\\n\\n\") == \"clock: oclock\\n\" \\\n                                              \"he: hen the\\n\" \\\n                                              \"hen: he when\\n\" \\\n                                              \"is: it\\n\" \\\n                                              \"it: is\\n\" \\\n                                              \"oclock: clock\\n\" \\\n                                              \"the: he\\n\" \\\n                                              \"till: will\\n\" \\\n                                              \"when: hen\\n\" \\\n                                              \"will: till\\n\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1\\n', \"Test case 1 failed\"\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2\\n', \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed: Expected output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input2.txt', 'r')) == '2'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1', \"Incorrect output for test case 1\"\nassert solution() == '2', \"Incorrect output for test case 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"$0.142857$ 6\") == \"1/7\"\nassert solution(\"$1.6$ 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Invalid output\"\nassert solution(\"1.6 1\") == \"5/3\", \"Invalid output\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('$0.142857$ $6$') == '1/7', \"Test 1 failed.\"\nassert solution('$1.6 1') == '5/3', \"Test 2 failed.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"$0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0.142857 6') == '1/7', \"Test 1\"\nassert solution('1.6 1') == '5/3', \"Test 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect result for sample input 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect result for sample input 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Expected output: 1/7\"\nassert solution(\"1.6 1\") == \"5/3\", \"Expected output: 5/3\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"The expected output is 6, but it is {}\".format(solution())"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of defective cells: \")) == \"Output a single line with a single integer, indicating the minimum number of panels required to contain the defective cells.\\n\", \"The correctness of the solution is not checked.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"1\n0 0 0\n0 0 1\n\"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"2\n0 0 0\n0 0 1\n\"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input 1\") == \"Output 1\\n6\\n\", \"Test 1 failed\"\nassert solution(\"Input 2\") == \"Output 2\\n10\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0 0\\n2\\n0 0 1\\n') == 6\nassert solution('2\\n0 0 0\\n0 0 1\\n') == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\") == 10\nassert solution(\"2\\n0 0 0\\n0 0 1\") == 10\nassert solution(\"10\") == 6\n\nfrom typing import List"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 0\\n0 0 1\\n\") == 6, \"The solution for sample input 1 is incorrect.\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == 10, \"The solution for sample input 2 is incorrect.\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6, \"The output of the solution should be 6.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1\\n'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1, \"Invalid output\"\nassert solution(7) == 1, \"Invalid output\"\nassert solution(1) == 1, \"Invalid output\"\nassert solution(2) == 1, \"Invalid output\"\nassert solution(3) == 1, \"Invalid output\"\n\nprint(1)"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"The output should be 1.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but the input is {stdin}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\\n\", \"The solution does not match the expected output.\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\\n\", \"The solution does not match the expected output.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"The solution should return 1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\\n\"\nassert solution(\"1111\") == \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1001\") == 3\nassert solution(\"1111\") == 1"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\", \"The output should be '3'.\"\nassert solution(\"1111\") == \"1\", \"The output should be '1'.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\", \"Incorrect output for 1001\"\nassert solution(\"1111\") == \"1\", \"Incorrect output for 1111\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1001') == '3', \"Test failed\"\nassert solution('1111') == '1', \"Test failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1001') == '3'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1001) == \"3\", \"Test 1 failed\"\nassert solution(1111) == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    1 1 1\n    2 1 3\n    1 3 2\n    3 2 1\n    4 3 4\n''') == '''\nLLL\n'''\n\nassert solution('''\n    5\n    1 2 2 1 2\n    3 2 1 2 3\n    4 3 4 4 5\n    5 4 5 6 7\n    6 7 8 9 10\n''') == '''\nLLRLR\n'''\n\nassert solution('''\n    1\n    1\n''') == '''\nL\n'''\n\nassert solution('''\n    1\n    2\n''') == '''\nR\n'''\n\nassert solution('''\n    2\n    1 2\n''') == '''\nL\n'''\n\nassert solution('''\n    2\n    2 1\n''') == '''\nR\n'''\n\nassert solution('''\n    1\n    3\n''') == '''\nR\n'''\n\nassert solution('''\n    1\n    4\n''') == '''\nR\n'''\n\nassert solution('''\n    1\n    5\n''') == '''\nR\n'''\n\nassert solution('''\n    2\n    1 3\n    1 4\n    1 5\n''') == '''\nLL\n'''"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    1 1 1\n    1 2 2\n    2 3 3\n    3 4 4\n    4 5 5\n''') == 'RRRRR'\n\nassert solution('''\n    5\n    1 2 2 1 2\n    1 3 4\n    1 5 6\n    2 4 5\n    2 6 7\n    3 5 6\n    3 7 8\n    4 6 7\n    4 8 9\n    5 7 8\n    5 9 10\n''') == 'RRRRRRR'\n\nassert solution('''\n    7\n    1 2 3 4 5 6\n    1 7 8 9 10 11\n    2 4 5 6 7 8\n    3 6 7 8 9 10\n    4 8 9 10 11 12\n    5 10 11 12 13 14\n    6 8 9 10 11 12\n    7 9 10 11 12 13\n''') == 'LLLLRRRRRR'\n\nassert solution('''\n    2\n    1 1\n    1 2\n    1 3\n    2 3\n    3 4\n    4 5\n    5 6\n''') == 'RRRR'\n\nassert solution('''\n    6\n    1 2 3 4 5\n    1 1 2 3 4\n    2 2 3 4 5\n    3 3 4 5 6\n    4 4 5 6 7\n    5 5 6 7 8\n''') == 'LLRRRRRRRR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\"\n\nfrom typing import List"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'LLL'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"LLL\", \"The solution should be 'LLL'.\"\nassert solution(sample_input2) == \"LLRLR\", \"The solution should be 'LLRLR'.\"\n\nsample_input1 = \"\"\"\n3\n1 1 1\n\"\"\"\n\nsample_input2 = \"\"\"\n5\n1 2 2 1 2\n\"\"\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output {solution(input())} is not correct. Expected {output}.\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'LLL', \"Expected output 'LLL', but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"LLL\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"49000000000070\", \"Solution is not correct.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n2 7 8000000\") == \"25000000000021\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"49000000000070\", \"Incorrect solution\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"Incorrect solution! Expected: {expected_solution}, Received: {solution}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n\nN, M, alpha = map(int, input().split())\nroads = [list(map(int, input().split())) for _ in range(M)]\n\nroads.sort(key=lambda x: x[0])\ntotal_weight = 0\ntotal_energy = 0"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\", \"Test 1\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\", \"Test 2\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''2\n2\n0\n1\n2\n2\n3'''\n\nassert solution() == '''Yeah!'''"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\nYeah!\\nYeah!\\nYeah!\\nYeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\nYeah!\\nYeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"Yeah!\\n2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\") == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n1 1 2\\n2\\n1 2\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\n\nassert solution(stdin='2\\n1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\", \"The solution is incorrect. Please check the given examples and provide the actual output.\"\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'POSSIBLE\\n1 3\\n2 3', \"Test case 1 failed.\"\nassert solution(stdin) == 'IMPOSSIBLE', \"Test case 2 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3,1,1,2]), \"Sample Input 1\"\nassert solution([2,1,2]), \"Sample Input 2\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution, \"Test case not provided\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0.5 0.5 0.5\\n'\nassert solution(open('sample_input_1.txt', 'r')) == '0.5 0.5 0.5\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.5 0.5 0.5\\n'\n\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.0 0.0 -0.0\\n'\n\nassert solution('''\n-5 0 0\n5 0 0\n0 5 0\n0 -5 0\n''') == '0.0 0.0 -0.0\\n'\n\nassert solution('''\n-1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n''') == '2.0 2.0 2.0\\n'\n\nassert solution('''\n0 0 0\n1 1 0\n1 0 1\n0 1 1\n''') == '0.0 0.0 0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'M'\nassert solution() == '3 2 2 1 5\\n3 2 2\\n6 6'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abc') == 'abc' # Wrong solution\nassert solution('123456789') == '123456789' # Wrong solution"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n', \"Test 1 failed\"\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n', \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n3 2 2 1 5\\n3 2 2\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    10\n    3 6 2 3 2 2 2 1 5 6\n    \"\"\"\n) == '2\\n3 2 2 1 5\\n3 2 2'\n\nassert solution(\n    \"\"\"\n    3\n    17 17 17\n    \"\"\"\n) == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6'\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\n\nsolution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == 74.6666666667\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(Input())) == Output()"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2') == 'IMPOSSIBLE'\n\nprint(solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3'))"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\nprint(\"Success\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\n\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"0\", \"Solution should be unique\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == [\"1\",\"2\",\"1\",\"2\",\"2\",\"1\",\"2\",\"2\",\"1\"]\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == [\"0\"]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '0\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == [\"1\", \"2\", \"1\", \"2\", \"2\", \"1\"]\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == [\"0\"]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output is {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\", \"The given example should output 0\"\nassert solution(input()) == \"1\\n2\\n1\\n2\\n2\\n1\\n\", \"The given example should output 1\"\nassert solution(input()) == \"0\\n2\\n1\\n2\\n2\\n1\\n\", \"The given example should output 0\"\nassert solution(input()) == \"0\\n1\\n0\\n2\\n2\\n1\\n\", \"The given example should output 0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"0\n2\n1\n2\n2\n1\n\"\"\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\"\nassert solution(\"6 3\\n2 4\\n1 5\\n4 6\\n5 1\\n6 2\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5''') == '1\\n2\\n1\\n2\\n2\\n1'\n\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4''') == '0\\n4'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(), \"Test failed\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Expected output\", \"Incorrect output\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'your_answer', 'Your code is incorrect. Please check the provided code.'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Solution does not match the expected output\\nExpected Output: {expected_output}\\nSolution: {solution}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == expected_output, f\"Test case {test_case_no}: {stdin}\\nOutput: {solution(stdin)}\\nExpected Output: {expected_output}\\n\"\n\ntest_case_no = 1\nstdin = \"4 10 2\\n0\\n15\\n30\\n45\"\nexpected_output = 10\n\nassert solution(stdin=stdin) == expected_output, f\"Test case {test_case_no}: {stdin}\\nOutput: {solution(stdin)}\\nExpected Output: {expected_output}\\n\"\n\ntest_case_no += 1\nstdin = \"4 10 3\\n0\\n15\\n30\\n45\"\nexpected_output = 5\n\nassert solution(stdin=stdin) == expected_output, f\"Test case {test_case_no}: {stdin}\\nOutput: {solution(stdin)}\\nExpected Output: {expected_output}\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'4 2\\n50 50 75\\n25 25 25') == '2'\nassert solution(r'5 2\\n50 50 50 50\\n25 25 25 25') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed for the given input.\\nExpected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_num} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1\\n'\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..''') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Incorrect output for sample input 1\"\nassert solution(input()) == \"2\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n', 'Test 1 Failed'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n', 'Test 2 Failed'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 4\n.LX.\n.X..\n....\n.L..\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n4 4\n.XLX\n.X..\n...L\n.X..\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"1\\n\"\nassert solution(sample_input_2) == \"2\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"home\\n2\\n2 0 1\\n2 2 3\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"detention\\n1\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'detention'\nassert solution(open('sample_input2.txt', 'r')) == 'home'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"home\\n2\\n2 0 1\\n2 2 3\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"detention\"\nprint(\"detention\")"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Solution '{solution(stdin)}' does not match expected output '{output}'\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:') == 'detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nSample Input 1\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"detention\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"allatral\" or solution(input()) == -1, \"Incorrect output\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('tralalal') == 'allatral', 'Sample Input 1'\nassert solution('zzzz') == '-1', 'Sample Input 2'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"1\"\nassert solution(\"zzzz\") == \"-1\", \"2\"\n\nfrom typing import List\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\n\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([5]) == 5\nassert solution([6, 3, 2, 1, 6, 4, 5]) == 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"5\"\nassert solution(sample_input_2) == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == '3'\nassert solution(6) == '11'\nassert solution(5) == '5'\nassert solution(3) == '2'\nassert solution(5) == '5'\nassert solution(5) == '5'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input(1)) == '5\\n'\nassert solution(sample_input(2)) == '8\\n'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"5\"\nassert solution(sample_input2) == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed with input {stdin} and expected output {output}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(47) == 1, \"47\"\nassert solution(523) == 2, \"523\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"47\") == 1, \"Incorrect output\"\nassert solution(\"523\") == 2, \"Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"47\") == \"1\\n\"\nassert solution(\"523\") == \"2\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(47) == 1, \"Test 1 Failed\"\nassert solution(523) == 2, \"Test 2 Failed\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Your solution is {solution(stdin)} but the expected output is {expected}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin), \"Test failed\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"your_answer_here\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15'\n\nsolution(stdin)"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n1\\n0\\n2\\n\"\nassert solution(\"2\\n0 1 20\\n1 0 5\\n\") == \"1\\n0\\n1\\n0\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n2\\n4\\n1\\n2\\n\") == \"0\\n0 1 20\\n1\"\n\nassert solution(\"2\\n0\\n1\\n2\\n3\\n\") == \"1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15'\nassert solution('2 2\\n0 1 20\\n1 0 5') == '1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\", \"Output not as expected.\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0\\n1\\n10\\n0\\n3\\n10\\n2\\n0\\n20\\n2\\n0\\n5\\n0\\n0\\n15\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\n10\\n2\\n0\\n5\\n0\\n1\\n10\\n1\\n0\\n20\\n2\\n0\\n2\\n15\\n0\\n3\\"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\", \"Sample Input 1 failed\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\", \"Sample Input 2 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5\\n'\n\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5, \"Test failed\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1, \"Test failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\n\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == 7, \"Test case 1 failed\"\nassert solution(\"1311\") == 24, \"Test case 2 failed\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())} instead.\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1311\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n\nfrom functools import reduce"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10\\n'\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16.339203308\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect Output\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(50, 0.125) == \"16.34\"\nassert solution(201, 1.000) == \"5.00\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    50 0.125\n    '''\n) == '16.339203308'\n\nassert solution(\n    '''\n    201 1.000\n    '''\n) == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str1) == expected1, \"Incorrect output for sample input 1\"\nassert solution(input_str2) == expected2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '16.339203308', \"Incorrect Output\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16.339203308\", \"The given solution is incorrect.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test failed: expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n0.5 1\\nSample Input 1:\\n2 2\\n0.5 1\\nSample Output 1:\\n2\\n\\nSample Input 2:\\n4 3\\n1 11\\n0.4 1\\nSample Output 2:\\n3\") == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"Expected output: 2\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.5 1\\n2 0 1\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"2 2\\n1 11\\n0.4 1\\n0 0\\n0 0\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 0\\n1 11\\n0.4 1\\n0 0\\n0 0\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 1\\n1 11\\n0.4 1\\n0 0\\n0 0\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 2\\n1 11\\n0.4 1\\n0 0\\n0 0\\n\") == \"2\\n\"\n\nprint(\"All assertions pass\")"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '''2'''\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '''3'''"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"binary_town.in\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\\n\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10.5"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/example_input.txt', 'r')) == '10.5'\nassert solution(open('tests/example_input2.txt', 'r')) == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Sample Input 1\\n3\\n7 1\\n3 2\\n10 0\\n') == '10.5'\nassert solution('Sample Input 2\\n3\\n2 1\\n4 0\\n0 3\\n') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\\n\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == '2\\n'\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 0.5\n2 0.5\n1 0.5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"2 0.5\\n2 0.5\\n1 0.5\\n\"\nsample_input_2 = \"2 0.5\\n2 0.51\\n1 0.49\\n\"\nexpected_output_1 = 1\nexpected_output_2 = 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"yes\\n\"\nassert solution() == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\", \"Please provide the correct input\"\nprint(\"yes\")"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'yes'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"yes\"\nassert solution() == \"no\"\nassert solution() == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"2 1 0 1 1\") == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n') == 'yes\\n'\nassert solution('5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n') == 'yes\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"yes\", \"Test case 1 failed\"\nassert solution() == \"yes\", \"Test case 2 failed\"\n\nfrom typing import List\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7\\n'\nassert solution('') == ''"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3\n5\n5\n5\nSample Output 1:\n2\n1\n2\n\nSample Input 2:\n4\n20\n15\n17\n14\nSample Output 2:\n5\n8\n2\n7"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\\n5\\n8\\n2\\n7\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\n\\n5\\n8\\n2\\n7\\n\"\nassert solution(input()) == \"5\\n8\\n2\\n7\\n\\n5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test cases don't match.\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1\\n2\\n\\n5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\\n5\\n8\\n2\\n7\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution(stdin='4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7\\n'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\n\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\n\nassert solution(\"python def solution(stdin: str) -> str:\\n    pass\") == \"python def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"python main.py main.py\") == \"python main.py main.py\"\nassert solution(\"python main.py main.py -n 10\") == \"python main.py main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\npython\np^ main.py\n^ -n 10\n''') == '''\npython\npython main.py\npython main.py -n 10\n'''\n\nassert solution('''\n5\npython\njava\n^\n^^^\n^^^\n''') == '''\npython\njava\njava\npython\njava\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"^\") == \"python\"\nassert solution(\"^ main.py\") == \"python main.py\"\nassert solution(\"^ -n 10\") == \"python main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"^\") == \"python\"\nassert solution(\"^ -n 10\") == \"python -n 10\"\nassert solution(\"^ j\") == \"java\"\nassert solution(\"^ java\") == \"java\"\nassert solution(\"^ -10\") == \"python\"\nassert solution(\"^ j -n 10\") == \"java -n 10\"\nassert solution(\"^ py -n 10\") == \"python -n 10\"\nassert solution(\"^ py java\") == \"python java\"\nassert solution(\"^ py java -n 10\") == \"python java -n 10\"\nassert solution(\"^ py java -n 10 j\") == \"python java -n 10 j\"\nassert solution(\"^ py java -n 10 -\") == \"python java -n 10\"\nassert solution(\"^ py java -n 10 - -n 10 j\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j - - - - - - - - - - - - - - - - -\") == \"python java -n 10 - -n 10 j\"\nassert solution(\"^ py java -n 10 - -n 10 j -"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"^\") == \"python\"\nassert solution(\"^main.py\") == \"python main.py\"\nassert solution(\"^-n 10\") == \"python main.py -n 10\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java main.py\") == \"java main.py\"\nassert solution(\"java -n 10\") == \"java main.py -n 10\"\nassert solution(\"python java -n 10\") == \"python java main.py -n 10\"\nassert solution(\"^ java -n 10\") == \"python java main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\np^ -n 10\\n\") == \"python\\npython main.py\\npython main.py -n 10\\n\", \"Test failed\"\nassert solution(\"5\\npython\\njava\\np^\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"1\\n\\n\\n\\n\\n\\n\\n\") == \"\\n\\n\\n\\n\\n\\n\\n\", \"Test failed\"\nassert solution(\"2\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"3\\n\\n\\n\\n\\n\\n\\n\") == \"\\n\\n\\n\\n\\n\\n\\n\", \"Test failed\"\nassert solution(\"4\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"5\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"6\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"7\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"8\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"9\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"10\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\"\nassert solution(\"11\\npython\\njava\\np^\\nSample Output 2:python\\njava\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava\\njava\"\n\ninput_str = input()\ncommand_history = []\ncommand = \"\"\n\nfor line in input_str.split(\"\\n\"):\n    if \"^\" in line:\n        command_history.append(command)\n        command = \"\"\n    else:\n        command += line\n\ncommand_history.append(command)\n\nprint(\" \".join(command_history))"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == [\"python\", \"main.py\", \"python main.py\", \"python main.py -n 10\", \"java\", \"java\", \"java\"]"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python\") == \"python\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\\n\"\nassert solution(\"hitehre\\n2\\nthere\\nhello\\n\") == \"impossible\\n\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\") == \"this sentence makes perfect sense\\n\"\n\nassert solution(\"hitehre\\n2\\there\\nhello\") == \"impossible\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\") == \"impossible\"\n\nassert solution(\"hitehre\") == \"impossible\"\n\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"this sentence makes perfect sense\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, \"The solution is incorrect\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n1 1\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\\n\"\nassert solution(\"2 2\") == \"16\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output a single line with a single integer representing the number of possible arrangements, modulo 10^9+9.\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\", \"Test 1 failed\"\nassert solution() == \"16\\n\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"16\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"Sample Input 1\\n6\\nabcbab\\n2\\ncb\\ncbab\\nSample Output 1: \\n2\\n\\nSample Input 2\\n4\\abab\\n2\\nbac\\nbaba\\nSample Output 2: \\n4\\ndef solution(stdin: str) -> str: \\n    pass\\n\") == \"2\\n\", \"Test failed for sample input 1\"\nassert solution(stdin=\"Sample Input 2\\n4\\abab\\n2\\nbac\\nbaba\\nSample Output 2: \\n4\\ndef solution(stdin: str) -> str: \\n    pass\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed for sample input 2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\\n\"\n\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\\n\") == \"4\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == 2\nassert solution(\"4\\abab\\n2\\nbac\\nbaba\\n\") == 4"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcbab\") == \"2\"\nassert solution(\"abab\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nabab\\n2\\nbac\\nbaba\") == \"4\"\nassert solution(\"6\\nabab\\n2\\nbac\\nbaba\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\\n\"\n\nassert solution(\"4\\nababab\\n2\\nbac\\nbaba\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 2\nassert solution(sample_input_2) == 4"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nabcd\\n2\\ncb\") == 2\nassert solution(\"2\\nabcd\\n2\\ncb\") == 2\nassert solution(\"3\\nabcd\\n2\\ncb\") == 4"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\\n85\\n90\\n95\\n100\\n105'\n\nassert solution('''24\n3\n10 10\n30 10\n20 20''') == '4\\n17.071067\\n20\\n22.928932'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Expected {expected1}, got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected {expected2}, got {solution(input2)}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"50\n    4\n    110 10\n    80 10\n    80 0\n    110 0\"\"\"\n) == \"\"\"6\n85\n90\n95\n100\n105\"\"\"\n\nassert solution(\n    \"\"\"24\n    3\n    10 10\n    30 10\n    20 20\"\"\"\n) == \"\"\"4\n17.071067\n20\n22.928932\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = '''50\n4\n110 10\n80 10\n80 0\n110 0'''\n\noutput1 = '''6\n85\n90\n95\n100\n105'''\n\ninput2 = '''24\n3\n10 10\n30 10\n20 20'''\n\noutput2 = '''4\n17.071067\n20\n22.928932'''"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    50\n    4\n    110 10\n    80 10\n    80 0\n    110 0\n    \"\"\"\n) == \"\"\"\n6\n85\n90\n95\n100\n105\n\"\"\"\n\nassert solution(\n    \"\"\"\n    24\n    3\n    10 10\n    30 10\n    20 20\n    \"\"\"\n) == \"\"\"\n4\n17.071067\n20\n22.928932\n\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '''\n6\n85\n90\n95\n100\n105\n'''\n\nassert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '''\n4\n17.071067\n20\n22.928932\n'''"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n6\n85\n90\n95\n100\n105\n'''"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\"\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"yes\\n\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes', 'Your solution is incorrect.'\nassert solution('10 7') == 'yes', 'Your solution is incorrect.'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").readline()) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, \"The solution does not match the expected output.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\"\n\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\"\n\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the length K of the longest sequence on the first line.\\nEach of the following K lines should contain one element of the sequence, an interval in the same format it was given in the input.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\n\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1 6\\n2 5\\n3 4\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The output should be {expected}, but it is {solution(input())}\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n') == '3\\n1 6\\n2 5\\n3 4\\n'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n') == '3\\n10 60\\n30 50\\n30 40\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Actual: {solution(str(input()))}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836, \"Test case 1 failed\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 1828, \"Test case 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '1828'\nassert solution('5 1\\n10 10 1\\n9 8 2\\n4 12 3\\n12 4 6\\n2 3 9\\n') == '5836'\nassert solution('5 2\\n10 10 1\\n9 8 2\\n4 12 3\\n12 4 6\\n2 3 9\\n') == '1828'\nassert solution('5 1\\n10 10 10\\n9 8 8\\n4 12 12\\n12 4 4\\n2 3 6\\n') == '5836'\nassert solution('5 2\\n10 10 10\\n9 8 8\\n4 12 12\\n12 4 4\\n2 3 6\\n') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Test case 1 failed\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5836, \"Incorrect output\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836, \"Expected output: 5836, but got: \" + solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\")"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 1\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    \"\"\"\n) == \"5836\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5836'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == 50\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"50\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == \"50\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\\n\", \"incorrect output\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"50\\n\"\nassert solution(sample_input2) == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"50\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0 0 0 1\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"0 0 0 1 1\", \"Testcase 2 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1', \"Expected '0 0 0 0 1', got '{}'.\".format(solution('5.0'))\nassert solution('4.5') == '0 0 0 1 1', \"Expected '0 0 0 1 1', got '{}'.\".format(solution('4.5'))\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '0 0 0 0 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\"\n\nfrom typing import List"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0 0 0 0 1\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"output\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Your code is incorrect. Please check the given input and the provided output.\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\", \"The output should be 8.\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\", \"The output should be 3.\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\", \"The output should be '8\\n', but got '{}'.\".format(solution(\"8 3 1\\n1 7 8 2 6 4 3 5\"))\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\", \"The output should be '3\\n', but got '{}'.\".format(solution(\"8 2 1\\n1 7 8 2 6 4 3 5\"))"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n8 2 1\n1 7 8 2 6 4 3 5\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"The solution {solution} is incorrect. Please check your code.\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == 3\n\nassert solution(\"6 3\\n2 2 2 4 4 4\") == 4"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.732050808\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\\n1 1 3.0\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1 1 1.732050\n1 1 3.0\n\"\"\"\n) == \"1.732050808\"\n\nassert solution(\n    \"\"\"\n1 1 2.1\n1 1 3.0\n\"\"\"\n) == \"2.1\"\n\nassert solution(\n    \"\"\"\n1 1 2.9\n1 1 3.0\n\"\"\"\n) == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Expected output: '{output}', but got: '{solution(stdin)}'\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"1.732050808\"\nassert solution(sample_input2) == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution()) == 1.732050808\nassert solution(solution(solution())) == 1.732050808\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1.732050\\n1 1 3.0\\n') == '1.732050808\\n'\nassert solution('1 1 3.0\\n1 1 1.732050\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.732050808\", \"Sample Output 1\"\nassert solution(stdin) == \"-1\", \"Sample Output 2\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2.4999999987500003'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\"\n\nfrom typing import List"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n\\n2\\n0 100 10\\n0 -100 100\\n.80\") == \"2.4999999987500003\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    1\n    3 4 2\n   .75\n    \"\"\"\n) == \"2.4999999987500003\"\n\nassert solution(\n    \"\"\"\n    2\n    0 100 10\n    0 -100 100\n   .80\n    \"\"\"\n) == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1, \"Sample Input 1\"\nassert solution(sample_input2) == sample_output2, \"Sample Input 2\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.4999999987500003\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1 2\") == \"0\\n3\\n\"\nassert solution(\"2 1 6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(\"2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"0\\n3\\n\"\n\nassert solution(\n\"\"\"\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\") == \"3\\n2\\n1\\n0\\n\"\n\nassert solution(\n\"\"\"\n1 1 2 3 4\n1 1 2 3 4\n1 1 2 3 4\n1 1 2 3 4\n1 1 2 3 4\n\"\"\") == \"3\\n2\\n1\\n0\\n\"\n\nassert solution(\n\"\"\"\n4 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n3\\n2\\n1\\n0\" # expected output"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\") == \"3\"\n\nassert solution(\"\"\"4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\") == \"3\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"0\"\nassert solution(sample_input2) == \"3\"\n\nsample_input1 = \"\"\"\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\"\n\nsample_input2 = \"\"\"\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Sample Output 1:\\n0\\n3\\n\\nSample Output 2:\\n3\\n2\\n1\\n0\\n\"\nassert solution() == \"Sample Output 1:\\n0\\n3\\n\\nSample Output 2:\\n3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Incorrect output\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == str(output), f\"Test failed. Expected output: {output}, Received: {solution(str(input()))}\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The provided code is incorrect. The output is {} but the expected output is {}.\".format(solution(input()), output())"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}.\"\n\nn = int(input())\nk = int(input())\np = int(input())"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution does not match with expected output. Expected: {output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == 5\nassert solution(\"10 10\\n6\\n11\\n3 5\\n10\") == 8"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output the number of grey cells the hedgehog visits.\", \"The function solution() is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\") == 5, \"Luka found a very unusual game board in his attic. Surprisingly, it consists of 10 x 10 square cells. The rows are numbered 0 to 9 top to bottom and the columns 0 to 9 left to right. What makes the board unusual is the way in which the cells are coloured. Each cell is either grey or white: \nwhite, if the row and column numbers of the cell, when represented in binary, have at least one digit 1 in the same position. For example, the cell $(4, 5)$ would be white. \ngrey, otherwise. For example, the cell $(2, 5)$ would be grey. \n\nThe following image shows a board of size 10\u00b710. \n\nLuka\u2019s hedgehog likes walking on this unusual board and does it in an unusual way. The hedgehog starts his walk in the cell $(0, 0)$ and continues in the zig-zag pattern as in the second image above. While the hedgehog is walking, Luka counts how many grey squares it visited.\n\nAfter visiting 6 squares, the hedgehog gets tired and falls asleep. Luka then goes to bed too, happy that he was able count the grey squares.\n\nKnowing the dimensions of the board and the number K beforehand, however, it is possible to write a program that calculates the result faster. This is your task."
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n8\") == \"8\"  # correct output"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == 5, \"Incorrect output\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n10\") == 8, \"Incorrect output\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n100\") == 11, \"Incorrect output\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution {solution} does not match expected output {expected_output}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i + 1} failed: expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '2\\n'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n') == '3\\n'\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())} instead of {expected_output}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {index + 1} failed\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\" # No input"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"The output is incorrect\"\nprint(\"The output is correct\")"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Expected output: 3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\", \"The output should be 3.\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\\n4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n\") == \"3\\n\"\nassert solution(\"Sample Input 2\\n3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n\") == \"3\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\", \"Input is incorrect\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1\", \"Output: %s\" % solution(3)\nassert solution(4) == \"2\", \"Output: %s\" % solution(4)\nassert solution(5) == \"3\", \"Output: %s\" % solution(5)\nassert solution(6) == \"5\", \"Output: %s\" % solution(6)\nassert solution(7) == \"4\", \"Output: %s\" % solution(7)"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 5\nprint(5)"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 1\nassert solution(30) == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"1\\n\"\nassert solution(4) == \"1\\n\"\nassert solution(5) == \"2\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '1\\n'\nassert solution('3') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected output: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) =="
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2', \"Sample Output 1: The expected output is 2, but got '{}'\".format(solution())\nassert solution() == '2', \"Sample Output 2: The expected output is 2, but got '{}'\".format(solution())"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '2\\n'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n') == '-1\\n'\nassert solution('') == '-1\\n'\nassert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n5 6\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n') == '2\\n'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nassert solution() == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"test_input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Expected: 2\\n, Actual: {}\".format(solution())"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000'\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected output {output} but got {solution(input)}\"\nfor test_input, test_output in zip(test_inputs, test_outputs):\n    assert solution(test_input) == test_output, f\"Test case {test_input} failed\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\"\n\nassert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Your solution is incorrect.\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n2 0\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"The solution is incorrect\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n\", \"Expected: 3 5\\nGot: {}\".format(solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\"))\n\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected: 2 0\\nGot: {}\".format(solution(\"2 3\\nS.M\\nM..\"))"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n2 3\nSMS\nMMS\n''') == '3 5\\n2 0\\n'\n\nassert solution(r'''\n2 3\nS.M\nM..\n''') == '2 0\\n'\n\nassert solution(r'''\n3 4\nMSM\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n.....\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nS.M\nM..''') == '2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3 5\", \"Your solution is incorrect!\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a''') == '2\\n3 c\\n6 c\\n'\n\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a''') == '1\\n6 b\\n'\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1\\n6 b\\n'\n\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3 c\\n6 c\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n3\\n6\\n1\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n6\\nb\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == '1\\n6 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('elderberries.in', 'r')) == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == \"2\\n3 c\\n6 c\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    0 B\n    1 B\n    1 T a\n    2 E a\n    2 S\n    5 T a\n    \"\"\"\n) == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    13\n    0 B\n    1 B\n    2 E a\n    2 E b\n    2 S\n    5 G a\n    5 T a\n    5 E a\n    5 E b\n    1 S\n    10 E a\n    10 G b\n    1 T a\n    \"\"\"\n) == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"40\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"40\\n\", \"Test 1 failed\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\", \"The answer is incorrect\"\nassert solution(\"288 291\") == \"76\", \"The answer is incorrect\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The output does not match the expected output.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\"\nassert solution(\"1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n288 291\\n') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\", \"Expected output: 40\"\nassert solution(\"1000000000 2000000000\") == \"12179869173\", \"Expected output: 12179869173\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5') == '40\\n'\nassert solution('288 291') == '76\\n'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CAT\\nDOG\\nCOT\") == \"COG\"\nassert solution(\"CAT\\nDOG\") == \"0\"\nassert solution(\"CAT\\nDOG\\nCOT\\nDOG\\nCOT\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case_num} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'COG'\nassert solution(open('test_case1.txt', 'r')) == 'COG'\nassert solution(open('test_case2.txt', 'r')) == '0'\nassert solution(open('test_case3.txt', 'r')) == '0'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"COG\"\nprint(\"Sample Output 1:\", solution())\n\nassert solution() == 3\nprint(\"Sample Output 2:\", solution())"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('CAT') == 'COG'\nassert solution('DOG') == 'WAS'\nassert solution('COT') == 'GAS'\n\nfrom collections import Counter"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COG\\n3\\n\"\nassert solution(\"2\\nCAT\\nDOG\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CAT\") == \"COG\", \"Test 1 failed\"\nassert solution(\"DOG\") == \"COG\", \"Test 2 failed\"\nassert solution(\"COT\") == \"COG\", \"Test 3 failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"9\"\nassert solution(sample_input_2) == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Expected Output: {expected}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output the number of sequences modulo 1000000007.', \"Your solution is incorrect.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"The solution is incorrect\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"9\", \"The output is not correct\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input {input()} and Output {output} is not correct.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\\n\") == 3, \"Hu the Tomb Raider has entered a new tomb! It is full of gargoyles, mirrors, and obstacles. There is a door, with treasure beyond. Hu must unlock the door guarding the treasure. On that door is written, in an ancient tongue, the secret to opening the door:Every face of every gargoyle shall see a face of a gargoyle.\\nThis means that the gargoyles must be rotated in such a way that there is a path for a beam of light to connect each gargoyle\u2019s face to another gargoyle\u2019s face (possibly its own). The beam of light is reflected by mirrors.\\nThe floorplan of the tomb can be described as a rectangular n \\! \\times \\! m grid of cells:\\n - A dot (\u2018.\u2019) represents an empty cell.\\n - A hash (\u2018#\u2019) represents an obstacle.\\n - A slash (\u2018/\u2019) represents a double-sided mirror, as does a Backslash (\u2018\\\u2019).\\n - A character \u2018V\u2019 represents a gargoyle with two faces facing top and bottom.\\n - A character \u2018H\u2019 represents a gargoyle with two faces facing left and right.\\n\\nIn addition to the \u2018\\\u2019 and \u2018/\u2019 mirrors, the tomb is surrounded by walls of mirrors. The following common sense about light is assumed:\\n - Light travels in a straight line through empty cells.\\n - Two beams of light can intersect without interfering with each other.\\n - A \u2018\\\u2019 mirror reflects light coming from the top/bottom/left/right to the right/left/bottom/top.\\n - A \u2018/\u2019 mirror reflects light coming from the top/bottom/left/right to the left/right/top/bottom.\\n - Light is reflected by 180 degrees when it hits a wall (walls are all mirrors).\\n - Light is blocked by obstacles and gargoyles.\\n\\nHu may rotate any gargoyle by 90 degrees. As time is running short, he wants to know the minimum number of gargoyles that have to be rotated in order to unlock the treasure door. \"\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1, \"The puzzle has no solution.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n') == 3\nassert solution('2 5\\nV...\\nH...V\\n') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code goes here\\n\\ndef main():\\n    stdin = \\\"\\\"\\n    n = int(stdin.split()[0])\\n    m = int(stdin.split()[1])\\n    s = stdin.split()[2]\\n    # Your code goes here\\n\\nif __name__ == '__main__':\\n    main()\\n\\n# Your code goes here\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n''') == 3\nassert solution('''\n2 5\nV...\\\nH...V\n''') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n\"\"\"\n) == 3, \"Test 1: The solution should be 3.\"\n\nassert solution(\n\"\"\"\n2 5\nV...\\\nH...V\n\"\"\"\n) == -1, \"Test 2: The solution should be -1.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == \"3\\n\"\nassert solution(\"2 5\\nV...\\nH...V\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3, \"Expected output: 3, but got: {}\".format(solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\"))"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n\") == 3, \"The solution should be 3.\"\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1, \"The solution should be -1.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\mps over the l\\the lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\n\nassert solution(\"cdefghi\\nabcdefg\") == \"AMBIGUOUS\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefghijk\\nefghijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([\"\"]) == \"AMBIGUOUS\"\nassert solution([\"n fox jumps ove\", \"uick brown f\", \"The quick b\", \"y dog.\"]) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\"\nprint(\"AMBIGUOUS\")"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('inputs/input2.txt', 'r')) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\", \"Test case 1 failed\"\n\nassert solution(input()) == \"AMBIGUOUS\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\mps over the l\\the lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\n\nassert solution(\"cdefghi\\nefghijk\\nefghijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"0+-\", \"Expected: 0+-, got: {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"0+-\", \"Expected: 0+-, got: {}\".format(solution(sample_input_2))"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\n\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Sample Input does not match Sample Output\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"  # correct output for sample case 1"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '+++-'\n\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"---+\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"+++-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\n\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution is {solution(stdin=input())}, but expected output is {expected_output}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == 'Output 1\\n'\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2 2\\n2 2 2\") == \"1\\n4\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1\n1 1 1''') == '1\\n'\nassert solution('''2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2''') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n''') == '1\\n'\n\nassert solution('''\n2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES', 'Test Case 1 Failed'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO', 'Test Case 2 Failed'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"YES\"\nassert solution(sample_input2) == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The output is {solution(input())}, but the expected output is {expected}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3\\n') == 1\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n') == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    1\n    2\n    3\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    6 3 5\n    1\n    2\n    3\n    3\n    2\n    1\n    \"\"\"\n) == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\nSample Input 1:\\n3 3 5\\n1\\n2\\n3\\nSample Output 1:\\n1\\n\\nSample Input 2:\\n6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\\nSample Output 2:\\n3\\n\") == \"1\\n3\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\\n\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected, f\"Got {solution()}, expected {expected}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == 1\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"The output is incorrect.\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3 3 5 1 2 3) == 1\nassert solution(6 3 5 1 2 3 3 2 1) == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\\n6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n4 5 6\\n1\\n2\\n3\\n4\\n3\\n2\\n1\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'\n\nfrom typing import List"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Sample Output 1\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Sample Output 2\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3 2\\n12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 2\"\nassert solution() == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 2\\n12 3\", \"Test case 1 failed\"\nassert solution() == \"12 3\\n3 2\", \"Test case 2 failed\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\nSample Output 1:3 2\\nSample Input 2:5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\nSample Output 2:12 3') == '3 2\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Test case 2 failed\"\nassert solution(\"1\\n\") == \"1 1\\n\", \"Test case 3 failed\"\nassert solution(\"1\\n2 3 4\\n\") == \"1 1\\n\", \"Test case 4 failed\"\nassert solution(\"10\\n0 2\\n1 2\\n3 3\\n5 4\\n7 8\\n\") == \"10 3\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Incorrect solution\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Incorrect solution\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    1\n    0\n    0\n    3\n    ''') == '100\\n000\\n01\\n01\\n01'\n\nassert solution('''\n    3\n    0\n    1 1\n    1\n    1 1\n    1\n    1\n    ''') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10000\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test 1: \\nInput: '2\\n1\\n0\\n0\\n3\\n'\\nExpected Output: '100\\n000\\n01\\n01\\n01\\n'\\nActual Output: \" + solution(\"2\\n1\\n0\\n0\\n3\\n\")"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_sample1) == expected_output1, f\"Expected output: {expected_output1}, Received output: {solution(input_sample1)}\"\nassert solution(input_sample2) == expected_output2, f\"Expected output: {expected_output2}, Received output: {solution(input_sample2)}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test 1\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\", \"Test 2\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '100\\n000\\n01\\n01\\n01\\n'\nassert solution(2) == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n') == '2\\n'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n2\\n2\\n4\\n1\\n4\\n7\\n8\\n2\\n5\\n\\n2\\n3\\n3\\n3\\n3\\n') == '2\\n'\nassert solution('1\\n2\\n2\\n2\\n4\\n1\\n4\\n7\\n8\\n2\\n5\\n\\n2\\n3\\n3\\n3\\n3\\n') == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2', 'Ada, Bertrand and Charles often argue over which TV shows to watch, and to avoid some of their fights they have finally decided to buy a video tape recorder. This fabulous, new device can record k different TV shows simultaneously, and whenever a show recorded in one of the machine\u2019s k slots ends, the machine is immediately ready to record another show in the same slot.'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\", \"Solution not correct\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"2\\n\", \"Ada, Bertrand and Charles often argue over which TV shows to watch, and to avoid some of their fights they have finally decided to buy a video tape recorder. This fabulous, new device can record $k$ different TV shows simultaneously, and whenever a show recorded in one of the machine\u2019s $k$ slots ends, the machine is immediately ready to record another show in the same slot. The three friends wonder how many TV shows they can record during one day. They provide you with the TV guide for today\u2019s shows, and tell you the number of shows the machine can record simultaneously. How many shows can they record, using their recording machine? Count only shows that are recorded in their entirety. \\n\"\n\nassert solution(sample_input_2) == \"3\\n\", \"The three friends wonder how many TV shows they can record during one day. They provide you with the TV guide for today\u2019s shows, and tell you the number of shows the machine can record simultaneously. How many shows can they record, using their recording machine? Count only shows that are recorded in their entirety. \\n\"\n\nfrom typing import List"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"90.00000000\"\nassert solution(stdin) == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\"\"\"\n) == \"90.00000000\\n\"\n\nassert solution(\n\"\"\"\n5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\"\"\"\n) == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"90.00000000\"\n\nimport math"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"90.00000000\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n90.00000000\n'''"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == '90.00000000', \"Test case 1 failed\"\nassert solution(input2) == '126.86989765', \"Test case 2 failed\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the price of each lunch: \")) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input(\"Enter the price of each lunch: \"))}\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(30000) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(42) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(1000000) == \"1\\n22 44\\n18 46\\n16 48\"\nassert solution(1000000000) == \"10\\n500000 999999\\n400000 999999\"\nassert solution(5000000) == \"5\\n1311000 5000000\\n950000 5000000\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8 29\\n9 28\\n11 26\\n15 22\\n' # expected output\nassert solution(stdin) == '85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n' # expected output\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3.5\", \"Expected Output: 3.5, Actual Output: \" + str(solution())\nassert solution() == \"4.9\", \"Expected Output: 4.9, Actual Output: \" + str(solution())"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution provided {solution(stdin)}, expected {expected}\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.5\"\n\nSolution:\n\nThe problem is asking us to determine the expected number of gems that the top $r$ inhabitants hold after $d$ nights. We need to calculate the expected value of $a_1 + \\dots + a_r$.\n\nSince $n$ and $d$ are given, we can simply calculate $a_1 = d$ and $a_r = n - d$. The expected value of $a_1 + \\dots + a_r$ is then simply the sum of the $a_i$ for $i=1$ to $r$.\n\nLet's implement the solution.<|im_sep|>"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.5\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3.5, \"Expected output 3.5, got {}\".format(solution())"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\", \"1\"\nassert solution(\"12 12 1 12\") == \"4\\n\", \"2\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"0\\n\", \"3\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f\"1 5 1 5\") == \"19\"\nassert solution(f\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == \"19\", \"Test 1\"\nassert solution(\"12 12 1 12\") == \"4\", \"Test 2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == \"19\", \"Test 1 failed\"\nassert solution(\"12 12 1 12\") == \"4\", \"Test 2 failed\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    1 5 1 5\n    12 12 1 12\n    1 5 2 5\n    12 12 2 12\n    1 5 3 5\n    12 12 3 12\n    1 5 4 5\n    12 12 4 12\n    1 5 5 5\n    12 12 5 12\n    ''') == '19'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}!= {output()}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == '4\\n'\nassert solution('1 12') == '4\\n'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Test 1 Failed\"\nassert solution(\"1 12\") == \"4\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\", \"Input 1 should give output 4.\"\nassert solution(\"1 12\") == \"4\", \"Input 2 should give output 4.\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cocaror\") == \"1\", \"Your solution should return 1.\"\nassert solution(\"hello world\") == \"0\", \"Your solution should return 0.\"\nassert solution(\"a\") == \"0\", \"Your solution should return 0.\"\nassert solution(\"aab\") == \"0\", \"Your solution should return 0.\"\nassert solution(\"aaa\") == \"0\", \"Your solution should return 0.\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\nassert solution(\"cat\") == \"1\"\nassert solution(\"notat\") == \"0\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"car\") == 1, \"Test case 1 failed\"\nassert solution(\"cocar\") == 2, \"Test case 2 failed\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == 1, \"Incorrect Output\"\nassert solution(\"cocaror\") == 2, \"Incorrect Output\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 2 0 1\\n\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 2 0 1\\n\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\\n\") == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"0\", \"Test case 2 failed\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8\", \"Your code is incorrect\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"zyz\"\nassert solution() == -1"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"zyz\"\nassert solution(stdin) == \"def solution(stdin: str) -> str: pass\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 650) == \"zyz\"\nassert solution(3, 651) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'zyz'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2, 650) == \"zyz\"\nassert solution(2, 651) == -1"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n\nfrom collections import defaultdict\nfrom itertools import permutations"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"2\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4\\n'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n\"\"\") == \"4\\n\"\n\nassert solution(r\"\"\"\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n\"\"\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output here', \"Expected output: Output here, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"5\"\nassert solution(\"8\") == \"5\"\nassert solution(\"9\") == \"6\"\nassert solution(\"10\") == \"6\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\", \"Expected Output: 4, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6\n    0 10 0\n    10 0 1\n    12 8 1\n    5 5 0\n    11 2 1\n    11 3 0\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    6 1 1\n    0 2 0\n    2 1 1\n    6 1 1\n    8 2 0\n    4 4 0\n    4 0 0\n    2 3 1\n    6 1 0\n    6 3 1\n    \"\"\"\n) == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\"\nassert solution(\"\") == \"4\\n\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"2\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_result, f\"The expected result is {expected_result}, but the actual result is {solution}\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2\nassert solution(stdin=\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(stdin=\"2 2 2\\n2 2 2\\n2 2\") == -1\nassert solution(stdin=\"3 4 5 6 6 6\\n2 2 2 2\\n3 3 3 3\") == 0\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0, \"Expected 0, but got: {}\".format(solution('2 4 3\\n3 4 5 7\\n1 2 10'))\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2, \"Expected 2, but got: {}\".format(solution('3 5 2\\n1 4 7 9 11\\n2 3'))"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\n\nassert solution('''\n3 5 2\n1 4 7 9 11\n2 3\n''') == '2'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0\nassert solution() == 2"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\", \"Sample Input 1\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\", \"Sample Input 2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"1\n-2 -1\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    3 2\n    \"\"\"\n) == \"\"\"\n1\n-2 -1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 2\n    3 4\n    \"\"\"\n) == \"\"\"\n3\n-1 1\n2 1\n0 -2\n\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution(stdin='1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3\\nIVO\\nJASNA\\nJOSIPA') == '4\\n'\nassert solution(stdin='5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == '24\\n'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"3\"\nassert solution(6) == \"1\"\nassert solution(7) == \"2\"\nassert solution(8) == \"3\"\nassert solution(9) == \"1\"\nassert solution(10) == \"2\"\nassert solution(11) == \"3\"\nassert solution(12) == \"1\"\nassert solution(13) == \"2\"\nassert solution(14) == \"3\"\nassert solution(15) == \"1\"\nassert solution(16) == \"2\"\nassert solution(17) == \"3\"\nassert solution(18) == \"1\"\nassert solution(19) == \"2\"\nassert solution(20) == \"3\"\nassert solution(21) == \"1\"\nassert solution(22) == \"2\"\nassert solution(23) == \"3\"\nassert solution(24) == \"1\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4', 'Solution should return 4'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    IVO\n    JASNA\n    JOSIPA\n''') == '4\\n'\n\nassert solution(\n    '''\n    5\n    MARICA\n    MARTA\n    MATO\n    MARA\n    MARTINA\n''') == '24\\n'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nfor i in range(1, len(stdin)):\n    assert solution(stdin) == expected"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\" # Pass\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Incorrect output for input 1\"\n\nassert solution(stdin=\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Incorrect output for input 2\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\", \"Output should be 3\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\"\n) == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '3\\n', \"The correct output is not obtained.\"\n\nassert solution(sample_input2) == '39\\n', \"The correct output is not obtained.\"\n\nfrom typing import List"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == 5.2696518641, \"Test 1 failed\"\nassert solution(input2) == 9, \"Test 2 failed\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5.2696518641\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641\\n'\n\nassert solution('''\n1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641\\n'\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20\\n') == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1') == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5.2696518641', 'Incorrect output'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641, \"Incorrect output for Sample Input 1\"\n\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9, \"Incorrect output for Sample Input 2\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n8\\n4\\n\"\nassert solution() == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1 or solution() == 2 or solution() == 4 or solution() == 24, \"Incorrect output\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1'\nassert solution('1 1 2\\n2 0 2\\n3 1 2\\n') == '1'\nassert solution('1 1 2\\n2 0 3\\n3 1 2\\n') == '-1'\nassert solution('1 1 1\\n2 0 1\\n3 1 3\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 2 3\\n') == '24'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 1 1\\n2 0 1\\n3 1 1\\n') == '8'\nassert solution('1 "
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} Failed\"\nfor i in range(3):\n    input_k, input_l, input_m = list(map(int, input().split()))\n    expected_output = input_k\n    if input_l <= input_k and is_prime(input_k):\n        expected_output += 1\n    output = solution(str(input_k) + \" \" + str(input_l) + \" \" + str(input_m))\n    assert output == expected_output, f\"Test Case {i+1} Failed\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n6 6\") == \"3\\n\"\nassert solution(\"6 6\\n\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n6 6\\n\") == \"3\\n\"\nassert solution(\"4 2\\n6 7\\n\") == \"12\\n\"\nassert solution(\"3 5\\n8 4\\n\") == \"387\\n\"\nassert solution(\"4 3\\n5 8\\n\") == \"36\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"6 6\") == \"240\\n\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3, \"Test case 1 failed\"\nassert solution(6, 6) == 240, \"Test case 2 failed\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 10):\n    puzzle = input()\n    assert solution(puzzle) == output(puzzle)"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"The solution is incorrect.\"\nassert solution(\"A+A=A\") == \"impossible\", \"The solution is incorrect.\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}, expected {output}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\"\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"14\"\nprint(14)"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n\ninput_seq = list(map(int, input().split()))\noutput = 1\n\nfor i in range(len(input_seq)):\n    for j in range(i+1, len(input_seq)):\n        if input_seq[i]!= input_seq[j]:\n            output = (output + 1) % (10**9 + 9)\n\nprint(output)"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '14'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 14, \"The correct output is 14, but the output is {}\".format(solution())"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 100001):\n    if all(a > i for a in stdin.split()):\n        return str(i % (1000000000 + 9))\nprint(\"Error: no solution found\")"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test {t+1} failed. Expected output: {output}, got: {solution(input())}\"\nfor t in range(input()):\n    n, m = map(int, input().split())\n    c = [list(map(int, input().split())) for _ in range(m)]\n\n    # check for valid Magic Checkerboard\n    if any(sum(c[i][j] for j in range(m)) > 1 or sum(c[j][i] for i in range(n)) > 1 for i in range(n)):\n        print(\"-1\")\n        continue\n\n    # fill the remaining cells\n    total = 0\n    for i in range(n):\n        for j in range(m):\n            if c[i][j] == 0:\n                num = 0\n                while True:\n                    num += 1\n                    if c[i][j]!= num:\n                        break\n                c[i][j] = num\n                total += num\n\n    print(total)\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 88\nassert solution() == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"88\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} has incorrect output.\\nExpected Output: {expected_output}\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '88\\n'\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '-1\\n'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution( \"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n\"\"\") == \"88\\n\"\n\nassert solution( \"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\\n\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"-1\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 1\\n1 1\\n') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999\\n') == '9999700002.000\\n'\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.000\\n'\nassert solution(stdin) == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.000\"\nassert solution() == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"0.000\"\nassert solution(sample_input2) == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.000\"\nassert solution(stdin) == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution should be {expected_output}, not {solution}\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n9999700002.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('sample_input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == 'Infinity'\nprint('All tests passed!')"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"3\", \"Expected output: 3\"\nassert solution(sample_input_2) == \"Infinity\", \"Expected output: Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == 3\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == Infinity\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, but got {solution(input_data)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n', 'Expected output: 3\\n, but got:'+ str(solution(stdin))"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    6 8 1 6\n    1 2 5\n    1 3 1\n    2 6 6\n    2 3 6\n    4 2 3\n    3 4 1\n    4 5 1\n    5 6 1\n    5\n    1 3 6 5 4\n    6 1 3 4 2 5\n    3\n    1 2 6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    6\n    1 3 2\n    1 2 7\n    2 3 3\n    2\n    1 2\n    "
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n6\\n') == 'impossible'  # Sample Input 1\nassert solution('3 1\\n1\\n') == '000'  # Sample Input 2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n6\\n3 1\\n1\") == \"impossible\"\nassert solution(\"3 1\\n1\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n6\\nSample Input 1:\\n6 1\\n6\\nSample Output 1:\\nimpossible\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\nSample Input 2:\\n3 1\\n1\\nSample Output 2:\\n000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"impossible\"\nassert solution(stdin=\"6 1\\n6\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(stdin=\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Sample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\nSample Input 2:3 1\\n1\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'impossible'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"90\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n99\\n') == '1\\n', \"Test Case 1 Failed\"\nassert solution('90\\n10\\n') == '10\\n', \"Test Case 2 Failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"1\\n\", \"Test 1\"\nassert solution(\"99\") == \"1\\n\", \"Test 2\"\nassert solution(\"90\") == \"10\\n\", \"Test 3\"\n\nfrom typing import List"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 failed: Expected {output_1}, got {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Test 2 failed: Expected {output_2}, got {solution(input_2)}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"1\", \"The correct output should be 1\"\nassert solution(\"99\") == \"1\", \"The correct output should be 1\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Expected 1, got {}.\".format(solution(\"10\\n99\"))\nassert solution(\"90\\n10\") == \"10\", \"Expected 10, got {}.\".format(solution(\"90\\n10\"))"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n99') == '1\\n'\nassert solution('90\\n10') == '10\\n'"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\n99') == '1\\n', \"Invalid output\"\nassert solution('90\\n10') == '10\\n', \"Invalid output\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\", \"Sample Input 1\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\", \"Sample Input 2\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n', \"Expected output: 2\\nGot: {}\".format(solution('3\\n2 3 3\\n4 1 10\\n2 7 3'))\n\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n', \"Expected output: 1\\nGot: {}\".format(solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6'))"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sample_input_1.txt\") == \"5\\n11\\n16\\n\"\nassert solution(\"sample_input_2.txt\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor test in range(1, 11):\n    N, Q = map(int, input().split())\n    S = input()\n    assert N == len(S), \"Test case failed\"\n    Q = int(Q)\n    L = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    substrings = set()\n    for i in range(N):\n        substrings.update(S[L[i] - 1:R[i] + 1])\n    n = len(substrings)\n    assert n == len(set(substrings)), \"Test case failed\"\n    print(n)\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"velvet\\n1 6\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Wrong output for sample input 1: {solution(input())}!= {output()}\"\nassert solution(input()) == output(), f\"Wrong output for sample input 2: {solution(input())}!= {output()}\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"velvet\\n1 6\") == \"7\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(input()):\n    L, R = map(int, input().split())\n    s = input()\n    count = 0\n    for l in range(L, R):\n        for r in range(l, R):\n            if s[l] == s[r] and l!= r:\n                count += 1\n    print(count)"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 5\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n11\\n16\\n\"\nassert solution(stdin) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('2 3\\n1 23\\n2 17') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''\n2 3\n1 23\n2 17\n''') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'\n\nsolution('3 4\\n3 1\\n2 2\\n1 1\\n')"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the minimal number of phone calls made.\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Solution not correct!\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.0000000000, \"Incorrect output\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.0000000000\", \"Your solution is incorrect!\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000\\n'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178\\n'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.0000000000'  # expected output"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.0000000000\\n\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.0000000000\", \"Incorrect output\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"0.0000000000\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"0.0000000000\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == 8.0\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == 0.02\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"8.0000000000\"\nassert solution(sample_input2) == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\\n\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n'\n                '2 0\\n'\n                '1 1\\n'\n                '0 2\\n'\n                '-2 0\\n'\n                '0 -2') == '8.0000000000'\n\nassert solution('5\\n'\n                '0.2 0.00\\n'\n                '0 -0.2\\n'\n                '0.0 0\\n'\n                '-0.2 0\\n'\n                '0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8.0000000000\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"Output should be 2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == 3.666666667\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == 20.0\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Robin is happy at the restaurant.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"20.000000000\", \"Your solution is incorrect.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'\n\nfrom typing import List"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '20.000000000', 'Your solution should be 20.000000000, not {}.'.format(solution())"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == #Your solution here"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2\\n1 2 3\\n4 11 4\\n10 10 10 10') == '3.666666667'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin=input())}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Sample Input 1\"\nassert solution(stdin) == \"16317634\", \"Sample Output 2\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'2 42') == '2\\n'\nassert solution(r'5 123456789') == '16317634\\n'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index + 1} failed: expected output: {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 8\nassert solution(4) == 32\nassert solution(5) == 1252621615747978000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Please provide a valid input\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The expected output is 2, but got: \" + str(solution())"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: '{output}', got: '{solution(input())}'\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 1 0 0 2\n    1 2 2\n    1 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 1 1 1 8\n    0 1 1\n    1 0 1\n    2 1 1\n    1 2 1\n    1 2 2\n    2 2 3\n    0 2 5\n    1 2 6\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the maximum number of points you can score.\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, but got {solution(input_str)}\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 1 0 0 2\n    1 2 2\n    1 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 1 1 1 8\n    0 1 1\n    1 0 1\n    2 1 1\n    1 2 1\n    1 2 2\n    2 2 3\n    0 2 5\n    1 2 6\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output\\n0\\n\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Test case 1 failed.\"\n\nassert solution() == 4, \"Test case 2 failed.\"\n\nassert solution() == 10, \"Test case 3 failed.\"\n\nassert solution() == 16, \"Test case 4 failed.\"\n\nassert solution() == 20, \"Test case 5 failed.\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'5 1 10 10') == '3'\nassert solution(r'5 1 100 100') == '3'\nassert solution(r'5 1 100 100') == '3'\nassert solution(r'5 1 100 100') == '3'\nassert solution(r'5 1 100 100') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3\\n'\n\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3\\n'\n\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3\\n'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\nassert solution(\"1 1 10 10\\n5 1\\n2 2\\n3 3\") == \"1\"\nassert solution(\"1 1 10 10\\n5 1\\n2 2\\n3 3\") == \"1\"\nassert solution(\"1 1 10 10\\n5 1\\n2 2\\n3 3\") == \"1\"\nassert solution(\"1 1 10 10\\n5 1\\n2 2\\n3 3\") == \"1\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2, \"Input 1: ABC\"\nassert solution(\"ABBBAAAA\") == 3, \"Input 2: ABBBAAAA\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed with input: {input()}, expected output: {output()}, got: {solution(input())}\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Solution must return 3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\n') == '3\\n'\nassert solution('5\\nA\\ABA\\BBB\\ABABA\\AAAAAB') == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nB\\nABABA\\nAAAAAB\\n\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5)) == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nA') == '3\\n'\nassert solution('5\\nA\\ABA\\BBB\\ABABA\\AAAAAB') == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\nfor _ in range(test_cases):\n    input_str = list(input().strip())\n    output = solution(input_str)\n    assert output == expected[_, 0], f\"Expected: {expected[_, 0]}, Received: {output}\"\nprint(f\"Test cases passed: {test_cases}\")"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution and output are not matching.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.1909090909\"\nassert solution(stdin) == \"0.1909090909\"\nassert solution(stdin) == \"0.1909090909\"\nassert solution(stdin) == \"0.1909090909\"\nassert solution(stdin) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 10 2 1') == 0.1, \"Error 1\"\nassert solution('100 10 2 2') == 0.1909090909, \"Error 2\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.1909090909\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n\nimport random"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.1\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.1909090909\", \"Incorrect output\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\") == \"0.1\\n0.1909090909\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbABac\") == 0\nassert solution(\"ABABABcABABABABc\") == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABACcABABAB\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 0\nassert solution('ABABABcABABAbAbab') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution for the given problem failed for the given test case. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('A') == 1\nassert solution('AAABBB') == 2\nassert solution('ABABAB') == 0\nassert solution('B') == 0\nassert solution('AB') == 0\nassert solution('BA') == 1\nassert solutionababABABABABABABABABABABABABABABABABABabABABABABABABABABABABABABABABABababababababababababABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABabABABABABABABABABABABABABABabABABABabABABABABABABABABabABABabABABABABABabABABABabABABABABABABABABABABABABABABabABABABABABABABABABABABABABABABABABABABABABABABABABababABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABababABABABABABABABABABABABABABABABABABabABABABABABABABABab"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected_output, f\"Incorrect solution for {input}.\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbABAb\") == 5"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\n\nsolution(\"4 3\\n0\\n0\\n1\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output should contain one integer: the maximum number of nodes that can be marked.\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2\\n'\nassert solution('4 4\\n0\\n1\\n') == '4\\n'\nassert solution('4 5\\n0\\n1\\n') == '5\\n'\nassert solution('4 6\\n0\\n1\\n') == '6\\n'\nassert solution('4 7\\n0\\n1\\n') == '7\\n'\nassert solution('4 8\\n0\\n1\\n') == '8\\n'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2\\n'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution() == '2'\nassert solution() == '2'\nassert solution() == '2'\nassert solution() == '2'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\n\nassert solution(\"5 10\\n1\\n2\\n3\\n4\\n5\") == \"10\"\n\nassert solution(\"10 1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\nfor input in test_cases:\n    assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\nP0: 22 1 4 2 6 -1 0\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for {input_str}\\nExpected: {output_str}\\nGot: {solution(input_str)}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"2\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"3\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"4\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"5\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\nP4: 30 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"6\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\nP4: 30 1 4 2 6 -1 0\\nP5: 32 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"7\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\nP4: 30 1 4 2 6 -1 0\\nP5: 32 1 4 2 6 -1 0\\nP6: 34 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"8\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\nP4: 30 1 4 2 6 -1 0\\nP5: 32 1 4 2 6 -1 0\\nP6: 34 1 4 2 6 -1 0\\nP7: 36 1 4 2 6 -1 0\\nP8: 38 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"9\\nP0: 22 1 4 2 6 -1 0\\nP1: 24 1 4 2 6 -1 0\\nP2: 26 1 4 2 6 -1 0\\nP3: 28 1 4 2 6 -1 0\\nP4: 30 1 4 2 6 -1 0\\nP5: 32 1 4 2 6 -1 0\\nP6: 34 1 4 2 6 -1 0\\nP7: 36 1 4 2 6 -1 0\\nP8: 38 1 4 2 6 -1 0\\nP9: 40 1 4 2 6 -1 0\\n\"\nassert solution(input()) == \"10\\nP0: 22 1 4 2 "
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('3 6 6 6\\n18 3 1 4 6 4 -2\\n25 4 1 1 4 -3 1') == '2\\nP1: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 6 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\nassert solution('2 8"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''1\nP0: 22 1 4 2 6 -1 0'''\nassert solution(stdin) == '''2\nP0: 44 2 8 4 10 -2 0\nP1: 55 2 10 6 12 -3 0'''\nassert solution(stdin) == '''3\nP0: 66 3 12 8 10 -4 0\nP1: 77 3 14 10 12 -5 0\nP2: 88 3 16 12 14 -6 0'''\nassert solution(stdin) == '''4\nP0: 77 4 18 14 12 -7 0\nP1: 88 4 20 16 14 -8 0\nP2: 99 4 22 18 16 -9 0\nP3: 99 4 24 20 18 -10 0'''\nassert solution(stdin) == '''5\nP0: 88 5 26 22 18 -11 0\nP1: 99 5 28 24 20 -12 0\nP2: 99 5 30 26 22 -13 0\nP3: 99 5 32 28 24 -14 0\nP4: 99 5 34 30 26 -15 0'''\nassert solution(stdin) == '''6\nP0: 99 6 38 34 30 -16 0\nP1: 99 6 40 36 32 -17 0\nP2: 99 6 42 38 34 -18 0\nP3: 99 6 44 40 36 -19 0\nP4: 99 6 46 42 38 -20 0\nP5: 99 6 48 44 40 -21 0'''"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Your solution is not correct for the given input.\\nExpected output: {expected_output}\\nActual output: {solution(input)}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 "
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"1\\n2\\n3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test failed. Expected: {output}, got: {solution(input)}\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output: 1\\nOutput: 2\\nOutput: 3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\n\nassert solution(\"10 5\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"2\\n3\\n\"\n\nassert solution(\"4 5\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2'\nprint(solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6'))"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"Solution not implemented\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\"\nassert solution(\"7\\n1 3 4 5 6 7\\n2 4 6 8 9 10\") == \"7\\n\"\nassert solution(\"8\\n1 2 3 4 5 6\\n2 3 4 5 6 7\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 4 5 6\\n3 4 5 6 7 8\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6\\n4 5 6 7 8 9\") == \"4\\n\"\nassert solution(\"11\\n1 2 3 4 5 6\\n5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"12\\n1 2 3 4 5 6\\n6 7 8 9 10 11\") == \"6\\n\"\nassert solution(\"13\\n1 2 3 4 5 6\\n7 8 9 10 11 12\") == \"7\\n\"\nassert solution(\"14\\n1 2 3 4 5 6\\n8 9 10 11 12 13\") == \"8\\n\"\nassert solution(\"15\\n1 2 3 4 5 6\\n9 10 11 12 13 14\") == \"9\\n\"\nassert solution(\"16\\n1 2 3 4 5 6\\n10 11 12 13 14 15\") == \"10\\n\"\nassert solution(\"17\\n1 2 3 4 5 6\\n11 12 13 14 15 16\") == \"11\\n\"\nassert solution(\"18\\n1 2 3 4 5 6\\n12 13 14 15 16 17\") == \"12\\n\"\nassert solution(\"19\\n1 2 3 4 5 6\\n13 14 15 16 17 18\") == \"13\\n\"\nassert solution(\"20\\n1 2 3 4 5 6\\n14 15 16 17 18 19\") == \"14\\n\"\nassert solution(\"21\\n1 2 3 4 5 6\\n15 16 17 18 19 20\") == \"15\\n\"\nassert solution(\"22\\n1 2 3 4 5 6\\n16 17 18 19 20 21\") == \"16\\n\"\nassert solution(\"23\\n1 2 3 4 5 6\\n17 18 19 20 21 22\") == \"17\\n\"\nassert solution(\"24\\n1 2 3 4 5 6\\n18 19 20 21 22 23\") == \"18\\n\"\nassert solution(\"25\\n1 2 3 4 5 6\\n19 20 21 22 23 24\") == \"19\\n\"\nassert solution(\"26\\n1 2 3 4 5 6\\n20 21 22 23 24 25\") == \"20\\n\"\nassert solution(\"27\\n1 2 3 4 5 6\\n21 22 23 24 25 26\") == \"21\\n\"\nassert solution(\"28\\n1 2 3 4 5 6\\n22 23 24 25 26 27\") == \"22\\n\"\nassert solution(\"29\\n1 2 3 4 5 6\\n23 24 "
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\\n1\\n1\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, \"1 5 4 3 2 6\", \"1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    \"\"\"\n) == \"60\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"-1\"\nassert solution(\"4 2 3\\n5 4 6\\n7 8 9\\n10 11 12\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\nassert solution(\"3 3 4\\n1 10 1 10\\n2 10 2 20\\n3 10 3 30\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '60\\n'\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\") == \"-1\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\") == \"-1\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\\n11 11 11 11\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9 9 9 9\\n10 10 10 10\\n11 11 11 11\\n12 12 12 12\") == \"60\\n\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 4 4 4\\n5 5 5 5\\n6 6 6 6\\n7 7 7 7\\n8 8 8 8\\n9"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"60\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"Case #1: 1\\nCase #2: 2\\n\"\nassert solution(\"5\") == \"Case #1: 1\\nCase #2: 2\\n\"\nassert solution(\"6\") == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '''\nCase #1: 1\nCase #2: 2\n'''\n\nsolution(open('sample_input.txt', 'r'))"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    3\n    5000 0 0\n    0 2000 0\n    0 0 4000\n    \"\"\"\n) == \"\"\"\nCase #1: 1\nCase #2: 2\n\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    \"\"\"\n) == \"Case #1: 1\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3\n    5000 0 0\n    0 2000 0\n    0 0 4000\n    \"\"\"\n) == \"Case #2: 2\\n\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == [\"6\", \"6\", \"6\", \"1\"], \"Test case failed\"\nassert solution(empty_input) == [\"0\", \"0\"], \"Test case failed\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"0 0 0 0\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"0 0 0 0\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '6 6 6 1'\nassert solution('-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example_input) == example_output, f\"Your solution is not correct. Please check the example input and output and fix the errors.\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"20.83\\n\", \"Solution not correct\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40\n''') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\\n\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '20.83' # this should work"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, \"Your code does not pass the test case.\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"The output {solution(input_data)} is incorrect. Expected {expected_output}.\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40\n    \"\"\"\n) == \"20.83\\n\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"4 4\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"26\"\nassert solution(\"4 4\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n26 27 28 29 30\\n31 32 33 34 35\\n36 37 38 39 40\") == \"43\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 49, \"Solution does not work as expected\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\nprint('Test case passed')"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"49\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n#.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n\nfrom typing import List"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected output {output()}, but got {solution(input())}\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"\"\"\n##CROSSWORD####\n\"\"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Solution mismatch: got '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"\"\"\nCROSSWORD\n##CROSSWORD####\n\"\"\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '##CROSSWORD####'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\nassert solution('6 4\\n3 1 9\\n7 2 8') == '21'\nassert solution('7 6\\n1 5 3\\n8 4 2') == '18'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"31\\n\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 2\\nWWWWWWWW\") == \"1\\n\"\nassert solution(\"7 3\\nBBBWBBBW\") == \"2\\n\"\nassert solution(\"10 4\\nWWWWWWWWWWWWWWWW\") == \"3\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\\n\"\nassert solution(\"3 2\\nBW\\nBWW\\n\") == \"2\\n\"\nassert solution(\"3 3\\nWW\\n\") == \"3\\n\"\nassert solution(\"4 1\\nBBB\\n\") == \"2\\n\"\nassert solution(\"4 2\\nBBB\\nBWW\\n\") == \"2\\n\"\nassert solution(\"4 3\\nBBW\\n\") == \"3\\n\"\nassert solution(\"4 4\\nBWW\\n\") == \"3\\n\"\nassert solution(\"4 5\\nWBB\\n\") == \"4\\n\"\nassert solution(\"4 6\\nWBBW\\n\") == \"4\\n\"\nassert solution(\"4 7\\nWBBWW\\n\") == \"5\\n\"\nassert solution(\"4 8\\nWBBWWW\\n\") == \"5\\n\"\nassert solution(\"4 9\\nWBBWWWW\\n\") == \"6\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"4 3\\nBWW\") == \"3\"\nassert solution(\"3 4\\nBW\") == \"2\"\nassert solution(\"3 2\\nWW\") == \"3\"\nassert solution(\"3 3\\nWB\") == \"4\"\nassert solution(\"4 1\\nW\") == \"1\"\nassert solution(\"3 1\\nBW\") == \"2\"\nassert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"4 1\\nB\") == \"1\"\nassert solution(\"3 1\\nBW\") == \"2\"\nassert solution(\"3 1\\nBW\") == \"2\"\nassert solution(\"2 1\\nB\") == \"1\"\nassert solution(\"3 1\\nW\") == \"2\"\nassert solution(\"4 2\\nB\") == \"1\"\nassert solution(\"4 2\\nW\") == \"1\"\nassert solution(\"4 2\\nW\") == \"1\"\nassert solution(\"4 2\\nW\") == \"1\"\nassert solution(\"4 2\\nW\") == \"1\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected 2 but got {}\".format(solution())"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\"\nassert solution(\"5 2\\nBWBBW\\n\") == \"2\"\nassert solution(\"2 3\\nBRBW\\n\") == \"4\"\nassert solution(\"10 4\\nBBW\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nBBW\") == 2\nassert solution(\"5 2\\nWWBBWB\\nWWWWWW\") == 1\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == 0.556\nassert solution('1 2 3') == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3\\n') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.556, \"Solution not correct\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.556, \"Expected: 0.556, Received: {}\".format(solution())"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.556\"\nprint(\"Passed\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\"\nassert solution(\"10 2 10 20\") == \"60\\n\"\nassert solution(\"1 20 3 4\") == \"1\\n\"\nassert solution(\"5 10 15 20\") == \"30\\n\"\nassert solution(\"10 10 10 10\") == \"100\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4 3 2') == '3\\n'\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"7 5 6 7\") == \"1\"\nassert solution(\"3 4 5 6\") == \"2\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='5 4 3 2') == '3'\nassert solution(stdin='3 2 1 0') == '2'\nassert solution(stdin='2 1 0 3') == '1'\nassert solution(stdin='5 6 5 4') == '3'\nassert solution(stdin='3 4 5 6') == '2'\nassert solution(stdin='1 2 3 4') == '1'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"Incorrect output for the given input\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4 3 2') == '3'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4 3 2') == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: expected {output_data}, but got {solution(input_data)}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Victor works for Alberta Chemicals Monitoring (ACM). ACM is a company that analyses raw environmental data related to chemicals used in oil sand and other industries in Alberta, and produces some reports for environmental watchdogs.\\n\\nVictor is in charge of a multi-processor cluster in ACM. Each processor is connected to a dedicated special purpose output generation unit (OGU). This cluster receives several raw data streams from field sensors and assigns each stream to a processor. Each processor performs some real time processing on a data stream and immediately after its termination, produces a report using its OGU.\\n\\nEach stream has an integer starting time s, an integer duration d and a priority p. This stream is active in the interval [s, s + d) (right-open interval). The report of each stream must be produced immediately after its termination; otherwise, it will be useless.\\n\\nIn the past, at any instance of time, the number of data streams were not more than the number of processors and OGUs. So, Victor could process all data streams.\\n\\nUnfortunately, recently, in a suspicious power surge, all OGUs burnt out. Victor was able to salvage one OGU by using parts from the other OGUs. Now, he can no longer produce a report for all data streams and needs to choose a subset of them based on the priorities assigned to them. To handle access to this OGU, Victor restructured the cluster architecture as follows. When a stream starts, the system either admits or rejects it. If it admits a stream, the unique identifier of the processor assigned to this stream is pushed onto the stack. Only a processor having its identifier on top of the stack can use the OGU to produce its report. After production of the report, the processor identifier is popped from the stack. It should be noted that if some streams start at the same time, he can push their processor identifier in any order of his choice. Now, Victor needs your help to choose a subset of streams such that their reports can be generated with this single OGU. The total priority of the streams in the chosen subset should be maximized.\\n\\n-----Input-----\\nThe input consists of a single test case. The first line contains an integer n, where 1 \\le n \\le 5000 is the number of data streams.\\nEach of the next n lines contains three integers s_ i, d_ i, p_ i, where 1 \\le s_ i, d_ i \\le 10^9, 0 \\le p_ i \\le 100000.\\nNote that the cluster has at least 5000 processors.\\n\\n-----Output-----\\nDisplay the maximum total priority of a subset of streams such that their reports can be generated with the architecture described above using a single OGU.\\n\\n-----Examples-----\\nSample Input:\\n4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\nSample Output:\\n13\\ndef solution(stdin: str) -> str: pass\\n\") == 13\nprint(\"Test case passed successfully\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == 13\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n7 8 9\") == 92"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '13', 'Incorrect output'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"13\"\nassert solution(stdin) == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"13\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1\\n2\\n3\\n5\\n6\\n7\\n8\\n9\\n10') == '12'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"13\"\n\nimport heapq"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == '3.141593', \"Test case 1 failed\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nprint(\"All tests passed!\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n18\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n19\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n20\\n13.141593 20.123456\") == \"3.141593\\n\"\nassert solution(\"10.000000 20.123456\\n21\\n13.141593 2"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n20.000000 30.000000\\n\") == 4.179131\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n\") == 6.616034\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n\") == 10.000000\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.000000\\n1\\n20.000000 30.0"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"1.234567 2.345678\\n2\\n4.567890 5.678901\\n\") == 6.179114\nassert solution(\"3.456789 6.789012\\n3\\n7.000000 10.000000\\n\") == 1.732050\nassert solution(\"0.000000 0.000000\\n1\\n2.000000 1.000000\\n\") == 0.000000\nassert solution(\"1.234567 2.345678\\n2\\n4.567890 5.678901\\n\") == 6.179114"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"5.000000 10.000000\\n2\\n7.654321 8.765432\\n\") == \"3.141593\"\nassert solution(\"1.000000 1000.000000\\n1\\n1.000000 1000.000000\\n\") == \"0.0\"\nassert solution(\"1.000000 1000.000000\\n1\\n1.000000 1000.000000\\n1\") == \"0.0\"\nassert solution(\"1.000000 1000.000000\\n1\\n1.000000 1000.000000\\n2\") == \"3.141593\"\nassert solution(\"1.000000 1000.000000\\n1\\n1.000000 1000.000000\\n3\") == \"6.283185\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593, \"Your solution is not correct\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n4 4\\n1\\n1\\n2\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n1\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '2.13333333333333'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'impossible'\nassert solution('3\\n4 4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n4 4\\n1\\n') == 'impossible'\nassert solution('1\\n1\\n1\\n') == 'impossible'\nassert solution('3\\n4 4\\n4 4\\n') == 'impossible'\nassert solution('3\\n4 4\\n4 4\\n1\\n') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 4\\n2') == '2.13333333333333'\nassert solution('4\\n2\\n3') == 'impossible'\nassert solution('2\\n1 1\\n3 4') == '2.13333333333333'\nassert solution('4\\n2\\n3') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.13333333333333\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.13333333333333\\n\", \"Expected output: 2.13333333333333\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n2') == '2.13333333333333'\nassert solution('5 3\\n2 4\\n3 2\\n4 1\\n5 4') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"2.13333333333333\\nimpossible\\n\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    4 4\n    2\n    ''') == '2.13333333333333'\n\nassert solution('''\n    3\n    4 4\n    1\n    ''') == 'impossible'\n\nassert solution('''\n    3\n    4 4\n    0\n    1\n    ''') == 'impossible'\n\nassert solution('''\n    4\n    4\n    1 2 3 4\n    ''') == '2.0'\n\nassert solution('''\n    4\n    4\n    1 2 3 4\n    ''') == 'impossible'\n\nassert solution('''\n    5\n    5\n    1 2 3 4 5\n    ''') == '2.88888888888889'\n\nassert solution('''\n    5\n    5\n    1 2 3 4 5\n    ''') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2.13333333333333\\n\"\nassert solution(\"4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"3\\n1 2\\n2 3\") == \"impossible\\n\"\nassert solution(\"5 3\\n1 2\\n2 3\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"impossible\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"impossible\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n1 3\\n1 4\\n4 3\\n5 4\\n1 4\\n\") == \"2.66666666666667\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n    3\n    ''') == 'impossible\\n'\n\nassert solution(r'''\n    3\n    ''') == 'impossible\\n'\n\nassert solution(r'''\n    3\n    ''') == 'impossible\\n'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1000000) == \"18\\n\"\nassert solution(1000000) == \"18\\n\"\nassert solution(1000000) == \"18\\n\"\nassert solution(1000000) == \"18\\n\"\nassert solution(1000000) == \"18\\n\"\nassert solution(1000000) == \"18\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(42) == \"18\" # Correct\nassert solution(500001) == \"19\" # Incorrect\nassert solution(7) == \"18\" # Correct\nassert solution(10) == \"19\" # Correct"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 2\nassert solution(3) == 13\nassert solution(4) == 59\nassert solution(5) == 593\nassert solution(6) == 5997"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n\") == \"18\\n\"\nassert solution(\"20\\n\") == \"25\\n\"\nassert solution(\"5\\n\") == \"3\\n\"\nassert solution(\"1000000\\n\") == \"1000000\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"18\" # Test 1"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"1\\n1 F hippie\\n1 M classicism programming\") == \"1\"\nassert solution(\"10\\n1 F hippie\\n1 M classicism programming\\n15 F baroque skiing\\n1 M baroque skiing\\n20 F baroque soccer\\n1 M baroque soccer\\n10 F baroque soccer\\n15 M classicism programming\\n1 M baroque soccer\") == \"1\"\nassert solution(\"10\\n1 F hippie\\n1 M classicism programming\\n15 F baroque skiing\\n1 M baroque skiing\\n20 F baroque soccer\\n1 M baroque soccer\\n10 F baroque soccer\\n15 M classicism programming\\n1 M baroque soccer\\n25 M baroque soccer\") == \"2\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"3\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"2\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"1\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"0\" # Correct solution\n\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"3\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"2\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"1\" # Correct solution\nassert solution(\"35 M classicism programming 0 M baroque skiing 43 M baroque chess 30 F baroque soccer\\n\") == \"0\" # Correct solution"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 M baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 F baroque chess\\n30 M baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 M baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nassert solution(\"6\\n50 M classicism programming\\n30 M baroque skiing\\n40 M baroque chess\\n30 F baroque soccer\\n\") == \"2\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\", \"Incorrect output. Expected: 3, Actual: \" + solution(input())\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''2\n1'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(3) == \"2\\n\"\nassert solution(4) == \"1\\n\"\nassert solution(5) == \"3\\n\"\nassert solution(6) == \"2\\n\"\nassert solution(7) == \"2\\n\"\nassert solution(8) == \"2\\n\"\nassert solution(9) == \"1\\n\"\nassert solution(10) == \"2\\n\"\nassert solution(11) == \"2\\n\"\nassert solution(12) == \"2\\n\"\nassert solution(13) == \"2\\n\"\nassert solution(14) == \"1\\n\"\nassert solution(15) == \"2\\n\"\nassert solution(16) == \"2\\n\"\nassert solution(17) == \"2\\n\"\nassert solution(18) == \"2\\n\"\nassert solution(19) == \"2\\n\"\nassert solution(20) == \"2\\n\"\nassert solution(21) == \"1\\n\"\nassert solution(22) == \"2\\n\"\nassert solution(23) == \"2\\n\"\nassert solution(24) == \"1\\n\"\nassert solution(25) == \"2\\n\"\nassert solution(26) == \"2\\n\"\nassert solution(27) == \"2\\n\"\nassert solution(28) == \"2\\n\"\nassert solution(29) == \"2\\n\"\nassert solution(30) == \"2\\n\"\nassert solution(31) == \"2\\n\"\nassert solution(32) == \"1\\n\"\nassert solution(33) == \"2\\n\"\nassert solution(34) == \"2\\n\"\nassert solution(35) == \"2\\n\"\nassert solution(36) == \"2\\n\"\nassert solution(37) == \"2\\n\"\nassert solution(38) == \"2\\n\"\nassert solution(39) == \"2\\n\"\nassert solution(40) == \"2\\n\"\nassert solution(41) == \"2\\n\"\nassert solution(42) == \"2\\n\"\nassert solution(43) == \"2\\n\"\nassert solution(44) == \"2\\n\"\nassert solution(45) == \"1\\n\"\nassert solution(46) == \"2\\n\"\nassert solution(47) == \"2\\n\"\nassert solution(48) == \"2\\n\"\nassert solution(49) == \"2\\n\"\nassert solution(50) == \"2\\n\"\nassert solution(51) == \"2\\n\"\nassert solution(52) == \"2\\n\"\nassert solution(53) == \"2\\n\"\nassert solution(54) == \"2\\n\"\nassert solution(55) == \"2\\n\"\nassert solution(56) == \"2\\n\"\nassert solution(57) == \"2\\n\"\nassert solution(58) == \"2\\n\"\nassert solution(59) == \"2\\n\"\nassert solution(60) == \"2\\n\"\nassert solution(61) == \"1\\n\"\nassert solution(62) == \"2\\n\"\nassert solution(63) == \"2\\n\"\nassert solution(64) == \"2\\n\"\nassert solution(65) == \"2\\n\"\nassert solution(66) == \"2\\n\"\nassert solution(67) == \"2\\n\"\nassert solution(68) == \"2\\n\"\nassert solution(69) == \"2\\n\"\nassert solution(70) == \"2\\n\"\nassert solution(71) == \"2\\n\"\nassert solution(72) == \"2\\n\"\nassert solution(73) == \"2\\n\"\nassert solution(74) == \"2\\n\"\nassert solution(75) == \"2\\n\"\nassert solution(76) == \"2\\n\"\nassert solution(77) == \"2\\n\"\nassert solution(78) == \"2\\n\"\nassert solution(79) == \"2\\n\"\nassert solution(80) == \""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"The solution should return the expected output\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5, \"Incorrect output\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 1 failed.\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 1\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == 1\nassert solution(\"3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\") == 3\nassert solution(\"5 1\\n6 1\\n5 1\\n6 1\\n5 1\\n6 1\") == 2\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 1"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4'\nassert solution('5 4\\n2 3\\n1 4\\n3 2\\n3 1\\n1 2') == '12'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the example inputs and outputs.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4', \"Expected output: 4, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"2\\n3 4\\n2 4\"\nassert solution(5) == \"1\\n3 4\"\nassert solution(10) == \"1\\n4 5\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 5\") == \"2\\n3 4\\n1 5\\n2 5\\n3 5\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\") == \"2\\n3 4\\n4 6\\n1 5\\n2 5\\n3 5\\n5 6\\n4 6\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 6\\n6 7\\n7 7\") == \"3\\n5 6\\n4 7\\n1 6\\n2 6\\n3 6\\n6 7\\n5 6\\n4 7\\n3 7\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output: {solution(sample_input)}\\nExpected: {sample_output}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == '2\\n3 4\\n2 4'\nassert solution(5) == '2\\n3 4\\n2 4'\nassert solution(6) == '2\\n3 4\\n2 4'\nassert solution(7) == '2\\n3 4\\n2 4'\nassert solution(8) == '2\\n3 4\\n2 4'\nassert solution(9) == '2\\n3 4\\n2 4'\nassert solution(10) == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"2\\n3 4\\n2 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\") == \"2\\n3 4\\n2 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n8 9\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"2 3\\n2 1\\n3 4\") == \"0\"\nassert solution(\"1 1\\n3 2\\n2 3\") == \"0\"\nassert solution(\"2 2\\n1 3\\n1 2\") == \"5\"\nassert solution(\"3 3\\n3 1\\n1 2\") == \"0\"\nassert solution(\"2 2\\n1 2\\n1 3\") == \"0\"\nassert solution(\"1 1\\n3 2\\n1 2\") == \"5\"\nassert solution(\"3 2\\n1 2\\n1 3\") == \"0\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 3\n2 1\n3 5\n7 2''') == 5\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == 0"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5 # your solution will return the correct output for this problem"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\\n\"\nassert solution(\"10 1\\n1 2\\n1 3\\n2 4\\n\") == \"0\\n\"\nassert solution(\"5 1\\n2 3\\n1 4\\n2 5\\n\") == \"2\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n4 7\") == 0\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n10 7\") == 14\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n10 7\") == 14"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n    \"\"\") == \"5\\n\"\n    assert solution(stdin=\"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    8 2\n    \"\"\") == \"0\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Solution does not match expected output.\\nInput: {input}\\nExpected Output: {expected}\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Solution should return 2, but returned {}\".format(solution())"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2\\n'\n\nsolution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''')"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\nassert solution('3 6 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '3'\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"6 4\\n1 C\\n2 W\\n3 C\") == \"SAFE\"\nassert solution(\"10 6\\n1 W\\n2 C\\n3 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"GHOST\", \"Your solution should return GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\\n\"\nassert solution(\"4 3\\n1 W\\n2 W\\n3 W\\n\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\\n\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\\n\") == \"GHOST\\n\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 3\\n3 W\\n2 W\\n1 W\\n1 C\\n1 W\\n2 W\\n3 W\\n4 W\\n5 W\\n5 C\\n6 C\\n7 C\\n8 C\\n9 C\\n10 C\\n11 C\\n12 C\\n13 C\\n14 C\\n15 C\\n16 C\\n17 C\\n18 C\\n19 C\\n20 C\\n21 C\\n22 C\\n23 C\\n24 C\\n25 C\\n26 C\\n27 C\\n28 C\\n29 C\\n30 C\\n31 C\\n32 C\\n33 C\\n34 C\\n35 C\\n36 C\\n37 C\\n38 C\\n39 C\\n40 C\\n41 C\\n42 C\\n43 C\\n44 C\\n45 C\\n46 C\\n47 C\\n48 C\\n49 C\\n50 C\\n51 C\\n52 C\\n53 C\\n54 C\\n55 C\\n56 C\\n57 C\\n58 C\\n59 C\\n60 C\\n61 C\\n62 C\\n63 C\\n64 C\\n65 C\\n66 C\\n67 C\\n68 C\\n69 C\\n70 C\\n71 C\\n72 C\\n73 C\\n74 C\\n75 C\\n76 C\\n77 C\\n78 C\\n79 C\\n80 C\\n81 C\\n82 C\\n83 C\\n84 C\\n85 C\\n86 C\\n87 C\\n88 C\\n89 C\\n90 C\\n91 C\\n92 C\\n93 C\\n94 C\\n95 C\\n96 C\\n97 C\\n98 C\\n99 C\\n100 C\\n101 C\\n102 C\\n103 C\\n104 C\\n105 C\\n106 C\\n107 C\\n108 C\\n109 C\\n110 C\\n111 C\\n112 C\\n113 C\\n114 C\\n115 C\\n116 C\\n117 C\\n118 C\\n119 C\\n120 C\\n121 C\\n122 C\\n123 C\\n124 C\\n125 C\\n126 C\\n127 C\\n128 C\\n129 C\\n130 C\\n131 C\\n132 C\\n133 C\\n134 C\\n135 C\\n136 C\\n137 C\\n138 C\\n139 C\\n140 C\\n141 C\\n142 C\\n143 C\\n144 C\\n145 C\\n146 C\\n147 C\\n148 C\\n149 C\\n150 C\\n151 C\\n152 C\\n153 C\\n154 C\\n155 C\\n156 C\\n157 C\\n158 C\\n159 C\\n160 C\\n161 C\\n162 C\\n163 C\\n164 C\\n165 C\\n166 C\\n167 C\\n168 C\\n169 C\\n170 C\\n171 C\\n172 C\\n173 C\\n174 C\\n175 C\\n176 C\\n177 C\\n178 C\\n179 C\\n180 C\\n181 C\\n182 C\\n183 C\\n184 C\\n1"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The given solution is incorrect. \\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 W\\n\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"10 1\\n0 C\\n1 C\\n2 C\\n3 C\\n4 C\\n5 C\\n6 C\\n7 C\\n8 C\\n9 C\\n10 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"5 10\\n0.10 0.20\\n0.20 0.30\\n0.30 0.40\\n0.40 0.50\") == \"2\\n\"\nassert solution(\"10 10\\n0.10 0.20\\n0.20 0.30\\n0.30 0.40\\n0.40 0.50\\n0.50 0.60\\n0.60 0.70\\n0.70 0.80\\n0.80 0.90\\n0.90 1.00\") == \"2\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"3 5\\n0.00 1.00 0.50 0.50 0.50\") == \"no fika\\n\"\nassert solution(\"4 10\\n0.00 1.00 0.50 0.50 0.50 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 0.25 "
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    0.00 2.00\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 7\n    0.10 1.00\n    0.20 0.50\n    0.30 0.10\n    0.40 0.05\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    10 10\n    0.01 0.01\n    0.02 0.02\n    0.03 0.03\n    0.04 0.04\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    2 3\n    0.10 0.50\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    5 7\n    0.10 0.50\n    0.20 0.50\n    0.30 0.50\n    0.40 0.50\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    10 10\n    0.01 0.01\n    0.02 0.02\n    0.03 0.03\n    0.04 0.04\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1.00 2.00\n    1.00 3.00\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    3 1\n    1.00 2.00\n    1.00 3.00\n    1.00 4.00\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    2 4\n    0.00 0.50\n    0.00 1.00\n    0.00 1.50\n    0.00 2.00\n    \"\"\"\n) == \"no fika\"\n\nassert solution(\n    \"\"\"\n    2 4\n    0.00 0.50\n    0.00 1.00\n    0.00 1.50\n    0.00 2.00\n    0.01 2.50\n    0.02 3.00\n    \"\"\"\n) == \"no fika\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.01\n\"\"\") == \"no fika\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.01\n\"\"\") == \"no fika\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.01\n\"\"\") == \"no fika\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.00\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n2 3\n0.00 2.01\n\"\"\") == \"no fika\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The code is incorrect.\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\", \"Output should be 2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 10\nassert solution('3\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 20\nassert solution('4\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 30\nassert solution('5\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 40\nassert solution('6\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 50\nassert solution('7\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 60\nassert solution('8\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 70\nassert solution('9\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 80\nassert solution('10\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 90\nassert solution('11\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 100\nassert solution('12\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 110\nassert solution('13\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 120\nassert solution('14\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 130\nassert solution('15\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 140\nassert solution('16\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 150\nassert solution('17\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 160\nassert solution('18\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 170\nassert solution('19\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 180\nassert solution('20\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 190\nassert solution('21\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 200\nassert solution('22\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 210\nassert solution('23\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 220\nassert solution('24\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 230\nassert solution('25\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 240\nassert solution('26\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 250\nassert solution('27\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 260\nassert solution('28\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == 270\nassert solution('29\\n0 0\\n10 0\\"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\\n\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10', \"The minimum distance between the two dogs during their walks should be 10.\"\n\nfrom typing import List"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for example {sample_input}\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"10\", \"The solution is incorrect.\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\nfor _ in range(t):\n    n = int(input())\n    cars = [list(map(int, input().split())) for _ in range(n)]\n    time_limit = 3\n    i = 0\n    while i < n:\n        car_arrival = cars[i]\n        driver_arrival = cars[i+1]\n        driver_departure = cars[i+2]\n        distance = driver_arrival[0] - driver_departure[0]\n        if distance <= 3:\n            i += 3\n        else:\n            i += 2\n\nprint(cars[0][2])"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"9 4\\nW 10 0\\nW 11 15\\nE 17 4\") == \"4\\n\"\nassert solution(\"10 4\\nW 10 0\\nW 12 15\\nE 17 4\") == \"8\\n\"\nassert solution(\"11 4\\nW 10 0\\nW 13 15\\nE 17 4\") == \"12\\n\"\nassert solution(\"12 4\\nW 10 0\\nW 14 15\\nE 17 4\") == \"16\\n\"\nassert solution(\"13 4\\nW 10 0\\nW 15 15\\nE 17 4\") == \"20\\n\"\nassert solution(\"14 4\\nW 10 0\\nW 16 15\\nE 17 4\") == \"24\\n\"\nassert solution(\"15 4\\nW 10 0\\nW 17 15\\nE 17 4\") == \"28\\n\"\nassert solution(\"16 4\\nW 10 0\\nW 18 15\\nE 17 4\") == \"32\\n\"\nassert solution(\"17 4\\nW 10 0\\nW 19 15\\nE 17 4\") == \"36\\n\"\nassert solution(\"18 4\\nW 10 0\\nW 20 15\\nE 17 4\") == \"40\\n\"\nassert solution(\"19 4\\nW 10 0\\nW 21 15\\nE 17 4\") == \"44\\n\"\nassert solution(\"20 4\\nW 10 0\\nW 22 15\\nE 17 4\") == \"48\\n\"\nassert solution(\"21 4\\nW 10 0\\nW 23 15\\nE 17 4\") == \"52\\n\"\nassert solution(\"22 4\\nW 10 0\\nW 24 15\\nE 17 4\") == \"56\\n\"\nassert solution(\"23 4\\nW 10 0\\nW 25 15\\nE 17 4\") == \"60\\n\"\nassert solution(\"24 4\\nW 10 0\\nW 26 15\\nE 17 4\") == \"64\\n\"\nassert solution(\"25 4\\nW 10 0\\nW 27 15\\nE 17 4\") == \"68\\n\"\nassert solution(\"26 4\\nW 10 0\\nW 28 15\\nE 17 4\") == \"72\\n\"\nassert solution(\"27 4\\nW 10 0\\nW 29 15\\nE 17 4\") == \"76\\n\"\nassert solution(\"28 4\\nW 10 0\\nW 30 15\\nE 17 4\") == \"80\\n\"\nassert solution(\"29 4\\nW 10 0\\nW 31 15\\nE 17 4\") == \"84\\n\"\nassert solution(\"30 4\\nW 10 0\\nW 32 15\\nE 17 4\") == \"88\\n\"\nassert solution(\"31 4\\nW 10 0\\nW 33 15\\nE 17 4\") == \"92\\n\"\nassert solution(\"32 4\\nW 10 0\\nW 34 15\\nE 17 4\") == \"96\\n\"\nassert solution(\"33 4"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"W 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Per is repairing roads.\\nThe job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane.\\n\\nNo car drives before being given a \\\"go\\\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least $3$ seconds between each other.\\n\\nFor example, if cars A and B arrive at the west endpoint at second $10$, Per can let them go at earliest second $10$ and $13$ in the order they arrived. If it, in this example, takes $8$ seconds to pass and car C arrives at the east endpoint at second $17$, then car C has to wait $4$ seconds until Per lets it go at second $21$.\") == 0\nassert solution(\"Per is repairing roads.\\nThe job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane.\\n\\nNo car drives before being given a \\\"go\\\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least $3$ seconds between each other.\\n\\nFor example, if cars A and B arrive at the west endpoint at second $10$, Per can let them go at earliest second $10$ and $13$ in the order they arrived. If it, in this example, takes $8$ seconds to pass and car C arrives at the east endpoint at second $17$, then car C has to wait $4$ seconds until Per lets it go at second $21$.\") == 1"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\n\nt = int(input())\nn = int(input())\n\nfor _ in range(n):\n    a, r = map(int, input().split())\n    if a < 86400 or r < 3600:\n        print(\"invalid input\")\n        continue\n\n    if a < r:\n        print(0)\n        continue\n\n    for i in range(t):\n        if i > r:\n            break\n        if i % 2 == 0:\n            a -= 3\n        else:\n            a -= 2\n\n    if a < r:\n        print(1)\n    else:\n        print(0)\n\nassert solution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == 0\n\nsolution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\")\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\\n\"\nassert solution(\"2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n7 11\\n\") == \"5\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 4) == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3\\n'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    ''') == '3\\n'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"\"\"3\\n\"\"\"\nassert solution(stdin=open('input.txt', 'r')) == \"\"\"3\\n\"\"\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'impossible\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible\\n'\nassert solution('5 4\\n2 2 2\\n1 2 1') == '1A2B1\\n'\nassert solution('2 3\\n1 1 1') == '1AB\\n'\nassert solution('2 4\\n2 2 2') == '2ABC\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n5 3 3\") == \"4\\n5\\n4\\n\"\nassert solution(\"4 4\\n5 3 4\") == \"impossible\\n\"\nassert solution(\"4 4\\n5 3 1\") == \"impossible\\n\"\nassert solution(\"4 4\\n5 3 2\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'\nassert solution('4 4\\n10 3 3\\n') == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"  # test case 1"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n10 3 3\\n') == 'impossible'\n\nassert solution('4 4\\n1 4\\n') == 'A 2\\nC 3\\nA 3\\nA 4\\nC 1\\nA 4\\nA 3\\nC 3\\nA 2\\nC 2\\nA 2\\n'\n\nassert solution('3 4\\n1 4\\n') == 'A 2\\nA 3\\nA 4\\nC 1\\nA 4\\nA 3\\nA 3\\nA 3\\nA 2\\nA 2\\nA 2\\n'\n\nassert solution('4 3\\n3 1\\n') == 'impossible'\n\nassert solution('4 3\\n2 2\\n') == 'impossible'\n\nassert solution('3 4\\n4 4\\n') == 'impossible'\n\nassert solution('3 3\\n3 4\\n') == 'impossible'\n\nassert solution('4 3\\n1 3\\n') == 'impossible'\n\nassert solution('3 3\\n4 3\\n') == 'impossible'\n\nassert solution('2 4\\n2 3\\n') == 'impossible'\n\nassert solution('3 4\\n1 2\\n') == 'impossible'\n\nassert solution('4 4\\n1 2\\n') == 'impossible'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\", \"Test failed\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nABSENT\\nAND\\nLIE\\nLIFE\\nBUT\\nNO\\nVOWELS\") == \"PRESENT BUT NO VOWELS\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n10\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n5\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n3\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n22\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n12\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt', 'r')) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\", \"Please provide the correct solution.\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=f'''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == 12, \"Invalid result\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nprint(\"Test passed\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected 12, got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output should be 12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nprint(\"All tests passed.\")"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The solution is incorrect\"\nprint(\"The solution is correct\")"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '220'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '260'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 3 4 5 6 7 8 9 10 11 12 13') == '300'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 4 5 6 7 8 9 10 11 12 13 14') == '340'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 5 6 7 8 9 10 11 12 13 14 15') == '380'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 6 7 8 9 10 11 12 13 14 15 16') == '420'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 7 8 9 10 11 12 13 14 15 16 17') == '460'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 8 9 10 11 12 13 14 15 16 17 18') == '500'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 9 10 11 12 13 14 15 16 17 18 19') == '540'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 10 11 12 13 14 15 16 17 18 19 20') == '580'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 11 12 13 14 15 16 17 18 19 20 21') == '620'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 12 13 14 15 16 17 18 19 20 21 22') == '660'\nassert solution('65\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 13 14 15 16 17 18 19 20 21 22 23') == '700'\nassert solution('6"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"70\", \"The solution is not correct\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"70\", \"Please implement the solution to test the correctness of the given problem.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"50\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '70', \"The solution is incorrect.\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70\\n'\nassert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10\\n7\\n8\\n7\\n', 'Expected output not found.'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\nassert solution(\"5\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"5\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"1\\n2\\n3\\n4\\n5\\n6\"\nassert solution(\"5\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"1\\n2\\n3\\n4\\n5\\n6\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"1 2 3\\n4 -1\") == \"2\"\nassert solution(\"1 2 3\\n4 -1\") == \"2\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n2\"\nassert solution(\"2 3 5\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\") == \"2\\n1\"\nassert solution(\"3 4 5\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\") == \"2\\n1\"\nassert solution(\"3 4 5\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\") == \"4\\n3\"\nassert solution(\"2 3 4\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\") == \"2\\n1\"\nassert solution(\"2 2 3\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\") == \"3\\n2\"\nassert solution(\"2 2 3\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\\n5 0\\n5 1\\n5 2\\n5 3\") == \"5\\n4\"\nassert solution(\"1 1 2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\\n5 0\\n5 1\\n5 2\\n5 3\\n6 0\\n6 1\\n6 2\\n6 3\\n7 0\\n7 1\\n7 2\\n7 3\") == \"5\\n4\"\nassert solution(\"2 3 3\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\\n5 0\\n5 1\\n5 2\\n5 3\\n6 0\\n6 1\\n6 2\\n6 3\\n7 0\\n7 1\\n7 2\\n7 3\\n8 0\\n8 1\\n8 2\\n8 3\") == \"7\\n6\"\nassert solution(\"2 2 2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n3 3\\n4 0\\n4 1\\n4 2\\n4 3\\n5 0\\n5 1\\n5 2\\n5 3\\n6 0\\n6 1\\n6"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6\\n'\n\nassert solution('''\n10 5 10\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n1 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 1 1\n3 3 3\n3 4 4\n3 5 5\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n3 1 1\n4 4 4\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n4 1 1\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n5 10 10\n5 1 1\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n6 10 10\n6 1 1\n7 7 7\n7 8 8\n7 9 9\n7 10 10\n7 1 1\n8 8 8\n8 9 9\n8 10 10\n8 1 1\n9 9 9\n9 10 10\n9 1 1\n10 10 10\n10 1 1\n1 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 1 1\n3 3 3\n3 4 4\n3 5 5\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n3 1 1\n4 4 4\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n4 1 1\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 9\n5 10 10\n5 1 1\n6 6 6\n6 7 7\n6 8 8\n6 9 9\n6 10 10\n6 1 1\n7 7 7\n7 8 8\n7 9 9\n7 10 10\n7 1 1\n8 8 8\n8 9 9\n8 10 10\n8 1 1\n9 9 9\n9 10 10\n9 1 1\n10 10 10\n10 1 1\n1 1 1\n2 2 2\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n2 8 8\n2 9 9\n2 10 10\n2 1 1\n3 3 3\n3 4 4\n3 5 5\n3 6 6\n3 7 7\n3 8 8\n3 9 9\n3 10 10\n3 1 1\n4 4 4\n4 5 5\n4 6 6\n4 7 7\n4 8 8\n4 9 9\n4 10 10\n4 1 1\n5 5 5\n5 6 6\n5 7 7\n5 8 8\n5 9 "
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"3 2 1\\n-1 1\\n-1 2\\n-1 3\\n1 0\\n0 2\\n1 2\\n1 3\\n2 1\\n2 3\\n3 2\\n4 2\\n5 3\\n6 3\\n7 2\") == \"2\"\nassert solution(\"2 3\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 3\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n        2 4 7\n            -2 0\n        0 -1\n            -2 1\n            1 0\n            2 1\n            2 3\n            -2 0\n        0 -1\n            -2 1\n            1 0\n            2 1\n            2 3\n        ''') == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == '6'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"The output is '{solution(input_string)}', but the expected output is '{expected_output}'.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('1 2 3 4') == '2'\nassert solution('2 1 3 4') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 0 0 0') == '1'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == 3, \"Test case 1 failed\"\nassert solution(\"3 1 3 40\") == 3, \"Test case 2 failed\"\nassert solution(\"3 1 2 40\") == 3, \"Test case 3 failed\"\nassert solution(\"3 1 1 40\") == 3, \"Test case 4 failed\"\nassert solution(\"3 1 0 40\") == 3, \"Test case 5 failed\"\nassert solution(\"3 1 1 30\") == 3, \"Test case 6 failed\"\nassert solution(\"3 1 2 30\") == 3, \"Test case 7 failed\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3\\n'\nassert solution('1 1 4 40') == '3\\n'\nassert solution('1 1 4 41') == '2\\n'\nassert solution('3 1 4 40 0 3 2') == '1\\n'\nassert solution('3 1 4 40 100 3 2') == '4\\n'\nassert solution('3 1 4 40 90 3 2') == '4\\n'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"3.5 1.2 4.8 50\") == \"2\\n\"\nassert solution(\"1.2 3.5 4.8 60\") == \"3\\n\"\nassert solution(\"3 1 4 60\") == \"3\\n\"\nassert solution(\"3.1 1.2 4.8 70\") == \"2\\n\"\nassert solution(\"3.1 1.2 4.8 100\") == \"3\\n\"\nassert solution(\"3.1 1.2 4.8 0\") == \"Error: Invalid input\\n\"\nassert solution(\"\") == \"Error: Invalid input\\n\"\nassert solution(\"3 1 4 40 a\") == \"Error: Invalid input\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"2 5 8 6\") == \"4\\n\"\nassert solution(\"3 2 3 6\") == \"5\\n\"\nassert solution(\"3 1 3 5\") == \"6\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect solution\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"0 0 0\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n\") == \"0\\n\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n0 0 0\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n\") == \"99\\n3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"99\\n3\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0, \"your solution is incorrect\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99\\n3\\n'\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'\nassert solution('2 445\\n3 455\\n7 565\\n10 435\\n10 775') == '0'\nassert solution('10 675\\n1 425\\n1 555\\n5 555\\n6 425\\n7 555\\n8 555\\n9 425\\n10 675') == '0'\nassert solution('2 1440\\n100 820 440\\n100 760 430\\n100 920 -1\\n100 0 700 660 710\\n100 760 870 660 740\\n100 620 0 600 940\\n100 600 680 0 690\\n100 830 780 730 0\\n100') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('6 72\\n30 12 60\\n40 20 65\\n25 15 70\\n50 30 80\\n65 45 90\\n20 10 75\\n30 30 0\\n10 30 0\\n30 10 30\\n20 30 10\\n10 10 30\\n0 10 20\\n20 10 0\\n10 0 30\\n0 0 20\\n') == '0\\n\\n'\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('6 72\\n30 12 60\\n40 20 65\\n25 15 70\\n50 30 80\\n65 45 90\\n20 10 75\\n30 30 0\\n10 30 0\\n30 10 30\\n20 30 10\\n10 10 30\\n0 10 20\\n20 10 0\\n10 0 30\\n0 0 20\\n') == '0\\n\\n'\nassert solution('1 0\\n10 0\\n0 10\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n\\n'\nassert solution('1 10\\n10 10\\n0 10\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n\\n'\nassert solution('1 5\\n10 5\\n0 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n\\n'\nassert solution('1 5\\n10 5\\n0 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n\\n'\nassert solution('1 5\\n10 5\\n0 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0\\n\\n'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '2\\n3 4\\n4 2'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '3\\n4 1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '2\\n4 3'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n') == '1\\n2 3'\nassert solution('2\\n2\\n4\\n4\\n8\\n8\\n') == '4\\n5 6'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"\n    4\n    1 2\n    2 3\n    3 4\n    \"\"\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"2\n3 4\n4 2\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample_input: {sample_input}, expected {sample_output}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected: '{output}', but got: '{solution(input())}'\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"5\\n1 2\\n6 3\\n4 5\"\nassert solution(\"10\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 6\\n5 7\\n5 8\\n5 9\\n6 7\\n6 8\\n6 9\\n7 8\\n7 9\\n8 9\\n\") == \"5\\n1 1\\n2 2\\n4 5\\n\"\nassert solution(\"10\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 6\\n5 7\\n5 8\\n5 9\\n6 7\\n6 8\\n6 9\\n7 8\\n7 9\\n8 9\\n\") == \"5\\n1 1\\n2 2\\n4 5\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\nassert solution(\"4\\n2 2\\n4 1\\n1 1\") == \"12\\n12.00000\\n9.0\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\") == \"18.0000\"\nassert solution(\"6\\n1 1\\n2 2\\n3 2\\n4 1\") == \"27.0000\"\nassert solution(\"7\\n1 1\\n2 2\\n3 2\\n4 1\") == \"36.0000\"\nassert solution(\"8\\n1 1\\n2 2\\n3 2\\n4 1\") == \"45.0000\"\nassert solution(\"9\\n1 1\\n2 2\\n3 2\\n4 1\") == \"54.0000\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == 9.0\nassert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == 12\nassert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == 9.0\nassert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == 12\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('2\\n3 2\\n1 1\\n4 1') == '10.0000\\n12.00000\\n10.0'\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1') == '11.0000\\n12.00000\\n11.0'\nassert solution('6\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1') == '12.0000\\n12.00000\\n12.0'\nassert solution('7\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1') == '13.0000\\n12.00000\\n13.0'\nassert solution('8\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1') == '14.0000\\n12.00000\\n14.0'\nassert solution('9\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1') == '15.0000\\n12.00000\\n15.0'\nassert solution('10\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1') == '16.0000\\n12.00000\\n16.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\\n12\\n12.0\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '9.0000\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test case failed: solution() function should return {output} but returned {solution(stdin)}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12.0\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"12\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"255\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'2\\n') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tN = int(stdin.strip())\\n\\tfor i in range(N):\\n\\t\\tST A\\n\\t\\tST X\\n\\t\\tPH A\\n\\t\\tPH X\\n\\t\\tAD\\n\\t\\tPL Y\\n\\t\\tDI Y\\n\\t\\treturn str(N)\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\", \"The solution does not meet the expected output.\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(42) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(65536) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(128) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(0) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(16) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI Y\\n\"\nassert solution(255) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == '2'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 4\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 1\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n\nassert solution(\n    '''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '1'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str=\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nprint(\"All tests passed.\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"\\n1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2\nprint(\"Test passed.\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == '2'\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba\\nNONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> how about this aaaaaaabbbbbbbbbbbbbbbbba\\n') == 'abaaba\\nabbbbbbbbbbbbbbbbba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n') == 'a\\nNONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba\\nNONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n') == 'a\\nNONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n') == 'a\\nNONE'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nA -> bSb\\nA -> a\\nA -> b\\nA -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba\\nNONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"abaaba\", \"Please provide the correct input\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S ->\n    ''') == 'abaaba'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S ->\n    ''') == 'NONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S ->\n    ''') == 'abbbbbbbbbbbbbbbbba'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S ->\n    ''') == 'a'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S ->\n    ''') == 'def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match!\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abaaba\"\nassert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"NONE\"\nassert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n\") == \"a\"\nassert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> even a single a or b is a palindrome\\n\") == \"def solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"abaaba\", \"The output should be 'abaaba'.\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\ns -> aSa\\ns -> bSb\\ns -> a\\ns -> b\\ns -> \\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'abaaba'\nassert solution(open('sample_input.txt', 'r')) == 'abaaba'\nassert solution(open('sample_output.txt', 'r')) == 'abaaba'\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n4\\n0\\n2\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"5\\n4\\n0\\n2\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n6 7 8 9 10\") == \"10\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n4 5 0 2\\n1 3 7\\n2 0\\n4') == 4, \"The minimum possible sum of disparities for partitioning the shipments into two groups is 4.\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\", \"Expected 4, got {}\".format(solution())"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4\nassert solution(\"10\\n10 0\\n5\") == 10\nassert solution(\"10\\n10 1\\n5\") == 10\nassert solution(\"10\\n10 2\\n5\") == 10\nassert solution(\"10\\n10 3\\n5\") == 10\nassert solution(\"10\\n10 4\\n5\") == 10\nassert solution(\"5\\n10 0\\n5\") == 10\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5 0 2\\n1 3 7\\n2 0\\n4\") == 4, \"Testcase 1 failed\"\nassert solution(\"5\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 2 failed\"\nassert solution(\"4\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 3 failed\"\nassert solution(\"3\\n1 0 1\\n1 0 1\\n0 0 0\") == 6, \"Testcase 4 failed\"\nassert solution(\"2\\n1 0\\n0 1\\n1 1\") == 2, \"Testcase 5 failed\"\nassert solution(\"5\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 6 failed\"\nassert solution(\"4\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 7 failed\"\nassert solution(\"4\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 8 failed\"\nassert solution(\"3\\n1 0 1\\n1 0 1\\n0 0 0\") == 6, \"Testcase 9 failed\"\nassert solution(\"2\\n1 0\\n0 1\\n1 1\") == 2, \"Testcase 10 failed\"\nassert solution(\"5\\n1 0 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == 12, \"Testcase 11 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4\\n'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nSWSB\\nWSBB\\nGWSB\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nWSBB\\nWWSB\\nGWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nWSBB\\nWWSB\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nWSBB\\nWWSB\\nWWSB\\nWWSB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSB\\nWSBB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\nWWSB\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWBWG\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWBWG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\\nWBWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBBWG') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBWGW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG') == 'GO FOR IT'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBC\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWSBB\\nWSBB\\nWSBB') == 'GO FOR IT'\nassert solution('1 1\\n2 2\\n3 3\\n4 4') == 'NO WAY'\nassert solution('2 2\\n2 2\\n2 2\\n2 2') == 'NO WAY'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == 'NO WAY'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'NO WAY'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\n') == 'NO WAY'\nassert solution('2 3\\n4 4\\nS\\nS\\nS\\nS\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nW\\nW\\nW\\nW\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\n') == 'NO WAY'\nassert solution('2 3\\n4 4\\nS\\nS\\nS\\nS\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nW\\nW\\nW\\nW\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\n') == 'NO WAY'\nassert solution('2 3\\n4 4\\nS\\nS\\nS\\nS\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nW\\nW\\nW\\nW\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\n') == 'NO WAY'\nassert solution('2 3\\n4 4\\nS\\nS\\nS\\nS\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nW\\nW\\nW\\nW\\n') == 'SUCCESS'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()}, expected {expected}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"5 900\\n400 300 200\") == \"1900\"\nassert solution(\"4 900\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"2 900\\n800 700 400 300 200\") == \"1900\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2243', 'Test failed'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2243, \"Test failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass\\n\\ndef solution(stdin: str) -> str: \\n    pass"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'yes\\n', \"Your code is not correct.\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of elements in the base set: \")) == \"yes\", \"Test failed.\"\nassert solution(input(\"Enter the number of elements in the base set: \")) == \"no\", \"Test failed.\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\nno\\nno\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n\"\"\") == \"no\\nyes\\n\"\n\nassert solution(\"\"\"\n10 4\n? 1 3\n\"\"\") == \"no\\n\"\n\nassert solution(\"\"\"\n10 4\n\"\"\") == \"\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    10 5 4 8 3\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10 5 4 8 3\\n') == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(5) == 2\nassert solution(10) == 5\nassert solution(20) == 5\nassert solution(25) == 10"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2\nassert solution(2) == 4\nassert solution(3) == 5\nassert solution(4) == 5\nassert solution(5) == 5"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Test case failed\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1083\"  # example input\n\nfrom functools import lru_cache"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1 127\n    \"\"\"\n) == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\"\nassert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\"\nassert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\"\nassert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\"\nassert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\"\nassert solution(input()) == \"2.0000000000\\n\", \"Incorrect Answer\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Solution does not match the expected output. Solution: '{solution(input_string)}', Expected Output: '{expected_output}'\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.0000000000\\n\", \"Expected output not found.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\nNow! 4 times\\n\\n\\nNow! 4 times'\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str: pass\", \"Incorrect answer\"\n\nassert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str: pass\", \"Incorrect answer\"\n\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str: pass\", \"Incorrect answer\"\n\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str: pass\", \"Incorrect answer\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African? 1\\nWhat is the air speed velocity of an unladen swallow? African?\") == 1.0"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0000000000"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"Test case 1\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Test case 1 failed\"\n\nassert solution(input()) == \"2.0000000000\", \"Test case 2 failed\"\n\nassert solution(input()) == \"1.0000000000\", \"Test case 3 failed\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2.0000000000'\nprint('All tests passed')"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for input: {sample_input} and expected output: {expected_output}\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 1\\nmonkey 1 lion\\npenguin 2 monkey\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"5 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 4 dog\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 4 dog\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 4\\nmonkey 2 lion penguin\\nlion 3 monkey\\npenguin 1 monkey\\nmonkey 2 lion\") == \"IMPOSSIBLE\"\nassert solution(\"3 5\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\\nmonkey 2 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 3\\nmonkey 1 lion\\nmonkey 2 lion\\nmonkey 3 lion\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 5\\nmonkey 2 lion\\nmonkey 3 lion\\nmonkey 4 lion\\nmonkey 5 lion\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 1 lion penguin\\nlion 2 monkey penguin lion\\npenguin 2 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 3 lion penguin\\nlion 4 monkey penguin lion\\npenguin 2 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 3 lion penguin\\nlion 5 monkey penguin lion\\npenguin 2 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 3 lion penguin\\nlion 5 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 3 lion penguin\\nlion 5 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"5 3\\ncat dog hamster\\ncat dog hamster\\nnail butterfly\\nairplane plane\\nplane plane plane\") == \"POSSIBLE\"\nassert solution(\"3 4\\nbird\\ncat dog hamster\\ncat dog hamster\\nbird\\ncat dog hamster\\ncat dog hamster\") == \"FALSE ALARM\"\n\nfrom typing import List"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"POSSIBLE\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'triple correlation 4(1)4(3)3 found\\n', \"Your implementation is incorrect!\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 0(1)3(4)2 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 0(1)3(4)2 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'random sequence'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(100) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100) == \"triple correlation 4(1)4("
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n\") == \"random sequence\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 5"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\n\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"random sequence\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\n\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\n\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 "
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 40.5, \"Incorrect output\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n39\\n10\\n40\\n') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n40\\n100\\n400\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"5 2\\n10\\n50\") == \"50.0\"\nassert solution(\"1 1\\n100\") == \"100.0\"\nassert solution(\"5 2\\n1\\n2\") == \"0.0\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 40.5, \"Your solution is incorrect. Please check the example provided in the prompt.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '40.5'  # Example Output\n\nfrom typing import List"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"40.5\"\nprint(\"All tests pass.\")\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"40.5\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"2008\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\" # Wrong Output"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Impossible\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == 'impossible'\nassert solution('4 0 2\\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 0 1\n    N 1 2\n    C 1 2\n    N 1 3\n    C 1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    2 3 4\n    A 0 1\n    A 2 3\n    A 2 4\n    A 4 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 7 8\n    C 1 1\n    C 3 4\n    C 4 6\n    C 2 3\n    C 5 6\n    C 5 7\n    \"\"\"\n) == \"7\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\" # Change the solution as per the problem statement"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\"\nassert solution(open(\"sample_input_1.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"3\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(')')) == 10, \"Failed for the given input.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"()\") == 10\nassert solution(\"())\") == 10\nassert solution(\"((()\")) == 10\nassert solution(\"(()()\")) == 10\nassert solution(\"(()()))\") == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\") == 13\nassert solution(\")()\") == 12\nassert solution(\"(a)\") == 3\nassert solution(\"()()\") == 1\nassert solution(\"((a)b)\") == 15"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('())') == 10\nassert solution('((()') == 10\nassert solution(')()') == 10\nassert solution('(())') == 0"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n())\\n((()()\\n)\") == 10, \"Test Case 1 failed\"\nassert solution(\"3\\n()))\\n((()()\\n\")) == 10, \"Test Case 2 failed\"\nassert solution(\"3\\n((()))\\n(()\")) == 10, \"Test Case 3 failed\"\nassert solution(\"3\\n(()()\\n()))\\n(())\") == 10, \"Test Case 4 failed\"\nassert solution(\"3\\n(())\\n(()()\\n\")) == 10, \"Test Case 5 failed\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"())\") == 10, \"Test failed.\"\nassert solution(\"((())\") == 10, \"Test failed.\"\nassert solution(\")()()\") == 0, \"Test failed.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == '10'"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, \"())\\n((()\\n)()\") == 10, \"Error: Testcase 1\"\nassert solution(3, \"())\\n((()\\n)()\") == 10, \"Error: Testcase 2\"\nassert solution(3, \"())\\n((()\\n)()\") == 10, \"Error: Testcase 3\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n())\\n((()()\\n)') == 10"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input {input()} doesn't match the expected output. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"85293\\n\", \"The minimum UW distance that can be achieved between an alien and human system should be 85293.\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(377, 'a') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Output should be 5, but got: {}\".format(solution())"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output\nprint(\"Correct!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == 5"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5, \"The correct output is not correct\"\nassert solution(\"4 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 0, \"The correct output is not correct\"\nassert solution(\"4 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n3 5\\n4 5\\n5 5\") == 11, \"The correct output is not correct\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\" + \"5\\n\" + \"5\\n\" + \"5\\n\" + \"5\\n\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100\nassert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n5\") == 5100\nassert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100\nassert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n5\") == 5100\nassert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n5\\n10000 cat mouse\") == 10000\nassert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n5\\n10000 cat mouse\\n5000 cat mouse\\n10000 cat mouse\\n15000 cat mouse\\n20000 cat mouse\\n25000 cat mouse\\n30000 cat mouse\\n\") == 10000"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5100\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\\n\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5100\\n\", \"Expected output: '5100'\\nGot: '{}'\\n\".format(solution(stdin))"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100\\n'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100\\n'\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=str) == expected, f\"Test failed for {stdin}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output\n\ninput_data = \"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\"\n\nexpected_output = \"\"\"\n6\n1\n2\n3\n1\n4\n5\n\"\"\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output:\\n6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nprint('Test Passed!')"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\n\nsolution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == expected_output, f\"Your solution is wrong. Expected {expected_output}, but got {solution_input}\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nassert solution(\"2 100000\\n1 2 3 4 5\\n2\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"0\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == 10\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n3 1 R 2') == 5\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('2 10\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '20'\nassert solution('2 10\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '50'\nassert solution('2 10\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '100'\nassert solution('2 10\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '150'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected: 1\\nActual: \" + solution(stdin)"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Output: {solution(input)}, Expected: {expected}\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please provide the expected output: {expected_output}\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"Incorrect output: expected 1, got {}\".format(solution())"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.962962962963, \"Incorrect answer\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\"\nassert solution(\"6\\n\") == \"0.837037037037\\n\"\nassert solution(\"8\\n\") == \"0.703703703704\\n\"\nassert solution(\"10\\n\") == \"0.5625\\n\"\nassert solution(\"12\\n\") == \"0.5625\\n\"\nassert solution(\"14\\n\") == \"0.4375\\n\"\nassert solution(\"16\\n\") == \"0.4375\\n\"\nassert solution(\"18\\n\") == \"0.3125\\n\"\nassert solution(\"20\\n\") == \"0.3125\\n\"\nassert solution(\"22\\n\") == \"0.21875\\n\"\nassert solution(\"24\\n\") == \"0.21875\\n\"\nassert solution(\"26\\n\") == \"0.125\\n\"\nassert solution(\"28\\n\") == \"0.125\\n\"\nassert solution(\"30\\n\") == \"0.09375\\n\"\nassert solution(\"32\\n\") == \"0.09375\\n\"\nassert solution(\"34\\n\") == \"0.0625\\n\"\nassert solution(\"36\\n\") == \"0.0625\\n\"\nassert solution(\"38\\n\") == \"0.0625\\n\"\nassert solution(\"40\\n\") == \"0.03125\\n\"\nassert solution(\"42\\n\") == \"0.03125\\n\"\nassert solution(\"44\\n\") == \"0.03125\\n\"\nassert solution(\"46\\n\") == \"0.015625\\n\"\nassert solution(\"48\\n\") == \"0.015625\\n\"\nassert solution(\"50\\n\") == \"0.015625\\n\"\nassert solution(\"52\\n\") == \"0.015625\\n\"\nassert solution(\"54\\n\") == \"0.015625\\n\"\nassert solution(\"56\\n\") == \"0.0078125\\n\"\nassert solution(\"58\\n\") == \"0.0078125\\n\"\nassert solution(\"60\\n\") == \"0.0078125\\n\"\nassert solution(\"62\\n\") == \"0.0078125\\n\"\nassert solution(\"64\\n\") == \"0.0078125\\n\"\nassert solution(\"66\\n\") == \"0.0078125\\n\"\nassert solution(\"68\\n\") == \"0.0078125\\n\"\nassert solution(\"70\\n\") == \"0.0078125\\n\"\nassert solution(\"72\\n\") == \"0.0078125\\n\"\nassert solution(\"74\\n\") == \"0.0078125\\n\"\nassert solution(\"76\\n\") == \"0.0078125\\n\"\nassert solution(\"78\\n\") == \"0.0078125\\n\"\nassert solution(\"80\\n\") == \"0.0078125\\n\"\nassert solution(\"82\\n\") == \"0.0078125\\n\"\nassert solution(\"84\\n\") == \"0.0078125\\n\"\nassert solution(\"86\\n\") == \"0.0078125\\n\"\nassert solution(\"88\\n\") == \"0.0078125\\n\"\nassert solution(\"90\\n\") == \"0.0078125\\n\"\nassert solution(\"92\\n\") == \"0.0078125\\n\"\nassert solution(\"94\\n\") == \"0.0078125\\n\"\nassert solution(\"96\\n\") == \""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"0.962962962963\", \"The expected output is not correct.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.962962962963\", \"Your code is not correct.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 0.962962962963\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"0.963\"\nassert solution(5) == \"0.963\"\nassert solution(6) == \"0.962962962963\"\nassert solution(7) == \"0.963\"\nassert solution(8) == \"0.962962962963\"\nassert solution(9) == \"0.963\"\nassert solution(10) == \"0.962962962963\"\nassert solution(11) == \"0.963\"\nassert solution(12) == \"0.962962962963\"\nassert solution(13) == \"0.963\"\nassert solution(14) == \"0.962962962963\"\nassert solution(15) == \"0.963\"\nassert solution(16) == \"0.962962962963\"\nassert solution(17) == \"0.963\"\nassert solution(18) == \"0.962962962963\"\nassert solution(19) == \"0.963\"\nassert solution(20) == \"0.962962962963\"\nassert solution(21) == \"0.963\"\nassert solution(22) == \"0.962962962963\"\nassert solution(23) == \"0.963\"\nassert solution(24) == \"0.962962962963\"\nassert solution(25) == \"0.963\"\nassert solution(26) == \"0.962962962963\"\nassert solution(27) == \"0.963\"\nassert solution(28) == \"0.962962962963\"\nassert solution(29) == \"0.963\"\nassert solution(30) == \"0.962962962963\"\nassert solution(31) == \"0.963\"\nassert solution(32) == \"0.962962962963\"\nassert solution(33) == \"0.963\"\nassert solution(34) == \"0.962962962963\"\nassert solution(35) == \"0.963\"\nassert solution(36) == \"0.962962962963\"\nassert solution(37) == \"0.963\"\nassert solution(38) == \"0.962962962963\"\nassert solution(39) == \"0.963\"\nassert solution(40) == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output '{solution(input())}' does not match expected output '{output}'.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == 0.962962962963, \"Wrong answer\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"0.963\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The function should return '{expected}', but it returns '{solution(input())}'.\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '0 0\\n40000000 0\\n0 40000000\\n', \"Test 1\"\nassert solution(5) == '0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n200000000\\n', \"Test 2\"\nassert solution(7) == '0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n200000000\\n300000000 0\\n400000000 0\\n', \"Test 3\"\nassert solution(10) == '0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n200000000\\n300000000 0\\n400000000 0\\n500000000 0\\n600000000 0\\n700000000 0\\n800000000 0\\n900000000 0\\n1000000000\\n', \"Test 4\"\nassert solution(15) == '0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n200000000\\n300000000 0\\n400000000 0\\n500000000 0\\n600000000 0\\n700000000 0\\n800000000 0\\n900000000 0\\n1000000000\\n1500000000\\n', \"Test 5\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(\"5\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n40000000 100000000\"\nassert solution(\"6\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n100000000 0\\n40000000 100000000\\n150000000 0\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['0 0', '40000000 0', '0 40000000']"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(\"4\") == \"0 0\\n40000000 40000000\\n0 40000000\"\nassert solution(\"5\") == \"0 0\\n40000000 40000000\\n0 40000000\\n1 0\\n40000000 40000000\\n0 40000000\\n1 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('5\\n') == '0 0\\n40000000 0\\n0 40000000\\n20000000 40000000\\n0 20000000'\nassert solution('6\\n') == '0 0\\n40000000 0\\n0 40000000\\n20000000 40000000\\n0 20000000\\n0 10000000\\n30000000 10000000'\nassert solution('7\\n') == '0 0\\n40000000 0\\n0 40000000\\n20000000 40000000\\n0 20000000\\n0 10000000\\n30000000 10000000\\n0 10000000\\n10000000 0\\n30000000 0'\nassert solution('8\\n') == '0 0\\n40000000 0\\n0 40000000\\n20000000 40000000\\n0 20000000\\n0 10000000\\n30000000 10000000\\n0 10000000\\n10000000 0\\n30000000 0\\n0 0 0\\n40000000 0 0\\n0 40000000 0 0\\n0 0 40000000 0 0\\n0 40000000 0 40000000 0 0\\n0 0 0 40000000 0 40000000\\n0 40000000 40000000 0 0 40000000\\n0 0 0 0 40000000 40000000 0\\n0 40000000 0 40000000 0 0 0\\n0 0 40000000 0 40000000 0 0\\n0 40000000 40000000 0 0 0\\n0 0 0 0 0 40000000 40000000 0\\n0 40000000 0 0 0 0 40000000 40000000\\n0 0 0 40000000 0 0 40000000 40000000\\n0 40000000 40000000 0 0 40000000 0'\nassert solution('9\\n') == '0 0\\n40000000 0\\n0 40000000\\n20000000 40000000\\n0 20000000\\n0 10000000\\n30000000 10000000\\n0 10000000\\n10000000 0\\n30000000 0\\n0 0 0\\n4000"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(\"6\\n\") == \"0 0\\n0 40000000\\n40000000 40000000\\n40000000 0\"\nassert solution(\"5\\n\") == \"0 0\\n0 40000000\\n40000000 0\\n0 40000000\"\nassert solution(\"4\\n\") == \"0 0\\n0 40000000\\n0 0\\n40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '''\n0 0\n40000000 0\n0 40000000\n'''\nassert solution('''\n4\n''') == '''\n0 0\n40000000 0\n40000000 40000000\n40000000 80000000\n'''\nassert solution('''\n5\n''') == '''\n0 0\n40000000 0\n40000000 40000000\n40000000 80000000\n80000000 0\n'''"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3 5 5 2\") == \"1\"\\nassert solution(\"5 3 5 2\") == \"1\"\\nassert solution(\"100 3 5 2\") == \"1\"\\nassert solution(\"3 5 5 10\") == \"impossible\"'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3 5 5 2) == 1\nprint(\"Pass\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"1\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"1\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"1\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n0.0\\n0.0\\n1.0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\\n1\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Your solution is incorrect.\\nInput: {input_data}\\nOutput: {output_data}\" for input_data, output_data in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2\\n'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"12 14\\n\", \"Sample Input: 13\\nSample Output: 12 14\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected output {output()}, but got {solution(input())}\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"12 14\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == \"12 14\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == \"12 14\\n\", \"Test 1 failed\"\nassert solution(100) == \"100\\n\", \"Test 2 failed\"\nassert solution(500) == \"500\\n\", \"Test 3 failed\"\nassert solution(1500) == \"1500\\n\", \"Test 4 failed\"\nassert solution(5000) == \"5000\\n\", \"Test 5 failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == \"12 14\", \"The output should be '12 14'.\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n3 0 0') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n1 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n3 0 0') == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected\nassert solution(input1) == expected1\nassert solution(input2) == expected2\nassert solution(input3) == expected3\nassert solution(input4) == expected4\nassert solution(input5) == expected5"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"1\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"1\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\\n0 0 1 1 2\\n0 1 0 1 2\\n1 1 0 1 2\\n1 1 1 0 1\\n\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\\n0 0 1 1 2\\n0 1 0 1 2\\n1 "
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0, \"Please implement the solution function\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\" # Put your solution here\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nprint(solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1'))\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"10\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\") == \"0\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 0 0\") == \"1\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 1 1\") == \"1\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 0 1\") == \"0\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 1 0\") == \"1\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 0 0\") == \"0\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 1 1\\n2 0 0\\n2 0 1\") == \"1\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 0 1\\n2 0 1\\n2 1 1\") == \"0\"\nassert solution(\"10\\n1 0 0\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 0\\n5 0 1\\n1 1 1\\n2 0 0\\n2 0 1\\n2 1 1\") == \"1\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n2 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 0 1\\n3 1 0\\n3 0 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 0\\n3 0 1\\n3 0 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 0\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n1 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1\\n') == '1'\nassert solution('5\\n2 0 0\\n0 1 1\\n3 1 1\\n3 1 1\\n3 1 1"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"0\"\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == \"0\"\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('3 4') == -1\nassert solution('2 4') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('4 2') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('1 1') == '1 1'\nassert solution('5 5') == -1\nassert solution('1 1') == '1 1'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"2 1\") == \"1 1\\n2 1\"\nassert solution(\"1 2\") == \"1 1\\n2 1\"\nassert solution(\"1 3\") == \"1 1\\n2 1\"\nassert solution(\"2 2\") == \"1 1\\n2 1\\n1 1\\n1 2\"\nassert solution(\"3 3\") == \"1 1\\n2 1\\n1 1\\n1 1\"\nassert solution(\"4 4\") == \"1 1\\n2 1\\n1 1\\n1 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 5\\n\") == \"-1\\n\"\nassert solution(\"6 6\\n\") == \"-1\\n\"\nassert solution(\"1 1\\n\") == \"1 1\\n\"\nassert solution(\"3 3\\n\") == \"1 1\\n2 2\\n\"\nassert solution(\"5 5\\n\") == \"1 2\\n2 1\\n3 3\\n4 4\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2, 3) == [1, 1, 2, 2, 1, 3, 2, 1, 2, 3]\nassert solution(5, 7) == [1, 1, 2, 2, 1, 3, 2, 1, 2, 3]\nassert solution(10, 15) == [1, 1, 2, 2, 1, 3, 2, 1, 2, 3]\nassert solution(2, 10) == [1, 1, 2, 2, 1, 3, 2, 1, 2, 3]\nassert solution(3, 3) == [-1]\nprint(\"All test cases pass\")"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"5 5\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\"\nassert solution(\"5 6\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\"\nassert solution(\"5 7\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\"\nassert solution(\"5 8\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\"\nassert solution(\"5 9\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\"\nassert solution(\"5 10\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\"\nassert solution(\"5 11\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\"\nassert solution(\"5 12\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\"\nassert solution(\"5 13\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\"\nassert solution(\"5 14\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\"\nassert solution(\"5 15\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n5 11\"\nassert solution(\"5 16\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n5 11\\n5 12\"\nassert solution(\"5 17\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n5 11\\n5 12\\n5 13\"\nassert solution(\"5 18"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"4 5\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"6 7\") == \"-1\"\nassert solution(\"8 9\") == \"-1\"\nassert solution(\"10 11\") == \"-1\"\nassert solution(\"12 13\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('4 4') == '-1\\n'\nassert solution('2 3\\n1 2\\n3 1\\n2 3\\n1 1\\n2 2\\n3 2\\n') == '1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n'\nassert solution('2 3\\n1 2\\n3 1\\n2 3\\n1 1\\n2 2\\n3 2\\n3 1\\n') == '1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.33333333\\n3.33333333\\n3.33333333\\n'\n\nassert solution(\"\"\"\n5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.0\\n1.66666667\\n1.0\\n1.0\\n1.66666667\\n'\n\nassert solution(\"\"\"\n5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.0\\n1.66666667\\n1.0\\n1.0\\n1.66666667\\n'\n\nassert solution(\"\"\"\n5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.0\\n1.66666667\\n1.0\\n1.0\\n1.66666667\\n'\n\nassert solution(\"\"\"\n5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.0\\n1.66666667\\n1.0\\n1.0\\n1.66666667\\n'\n\nassert solution(\"\"\"\n5 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == '3.0\\n1.66666667\\n1.0\\n1.0\\n1.66666667\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 10) == '3.33333333'\nassert solution(3, 10000) == '3.33333333'\nassert solution(3, 1000) == '3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\"\nprint(\"All tests passed!\\n\")"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Your solution is incorrect. The output is {output}, but the expected output is {output}\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\n\nsolution(stdin) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Expected output: 1, but got: {}\".format(solution())"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"sample_output.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\\n\", \"Please implement the solution for the given problem\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 2\\nabc\\ndef\\nghi\\njkm\\n\") == \"2\"\nassert solution(\"4 2\\nabc\\ndef\\nghi\\njkm\\ncba\\n\") == \"2\"\nassert solution(\"4 2\\nabc\\ndef\\nghi\\njkm\\ncba\\nbd\\n\") == \"2\"\nassert solution(\"4 2\\nabc\\ndef\\nghi\\njkm\\ncba\\nbd\\ncde\\n\") == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_result, \"The solution is incorrect. Please fix the code and try again.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\nabba') == '2\\n'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabab\") == 2\nassert solution(\"2 2\\nabab\") == 2\nassert solution(\"4 2\\nabab\") == 2\nassert solution(\"2 2\\nabab\") == 2\nassert solution(\"4 2\\nabab\") == 2"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed. Expected {sample_output}, but got {solution(sample_input)}.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 3\\nabba\") == \"1\"\nassert solution(\"4 1\\ncd\") == \"1\"\nassert solution(\"4 2\\ncbda\") == \"3\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\") == 2\nassert solution(\"4 2\\nabc\") == 2\nassert solution(\"4 2\\nxyz\") == 2\nassert solution(\"4 2\\nabcd\") == 3\nassert solution(\"4 2\\naaaa\") == 4\nassert solution(\"4 2\\naaaaa\") == 6"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"5 4\\n1 3\\n2 4\\n3 5\\n4 5\") == 12\nassert solution(\"6 5\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n11 14\\n12 15\") == 170"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3, \"Expected Output: 3, Actual Output: {}\".format(solution('4 3\\n1 2\\n2 3\\n2 4'))\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3\\n'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == 3, \"The output should be 3\"\nassert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n\") == 2, \"The output should be 2\"\nassert solution(\"4 3\\n1 1\\n1 2\\n2 2\\n\") == 2, \"The output should be 2\"\nassert solution(\"4 3\\n1 1\\n2 1\\n2 2\\n\") == 2, \"The output should be 2\"\nassert solution(\"4 3\\n1 1\\n1 1\\n1 1\\n\") == 1, \"The output should be 1\"\nassert solution(\"4 3\\n1 1\\n1 1\\n2 2\\n\") == 2, \"The output should be 2\"\nassert solution(\"4 3\\n1 1\\n1 1\\n1 2\\n\") == 2, \"The output should be 2\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0'\nassert solution('2 3\\n2 1\\n1 0\\n1 3\\n2 2') == '1'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n'\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1\\n0\\n'\n\nassert solution('''\n3 3\n1 0\n0 1\n1 1\n2 2\n2 3\n1 4\n2 4\n''') == '1\\n1\\n'\n\nassert solution('''\n3 3\n1 0\n0 1\n1 1\n2 2\n3 3\n3 4\n3 5\n''') == '2\\n2\\n'\n\nassert solution('''\n3 3\n1 0\n0 1\n1 1\n2 2\n3 3\n3 4\n4 5\n''') == '2\\n2\\n'\n\nassert solution('''\n3 3\n1 0\n0 1\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '2\\n2\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 0\n0 1\n1000 1\n1 3\n2 3''') == '''1\n0'''\n\nassert solution('''4 3\n0 2\n2 1\n3 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20''') == '''20\n16'''\n\nassert solution('''5 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n13"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\\n\"\nassert solution(\"10 3\\n1 2\\n2 3\\n4 3\") == \"1\\n2\\n\\n\"\nassert solution(\"1 0\\n1 1\\n1 2\\n1 3\") == \"0\\n1\\n\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == ['1', '0']\nassert solution('2 3\\n1 3\\n1 4\\n1 5\\n2 4\\n3 4\\n3 5') == ['0', '1']\nassert solution('2 3\\n1 3\\n1 4\\n1 5\\n2 4\\n3 4\\n3 5\\n4 4\\n4 5') == ['0', '1']\nassert solution('2 3\\n1 3\\n1 4\\n1 5\\n2 4\\n3 4\\n3 5\\n4 4\\n4 5\\n5 4\\n5 5') == ['0', '1']"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    \"\"\"\n) == \"1\\n0\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    \"\"\"\n) == \"1\\n0\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    \"\"\"\n) == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"4 5\\n1 0\\n1 1\\n0 2\\n3 4\\n5 6\") == \"1\\n1\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"2 3\\n1 3\\n0 1\\n1000 1\\n2 3\") == \"2\\n0\\n\"\nassert solution(\"1 3\\n1000 1\\n2 3\\n0 1\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n0 1\\n1 0\\n1000 1\\n1 3\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n0\\n\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution function is not correct\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"7\"\nassert solution(1) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) == \"7\"\nassert solution(3) =="
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is {solution(sample_input)} but should be {sample_output}\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\"\nassert solution(\"10\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"10\"\nassert solution(\"10\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"10\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n\\tpass\\n', \"The function should return 'def solution(stdin: str) -> str:\\n\\tpass'\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 20"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 3\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\ncalculus3 30\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"45\"\nassert solution(\"5 4\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\ncalculus3 30\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"90\"\nassert solution(\"5 5\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\ncalculus3 30\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"170\"\nassert solution(\"5 6\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\ncalculus3 30\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"270\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 2\n        linearalgebra 10\n        calculus1 10\n        calculus2 20\n        honorsanalysis1 50\n        honorsanalysis2 100\n    ''') == 20"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 1\\ncalculus1 50\\ncalculus2 100\\nlinearalgebra 20\\n\") == \"35\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"Incorrect output\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6\\n'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\nassert solution(\"1 10000000000\\n2 10000000000\\n3 10000000000\\n4 10000000000\\n5 10000000000\\n6 10000000000\") == \"6\"\nassert solution(\"1 10000000000\\n2 10000000000\\n3 10000000000\\n4 10000000000\\n5 10000000000\\n6 10000000000\\n7 10000000000\\n8 10000000000\\n9 10000000000\\n10 10000000000\\n11 10000000000\\n12 10000000000\\n13 10000000000\\n14 10000000000\\n15 10000000000\\n16 10000000000\\n17 10000000000\\n18 10000000000\\n19 10000000000\\n20 10000000000\\n21 10000000000\\n22 10000000000\\n23 10000000000\\n24 10000000000\\n25 10000000000\\n26 10000000000\\n27 10000000000\\n28 10000000000\\n29 10000000000\\n30 10000000000\\n31 10000000000\\n32 10000000000\\n33 10000000000\\n34 10000000000\\n35 10000000000\\n36 10000000000\\n37 10000000000\\n38 10000000000\\n39 10000000000\\n40 10000000000\\n41 10000000000\\n42 10000000000\\n43 10000000000\\n44 10000000000\\n45 10000000000\\n46 10000000000\\n47 10000000000\\n48 10000000000\\n49 10000000000\\n50 10000000000\") == \"29\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3') == 6\nassert solution('1 4 2\\n3 3 3\\n4 3 6') == 6\nassert solution('5 5\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3') == 0"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\\n\"\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n1 1 2\\n3 3 3\\n4 3 6\\n\") == \"6\\n\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 6, \"Test case failed\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution() == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"3 4 1\\n4\\n2\\n3 2\\n2\\n3 1\\n\") == \"2\"\nassert solution(\"3 1 2\\n1\\n2\\n1\\n\") == \"impossible\"\nassert solution(\"1"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input}\\nExpected output: {solution_output}\\nActual output: {solution(solution_input)}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 2') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 2\\n1 3') == 'impossible'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == 500.00\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(250, 250) == 500.00, \"Your solution is incorrect. Please check the example and input.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'2\\n250 250\\n250 750\\n') == 500.0\nassert solution(r'3\\n150 100\\n450 300\\n') == 300.0\nassert solution(r'2\\n250 250\\n250 750\\n') == 500.0\nassert solution(r'1\\n100 100\\n100 100\\n') == 100.0\nassert solution(r'1\\n100 100\\n100 100\\n') == 100.0"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 500.00\nprint(\"All tests passed\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Invalid input\\n\", \"Solution should return the error message for invalid input\"\nassert solution(\"5\\n250 250\\n250 750\") == \"500.00\\n\", \"Solution should return the correct result\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00\\n'\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0, \"Test case 1 not passing\"\n\nassert solution(\"3 4\\n3 200 30\\n200 2 30\") == 0, \"Test case 2 not passing\"\n\nassert solution(\"4 5\\n4 150 20\\n150 1 20\") == 0, \"Test case 3 not passing\"\n\nassert solution(\"5 6\\n5 120 15\\n120 1 15\") == 0, \"Test case 4 not passing\"\n\nassert solution(\"6 7\\n6 90 12\\n90 1 12\") == 0, \"Test case 5 not passing\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 5\\n5 5 5\") == \"0\"\nassert solution(\"2 6\\n6 5 5 5\") == \"0\"\nassert solution(\"2 7\\n7 6 5 5 5\") == \"0\"\nassert solution(\"2 8\\n8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 9\\n9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 10\\n10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 11\\n11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 12\\n12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 13\\n13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 14\\n14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 15\\n15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 16\\n16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 17\\n17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 18\\n18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 19\\n19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 20\\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 21\\n21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 22\\n22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 23\\n23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 24\\n24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 25\\n25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 5 5\") == \"0\"\nassert solution(\"2 26\\n26 25 24 23 22"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 2 10\") == \"1400\"\nassert solution(\"2 3\\n2 100 10\\n100 3 10\") == \"1000\"\nassert solution(\"2 3\\n2 100 10\\n100 4 10\") == \"2000\"\nassert solution(\"2 3\\n2 100 10\\n100 5 10\") == \"2400\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0'\nprint(solution())"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\"\nprint(\"0\")"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 1"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == 0"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output should be 2.\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\n    pass'\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n15 15 15 15 15 15\") == \"2\"\nassert solution(\"15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\") == \"2\"\nassert solution(\"15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15 15 15 15\\n15 15 15"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output: 2\\n\", \"Please provide a valid input.\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}\\nSample Output: {expected_output}\\nOutput: {solution(sample_input)}\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    Input:\n    80 50 3 2\n    75 5 25 20 50 35\n    50 5 25 35\n    '''\n) == '2'\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBB..\\n...B\\n....\\n...C\\nCCCC\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n..A\\n....\\n.B..\\n.B....\\n..C.\\nCCCC\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n....\\nBBB..\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2212\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n1112\\n2211\\n1111\") == \"A..C\\n....B\\n...C\\n....\\n....\\nA..A\\n....\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n1112\\n2211\\n1111\\n2211\\n1112\\n1112\\n1112\\n1112\") == \"A..A\\n....B\\n...C\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n....\\n....\\nA..B\\n....C\\n...D\\n....\\n....\\nA..C\\n....B\\n...C\\n...."
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr'3 4\\n2211\\n1112\\n1112'\n) == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\"\nassert solution(\"1 1\\n1\\n2\\n3\\n\\n\") == \"BBB.\"\nassert solution(\"5 5\\n11111\\n11111\\n11111\\n11111\\n\\n\") == \"BBBB\"\nassert solution(\"5 5\\n11111\\n11111\\n11111\\n11111\\n\\n11111\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBB.\\n...B\\nCCC.\\n...C\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution(\\\"3 4\\n2211\\n1112\\n1112\\\"))\\nprint(solution(\\\"5 5\\n11121\\n22222\\n33333\\n44444\\\"))\\nprint(solution(\\\"2 2\\n1111\\n2222\\n3333\\n4444\\\"))\\nprint(solution(\\\"2 2\\n1111\\n2222\\n3333\\n4444\\n5555\\\"))\") == \"AAAA\\n...A\\n....\\nBBB.\\n...B\\nCCC.\\n...C\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4) == \"AAAA\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\nimpossible\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\", solution(stdin)"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '9\\n'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '6\\n'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '7\\n'\nassert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '8\\n'"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9\", solution(stdin)\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nassert solution('4 1 3\\n2 1 4\\n1 2 3') == 4\nassert solution('1 2 3') == 2"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, \"The output is incorrect.\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nassert solution('2\\n2 3 1') == 1\nassert solution('3 1') == 1\nassert solution('1 4 1 2 1 3') == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"5 3 3 6\\n0 0 3\\n3 2 6\\n0 5 6\\n3 3 5\\n3 0 3\\n3 2 4\\n3 1 4\\n4 0\\n4 0\\n4 3\\n1 0\\n1 3\\n1 2\") == 12.624347\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 4\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n0 0 4\\n2 1 3\\n0 1 4\\n1 2 5\\n0 2 4\\n1 0 4\\n0 1 4\\n0 0 3\\n1 3 5\\n0 0 4\") == 13.073257\nassert solution(\"4 3 1 5\\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"10000 500 10\") == 10000.0\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"20.396078\\n\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n20.396078\n\"\"\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\"\"\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5''') == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\") == \"b\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output:\\n{solution(input())}\\nExpected Output:\\n{output()}\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nfor i in range(1, 1001):\n    assert solution(f\"2 {i}\") == f\"{i-1}\"\nfor i in range(1, 1001):\n    assert solution(f\"1 {i}\") == f\"b\"\nfor i in range(1, 1001):\n    assert solution(f\"{i} {i}\") == f\"{i-1}\"\nfor i in range(1, 1001):\n    assert solution(f\"1 {i}\") == f\"b\"\nfor i in range(1, 1001):\n    assert solution(f\"{i} {i}\") == f\"{i-1}\"\nassert solution(\"1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"cdefghijklmnopqrstuvwxyz\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"bcdefghijklmnopqrstuvwxyz\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1 2 1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"d\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\ncdef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == 'b\\nc\\ndef\\ndef\\n'\nassert solution('abc\\ndef\\nghi jkl mno\\n123\\n456\\n789') == 'c\\n'\nassert solution('abcdefghi\\nabcdefghi') == 'abcdefghi\\n'\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"abcdef\") == \"b\"\nassert solution(\"abcdefg\") == \"c\"\nassert solution(\"abcdefg\") == \"d\"\nassert solution(\"abcdefg\") == \"e\"\nassert solution(\"abcdefg\") == \"f\"\nassert solution(\"abcdefg\") == \"g\"\nassert solution(\"abcdefg\") == \"h\"\nassert solution(\"abcdefg\") == \"i\"\nassert solution(\"abcdefg\") == \"j\"\nassert solution(\"abcdefg\") == \"k\"\nassert solution(\"abcdefg\") == \"l\"\nassert solution(\"abcdefg\") == \"m\"\nassert solution(\"abcdefg\") == \"n\"\nassert solution(\"abcdefg\") == \"o\"\nassert solution(\"abcdefg\") == \"p\"\nassert solution(\"abcdefg\") == \"q\"\nassert solution(\"abcdefg\") == \"r\"\nassert solution(\"abcdefg\") == \"s\"\nassert solution(\"abcdefg\") == \"t\"\nassert solution(\"abcdefg\") == \"u\"\nassert solution(\"abcdefg\") == \"v\"\nassert solution(\"abcdefg\") == \"w\"\nassert solution(\"abcdefg\") == \"x\"\nassert solution(\"abcdefg\") == \"y\"\nassert solution(\"abcdefg\") == \"z\"\nassert solution(\"abcdefg\") == \"b\"\nassert solution(\"abcdefg\") == \"c\"\nassert solution(\"abcdefg\") == \"d\"\nassert solution(\"abcdefg\") == \"e\"\nassert solution(\"abcdefg\") == \"f\"\nassert solution(\"abcdefg\") == \"g\"\nassert solution(\"abcdefg\") == \"h\"\nassert solution(\"abcdefg\") == \"i\"\nassert solution(\"abcdefg\") == \"j\"\nassert solution(\"abcdefg\") == \"k\"\nassert solution(\"abcdefg\") == \"l\"\nassert solution(\"abcdefg\") == \"m\"\nassert solution(\"abcdefg\") == \"n\"\nassert solution(\"abcdefg\") == \"o\"\nassert solution(\"abcdefg\") == \"p\"\nassert solution(\"abcdefg\") == \"q\"\nassert solution(\"abcdefg\") == \"r\"\nassert solution(\"abcdefg\") == \"s\"\nassert solution(\"abcdefg\") == \"t\"\nassert solution(\"abcdefg\") == \"u\"\nassert solution(\"abcdefg\") == \"v\"\nassert solution(\"abcdefg\") == \"w\"\nassert solution(\"abcdefg\") == \"x\"\nassert solution(\"abcdefg\") == \"y\"\nassert solution(\"abcdefg\") == \"z\"\nassert solution(\"abcdefg\") == \"b\"\nassert solution(\"abcdefg\") == \"c\"\nassert solution(\"abcdefg\") == \"d\"\nassert solution(\"abcdefg\") == \"e\"\nassert solution(\"abcdefg\") == \"f\"\nassert solution(\"abcdefg\") == \"g\"\nassert solution(\"abcdefg\") == \"h\"\nassert solution(\"abcdefg\") == \"i\"\nassert solution(\"abcdefg\") == \"j\"\nassert solution(\"abcdefg\") == \"k\"\nassert solution(\"abcdefg\") == \"l\"\nassert solution(\"abcdefg\") == \"m\"\nassert solution(\"abcdefg\") == \"n\"\nassert solution(\"abcdefg\") == \"o\"\nassert solution(\"abcdefg\") == \"p\"\nassert solution(\"abcdefg\") == \"q\"\nassert solution(\"abcdefg\") == \"r\"\nassert solution(\"abcdefg\") == \"s\"\nassert solution(\"abcdefg\") == \"t\"\nassert solution(\"abcdefg\") == \"u\"\nassert solution(\"abcdefg\") == \"v\"\nassert solution(\"abcdefg\") == \"w\"\nassert solution(\"abcdefg\") == \"x\"\nassert solution(\"abcdefg\") == \"y\"\nassert solution(\"abcdefg\") == \"z\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'def'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hobotnica\") == \"hob\"\nassert solution(\"robot\") == \"r\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"ho\"\nassert solution(\"robi\") == \"r\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"ho\"\nassert solution(\"rakija\") == \"ra\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution output doesn't match the expected output.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'abc'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n12\n10\n16\n7\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 12, \"The number of steps used to find 'robi' is not equal to 12.\"\nassert solution() == 10, \"The number of steps used to find 'hobit' is not equal to 10.\"\nassert solution() == 16, \"The number of steps used to find 'hobi' is not equal to 16.\"\nassert solution() == 7, \"The number of steps used to find 'rakija' is not equal to 7.\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hobotnica\") == \"ide\"\nassert solution(\"robot\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"ho\"\nassert solution(\"robi\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"ho\"\nassert solution(\"rakija\") == \"rak\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str: \\n\\tpass\\n'\nassert solution('robi\\n') == '7\\ndef solution(stdin: str) -> str: \\n\\tpass\\n'\nassert solution('hobi\\nhobit\\nrobi\\n') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str: \\n\\tpass\\n'\nassert solution('rakija\\n') == '7\\ndef solution(stdin: str) -> str: \\n\\tpass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed.\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('10 1\\n123456789') == '123456789'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2.6) == ['135', '270', '135135', '270270']\nassert solution(2.7) == []"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2.6) == [\"135\", \"270\", \"135135\", \"270270\"]\nassert solution(3.1) == [\"135\", \"270\", \"135135\", \"270270\"]\nassert solution(0.123) == [\"135\", \"270\", \"135135\", \"270270\"]\nassert solution(1.23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2.6) == \"135\"\nassert solution(5.0) == \"270\"\nassert solution(2.0000000000000001) == \"135135\"\nassert solution(2702702.6) == \"270270\"\nassert solution(2.6000000000000002) == \"135135\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(135) == \"135\"\nassert solution(270) == \"270\"\nassert solution(135135) == \"135135\"\nassert solution(270270) == \"270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2.6) == [\"135\", \"270\", \"135135\", \"270270\"]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == '135\\n270\\n135135\\n270270'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2.6) == [135, 270]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.6) == ['135', '270']\nassert solution(3.14159) == ['135']\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == '135', \"135\"\nassert solution(2.3) == '270', \"270\"\nassert solution(2.4) == '135135', \"135135\"\nassert solution(2.5) == '270270', \"270270\"\nassert solution(2.6000000000000001) == 'No solution', \"No solution\"\nassert solution(2.3000000000000002) == 'No solution', \"No solution\"\nassert solution(2.2999999999999997) == 'No solution', \"No solution\"\nassert solution(2.7000000000000002) == 'No solution', \"No solution\"\nassert solution(2.6999999999999996) == 'No solution', \"No solution\"\nassert solution(2.8) == 'No solution', \"No solution\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 4\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 1\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, \"Incorrect solution\"\nprint(expected)"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4, \"The number castles which were in danger is incorrect.\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_input.txt', 'r')) == '''\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n'''"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\\n5 3\\n5 4\\n5 1\\n5 2\\n5 6\\n6 4\\n6 5\\n6 7\\n7 5\\n7 6\\n7 8\\n8 6\\n8 7\\n8 9\\n9 7\\n9 8\\n9 10\\n10 8\\n10 9\\n10 11\\n11 9\\n11 10\\n11 12\\n12 10\\n12 11\\n12 13\\n13 11\\n13 12\\n13 14\\n14 12\\n14 13\\n14 15\\n15 13\\n15 14\\n15 16\\n16 14\\n16 15\\n16 17\\n17 15\\n17 16\\n17 18\\n18 16\\n18 17\\n18 19\\n19 17\\n19 18\\n19 20\\n20 18\\n20 19\\n20 21\\n21 19\\n21 20\\n21 22\\n22 20\\n22 21\\n22 23\\n23 21\\n23 22\\n23 24\\n24 22\\n24 23\\n24 25\\n25 23\\n25 24\\n25 26\\n26 24\\n26 25\\n26 27\\n27 25\\n27 26\\n27 28\\n28 26\\n28 27\\n28 29\\n29 27\\n29 28\\n29 30\\n30 28\\n30 29\\n30 31\\n31 29\\n31 30\\n31 32\\n32 30\\n32 31\\n32 33\\n33 31\\n33 32\\n33 34\\n34 32\\n34 33\\n34 35\\n35 33\\n35 34\\n35 36\\n36 34\\n36 35\\n36 37\\n37 35\\n37 36\\n37 38\\n38 36\\n38 37\\n38 39\\n39 37\\n39 38\\n39 40\\n40 38\\n40 39\\n40 41\\n41 40\\n41 42\\n42 40\\n42 41\\n42 43\\n43 41\\n43 42\\n43 44\\n44 42\\n44 43\\n44 45\\n45 43\\n45 44\\n45 46\\n46 44\\n46 45\\n46 47\\n47 45\\n47"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution, \"You are not allowed to run this code.\"\n\nfrom typing import List\n\nn = int(input())\npoints = list(map(int, input().split()))"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'\nassert solution('5 2\\nabc\\ndef\\nghi\\nabc\\n*def\\n*ghi\\n') == '4\\n1\\n1\\n3'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    return \\\"\\\"\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5 5\\n*a\\n*b\\n*c\\n*d\\n*e\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5 3\\na*b\\na*c\\na*d\\na*e\\n*a*b\\n*a*c\\n*a*d\\n*a*e\\n*b*c\\n*b*d\\n*b*e\\n*c*d\\n*c*e\\n*d*e\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output()"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n4 4\nabcdefg\n123456789\n1234567890\n123456789\n1234567890\n''') == '2\\n2\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n6 6\n*bcdefgh\na*abc\n1234567890\n12345678901234567890\n123456789012345678901234567890\n123456789012345678901234567890\n123456789012345678901234567890\n''') == '3\\n2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"5 3\\nXO\\nOX\\nOX\\nXO\\nOX\\nOO\\nXO\\nOO\\nXO\\nXO\\n\") == 0\nassert solution(\"3 4\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\nXO\\nXO\\nXO\\n\") == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nXO\\nOX\\nOO\\nOO\\nXO\\nOO\\nXO\\n') == '0'\nassert solution('4 2\\nOO\\nOO\\nXO\\nOO\\nXO\\nOO\\n') == '1'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1\nassert solution('5 3\\nXXO\\nXXO\\nXOO\\nXOO\\nXOO\\nXXO\\nXOO\\nXOO\\n') == 0\nassert solution('2 3\\nOOO\\nOOX\\nOXO\\nOXO\\nOXO\\nOOO\\nOXO\\nOXO\\n') == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 1, \"Expected output: 1, got: \" + str(solution(input()))"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\n\nfrom typing import List"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution ({solution(input())}) does not match with expected output ({output})\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"Invalid output\"\nassert solution(\"4 2\\nXO\\nOX\\nXX\\nOO\\nXO\\nOO\\n\") == 0, \"Invalid output\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0, \"Invalid output\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0, \"Invalid output\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0, \"Invalid output\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"Incorrect solution for test case 1\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1, \"Incorrect solution for test case 2\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0, \"Incorrect solution for test case 3\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0, \"Incorrect solution for test case 4\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"5 3\\nOOO\\nXOO\\nOOX\\nOXO\\nOXO\\nOXO\\nOOX\\n\") == \"0\"\nassert solution(\"1 1\\nX\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"1 3\\nX\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"2 4\\nXO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"3 4\\nXO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"4 4\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"5 5\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"6 6\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"7 7\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"8 8\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"9 9\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"10 10\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"11 11\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"12 12\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"13 13\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"14 14\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"15 15\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"16 16\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"17 17\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"18 18\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"19 19\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"20 20\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"21 21\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"22 22\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"23 23\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"0\"\nassert solution(\"24 24\\nOOO\\nX\\nX\\nX\\nX\\nX\\nX\\n\") == \"1\"\nassert solution(\"25 25\\nOOO\\nX\\nX\\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\\n\", \"Test failed.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nprint('All test cases passed!')"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\nassert solution(\"6\\n5 2\\n3 0\\n2 -1\\n1 2\\n0 1\") == \"23\\n\"\nassert solution(\"10\\n5 3\\n1 0\\n-1 2\\n-2 1\\n3 -1\\n4 2\") == \"53\\n\"\nassert solution(\"10\\n5 3\\n1 0\\n-1 2\\n-2 1\\n3 -1\\n4 2\") == \"53\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"16\\n\"\n\nfrom math import mod"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 0\n    0 2\n    -2 0\n    0 -2\n    \"\"\"\n) == \"16\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 16\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n') == '16\\n'\nassert solution('1\\n2\\n3\\n4\\n') == '2\\n'\nassert solution('1000000000\\n') == '999999999\\n'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \\\n    f\"Expected: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '16\\n'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'\nassert solution(input()) == '16\\n'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"80\", \"Output should be 80.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 10 50\\n8 8 2 -2\"\n) == \"80\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"80\", \"The answer is not correct\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 1000\\n1000 1000\\n1000 0\\n2000 2000\\n1000 1000\\n0 0\\n1000 0\\n1000 1000\\n0 0\\n1000 0\\n0 0\\n0 0\\n1000 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\\n\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"3.000000000\\n\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n1000000000 1000000000 1000000000 1000000000\\n1000000000 1000000000 1000000000 1000000000\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000\\n'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 6\\n2 2\\n5 8\\n3 3\\n\") == \"2.000000000\"\nassert solution(\"1 6\\n2 2\\n5 8\\n3 3\\n0 0\\n\") == \"2.000000000\"\nassert solution(\"1 6\\n2 2\\n5 8\\n3 3\\n5 8\\n0 0\\n\") == \"2.000000000\"\nassert solution(\"1 6\\n2 2\\n5 8\\n3 3\\n5 8\\n3 3\\n\") == \"1.000000000\"\nassert solution(\"1 6\\n2 2\\n5 8\\n3 3\\n5 8\\n3 3\\n2 2\\n\") == \"1.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == 3.0\nassert solution(\"1 10\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == 4.5\nassert solution(\"1 6\\n1 5\\n1 4\\n1 3\\n1 2\\n1 1\\n1 0\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"5 5\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 0 0\\n1 1 0 0\\n1 1 0 0\\n1 1 0 0\\n1 1 0 0\") == \"3\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"Solution should return 1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 5\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"2\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Your solution is incorrect\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(sample_input)}\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution is incorrect. Output: {solution_output}, expected {solution_output}\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6.283185, \"Test failed for sample input\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(samples) == expected_output, f\"Sample Output: {sample_output}, Expected Output: {expected_output}\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(samples.input_1) == '6.283185'\nassert solution(samples.input_2) == '10.000000'\nassert solution(samples.input_3) == '4.264810'\nassert solution(samples.input_4) == '2.896281'\nassert solution(samples.input_5) == '1.732051'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6.283185\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6.283185\"\nassert solution(stdin) == \"6.2831849999999998\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == '1 2 3', 'Expected output: \"1 2 3\"\\nGot: \"' + str(solution(2)) + '\"'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1 2 3\\n'\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"The solution is incorrect.\"\nassert solution(\"3\") == \"1 3 2\\n\", \"The solution is incorrect.\"\nassert solution(\"4\") == \"1 4 2 3\\n\", \"The solution is incorrect.\"\nassert solution(\"5\") == \"1 5 2 3 4\\n\", \"The solution is incorrect.\"\nassert solution(\"6\") == \"1 6 2 3 4 5\\n\", \"The solution is incorrect.\"\nassert solution(\"7\") == \"1 7 2 3 4 5 6\\n\", \"The solution is incorrect.\"\nassert solution(\"8\") == \"1 8 2 3 4 5 6 7\\n\", \"The solution is incorrect.\"\nassert solution(\"9\") == \"1 9 2 3 4 5 6 7 8\\n\", \"The solution is incorrect.\"\nassert solution(\"10\") == \"1 10 2 3 4 5 6 7 8 9\\n\", \"The solution is incorrect.\"\nassert solution(\"11\") == \"1 11 2 3 4 5 6 7 8 9 10\\n\", \"The solution is incorrect.\"\nassert solution(\"12\") == \"1 12 2 3 4 5 6 7 8 9 10 11\\n\", \"The solution is incorrect.\"\nassert solution(\"13\") == \"1 13 2 3 4 5 6 7 8 9 10 11 12\\n\", \"The solution is incorrect.\"\nassert solution(\"14\") == \"1 14 2 3 4 5 6 7 8 9 10 11 12 13\\n\", \"The solution is incorrect.\"\nassert solution(\"15\") == \"1 15 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '1 2 3\\n'\nassert solution('3\\n') == '1 2 3\\n'\nassert solution('4\\n') == '1 2 3 4\\n'\nassert solution('5\\n') == '1 2 3 4 5\\n'\nassert solution('6\\n') == '1 2 3 4 5 6\\n'\nassert solution('7\\n') == '1 2 3 4 5 6 7\\n'\nassert solution('8\\n') == '1 2 3 4 5 6 7 8\\n'\nassert solution('9\\n') == '1 2 3 4 5 6 7 8 9\\n'\nassert solution('10\\n') == '1 2 3 4 5 6 7 8 9 10\\n'\nassert solution('11\\n') == '1 2 3 4 5 6 7 8 9 10 11\\n'\nassert solution('12\\n') == '1 2 3 4 5 6 7 8 9 10 11 12\\n'\nassert solution('13\\n') == '1 2 3 4 5 6 7 8 9 10 11 12 13\\n'\nassert solution('14\\n') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n'\nassert solution('15\\n') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 2 3\\n', \"The solution should return the binary tree in the preorder traversal.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 2 3\\n'\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '1 2 3\\n'\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"1 2 3\"\nassert solution(3) == \"1 3 2\"\nassert solution(4) == \"2 3 1\"\nassert solution(5) == \"2 4 3\"\nassert solution(6) == \"3 4 2\"\nassert solution(7) == \"3 6 1\"\nassert solution(8) == \"4 6 3\"\nassert solution(9) == \"4 8 2\"\nassert solution(10) == \"5 8 4\"\nassert solution(11) == \"5 10 3\"\nassert solution(12) == \"6 10 5\"\nassert solution(13) == \"6 12 4\"\nassert solution(14) == \"7 12 6\"\nassert solution(15) == \"7 14 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n\") == \"1 2 3\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\nprint('All test cases passed')"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n') == '1\\n1 2 3 4\\n'\nassert solution('5 4\\n1 1\n2 2\n3 3\n4 4\n5 5\\n') == '1\\n1 1 2 2 3 3 4 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\n\nfrom typing import List"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('1 2\\n1 3\\n2 4\\n3 4\\n4 1\\n2 3\\n3 2\\n4 3\\n') == '1\\n1 2 3 4\\n'\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''1'''"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n1 2 3 4\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2 1\n1 2\n\"\"\") == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Solution should return 1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n2 3\") == \"1\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n2 4\") == \"2\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n2 4\\n2 5\") == \"3\\n\"\nassert solution(\"2 1\\n1 2\\n1 3\\n2 4\\n2 5\\n1 6\") == \"6\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nprint(\"Test passed\")"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input}\\nExpected Output: {sample_output}\\nActual Output: {solution(sample_input)}\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"2\\n\"\nassert solution(\"2 4\\n1 2\\n2 3\\n3 4\\n\") == \"3\\n\"\nassert solution(\"2 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n3 1\\n\") == \"1\\n\"\nassert solution(\"2 1\\n2 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '45'"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\\n\") == \"45\\n\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 45, \"Incorrect output.\"\nassert solution(3) == 135, \"Incorrect output.\"\nassert solution(4) == 1000, \"Incorrect output.\"\nassert solution(5) == 11660, \"Incorrect output.\"\nassert solution(6) == 10000, \"Incorrect output.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"45\", \"Test failed\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45\nassert solution(12) == 40\nassert solution(15) == 35\nassert solution(16) == 32\nassert solution(17) == 29\nassert solution(18) == 26"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nprint('Test Passed')"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\", \"Test case 1\"\n\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\", \"Test case 2\"\n\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\", \"Test case 3\"\n\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\", \"Test case 4\"\n\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\", \"Test case 5\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == 4"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 3\\n\") == \"5\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 1\\n\") == \"3\"\nassert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == 2"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"3 3\\nAlice 1 book1\\nBob 1 book2\\nCharlie 1 book3\\nDavid 1 book4\\nEve 1 book5\\nFrank 1 book6\\nGrace 1 book7\\nHenry 1 book8\\nIvan 1 book9\\nJudy 1 book10\\nKevin 1 book11\\nLaura 1 book12\\nMark 1 book13\\nMary 1 book14\\nNancy 1 book15\\nOlivia 1 book16\\nPenny 1 book17\\nQuincy 1 book18\\nRachel 1 book19\\nSteve 1 book20\\nVictor 1 book21\\nWilliam 1 book22\") == \"3\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test failed with input {input}, output {output}\"\nfor input, output in zip(inputs, outputs):\n    assert solution(input) == output, f\"Test failed with input {input}, output {output}\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\ndef solution(stdin: str) -> str: \\n    pass\\n'\n\nassert solution('1 2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\nassert solution('2 2\\n\\n\\n\\n\\n\\n') == '2'\nassert solution('2 3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\nkenny 2 harry potter2\\ncharlie 3 lord of the rings\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nlaura 1 lord of the rings\\n') == '2'\nassert solution('2 3\\n\\n\\n\\n\\n\\n') == '2'\nassert solution('4 4\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nkenny 2 harry potter2\\ncharlie 3 lord of the rings\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nlaura 1 lord of the rings\\nlaura 2 lord of the rings\\n') == '2'\nassert solution('4 4\\n\\n\\n\\n\\n\\n') == '2'\nassert solution('1 2\\n') == '1'\nassert solution('2 1\\n') == '1'\nassert solution('5 5\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nkenny 2 harry potter2\\ncharlie 3 lord of the rings\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nlaura 1 lord of the rings\\nlaura 2 lord of the rings\\n') == '3'\nassert solution('5 5\\n\\n\\n\\n\\n\\n') == '3'\nassert solution('1 1\\n') == '1'\nassert solution('2 2\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nkenny 2 harry potter2\\ncharlie 3 lord of the rings\\nkenny 1 harry potter1\\ncharlie 1 lord of the rings\\nlaura 1 lord of the rings\\nlaura 2 lord of the rings\\n') == '2'\nassert solution('2 2\\n\\n\\n\\n\\n\\n') == '2'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"2\\n
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('1\\n111') == '2 2'\nassert solution('2\\n01') == '1 1'\nassert solution('2\\n111') == '2 2'\nassert solution('1\\n101') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"2\\n10\") == \"1 2\"\nassert solution(\"3\\n0011\") == \"2 3\"\nassert solution(\"4\\n111011\") == \"3 2\"\nassert solution(\"5\\n0000010011\") == \"4 2\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\nassert solution(\"2\\n01\\n10\\n\") == \"5 3\"\nassert solution(\"2\\n01\\n11\\n\") == \"7 2\"\nassert solution(\"2\\n01\\n10\\n\") == \"5 3\"\nassert solution(\"2\\n01\\n11\\n\") == \"7 2\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\") == \"1 1\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"4 1\\n1122\\n3333\\n4444\\n5555\\n6666\\n7777\\n8888\\n9999\\n\") == \"4 3\\n1122\\n3333\\n4444\\n5555\\n6666\\n7777\\n8888\\n9999\\n\"\nassert solution(\"4 1\\n1122\\n3333\\n4444\\n5555\\n6666\\n7777\\n8888\\n9999\\n10101\\n11111\\n12121\\n13131\\n14141\\n15151\\n16161\\n17171\\n18181\\n19191\\n20202\\n21212\\n22222\\n23232\\n24242\\n25252\\n26262\\n27272\\n28282\\n29292\\n30303\\n31313\\n32323\\n33333\\n34343\\n35353\\n36363\\n37373\\n38383\\n39393\\n40404\\n41414\\n42424\\n43434\\n44444\\n45454\\n46464\\n47474\\n48484\\n49494\\n50505\\n51515\\n52525\\n53535\\n54545\\n55555\\n56565\\n57575\\n58585\\n59595\\n60606\\n61616\\n62626\\n63636\\n64646\\n65656\\n66666\\n67676\\n68686\\n69696\\n70707\\n71717\\n72727\\n73737\\n74747\\n75757\\n76767\\n77777\\n78787\\n79797\\n80808\\n81818\\n82828\\n83838\\n84848\\n85858\\n86868\\n87878\\n88888\\n89898\\n90909\\n91919\\n92929\\n93939\\n94949\\n95959\\n96969\\n97979\\n98989\\n99999\\n100100\\n100200\\n100300\\n100400\\n100500\\n100600\\n100700\\n100800\\n100900\\n101010\\n101111\\n101212\\n10131"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, f\"Solution {solution} is incorrect. Expected {expected_solution}.\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12''') == '''4 3\n2123\n1012\n2123\n'''"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 1) == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution(3, 1) == '3 1\\n2123\\n2123\\n'\nassert solution(5, 3) == '5 4\\n2123\\n1012\\n2123\\n'\nassert solution(10, 3) == '10 6\\n2123\\n1012\\n2123\\n'\nassert solution(10, 10) == '10 10\\n2123\\n1012\\n2123\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'atk'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == '''atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''atk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11'''"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\nassert solution(stdin: str) == \"def solution(stdin: str) -> str: pass\\nassert solution(stdin: str) == \\\"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\\"\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) -> str:\n    def can_order_packages(packages):\n        for i in range(len(packages)):\n            for j in range(i+1, len(packages)):\n                if packages[i] >= packages[j]:\n                    return False\n        return True\n\n    n = int(stdin.strip())\n    packages = []\n    for _ in range(n):\n        package = input().split()\n        if package:\n            packages.append(package)\n\n    if n == 0:\n        return ''\n\n    while not can_order_packages(packages):\n        print('cannot be ordered')\n        break\n\n    ordered_packages = []\n    while packages:\n        ordered_packages.append(packages.pop(0))\n\n    return''.join(ordered_packages)"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('libattr') == 'atk'\nassert solution('vim-X11 vim-common gtk2 libattr') == 'atk'\nassert solution('vim-common gtk2 libtiff atk pango glib2') == 'atk'\nassert solution('libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2') == 'atk'\nassert solution('glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype') == 'atk'\nassert solution('emacs xorg-x11 lisp xorg-x11') == 'xorg-x11'\nassert solution('xorg-x11 lisp emacs') == 'xorg-x11'\nassert solution('0') == 'cannot be ordered'\n\nfrom typing import List"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"atk\\nfreetype\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nxorg-x11\\n\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"cannot be ordered\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n'\n\nfrom itertools import combinations"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 20\") == \"16\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"250 100\") == \"100\"\nassert solution(\"4 0\") == \"10\"\nassert solution
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"200 20\") == \"16\"\nassert solution(\"999 20\") == \"16\"\nassert solution(\"1000000 20\") == \"16\"\nassert solution(\"1000001 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"99 5\") == \"2\"\nassert solution(\"100 20\") == \"4\"\nassert solution(\"200 1\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"16\\n\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"123456789 123456789\") == \"16\"\nassert solution(\"123456789 12345678\") == \"16\"\nassert solution(\"123456789 1234567\") == \"16\"\nassert solution(\"123456789 123456\") == \"16\"\nassert solution(\"123456789 12345\") == \"16\"\nassert solution(\"123456789 1234\") == \"16\"\nassert solution(\"123456789 123\") == \"16\"\nassert solution(\"123456789 12\") == \"16\"\nassert solution(\"123456789 1\") == \"16\"\nassert solution(\"123456789 1000000000\") == \"16\"\nassert solution(\"123456789 999999999\") == \"16\"\nassert solution(\"123456789 99999999\") == \"16\"\nassert solution(\"123456789 9999999\") == \"16\"\nassert solution(\"123456789 999999\") == \"16\"\nassert solution(\"123456789 99999\") == \"16\"\nassert solution(\"123456789 9999\") == \"16\"\nassert solution(\"123456789 999\") == \"16\"\nassert solution(\"123456789 99\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123456789 9\") == \"16\"\nassert solution(\"123"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"The solution does not match the expected output: {output}, but {solution(input)}.\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nsolution(stdin=\"3 4\\n....\\n.#.#\\n....\\n\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'\nassert solution('3 3\\n....\\n....\\n....\\n....\\n...') == '3 3'\nassert solution('3 3\\n....\\n#.#\\n....\\n....') == '4 2'\nassert solution('3 4\\n....\\n..##\\n....\\n....') == '4 2'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test Failed: Your solution is not correct.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 3\\n1 2 4 1\\n2 3 3 1\\n3 1? 0\") == \"4\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 1 1\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n\") == \"5\"\\n\\n# Test cases\\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 1 1\\n\") == \"1\"\\n\\n# Test cases\\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 1 0\\n\") == \"0\"'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution\n\nfrom typing import List"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n\") == \"5\\n\"\nprint(\"Test passed\")"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0''') == '5\\n'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\nassert solution(\"1 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\") == 10\nassert solution(\"3 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == 5"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of rooms in the building: \")) == 0, \"Expected output: 0, received: \" + str(solution(input(\"Enter the number of rooms in the building: \")))"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\nassert solution(\"3 4\\n-1 2\\n-1 3\\n0 3\") == 3\nassert solution(\"2 5\\n-1 1\\n-1 5\\n0 5\") == 10"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"2 4\\n-1 0\\n-1 1\\n0 1\") == \"3\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 2\") == \"2\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 3\") == \"2\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 4\") == \"2\"\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 5\") == \"3\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6', 'Incorrect solution'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"Test case 1 failed\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6\\n'\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n9 6 2 4') == 6\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\"\nassert solution(\"1000000000\") == \"1000000000\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\"\nassert solution(\"5\\n5\") == \"5\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n3 4 5\") == \"3\\n5\\n7\\n\"\nassert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 6 2 4\") == \"6\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"10 5 1 2 3\") == \"6\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.000000\", \"Your solution is incorrect. Please see the provided test case.\"\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, \"Test Case Failed\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 1 1 3 2\\n2 5 1\") == \"2.000000\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '2 1 1 3 2\\n2 5 1'\n) == '2.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.000000\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '96', \"The output should be 96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"96\"\nassert solution(1) == \"45\"\nassert solution(4) == \"96\"\nassert solution(1, 2) == \"45\"\nassert solution(1, 3) == \"45\"\nassert solution(1, 4) == \"45\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"96\", \"Incorrect output.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output {output} does not match the expected output. Please check your code.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 96, \"Sample Output: 96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n3'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"2 0\\n3 0\\n3 1\\n1 2\") == \"6\"\nassert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n3 0\\n3 1\\n1 2\\n4 0\\n5 0\\n5 1\\n7 0\\n8 0\\n8 1\\n9 0\\n10 0\\n10 1\\n11 0\\n12 0\\n12 1\\n13 0\\n14 0\\n14 1\\n15 0\\n16 0\\n16 1\\n17 0\\n18 0\\n18 1\\n19 0\\n20 0\\n20 1\\n21 0\\n22 0\\n22 1\\n23 0\\n24 0\\n24 1\\n25 0\\n26 0\\n26 1\\n27 0\\n28 0\\n28 1\\n29 0\\n30 0\\n30 1\\n31 0\\n32 0\\n32 1\\n33 0\\n34 0\\n34 1\\n35 0\\n36 0\\n36 1\\n37 0\\n38 0\\n38 1\\n39 0\\n40 0\\n40 1\\n41 0\\n42 0\\n42 1\\n43 0\\n44 0\\n44 1\\n45 0\\n46 0\\n46 1\\n47 0\\n48 0\\n48 1\\n49 0\\n50 0\\n50 1\\n51 0\\n52 0\\n52 1\\n53 0\\n54 0\\n54 1\\n55 0\\n56 0\\n56 1\\n57 0\\n58 0\\n58 1\\n59 0\\n60 0\\n60 1\\n61 0\\n62 0\\n62 1\\n63 0\\n64 0\\n64 1\\n65 0\\n66 0\\n66 1\\n67 0\\n68 0\\n68 1\\n69 0\\n70 0\\n70 1\\n71 0\\n72 0\\n72 1\\n73 0\\n74 0\\n74 1\\n75 0\\n76 0\\n76 1\\n77 0\\n78 0\\n78 1\\n79 0\\n80 0\\n80 1\\n81 0\\n82 0\\n82 1\\n83 0\\n84 0\\n84 1\\n85 0\\n86 0\\n86 1\\n87 0\\n88 0\\n88 1\\n89 0\\n90 0\\n90 1\\n91 0\\n92 0\\n92 1\\n93 0\\n94 0\\n94 1\\n95 0\\n96 0\\n96 1\\n97 0\\n98 0\\n98 1\\n99 0\\n100 0\\n100 1\\n101 0\\n102 0\\n102 1\\n103 0\\n104 0\\n104 1\\n105 0\\n106 0\\n106 1\\n107 0"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0\n0 1\n1 0\n1 1\n''') == '3\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected: {expected}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\\n\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n10\\n9\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\n\nassert solution(\"3 8\\n1 3\\n4 5\") == \"10\\n10\\n10\"\n\nassert solution(\"2 10\\n1 9\\n5 4\") == \"10\\n10\\n10\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input {input()} should output {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(TEST_INPUT) == TEST_OUTPUT"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#JF#\\n..J#\\n..J#\\n') == '1'\nassert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for '{input_data}'\\nExpected output: {output_data}\\nGot: {solution(input_data)}\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndefinitely_impossible\\n\"\nassert solution(\"5 5\\n#####\\n#...#\\n#..#.\\n#...#\\n\") == \"0\\nimpossible\\n\"\nassert solution(\"1 1\\n.J.\\n#..#\\n.J.\\n.J.\\n\") == \"3\\nimpossible\\n\"\nassert solution(\"2 2\\n..J.\\n#...#\\n...J#\\n...J#\\n\") == \"2\\nimpossible\\n\"\nassert solution(\"3 3\\n#..#\\n#...#\\n#...#\\n#..#\\n\") == \"0\\nimpossible\\n\"\nassert solution(\"4 4\\n#..#\\n#...#\\n#...#\\n#..#\\n\") == \"3\\ndefinitely_impossible\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.3333333333\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.3333333333\\n\", \"Incorrect output\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\n\nimport random"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.3333333333\\n\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\n\nfrom random import randint"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 0.3333333333\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Output: {output}, Input: {input()}\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"1 2 2\\n2\\n1 2\") == \"0.6666666667\"\nassert solution(\"1 2 2\\n2\\n1 3\") == \"0.0\"\nassert solution(\"1 2 2\\n2\\n1 6\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\nassert solution(\"1 2 2\\n2\\n1 1\") == \"1.0\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO: Implement the solution\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1\") == 1023"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output: {solution(sample_input)}\"\n\nsample_input = \"\"\"\n10\n1\n\"\"\"\n\nsample_output = \"\"\"\n1023\n\"\"\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1023"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10\n    1\n    \"\"\"\n) == \"1023\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2') == 6, \"Test 1: expected output 6, got {}\".format(solution('2 2')) # Test 1: expected output 6, got 6"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == 6, \"Test case 1 failed\"\nassert solution(\"0 0\") == 0, \"Test case 2 failed\"\nassert solution(\"5 6\") == 18, \"Test case 3 failed\"\nassert solution(\"1 1\") == 1, \"Test case 4 failed\"\nassert solution(\"1000000000 9999999999\") == 1000000000, \"Test case 5 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Test 1\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6', \"Incorrect Output\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output is not correct.\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6\\n', \"Your implementation is incorrect. It should return '6'.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"1 2\") == \"7\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 6\nassert solution(2) == 12\nassert solution(3) == 18\nassert solution(4) == 24\nassert solution(5) == 30"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1500\") == \"Impossible\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1500\\n\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1000\\n\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1500\\n1500\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2930\\n\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2930, \"Test failed\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\\nImpossible\\n') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2930\\n\", \"The output should be 2930, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"2\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1, 2, 3, 0, 0, 1]) == \"2\\n\"\nassert solution([1, 2, 3, 0, 0, 2]) == \"3\\n\"\nassert solution([1, 2, 3, 0, 0, 3]) == \"4\\n\"\nassert solution([1, 2, 3, 0, 0, 4]) == \"5\\n\"\nassert solution([1, 2, 3, 0, 0, 5]) == \"6\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\\n\\n\\n\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == 2, \"Incorrect output\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2', \"Expected: '2', but got: 'None'\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Solution is {solution(stdin=input())}, expected {output}\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Your solution is incorrect. The least number of times an object must be read into the cache to handle the accesses listed in the input is 2.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"2\", \"Output: \" + solution(stdin: str)"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_result, f\"Solution {solution} does not match the expected result {expected_result}\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == 10"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10, \"Please provide the correct output\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n    ''') == '10\\n'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 10"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Your solution is incorrect. \\nExpected output: '{output_data}', \\nReceived output: '{solution(input_data)}'\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    \"\"\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test case {input} failed: got '{output}', expected '{output}'\"\nfor case in test_cases:\n    assert solution(case[0]) == case[1], f\"Test case {case[0]} failed: got '{solution(case[0])}', expected '{case[1]}'\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3100\\n\"\nassert solution() == \"1700\\n\"\nassert solution() == \"2000\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected '{expected}', got '{solution(input)}'.\"\nfor i in range(10):\n    a, b, c = map(int, input().split())\n    assert 1 <= a <= N and 1 <= b <= N, f\"Invalid airport number: {a}\"\n    assert 1 <= c <= 10000, f\"Invalid cost: {c}\"\nfor _ in range(F):\n    a, b = map(int, input().split())\n    assert 1 <= a <= N and 1 <= b <= N, f\"Invalid airport number: {a}\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 0\nassert solution(input()) == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Incorrect solution\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n'\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution does not match the expected output.\\nInput: {sample_input}\\nOutput: {sample_output}\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\nassert solution('4 3\\n0 1\\n1 2\\n2 3\\n0 1\\n2 3\\n0 1\\n2 3\\n0 1\\n') == '2\\n'\nassert solution('2 1\\n0 1\\n1 2\\n1 3\\n1 4\\n0 1\\n2 3\\n3 4\\n2 3\\n3 4\\n2 3\\n3 4\\n3 4\\n') == '3\\n'\nassert solution('2 1\\n0 1\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\nassert solution('2 1\\n0 2\\n') == '2\\n'\nassert solution('2 1\\n1 0\\n1 1\\n') == '2\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n2 3\\n') == '2\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n3 0\\n3 1\\n3 2\\n') == '5\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n3 0\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n') == '5\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n3 0\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n5 2\\n5 3\\n5 4\\n') == '5\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n3 0\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n5 2\\n5 3\\n5 4\\n6 3\\n6 4\\n6 5\\n') == '7\\n'\nassert solution('2 1\\n1 0\\n1 1\\n2 2\\n3 0\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n5 2\\n5 3\\n5 4\\n6 3\\n6 4\\n6 5\\n7 4\\n7 5\\n7 6\\n') == '8\\n'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Your code is not correct.\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 10\nassert solution(73) == 1\nassert solution(42) == 2\nassert solution(21) == 1\nassert solution(1984) == 2\nassert solution(1755) == 1\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the first positive integer X: \")) == \"10\", \"Invalid input. Please enter a positive integer.\"\nassert solution(input(\"Enter the second positive integer Y: \")) == \"1\", \"Invalid input. Please enter a positive integer.\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"10\"  # sample output"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(73) == 10\nassert solution(21) == 10\nassert solution(42) == 10"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    1 10\n    \"\"\"\n) == \"10\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 0, \"Expected 0, but got \" + solution(input())"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"5\\n-10000 0\\n0 1000\\n0 1000\\n5000 5000\") == 1\nassert solution(\"6\\n0 0\\n1000 0\\n1000 1000\\n-20000 -20000\") == 2\nassert solution(\"7\\n1000 0\\n1000 1000\\n0 1000\\n-20000 -20000\") == 2\nassert solution(\"8\\n-20000 0\\n0 1000\\n1000 1000\\n-20000 -20000\") == 3"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Test failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0\nassert solution(\"10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 1\nassert solution(\"5\\n1000 -1000\\n1000 1000\\n-1000 1000\\n0 0\") == 2"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000') == 0\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0\nassert solution('10000 10000\\n0 0\\n-5000 -5000\\n15000 15000\\n0 15000\\n') == 0\nassert solution('10000 10000\\n0 0\\n-5000 -5000\\n15000 15000\\n0 15000\\n10000 5000\\n-20000 -20000\\n-20000 20000\\n') == 1\nassert solution('10000 10000\\n0 0\\n-5000 -5000\\n15000 15000\\n0 15000\\n10000 5000\\n-20000 -20000\\n-20000 20000\\n10000 5000\\n-10000 -10000\\n-10000 10000\\n') == 2"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Test case 1 failed.\"\n\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 1, \"Test case 2 failed.\"\n\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 1000\\n\") == 3, \"Test case 3 failed.\"\n\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n\") == 4, \"Test case 4 failed.\"\n\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n\") == 5, \"Test case 5 failed.\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"Output: 0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0\\n'\nassert solution('4\\n1001 1000\\n-20000 0\\n-10000 1000\\n0 0\\n') == '0\\n'\nassert solution('4\\n-20000 0\\n-10000 1000\\n0 1000\\n1000 1000\\n') == '1\\n'\nassert solution('4\\n1001 1000\\n0 1000\\n1000 1000\\n-20000 0\\n') == '1\\n'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\nassert solution(\"2 1\\n0 2 0.5\\n0 3 0.5\\n0 4 0.5\\n\") == \"0.500000000 -1.000000000\"\nassert solution(\"2 2\\n0 1 0.5\\n0 3 0.5\\n0 4 0.5\\n\") == \"0.250000000 -0.500000000\"\nassert solution(\"2 2\\n0 2 0.5\\n0 3 0.5\\n0 4 0.5\\n\") == \"0.250000000 -0.500000000\"\nassert solution(\"2 2\\n0 1 0.5\\n0 3 0.5\\n0 4 0.5\\n\") == \"0.250000000 -0.500000000\"\nassert solution(\"2 2\\n0 2 0.5\\n0 3 0.5\\n0 4 0.5\\n\") == \"0.250000000 -0.500000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"2 3\\n0 0 0.75\\n1 1 0.25\\n2 2 0.5\") == \"0.675000000 1.000000000\\n0.500000000 1.000000000\\n\"\nassert solution(\"2 2\\n0 0 0.5\\n1 1 0.5\\n2 2 0.5\") == \"0.666666667 1.000000000\\n0.500000000 1.000000000\\n\"\nassert solution(\"2 3\\n0 0 0.75\\n1 1 0.25\\n2 2 0.5\") == \"0.675000000 1.000000000\\n0.500000000 1.000000000\\n\"\nassert solution(\"3 1\\n0 0 0.25\\n1 1 0.5\\n2 2 0.25\") == \"-1.000000000 1.000000000\\n\"\nassert solution(\"3 4\\n0 0 0.75\\n1 1 0.25\\n2 2 0.5\\n3 3 0.25\\n\") == \"0.125000000 1.000000000\\n0.000000000 1.000000000\\n0.000000000 1.000000000\\n0.000000000 1.000000000\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.500000000 1.000000000\\n'\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"The expected output is {expected_output}, but it is {solution}.\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"PASSED\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\"\"\n    6\n    1 1\n    4 1\n    1 5\n    10 10\n    10 8\n    7 10\n\"\"\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    6\n    1 1\n    4 1\n    1 5\n    10 10\n    10 8\n    7 10\n    ''') == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\nassert solution('4\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '4\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"5\\n1 1\\n2 1\\n1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1\\n1 2\") == \"2\\n\"\nassert solution(\"6\\n1 1\\n1 1\\n1 1\") == \"1\\n\"\nassert solution(\"10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 "
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [9-b, 8-a, def solution(stdin: str) -> str: pass]\nassert solution(\"3\\na b\\nb c\\n1-a 2-b\\n3-a 4-b\\n1-b 5-c\\n1-a 3-b\\n\") == [3-b, 3-a, def solution(stdin: str) -> str: pass]\nassert solution(\"10\\nabcd\\n123-efg\\n234-h\\n456-i\\n789-j\\n0\") == [123-efg, 234-h, 456-i, 789-j, def solution(stdin: str) -> str: pass]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Solution {solution(input_str)} should be {expected_output}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\\treturn ''\\n\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Please write your code here...\\n# You can use the provided solution and the sample input/output to test the correctness of your solution.\\n# Example:\\n# solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n')\\n# Output:\\n# 9-b\\n# 8-a\\n\"\n\nsolution = lambda: 1"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == ['9-b', '8-a']"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_data)}\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == ['9-b', '8-a', 'def solution(stdin: str) -> str:']\n\nprint('All test cases passed!')"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3246R3246\", \"Expected output: 3246R3246, got: {}\".format(solution(input()))"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input {input()} and output {output()} do not match.\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\"1\\n\"\n                   \"echo\\n\"\n                   \"1\\n\"\n                   \"echoecho\") == \"3246R3246\\"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('echo\\n1\\nechoecho\\n') == '3246R3246\\ndef\\n'\nassert solution('echo\\n1\\n1echo\\n') == '1R1\\n1\\n1\\n1\\n'\nassert solution('echo\\n1\\n123echo\\n') == '123R123\\n123\\n123\\n123\\n'\nassert solution('echo\\n1\\n1234567890echo\\n') == '1234567890R1234567890\\n1234567890\\n1234567890\\n1234567890\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndefsolution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1\necho\n1\nechoecho\n''') == '''\n3246R3246\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3246R3246\", \"Expected output not found.\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n\") == \"R3246\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"RU\"\nassert solution(\"1\\nHELLO\\n2\\nWORLD\\n3\\n4\\n5"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\necho\\n1\\nechoecho\\n') == '3246R3246def solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\necho\\n1\\nechoecho') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3147.3, 1, 2) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3 1) == 'YES\\n1 2\\n1 3'\nassert solution(3 2) == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"2 2\") == \"YES\\n1 1\\n1 3\"\nassert solution(\"4 1\") == \"NO\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n1 2\\n1 3'\nprint('NO')"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 176, \"Test failed!\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\\n\\n\\n\\n') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"example.txt\", \"r\").read()) == 176, \"Incorrect output\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\"\nassert solution(12) == \"016\"\nassert solution(10000000) == \"32480\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"12\", \"Expected output: 12, Actual output: \" + solution(5)"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"12\"\nassert solution(10) == \"1016\"\nassert solution(100) == \"01600\"\nassert solution(1000) == \"0016000\"\nassert solution(10000) == \"000160000\"\nassert solution(100000) == \"000001600000\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"12\", \"The output is incorrect\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '012'\nassert solution(10) == '01600'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"016\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"12\", \"Test case 1 failed\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '12', \"Expected '12', but got '{}' instead.\".format(solution(5))\nprint(solution(5))  # Output: '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"15\") == \"016\"\nassert solution(\"100\") == \"123\"\nassert solution(\"500\") == \"000\"\nassert solution(\"1000\") == \"012\"\nassert solution(\"10000\") == \"016\"\nassert solution(\"100000\") == \"000\"\nassert solution(\"1000000\") == \"016\"\nassert solution(\"10000000\") == \"123\"\nassert solution(\"100000000\") == \"000\"\nassert solution(\"1000000000\") == \"000\"\nassert solution(\"10000000000\") == \"000\"\nassert solution(\"100000000000\") == \"000\"\nassert solution(\"1000000000000\") == \"000\"\nassert solution(\"10000000000000\") == \"000\"\nassert solution(\"100000000000000\") == \"000\"\nassert solution(\"1000000000000000\") == \"000\"\nassert solution(\"10000000000000000\") == \"123\"\nassert solution(\"100000000000000000\") == \"123\"\nassert solution(\"1000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000\") == \"123\"\nassert solution(\"100000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000000\") == \"123\"\nassert solution(\"100000000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000000000\") == \"123\"\nassert solution(\"100000000000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000000000000\") == \"123\"\nassert solution(\"10000000000000000000000000000000\") == \"123\"\nassert solution(\"1000000000000000000000000000000000\") == \"123\"\nassert solution(\"100000000000000000000000000000000\") == \"123\"\nassert solution(\"100"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480) # correct\n\nassert solution('''\n4 1\n(()()\n500\n-350\n100\n''') == 0) # incorrect\n\nassert solution('''\n4 1\n(())\n-500\n100\n''') == 0) # incorrect\n\nassert solution('''\n4 1\n(()()\n-500\n100\n''') == 0) # incorrect\n\nassert solution('''\n4 2\n(()()\n-500\n100\n''') == 100) # incorrect\n\nassert solution('''\n4 1\n(())\n-500\n100\n''') == 0) # incorrect\n\nassert solution('''\n4 1\n(()()\n-500\n100\n''') == 0) # incorrect"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"4 1\\n(())\\n480\\n617\\n-570\\n928\\n\") == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == 480)\nassert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480)\nassert solution(\"4 2\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"?\")\nassert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == 480)\nassert solution(\"4 2\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"?\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == 0)\nassert solution('4 1\\n(()\\n480\\n617\\n-570\\n928') == 1073741824)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480, \"Incorrect output for solution.\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1\\n(())\\n480\\n617\\n-570\\n928\\n') == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"480\")  # correct answer\nassert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"?\")  # incorrect answer"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"480\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\n((()480617-570928\\n') == 480\nassert solution('4 2\\n(())\\n((())\\n') == 16\nassert solution('3 2\\n(())\\n((())\\n') == 0\nassert solution('3 3\\n(())\\n((())\\n') == 0\nassert solution('3 4\\n(())\\n((())\\n') == 0\nassert solution('4 4\\n(())\\n((())\\n') == 0\nassert solution('4 5\\n(())\\n((())\\n') == 0\nassert solution('4 6\\n(())\\n((())\\n') == 0\nassert solution('4 7\\n(())\\n((())\\n') == 0\nassert solution('4 8\\n(())\\n((())\\n') == 0\nassert solution('4 9\\n(())\\n((())\\n') == 0\nassert solution('4 10\\n(())\\n((())\\n') == 0\nassert solution('4 11\\n(())\\n((())\\n') == 0\nassert solution('4 12\\n(())\\n((())\\n') == 0\nassert solution('4 13\\n(())\\n((())\\n') == 0\nassert solution('4 14\\n(())\\n((())\\n') == 0\nassert solution('4 15\\n(())\\n((())\\n') == 0\nassert solution('4 16\\n(())\\n((())\\n') == 0\nassert solution('4 17\\n(())\\n((())\\n') == 0\nassert solution('4 18\\n(())\\n((())\\n') == 0\nassert solution('4 19\\n(())\\n((())\\n') == 0\nassert solution('4 20\\n(())\\n((())\\n') == 0\nassert solution('4 21\\n(())\\n((())\\n') == 0\nassert solution('4 22\\n(())\\n((())\\n') == 0\nassert solution('4 23\\n(())\\n((())\\n') == 0\nassert solution('4 24\\n(())\\n((())\\n') == 0\nassert solution('4 25\\n(())\\n((())\\n') == 0\nassert solution('4 26\\n(())\\n((())\\n') == 0\nassert solution('4 27\\n(())\\n((())\\n') == 0\nassert solution('4 28\\n(())\\n((())\\n') == 0\nassert solution('4 29\\n(())\\n((())\\n') == 0\nassert solution('4 30\\n(())\\n((())\\n') == 0\nassert solution('4 31\\n(())\\n((())\\n') == 0\nassert solution('4 32\\n(())\\n((())\\n') == 0\nassert solution('4 33\\n(())\\n((())\\n') == 0\nassert solution('4 34\\n(())\\n((())\\n') == 0\nassert solution('4 35\\n(())\\n((())\\n') == 0\nassert solution('4 36\\n(())\\n((())\\n') == 0\nassert solution('4 37\\n(())\\n((())\\n') == 0\nassert solution('4 38\\n(())\\n((())\\n') == 0\nassert solution('4 39\\n(())\\n((())\\n') == 0\nassert solution('4 40\\n(())\\n((())\\n') == 0\nassert solution('4 41\\n(())\\n((())\\n') == 0\nassert solution('4 42\\n(())\\n((())\\n') == 0\nassert solution('4 43\\n(())\\n((())\\n') == 0\nassert solution('4 44\\n(())\\n((())\\n') == 0\nassert solution('4 45\\n(())\\n((())\\n') == 0\nassert solution('4 46\\n(())\\n((())\\n') == 0\nassert solution('4 47\\n(())\\n((())\\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"480\", \"Please solve the problem.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\nassert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == 'None'\nassert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == 'None'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Incorrect output\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    13\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n    2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2 2 2\n    2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Your solution is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2 4\\n5 6\\n7 8 9 10 11 12 13', 'The solution is incorrect.'\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2 4\n5 6\n7 8 9 10 11 12 13\"\"\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 10 11\\n2 9 11\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n1 2\\n1 1\\n2 1\\n1 2\\n1 3\\n2 2\\n1 1\\n2 1\\n2 3\\n2 2\\n2 3\\n2 1\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 2\\n1"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 2 4\\n5 6\\n7 8 9 10 11 12 13\") == \"5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 2 4\\n5 6\\n7 8 9 10 11 12 13\") == \"7 8 9 10 11 12 13\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n\nfrom typing import List"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"4294967295\\n\", \"Solution should output the correct output\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == []\nassert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == [35, 39, 36, 27, 29]\n\nfrom collections import defaultdict"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [\"35\", \"39\", \"36\", \"27\", \"29\"]\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Your solution does not meet the requirements.\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672\\n'\nassert solution('3 2 1') == '0 672\\n'\nassert solution('3 2 1 4 5') == '0 672\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3 3\n    3 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    4 2 1''') == '0 333'\n\nassert solution('''\n    4 4\n    1 0 1 1 0 1 1''') == '13031'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3\n    3 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1\n    2 2 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1''') == '0 672'\n\nassert solution('''\n    3 3\n    3 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1\n    2 2 2 1''') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == 0\nassert solution(\"3 4 2\\n1 1 1\\n\") == 42\nassert solution(\"3 2 1\\n1 1 1\\n\") == 42\nassert solution(\"3 3\\n2 2 2\\n\") == 189"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == \"0 672\"\n\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2.500000\\n'\nprint('Possible')"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2.500000'\nassert solution(input()) == 'Impossible'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected: {expected_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2.5\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.5\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2.500000'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 4\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"6 5 3\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"8 4 3 2\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 5 3 2 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"12 6 3 2 1 4\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"15 6 3 2 1 4 5 4\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"18 7 3 2 1 4 5 4 6 5\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 6\nassert solution(7) == 7"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('tests/test_crane.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"2\"\nassert solution(5) == \"1\"\nassert solution(6) == \"0\"\nassert solution(7) == \"2\"\nassert solution(8) == \"3\"\nassert solution(9) == \"4\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5 3 4') == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5 3 4\n    \"\"\"\n) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3\nprint(\"pass\")"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The function should return '{expected}' but instead returned '{solution(input())}'.\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(6) == 6\nassert solution(7) == 6\nassert solution(9) == 7\nassert solution(12) == 9"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '2\\n'\nassert solution('3 3 3') == '3\\n'\nassert solution('1 1 1') == '1\\n'\nassert solution('10 10 10') == '2147483647\\n'\nassert solution('1000000000 1000000000 1000000000') == '2147483647\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '2\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3 3 3) == '2'\nassert solution(5 1 1) == '2'\nassert solution(5 2 2) == '2'\nassert solution(10 1 1) == '3'\nassert solution(10 1 2) == '3'\nassert solution(10 1 3) == '3'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The output is incorrect.\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nassert solution(\"4 2 1\") == \"4\\n\"\nassert solution(\"1 3 4\") == \"1\\n\"\nassert solution(\"6 5 3\") == \"2\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\\n\") == \"7\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"14\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"21\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"28\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"35\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"42\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"49\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"56\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"63\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"70\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"77\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"84\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"91\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"98\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"105\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"112\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"119\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"126\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"133\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"140\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"147\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 "
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 2') == '2'\nassert solution('5\\n1000000000') == '1000000000'\nassert solution('1\\n') == '1'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 5\\n') == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\nassert solution(\"1\\n5 10 20\") == \"10\\n\"\nassert solution(\"5\\n1 2 3\") == \"12\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"12\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n1 3 5\\n\") == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\", \"Incorrect output\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 5\\n\") == \"7\"\nassert solution(\"6\\n1 3 5 6 7 9\\n\") == \"13\"\nassert solution(\"10\\n1 3 5 6 7 9 10 11 13\\n\") == \"29\"\nassert solution(\"12\\n1 3 5 6 7 9 10 11 12 13 14\\n\") == \"47\"\nassert solution(\"15\\n1 3 5 6 7 9 10 11 12 13 14 15\\n\") == \"65\"\nassert solution(\"16\\n1 3 5 6 7 9 10 11 12 13 14 15 16\\n\") == \"83\"\nassert solution(\"18\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18\\n\") == \"101\"\nassert solution(\"19\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"121\"\nassert solution(\"20\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"141\"\nassert solution(\"21\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"161\"\nassert solution(\"22\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"181\"\nassert solution(\"23\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"201\"\nassert solution(\"24\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\\n\") == \"221\"\nassert solution(\"25\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\\n\") == \"241\"\nassert solution(\"26\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\\n\") == \"261\"\nassert solution(\"27\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\\n\") == \"281\"\nassert solution(\"28\\n1 3 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\\n\") == \"301\"\nassert solution(\"29\\n1 3 5 6 7 9 10 11 12 13 14 15 16 "
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'fred jetsons\\njohn jets\\nruth rockets\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'fred jetsons\\nruth rockets'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_file) == expected_output, f\"Test case {test_case} failed: {solution(input_file)!= expected_output}\"\nfor test_case in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    input_file = f\"n={n}\\n\"\n    expected_output = f\"{' '.join(stdin.readline().split())}\\n\"\n    solution(input_file) == expected_output, f\"Test case {test_case} failed: {solution(input_file)!= expected_output}\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'fred jetsons\\njohn jets\\nruth rockets'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'fred jetsons\\nfred jets\\nruth rockets'\nassert solution() == 'Impossible'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\\n\\nImpossible.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '1 2 1'\nassert solution(stdin=open('input2.txt', 'r')) == '1 2 1'\nassert solution(stdin=open('input3.txt', 'r')) == '1 2 1'\nassert solution(stdin=open('input4.txt', 'r')) == '1 2 1'\nassert solution(stdin=open('input5.txt', 'r')) == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == [\"1\", \"2\", \"1\"]\nassert solution(\"3\") == [\"1\"]\nassert solution(\"10\") == [\"1\"]\nassert solution(\"5\") == [\"1\"]\nassert solution(\"1 2 1\") == [\"1\", \"2\", \"1\"]\nassert solution(\"2 3 1\") == [\"1\", \"2\", \"1\"]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == ['1 2 1'] #sample output"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1 2 1\\n\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 2 1\\n\", \"The solution for the given problem should be 1 2 1.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == [\"1 2 1\"]\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 2 1\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1 2 1\\n', \"Test case 1 incorrect\"\nassert solution(stdin) == '1 2 1\\n', \"Test case 2 incorrect\"\nassert solution(stdin) == '1 2 1\\n', \"Test case 3 incorrect\"\nassert solution(stdin) == '1 2 1\\n', \"Test case 4 incorrect\"\nassert solution(stdin) == '1 2 1\\n', \"Test case 5 incorrect\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.125\", \"Incorrect output\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.125\\n\", \"Expected output not obtained.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"2.125\\n\"\nassert solution(5) == \"2.10714\\n\"\nassert solution(6) == \"1.78571\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected, f\"Input {input_str} does not produce the expected output {expected}.\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.125\"\nprint(\"Correct\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '2.125'\nprint('All tests passed')"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"main.c\\n\"\nassert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"a.out\\n\"\nassert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"main.c\\n\"\nassert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"a.out\\n\"\nassert solution(stdin=\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"a*.*\") == \"main.c\"\nassert solution(\"*.*\") == \"main.c\"\nassert solution(\"a*.*b\") == \"def\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"ls.in\", \"r\")) == \"main.c\\na.out\\n\"\nassert solution(open(\"ls.in\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(open(\"ls.in\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(open(\"ls.in\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(open(\"ls.in\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(open(\"ls.in\", \"r\")) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"**\") == \"main.c\"\nassert solution(\"abc*.py\") == \"abc.py\"\nassert solution(\"abc*\") == \"abc.py\"\nassert solution(\"abc**\") == \"abc.py\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a.out\", 4) == [\"a.out\"]\nassert solution(\"*.c\", 3) == [\"a.out\", \"readme\"]\nassert solution(\"xyz\", 2) == []"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"*.c\") == \"main.c\\na.out\"\nassert solution(\"a*\") == \"a.out\\nyacc\"\nassert solution(\"abc*\") == \"abc.c\\nab.c\\nbc.c\"\nassert solution(\"def*ghi*jkl*\") == \"def.c\\nghi.c\\njkl.c\\nmain.c\\nxyz.c\"\nassert solution(\"*.c\") == \"main.c\\na.out\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.c.zip\") == [\"main.c\", \"a.out\"]\nassert solution(\"a*\") == [\"a.out\"]\nassert solution(\"a*\") == [\"a.out\"]\nassert solution(\"**/*.c\") == [\"a.out\", \"main.c\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"*.*\n    *.*\n    *.*\"\"\"\n) == [\n    'main.c',\n    'a.out',\n    'def_solution.py',\n    'yacc.py'\n]\n\nassert solution(\n    \"\"\"*.c\n    *.c\n    *.c\"\"\"\n) == [\n    'main.c',\n    'a.out'\n]\n\nassert solution(\n    \"\"\"*.*\n    *.c\n    *.c\"\"\"\n) == [\n    'main.c',\n    'a.out'\n]\n\nassert solution(\n    \"\"\"*.*\n    *.c\n    *.*\"\"\"\n) == [\n    'main.c'\n]\n\nassert solution(\n    \"\"\"*.*\n    *.c\n    *.*\"\"\"\n) == [\n    'main.c'\n]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == ['main.c', 'a.out']\nassert solution(input()) == ['def.c', 'def.o']\nassert solution(input()) == ['dir1/file1.c', 'dir1/file2.c', 'dir2/file3.c']"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"2 2\\n0.250000\\n0.350000\\n0.500000\\n0.750000\\n\") == \"0.279208\\n\"\nassert solution(\"2 2\\n0.250000\\n0.350000\\n0.500000\\n0.750000\\n0.200000\\n\") == \"0.250000\\n\"\nassert solution(\"1 2\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"2 3\\n0.250000\\n0.350000\\n\") == \"0.279208\\n\"\nassert solution(\"2 3\\n0.250000\\n0.350000\\n0.200000\\n\") == \"0.250000\\n\"\nassert solution(\"3 1\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"3 2\\n0.250000\\n0.350000\\n\") == \"0.279208\\n\"\nassert solution(\"3 2\\n0.250000\\n0.350000\\n0.200000\\n\") == \"0.250000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\"\nassert solution(\"1 2\\n0.499999\\n0.500001\\n\") == \"0.500000\"\nassert solution(\"1 2\\n0.499999\\n0.500001\\n0.500000\\n\") == \"0.500000\"\nassert solution(\"1 2\\n0.500000\\n0.499999\\n0.500001\\n0.500000\\n\") == \"0.500000\"\nassert solution(\"1 1\\n0.500000\\n\") == \"0.500000\"\nassert solution(\"1 2\\n0.500000\\n0.499999\\n0.500001\\n0.500000\\n\") == \"0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.500000\\n', \"Your code is incorrect. Please check the provided code and make sure it passes the test cases.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000\\n'\nassert solution('2 2\\n0.500000') == '0.500000\\n'\nassert solution('3 3\\n0.500000') == '0.500000\\n'\nassert solution('4 4\\n0.500000') == '0.500000\\n'\nassert solution('5 5\\n0.500000') == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.500000, \"The given code is not correct.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0.499\\n') == '0.0\\n'\nassert solution('0.999\\n') == '0.0\\n'\nassert solution('1.000\\n') == '0.0\\n'\nassert solution('1.001\\n') == '0.0\\n'\nassert solution('1.499\\n') == '0.0\\n'\nassert solution('1.500\\n') == '0.0\\n'\nassert solution('1.501\\n') == '0.0\\n'"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 0"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 50.0\") == \"0.0\"\nassert solution(\"0 49.99\") == \"0.0\"\nassert solution(\"0 50.00\") == \"0.0\"\nassert solution(\"0 49.999\") == \"0.0\"\nassert solution(\"0 50.000\") == \"0.0\"\nassert solution(\"0 49.9999\") == \"0.0\"\nassert solution(\"0 50.0000\") == \"0.0\"\nassert solution(\"0 49.99999\") == \"0.0\"\nassert solution(\"0 50.00000\") == \"0.0\"\nassert solution(\"0 49.999999\") == \"0.0\"\nassert solution(\"0 50.000000\") == \"0.0\"\nassert solution(\"0 49.9999999\") == \"0.0\"\nassert solution(\"0 50.0000000\") == \"0.0\"\nassert solution(\"0 49.99999999\") == \"0.0\"\nassert solution(\"0 50.00000000\") == \"0.0\"\nassert solution(\"0 49.999999999\") == \"0.0\"\nassert solution(\"0 50.000000000\") == \"0.0\"\nassert solution(\"0 49.9999999999\") == \"0.0\"\nassert solution(\"0 50.0000000000\") == \"0.0\"\nassert solution(\"0 49.99999999999\") == \"0.0\"\nassert solution(\"0 50.00000000000\") == \"0.0\"\nassert solution(\"0 49.999999999999\") == \"0.0\"\nassert solution(\"0 50.000000000000\") == \"0.0\"\nassert solution(\"0 49.9999999999999\") == \"0.0\"\nassert solution(\"0 50.0000000000000\") == \"0.0\"\nassert solution(\"0 49.99999999999999\") == \"0.0\"\nassert solution(\"0 50.00000000000000\") == \"0.0\"\nassert solution(\"0 49.999999999999999\") == \"0.0\"\nassert solution(\"0 50.000000000000000\") == \"0.0\"\nassert solution(\"0 49.9999999999999999\") == \"0.0\"\nassert solution(\"0 50.0000000000000000\") == \"0.0\"\nassert solution(\"0 49.99999999999999999\") == \"0.0\"\nassert solution(\"0 50.00000000000000000\") == \"0.0\"\nassert solution(\"0 49.999999999999999999\") == \"0.0\"\nassert solution(\"0 50.000000000000000000\") == \"0.0\"\nassert solution(\"0 49.99999999999999999999\") == \"0.0\"\nassert solution(\"0 50.0000000000000000000\") == \"0.0\"\nassert solution(\"0 49.999999999999999999999\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.0\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Incorrect output\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\"\nassert solution(input()) =="
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.0, \"Invalid output\"\n\nfrom typing import List"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 4\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 1\n4 1\n''') == '''\n4 1\n2 1\n3 2\n1 3\n'''\nassert solution('''\n3\n1 2\n2 3\n3 1\n4 1\n''') == '''\n1 2\n2 3\n3 1\n4 1\n'''\nassert solution('''\n6\n1 2\n2 3\n3 1\n1 4\n4 5\n5 6\n6 1\n''') == '''\n1 2\n2 3\n3 1\n4 5\n5 6\n6 1\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 13"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is not correct. Please fix it and resubmit.\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# test the correctness of solution\\n# You can add more test cases to check the correctness of your solution.\\n# For example, you can test cases for different scenarios or edge cases.\\n# Also, you can add more examples to test the efficiency of your solution.\\n# Finally, you can add more test cases to verify your algorithm's correctness.\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the number of types of sweets: \")) == 1\nassert solution(input(\"Enter the proportions of sweets: \")) == 1.0\nassert solution(input(\"Enter the sequence of sweets: \")) == 1"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) =="
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Example Output:\\n1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1\\n'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    2 1 6 3 5 3\n    1 2 5 3 5\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    6 10\n    2 1 6 3 5 3\n    1 2 5 3 5\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    6 5\n    2 1 6 3 5 3\n    1 2 5 3 5\n    3 4 5 6 5\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 1, \"You need to implement the solution function\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == solution"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'\nassert solution('5 3 10\\n1 2 3 4 5 6 7 8 9') == 'impossible\\n'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:pass\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"2 2 10\\n0 1 1 2 6\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Expected '{output_str}', got '{solution(input_str)}'.\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1 # TODO: implement your solution here"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(solution)"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\") == \"0.5\"\nassert solution(\"T\") == \"0.5\"\nassert solution(\"0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H\\nT\\n0.5\\n\") == \"0.5\", \"The correct output must be '0.5'.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"Your solution should be 0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('H') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nsolution(\"H\\nT\\n0.5\")"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The probability that Gon wins is incorrect\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', 'Your solution is incorrect'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\\nT\\n0.5\\n\") == \"0.5\\n\", \"Input: H\\nT\\n0.5\\nOutput: 0.5\\n\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5\nassert solution(\"H\\nT\\n0.3\") == 0.0\nassert solution(\"HH\\nTT\\n0.5\") == 0.5\nassert solution(\"HH\\nTT\\n0.3\") == 0.5\nassert solution(\"H\\nT\\n0.9\") == 0.0\nassert solution(\"HH\\nTT\\n0.9\") == 0.5"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"4\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"5\") == \"16\\n1 3 5 7 9 11 13 15\"\nassert solution(\"6\") == \"20\\n1 3 5 7 9 11 13 15\"\nassert solution(\"7\") == \"24\\n1 3 5 7 9 11 13 15\"\nassert solution(\"8\") == \"28\\n1 3 5 7 9 11 13 15\"\nassert solution(\"9\") == \"32\\n1 3 5 7 9 11 13 15\"\nassert solution(\"10\") == \"36\\n1 3 5 7 9 11 13 15\"\nassert solution(\"11\") == \"40\\n1 3 5 7 9 11 13 15\"\nassert solution(\"12\") == \"44\\n1 3 5 7 9 11 13 15\"\nassert solution(\"13\") == \"48\\n1 3 5 7 9 11 13 15\"\nassert solution(\"14\") == \"52\\n1 3 5 7 9 11 13 15\"\nassert solution(\"15\") == \"56\\n1 3 5 7 9 11 13 15\"\nassert solution(\"16\") == \"60\\n1 3 5 7 9 11 13 15\"\nassert solution(\"17\") == \"64\\n1 3 5 7 9 11 13 15\"\nassert solution(\"18\") == \"68\\n1 3 5 7 9 11 13 15\"\nassert solution(\"19\") == \"72\\n1 3 5 7 9 11 13 15\"\nassert solution(\"20\") == \"76\\n1 3 5 7 9 11 13 15\"\nassert solution(\"21\") == \"80\\n1 3 5 7 9 11 13 15\"\nassert solution(\"22\") == \"84\\n1 3 5 7 9 11 13 15\"\nassert solution(\"23\") == \"88\\n1 3 5 7 9 11 13 15\"\nassert solution(\"24\") == \"92\\n1 3 5 7 9 11 13 15\"\nassert solution(\"25\") == \"96\\n1 3 5 7 9 11 13 15\"\nassert solution(\"26\") == \"100\\n1 3 5 7 9 11 13 15\"\nassert solution(\"27\") == \"104\\n1 3 5 7 9 11 13 15\"\nassert solution(\"28\") == \"108\\n1 3 5 7 9 11 13 15\"\nassert solution(\"29\") == \"112\\n1 3 5 7 9 11 13 15\"\nassert solution(\"30\") == \"116\\n1 3 5 7 9 11 13 15\"\nassert solution(\"31\") == \"120\\n1 3 5 7 9 11 13 15\"\nassert solution(\"32\") == \"124\\n1 3 5 7 9 11 13 15\"\nassert solution(\"33\") == \"128\\n1 3 5 7 9 11 13 15\"\nassert solution(\"34\") == \"132\\n1 3 5 7 9 11 13 15\"\nassert solution"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"6\\n\") == \"15\\n7 13 19 25 31 37 43 49\"\nassert solution(\"9\\n\") == \"37\\n7 25 43 61 79 97 115 133\"\nassert solution(\"14\\n\") == \"51\\n21 45 79 123 167 211 255 299\"\nassert solution(\"11\\n\") == \"99\\n27 55 111 163 215 267 319 371\"\nassert solution(\"6\\n5\\n\") == \"26\\n3 5 11 15 19 23\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 8\nassert solution(4) == 13\nassert solution(5) == 18\nassert solution(6) == 23"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '8'\nassert solution(5) == '15 13 9 7 5'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == 8\nassert solution('5') == 10\nassert solution('6') == 10\nassert solution('7') == 12\nassert solution('8') == 15"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(5) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(7) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '8\\n1 3 5 7 9 11 13 15'\nassert solution('4') == '13\\n1 4 7 10 13 16 19 22'\nassert solution('5') == '18\\n1 5 8 11 14 17 20 23'\nassert solution('6') == '23\\n1 6 9 12 15 18 21 24'\nassert solution('7') == '28\\n1 7 10 13 16 19 22 25'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"1 3 5 7\"\nassert solution(\"5\") == \"2 4 6 8 10 12 14\"\nassert solution(\"6\") == \"3 5 7 9 11 13 15\"\n\nfrom typing import List"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5 7\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 5\") == \"0\"\nassert solution(\"1 5\") == \"0\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == '3\\n1\\n0\\n'\nassert solution(str(input())) == '1\\n0\\n'\nassert solution(str(input())) == '0\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '3'\nassert solution(5) == '1'\nassert solution(6) == '0'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n1\\n0\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, '1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == [3, 1, 0]\nassert solution(str(input())) == [3, 1, 0]"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"2\\n7\\n23\\n37\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"7\\n223\\n4321\\n123456789\\n234567890\\n345678901\\n456789012\\n567890123\\n678901234\\n789012345\\n890123456\\n901234567\\n912345678\\n923456789\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The output is '{solution(input())}' expected, but got '{expected}'.\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\\"1 3 5 7\\\\n3\\\\n2 2\\\\n2 5\\\\n1 5\\\") == \\\"3\\\\n1\\\\n0\\\"\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == 0, \"Solution should return 0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\", \"The number of lines you have to add to this suggestion to satisfy all warlords is 0.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 1 -2 0\n''') == '0\\n'\n\nassert solution('''\n2 2\n1 1 -2 0\n1 1 3 2\n''') == '4\\n'\n\nassert solution('''\n2 3\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n''') == '6\\n'\n\nassert solution('''\n2 4\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n''') == '8\\n'\n\nassert solution('''\n2 5\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n''') == '10\\n'\n\nassert solution('''\n2 6\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n''') == '12\\n'\n\nassert solution('''\n2 7\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n''') == '14\\n'\n\nassert solution('''\n2 8\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n''') == '16\\n'\n\nassert solution('''\n2 9\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n1 1 24 3\n''') == '18\\n'\n\nassert solution('''\n2 10\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n1 1 24 3\n1 1 27 2\n''') == '20\\n'\n\nassert solution('''\n2 11\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n1 1 24 3\n1 1 27 2\n1 1 30 3\n''') == '22\\n'\n\nassert solution('''\n2 12\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n1 1 24 3\n1 1 27 2\n1 1 30 3\n1 1 33 2\n''') == '24\\n'\n\nassert solution('''\n2 13\n1 1 -2 0\n1 1 3 2\n1 1 6 1\n1 1 9 2\n1 1 12 3\n1 1 15 2\n1 1 18 3\n1 1 21 2\n1 1 24 3\n1 1 27 2\n1 1 30 3\n1 1 33 2\n1 1 36 3\n''') == '26\\n'\n\nassert solution('''\n2 "
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"2 2\\n1 1 -1 1\\n1 0 -1 1\\n0 0 -2 1\\n0 1 -2 1\") == 6"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\"\nassert solution(\"2 3\\n1 1 -2 0\\n2 4\\n0 0 1 1\") == \"1\\n2\\n3\\n4\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == 0\n\nassert solution(\"4 3\\n0 0 0 0\\n1 0 0 0\\n-2 1 1 -1\\n-1 -1 -2 0\\n\") == 4\n\nassert solution(\"5 6\\n1 1 1 1\\n0 1 1 1\\n1 1 1 1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n\") == 15\n\nassert solution(\"6 4\\n0 0 0 0\\n1 0 0 0\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n\") == 12\n\nassert solution(\"7 5\\n1 1 1 1\\n0 1 1 1\\n1 1 1 1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n\") == 30\n\nassert solution(\"8 6\\n1 1 1 1\\n0 1 1 1\\n1 1 1 1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"3 2\\n1 1 2 0\\n2 2 3 0\\n3 3 4 0\\n4 4 5 0\") == 0\nassert solution(\"2 3\\n1 1 2 0\\n2 2 3 0\\n3 3 4 0\\n4 4 5 0\\n5 5 6 0\") == 0\nassert solution(\"2 5\\n1 1 2 0\\n2 2 3 0\\n3 3 4 0\\n4 4 5 0\\n5 5 6 0\\n6 6 7 0\") == 1\nassert solution(\"2 7\\n1 1 2 0\\n2 2 3 0\\n3 3 4 0\\n4 4 5 0\\n5 5 6 0\\n6 6 7 0\\n7 7 8 0\") == 2\nassert solution(\"3 7\\n1 1 2 0\\n2 2 3 0\\n3 3 4 0\\n4 4 5 0\\n5 5 6 0\\n6 6 7 0\\n7 7 8 0\\n8 8 9 0\") == 3\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n'\nassert solution('3 4\\n1 1 2 0\\n2 1 -1 0\\n3 4 1 1\\n4 2 1 -1') == '10\\n'\nassert solution('2 3\\n1 1 -2 0\\n2 1 1 0\\n3 2 -1 0') == '20\\n'\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == \"0\\n\"\nassert solution(\"2 2\\n1 1 -1 1\\n2 2 -1 1\\n\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 -1 1\\n2 2 -1 1\\n3 3 -1 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 1 -1 1\\n2 2 -1 1\\n3 3 -1 1\\n4 4 -1 1\\n\") == \"3\\n\"\nassert solution(\"5 5\\n1 1 -1 1\\n2 2 -1 1\\n3 3 -1 1\\n4 4 -1 1\\n5 5 -1 1\\n\") == \"3\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n') == '194\\n2019 10 25\\n2020 10 30'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    '''\n) == '''\n194\n2019 10 25\n2020 10 30\n'''\n\nfrom collections import defaultdict"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"not an input\"\n\nimport math"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {i+1} failed\" for i, (input_data, output_data) in enumerate(zip(input_data, output_data))\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5, 10, 10, 10, 10, 0]) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution([6, 10, 10, 10, 10, 0]) == \"negative-infinity 0\\n6 12.5\"\nassert solution([5, 10, 10, 5, 10, 0]) == \"negative-infinity -5\\n5 12.5\"\nassert solution([4, 6, 7, 8, 9, 10]) == \"negative-infinity -5\\nnegative-infinity 0\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 0\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nassert solution(\"4 3\\n100 20000\\n200 10000\\n300 0\\n400 10000\\n50 20000\\n75 30000\\n400 -20000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\nIMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\nIMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\"\nassert solution(\"5 5\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test cases do not match.\"\n\nfrom typing import List"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output} (expected output: {output})\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 10\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\") == \"1000 3\\nrotR 1 2\"\nassert solution(\"20 10\\n50 40\\n75 60\\n100 80\") == \"5000 5\\nrotS 1 2\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 2\n    3 1 1\n''') == '0.5'\n\nassert solution('''\n    3 2\n    3 4 2\n''') == '0.16666666666666667'\n\nassert solution('''\n    3 2\n    3 2 1\n''') == '0.03333333333333333'\n\nassert solution('''\n    3 2\n    3 4 1\n''') == '0.1'\n\nassert solution('''\n    3 2\n    3 4 4\n''') == '0.03333333333333333'\n\nassert solution('''\n    3 2\n    3 1 2\n''') == '0.16666666666666667'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"Output one number, the minimum value of the sum above, with a relative or absolute error less than $10^{-4}$.\\n\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5\\n'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5\\n'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 2\n3 1 1\n\"\"\"\n) == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'\nassert solution('1 1\\n2 1 1') == '0.5'\nassert solution('1 1\\n1 1 1') == '1'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.5\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"10 11\\n1 1\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n4 1\\n4 3\\n5 2\\n6 3\\n6 4\\n7 4\\n8 3\\n9 5\") == \"impossible\"\nassert solution(\"10 11\\n1 1\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n4 1\\n4 3\\n5 2\\n6 3\\n6 4\\n7 4\\n8 3\\n9 5\\n2 6\\n2 7\\n6 8\\n8 6\\n8 7\\n7 9\\n9 8\\n7 8\\n10 10\\n9 9\\n9 10\\n10 9\") == \"1 1 4\\n2 4 5\\n2 5 6\\n2 6 7\\n3 5 7\\n4 1 7\\n4 2 8\\n4 3 8\\n5 2 8\\n6 3 8\\n6 4 9\\n6 5 9\\n7 4 9\\n8 3 9\\n9 5 9\\n9 6 10\\n9 7 10\\n10 6 10\\n10 7 10\\n10 8 10\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 12\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('9 12\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 10') == '1 4 5\\n2 6 7'\nassert solution('9 12\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 10\\n2 11') == 'impossible'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"10 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\nassert solution(\"9 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\nassert solution(\"9 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\nassert solution(\"9 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect: {solution(input())} instead of {expected_output}\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"impossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n1 2\\n2 3\\n3 4\\n4 5\\"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"13500\\n\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"12 4\\n13000\\n15000\\n10000\\n16000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500\\n'\nprint(\"Test Passed\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == '13500\\n'\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == 13500\nassert solution('11 3\\n12000\\n10000\\n12000\\n11000\\n12000\\n10000\\n12000\\n11000\\n12000\\n11000') == 13000\nassert solution('10 2\\n10000\\n12000\\n9000\\n8000\\n12000\\n10000\\n12000\\n12000\\n10000\\n10000') == 11000"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"13500\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output: {solution(sample_input)}\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________\\n\"\nassert solution(\"2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot___cross____buns!_=________\\n____________________Hot_cross_buns!_=________\\nOne_a_pen-_ny,_Two_a_pen-_ny,_________________________\\n\"\nassert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=________\\n____________________Hot_cross_buns!_=________\\nOne_a_pen-_ny,_Two_a_pen-_ny,_________________________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 2 3\\nOne two three\\n\") == \"/_________________________\\n\"\nassert solution(\"1 1 1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\"\n) == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\nassert solution(\"4 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"113\"\nassert solution(\"1 3 1\\n2 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"10\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\n\nfrom typing import List"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Doug James is an up-and-coming DJ from Graphland who\u2019s had a tough time making it big. This all changed with the release of his latest EP Wiggly Waves, which is the first album in history to go both Platinum and Uranium. With his newfound popularity, Doug (a.k.a. DJ Polygon) needs help with a problem most artists would be lucky to face: deciding which of his many gig offers to take.\n\nThere are $K$ venues in Graphland, connected by $R$ roads. The venues are numbered $1$ to $K$. Doug\u2019s house is venue $1$, and he is ready to leave or perform at time $t = 0$.\n\nDoug has $G$ gig offers. The $i$-th gig is at venue $V_ i$, runs during the time interval $[S_ i,E_ i)$ (inclusive start, exclusive end), and pays out $M_ i$ cryptocents. Doug can\u2019t take multiple gigs at the same time, and he can\u2019t take gigs while he\u2019s traveling between venues.\n\nDoug is overwhelmed by his newfound fame and many gig requests, and wants your help making as much money as possible.\n\n-----Input-----\nThe first line of the input contains three integers $G$, $K$, and $R$: the number of gigs Doug has been offered, the number of venues in Graphland, and the number of roads connecting these venues.\n\nThese integers satisfy $1 \\leq G \\leq 200000$, $1 \\leq K \\leq 100$, and $0 \\leq R \\leq \\min \\left(4000, K(K-1)/2\\right)$.\n\nThen follow $R$ lines, each of which has three integers $A_ i$, $B_ i$, and $T_ i$, specifying the $i$-th (bidirectional) road. The $i$-th road connects venues $A_ i$ and $B_ i$ and it takes time $T_ i$ to travel the road in either direction. The values satisfy $1 \\leq A_ i, B_ i \\leq K$, $A_ i \\neq B_ i$, and $1 \\leq T_ i \\leq 1000000$. Every road has two distinct endpoints, and there is at most one road between any pair of venues.\n\nThen follow $G$ lines, each of which has four integers $V_ i$, $S_ i$, $E_ i$, and $M_ i$. This means the $i$-th gig runs from time $S_ i$ (inclusive) to $E_ i$ (exclusive) at venue $V_ i$, and pays $M_ i$ cryptocents. These values satisfy the bounds $0 \\leq S_ i < E_ i \\leq 1000000000$ and $1 \\leq M_ i \\leq 1000000$.\n\n-----Output-----\nOutput a single integer: the maximum number of cryptocents that DJ Polygon can make by taking on the right gigs.\n\n-----Sample Explanation-----\nIn the first sample, There are two gigs at venue $1$ and one gig at venue $2$. Doug can either play both gigs at venue $1$ for $11$ cryptocents, or spend the first $10$ units of time traveling to venue $2$ and play that gig for $33$ cryptocents. He chooses the latter.\n\nIn the second sample, Doug makes the most by staying at venue $1$ and playing both of those gigs to earn $70$ cryptocents.\n\n-----Examples-----\nSample Input:\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\nSample Output:\n33\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '110'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '110'\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: Solution does not match the expected output.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution for the given input is incorrect. \\nExpected: {output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n20 15 10\\n7 7\\n30 0\\n') == '405\\n'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\n\nfrom typing import List"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n\nfrom typing import List"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405, \"Expected output: 405, but got {}\".format(solution(\"3\\n20 15 10\\n7 7\\n30 0\"))"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"1\\n1 1 1 1\") == \"0 0 0 0\"\nassert solution(\"4\\n1 1 1 1\") == \"0 0 0 0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"0 0 0 0 0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    4\n    1 2 4 7\n''') == '''\n    28 4 21 14.0\n'''"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Test Case 1\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nassert solution(\"5\\n2 3 5 8\") == \"30 4 23 15.0\\n\"\nassert solution(\"4\\n1 2 4 8\") == \"31 4 22 16.0\\n\"\nassert solution(\"5\\n2 3 5 7\") == \"32 4 23 15.0\\n\"\nassert solution(\"5\\n2 3 5 7\") == \"32 4 23 15.0\\n\"\nassert solution(\"5\\n2 3 5 7\") == \"32 4 23 15.0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"35 6 27 18.0\\n\"\nassert solution(\"5\\n2 3 5 7\") == \"32 4 23 15.0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"35 6 27 18.0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"40 6 29 21.0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"35 6 27 18.0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"40 6 29 21.0\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"45 8 32 25.0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"40 6 29 21.0\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"45 8 32 25.0\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"50 8 36 29.0\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"45 8 32 25.0\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"50 8 36 29.0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"55 10 40 33.0\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"50 8 36 29.0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"55 10 40 33.0\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"60 10 45 37.0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"55 10 40 33.0\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"60 10 45 37.0\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"65 12 50 42.0\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"60 10 4"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '28 4 21 14.0', \"Expected output: 28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"28 4 21 14.0\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\\n\") == \"no\"\nassert solution(\"4 1\\n1 2 3 4\\n2 3 4 1\\n\") == \"no\"\nassert solution(\"4 9\\n1 2 3 4\\n2 3 4 1\\n\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 "
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 3\\n4 5 6\\n7 8 9\") == \"no\"\nassert solution(\"1 1\\n2 2\\n3 3\") == \"yes\\n1 2 3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"yes\\n1 2 3\\n4 5 6\\n7 8 9\"\nassert solution(\"3 3\\n4 5\\n6 7\\n8 9\\n1 2 3\") == \"yes\\n1 2 3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\") == \"yes\\n1 2 3\\n4 5 6\\n7 8 9\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 3\\n3 4 1\\n4 1 2\") == \"yes\\n3 4 1\\n4 1 2\"\nassert solution(\"3 3\\n4 1\\n3 2\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 "
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"10\\n-5 0 -2 3 -1\") == \"0.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"6\\n-5 -3 -2 -1 1\") == \"0.500000000\"\nassert solution(\"1\\n\") == \"0.000000000\"\nassert solution(\"1\\n-10\") == \"0.000000000\"\nassert solution(\"1\\n10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r')) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\nassert solution(\"10\\n10 20 -20 -5 20\") == \"5.000000000\\n\"\nassert solution(\"10\\n-10 -10 -10 -10 10\") == \"0.000000000\\n\"\nassert solution(\"10\\n10 10 10 10 10\") == \"10.000000000\\n\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Solution is incorrect\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\n\nassert solution('4\\n30\\n3\\n2\\n45\\n60\\n70\\n50\\n5') == '3'\n\nassert solution('4\\n30\\n3\\n2\\n45\\n60\\n70\\n50\\n5\\n30\\n30\\n30') == '3'\n\nassert solution('4\\n30\\n3\\n2\\n45\\n60\\n70\\n50\\n5\\n30\\n30\\n30\\n30\\n30') == '3'\n\nassert solution('4\\n30\\n3\\n2\\n45\\n60\\n70\\n50\\n5\\n30\\n30\\n30\\n30\\n30\\n30') == '3'\n\nassert solution('4\\n30\\n3\\n2\\n45\\n60\\n70\\n50\\n5\\n30\\n30\\n30\\n30\\n30\\n30\\n30\\n30\\n30') == '3'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i+1} failed.\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1, \"Expected 1, got {}\".format(solution(\"4\\n30\\n3\\n2\\n45\"))"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == 1\nassert solution(\"5\\n10\\n4\\n3\\n5\") == 3\nassert solution(\"7\\n5\\n3\\n2\\n4\") == 0\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1, \"expected 1, got {}\".format(solution(3))\nassert solution(6) == 1, \"expected 1, got {}\".format(solution(6))\nassert solution(9) == 2, \"expected 2, got {}\".format(solution(9))\nassert solution(10) == 1, \"expected 1, got {}\".format(solution(10))\nprint(solution(20))  # expected 1, got 1\n\nfrom typing import List\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == 1\nassert solution('4\\n30\\n3\\n2\\n45') == 1"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\",) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(5) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n\nassert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n\nassert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n\nassert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n\nassert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 0, 0, 3, 3, 3, 3, 2, 2, 1, 1) == 4\nassert solution(4, 0, 0, 3, 3, 3, 3, 2, 2, 1, 1) == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nprint(\"All tests passed\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 4\nprint(4)"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2\\n3 2\\n3 1\"\nassert solution(\"\"\"\n4 0\n0 1\n0 2\n3 1\n\"\"\") == \"2\\n1 2\\n2 3\"\nassert solution(\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2\\n0 2\\n1 1\"\nassert solution(\"\"\"\n4 0\n0 1\n0 2\n3 1\n\"\"\") == \"2\\n1 2\\n2 3\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Output does not match expected output.\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 0\n0 1\n0 2\n0 3\n\"\"\") == \"\"\"2\n3 2\n3 1\n\"\"\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0 0\n    0 1.5 0\n    \"\"\"\n) == \"ok\"\n\nassert solution(\n    \"\"\"\n    3\n    0 0 0\n    0 1.5 0\n    1.5 0 0\n    \"\"\"\n) == \"ok\"\n\nassert solution(\n    \"\"\"\n    10\n    0 0 0\n    0 1.5 0\n    1.5 0 0\n    2.5 0 0\n    3.5 0 0\n    4.5 0 0\n    5.5 0 0\n    6.5 0 0\n    7.5 0 0\n    8.5 0 0\n    9.5 0 0\n    10.5 0 0\n    \"\"\"\n) == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 1.5 0\\n') == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"The function should return the expected output.\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == \"2\\nR 0\\nG 2\"\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 6\\n7 8\\n9 10\\n') == \"3\\nR 2\\nG 2\\nR 3\\nG 1\\nR 1\\nG 0\"\nassert solution('2 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == \"4\\nR 0\\nG 2\\nR 1\\nG 3\\nR 2\\nG 4\"\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n') == \"6\\nR 1\\nG 2\\nR 2\\nG 4\\nR 0\\nG 3\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    \"\"\"\n) == \"\"\"\n2\nR 0\nG 2\n\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    \"\"\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n') == '2\\nR 0\\nG 2\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    \"\"\"\n) == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\nR 0\\nG 2\"\nassert solution() == \"3\\nR 0\\nG 3\\nR 2\\nG 2\"\nassert solution() == \"1\\nR 0\\nG 3\\nR 1\\nG 4\"\nassert solution() == \"2\\nR 1\\nG 1\\nR 2\\nG 4\"\nassert solution() == \"2\\nR 0\\nG 4\\nR 2\\nG 1\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\"\nassert solution(\"1 2 3 4\\nA B C\\nD E F\\nG H I\") == \"4\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n6 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n6 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n7 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n6 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n7 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n8 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n6 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n7 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n8 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n9 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n4 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n5 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n6 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n7 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n8 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n9 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n10 A B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F''') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\\n\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2, \"The solution should be 2.\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n\nassert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\\n\"\nassert solution(\"3\\nYNY\\nYYY\\nNYY\") == \"2\\n3 2 1\\n2 3 1\\n\"\nassert solution(\"4\\nYNY\\nYYY\\nNYY\") == \"0\\n\"\nassert solution(\"5\\nYNY\\nYYY\\nNYY\\nYYY\") == \"0\\n\"\nassert solution(\"1\\nYNY\\nYYY\\nNYY\\nYYY\\nYNY\") == \"1\\n2 3 4 1\\n3 1 2 4\\n\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nNYY\") == \"1\\n1 2 3\"\nassert solution(\"3\\nYYY\\nYNY\\nNYY\\nYNY\") == \"0\"\nassert solution(\"3\\nNYY\\nNYY\\nNYY\") == \"3\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4\n0\n5\n\"\"\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\nassert solution(\"5 5\\n.x..\\n.xxx\\n....\\n...x\") == \"0\\n5\"\nassert solution(\"3 3\\n.x..\\n....\\n.x..\\n....\\n.x..\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '''\n4\n0\n5\n'''"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n        3 3\n        x..\n        ...\n        ...\n        3\n        1 3\n        1 1\n        3 2\n        ''') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5\\n', \"Expected output: 4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n0\\n5\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'The output should contain N lines, each containing two real numbers x_ i, y_ i indicating the coordinates of the tip of the ith segment. The length of the ith segment computed from the solution and input L_ i may not differ by more than 0.01. Similarly, the absolute error between the solution\\'s distance to the target and the minimum possible distance to the target cannot exceed 0.01. Note that, in general, there are many solutions. Your program may output any of them.'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(stdin=\"3\\n4\\n\") == \"0.000 0.000\\n0.000 0.000\\n0.000 0.000\"\nassert solution(stdin=\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\"\n\nprint(solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\"))"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''\n3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.7"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\nassert solution() == 5\nassert solution() == 8"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3, [0,1,2,2,4,1,5,1,2], 0, 1, 2) == 0 # 0\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 1, 1, 2) == 1 # 1\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 1, 2, 2) == 2 # 2\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 2, 1, 2) == 3 # 3\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 2, 2, 2) == 3 # 3\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 2, 3, 2) == 4 # 4\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 1, 2, 1) == 4 # 4\nassert solution(3, 3, [0,1,2,2,4,1,5,1,2], 1, 1, 1) == 5 # 5"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\", \"Your solution is incorrect.\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n\"\"\") == 0\n\nassert solution(\"\"\"\n7 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 3\n\nassert solution(\"\"\"\n5 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 4\n\nassert solution(\"\"\"\n6 5\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\") == 5\n\nassert solution(\"\"\"\n7 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 6\n\nassert solution(\"\"\"\n7 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 6\n\nassert solution(\"\"\"\n7 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 6"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 2 5 \n''') == '0'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 2 5 \n''') == '0'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n2 1 5 \n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 "
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 5\") == \"3\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 4\\n\") == \"3\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\n\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 1 2 5 0 1 \") == \"2\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\\n\"\nassert solution(\"7 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"0\\n\"\nassert solution(\"7 6\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \\n\") == \"1\\n\"\nassert solution(\"7 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 6 5  \\n\") == \"2\\n\"\nassert solution(\"6 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 6 5  \\n\") == \"1\\n\"\nassert solution(\"6 6\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 6 5  \\n\") == \"3\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\nassert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"106\\n107\\n71\\n\", \"Expected output '106\\n107\\n71\\n' but got '{}'.\".format(solution())\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    \"\"\"\n) == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\nA\\n') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nA\") == 51, \"Output is not correct\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nA\\n\") == 51\nassert solution(\"2\\nAB\\n\") == 1\nassert solution(\"2\\nABC\\n\") == 0\nassert solution(\"2\\nABCD\\n\") == 1\nassert solution(\"2\\nABE\\n\") == 3\nassert solution(\"2\\nABF\\n\") == 2\nassert solution(\"2\\nAC\\n\") == 2\nassert solution(\"2\\nAD\\n\") == 3\nassert solution(\"2\\nAE\\n\") == 1\nassert solution(\"2\\nAF\\n\") == 4\nassert solution(\"2\\nAG\\n\") == 3\nassert solution(\"2\\nAH\\n\") == 0\nassert solution(\"2\\nB\\n\") == 2\nassert solution(\"2\\nBC\\n\") == 0\nassert solution(\"2\\nBD\\n\") == 1\nassert solution(\"2\\nBE\\n\") == 2\nassert solution(\"2\\nBFC\\n\") == 1\nassert solution(\"2\\nBFD\\n\") == 0\nassert solution(\"2\\nBG\\n\") == 1\nassert solution(\"2\\nBGH\\n\") == 0\nassert solution(\"2\\nBHI\\n\") == 0\nassert solution(\"2\\nBJK\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\n\") == 1\nassert solution(\"2\\nBKJ\\"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2\\nA\\n') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nAA\") == \"51\"\nassert solution(\"2\\nABC\") == \"11\"\nassert solution(\"3\\nXYZ\") == \"0\"\nassert solution(\"4\\nAAA\") == \"1\"\nassert solution(\"5\\nABCD\") == \"1\"\nassert solution(\"6\\nEFGH\") == \"1\"\nassert solution(\"7\\nIJKL\") == \"1\"\nassert solution(\"8\\nMNOP\") == \"0\"\nassert solution(\"9\\nQRST\") == \"1\"\nassert solution(\"10\\nUVWX\") == \"1\"\nassert solution(\"11\\nYZ\") == \"1\"\nassert solution(\"12\\n\") == \"0\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nAA\") == \"51\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'\nassert solution('1 1 2 3 4\\n2 4 5 6 7\\n3 5 8 9 10\\n4 6 7 10 11\\n5 8 9 12 13\\n6 7 10 13 14') == '1 2'\nassert solution('1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14 18 22\\n6 8 12 16 20\\n7 10 14 18 22\\n8 10 14 18 22\\n9 10 14 18 22\\n10 10 14 18 22') == '1 2'\nassert solution('1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14 18 22\\n6 8 12 16 20\\n7 10 14 18 22\\n8 10 14 18 22\\n9 10 14 18 22\\n10 10 14 18 22\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14 18 22\\n6 8 12 16 20\\n7 10 14 18 22\\n8 10 14 18 22\\n9 10 14 18 22\\n10 10 14 18 22\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14 18 22\\n6 8 12 16 20\\n7 10 14 18 22\\n8 10 14 18 22\\n9 10 14 18 22\\n10 10 14 18 22') == '1 2'\nassert solution('1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14 18 22\\n6 8 12 16 20\\n7 10 14 18 22\\n8 10 14 18 22\\n9 10 14 18 22\\n10 10 14 18 22\\n1 2 3 4 5\\n2 4 6 8 10\\n3 6 9 12 14\\n4 8 12 16 20\\n5 10 14"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\\n\"\nassert solution(stdin=\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n\\n\") == \"1 2\\n\"\nassert solution(stdin=\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\"\nassert solution(stdin=\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n\\n\") == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == 'no ties'\nassert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n6 20 44 52 68') == '2 1'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"no ties\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"no ties\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"no ties\" # Example 1"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"no ties\"\nassert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == \"1 2\"\nassert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68, 14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68, 14, 23, 39, 59, 63, 8, 17, 35, "
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n2 1 3 4 1\\n1 3 5 2 4\\n1 1 5 2 3\\n1 1 4 2 3\\n1 1 4 2 3\") == \"0\\n2\\n3\\n4\\n5\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0, \"Expected: 0, Received: {}\".format(solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\"))\n\nassert solution(\"5\\n1 1 2\\n2 1 1\\n1 1 3\\n2 1 2\\n3 1 1\\n4 1 2\\n5 1 1\\n\") == 7, \"Expected: 7, Received: {}\".format(solution(\"5\\n1 1 2\\n2 1 1\\n1 1 3\\n2 1 2\\n3 1 1\\n4 1 2\\n5 1 1\\n\"))"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 2 3\\n3 4 5\\n6 7 8\") == \"3\\n\"\nassert solution(\"2\\n2 1 2\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\") == \"2\\n\"\nassert solution(\"3\\n3 1 2\\n4 5 6\\n7 8 9\") == \"1\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\", \"Incorrect Output\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 0\nassert solution(10) == 1\nassert solution(2) == 0\nassert solution(\"3\\n1\\n2\\n1\\n2\\n3\\n\") == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n0\"\n\nassert solution(\"1\\n2 3\\n3 1\\n3 2\") == \"3\\n0\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 1, 2, 3) == 0, \"Your solution is incorrect. Expected 0, but got {}\".format(solution(3, 3, 1, 2, 3))\nassert solution(3, 3, 1, 2, 3) == 0, \"Your solution is incorrect. Expected 0, but got {}\".format(solution(3, 3, 1, 2, 3))\nassert solution(3, 3, 1, 2, 3) == 0, \"Your solution is incorrect. Expected 0, but got {}\".format(solution(3, 3, 1, 2, 3))\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '''\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n'''"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.4\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\"\nfor _ in range(5):\n    n, x, r, g = map(int, stdin.split())\n    assert 1 <= n <= 500, f\"n should be between 1 and 500, but got {n}.\"\n    for _ in range(n):\n        assert 1 <= x <= 10**5, f\"x should be between 1 and 10^5, but got {x}.\"\n        assert 0 <= r + g <= 100, f\"r+g should be between 0 and 100, but got {r + g}.\"\n        assert r + g <= 2 * r, f\"r+g should be less than 2r, but got {r + g}. (and 2r+g <= 2 * r).\"\n\n    ideal_car_start = 0\n    ideal_car_end = 2019\n\n    # Find the start and end of the ideal car\n    start = max(0, ideal_car_start)\n    end = min(2019, ideal_car_end)\n\n    # Calculate the probability of the ideal car making it through all the lights\n    prob = (end - start + 1) / 2019\n\n    # Calculate the probability that the ideal car makes it through all the lights without stopping\n    ideal_car_stop = ideal_car_end + (2 * ideal_car_start - end) / 2019\n    prob_ideal_car_stop = (end - start + 1) / (end - ideal_car_start + 1)\n\n    print(f\"{prob:.6e}\")\n    print(f\"{prob_ideal_car_stop:.6e}\")"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n6\\n2\\n3\\n10\\n2\\n3\\n16\\n3\\n4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\") == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"4\\n1\\n2\\n3\\n6\\n2\\n3\\n10\\n2\\n3\\n16\\n3\\n4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1\\n2\\n3\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"4\\n1\\n2\\n3\\n6\\n2\\n3\\n10\\n2\\n3\\n16\\n3\\n4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1\\n2\\n3\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"4\\n1\\n2\\n3\\n6\\n2\\n3\\n10\\n2\\n3\\n16\\n3\\n4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n', 'Your code is incorrect. Please provide the correct solution.'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n3\\n4\\n-1\\n-6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1\\n5\\n3\\n4\\n-1\\n-6\") == \"impossible\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"2\\n1 5\\n2 3\") == \"impossible\"\nassert solution(\"3\\n1 5\\n3 2\") == \"impossible\"\nassert solution(\"4\\n1 10\\n2 5\\n3 3\") == \"impossible\"\nassert solution(\"1\\n1 10\") == \"impossible\"\nassert solution(\"2\\n1 10\\n2 10\") == \"impossible\"\nassert solution(\"3\\n1 10\\n2 10\\n3 10\") == \"impossible\"\nassert solution(\"4\\n1 10\\n2 10\\n3 10\\n4 10\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1\\n2 3\\n4 5\\n6 7\") == \"impossible\"\nassert solution(\"8\\n1 3\\n2 4\\n3 5\\n4 6\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"The output is incorrect. Expected: {output_data}, Received: {solution(input_data)}\"\nfor i in range(len(input_data)):\n    assert len(input_data[i][0]) == 2 and len(input_data[i][1]) == 2, f\"The input is incorrect. Expected: {input_data[i]}, Received: {solution(input_data)}\"\n    assert input_data[i][0]!= input_data[i][1], f\"The input is incorrect. Expected: {input_data[i]}, Received: {solution(input_data)}\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n2 2\\n4 3') == 'impossible'\nassert solution('10\\n1 5\\n2 3\\n3 2\\n1 4\\n4 4\\n-2 1\\n-1 0\\n0 1\\n1 -2\\n-3 4') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\\n\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\", \"Test case 1 failed.\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\"\"\"\n) == \"\"\"4\n1\n4\n6\n0\"\"\"\n\nassert solution(\n    \"\"\"1 2\n3 4\"\"\"\n) == \"\"\"4\n4\"\"\"\n\nassert solution(\n    \"\"\"1 1\n2 1\n3 1\n4 1\"\"\"\n) == \"\"\"4\n4\n4\"\"\"\n\nassert solution(\n    \"\"\"1 1 1\n1 1 1\n1 1 1\"\"\"\n) == \"\"\"4\n4\n4\"\"\"\n\nassert solution(\n    \"\"\"1 1\n2 1\n3 1\n4 1\"\"\"\n) == \"\"\"4\n4\n4\"\"\"\n\nassert solution(\n    \"\"\"1 1\n2 1\n3 1\n4 1\"\"\"\n) == \"\"\"4\n4\n4\"\"\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but you provided {solution(input())}.\\n\\nThe sample input provided is:\\n{input()}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Test Failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n') == '4\\n1\\n4\\n6\\n0\\n'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4, \"The solution should return 4, but it returns {}\".format(solution(3))\nassert solution(4) == 2, \"The solution should return 2, but it returns {}\".format(solution(4))\nassert solution(5) == 3, \"The solution should return 3, but it returns {}\".format(solution(5))\nassert solution(6) == 5, \"The solution should return 5, but it returns {}\".format(solution(6))"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4\\n') == 4\nassert solution('5\\n1 2 3 4 5\\n') == 5\nassert solution('6\\n1 2 3 4 5 6\\n') == 12\nassert solution('7\\n1 2 3 4 5 6 7\\n') == 21\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == 48"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4\\n'"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 4 2 3\") == \"2\"\nassert solution(\"1 4 3 2\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 2 2 3\") == \"0\"\nassert solution(\"1 3 2 3\") == \"2\"\nassert solution(\"1 3 2 1\") == \"1\"\nassert solution(\"1 2 1 1\") == \"1\"\nassert solution(\"1 1 2 2\") == \"1\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The solution for the problem is {output}, but the output is {solution(input())}.\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Expected output: {}, Actual output: {}\".format(sample_output, solution(sample_input))"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_test_case) == solution_test_output, \"Solution is not correct\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\n4 3\n\"\"\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 31, 2) == 4\nassert solution(20, 60, 50) == 4\nassert solution(1, 90, 2) == 16\n\nfrom typing import List"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\"\n\nassert solution(\"5 4 2\") == \"6\"\n\nassert solution(\"2 5 1\") == \"0\"\n\nassert solution(\"7 7 1\") == \"4\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == 3"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 2, 1) == 3\nassert solution(3, 3, 1) == 3\nassert solution(4, 4, 1) == 0\nassert solution(2, 3, 1) == 3\nassert solution(3, 4, 1) == 2\nassert solution(3, 3, 2) == 2\nassert solution(4, 4, 2) == 1\nassert solution(2, 3, 2) == 3\nassert solution(3, 4, 2) == 3\nassert solution(3, 3, 3) == 1\nassert solution(4, 4, 3) == 1\nassert solution(2, 3, 3) == 3\nassert solution(3, 4, 3) == 3\nassert solution(3, 3, 4) == 0\nassert solution(4, 4, 4) == 0\nassert solution(2, 3, 4) == 3\nassert solution(3, 4, 4) == 3"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\", \"Expected output: 3\\nActual output: \" + solution(input())\n\nprint(solution(input()))"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n' # valid arrangement 1\nassert solution(stdin) == '6\\n' # valid arrangement 2"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"3 3 1\") == \"6\"\nassert solution(\"2 4 2\") == \"8\"\nassert solution(\"3 3 2\") == \"24\"\nassert solution(\"3 2 1\") == \"9\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == 3"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1\", \"Output should be 3 1, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n500000000 500000000 500000000 500000000 500000000\") == \"1 0\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5 4\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5 4\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5 4\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Incorrect answer\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"3\\n4567 5432 1234 9876\") == \"1 2\"\nassert solution(\"2\\n1234 5678 9012 3456\") == \"3 4\"\nassert solution(\"1\\n8901 4567 1234 7890\") == \"3 0\"\nassert solution(\"4\\n9876 6543 3210 7654\") == \"2 3\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3 1\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"69 1\"\nassert solution(\"2\\n1000\\n1000\\n1000\\n1000\") == \"4 69\"\nassert solution(\"10\\n10000\\n10000\\n10000\\n10000\\n10000\") == \"10 1\"\nassert solution(\"10\\n1000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n1"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"5\n    1341 2412 1200 3112 2391\n    \"\"\"\n) == \"\"\"3 1\"\"\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6\nassert solution('10 15\\n4 3\\n2 4 7') == 7\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nassert solution(\"10 30\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"14\\n\"\nassert solution(\"5 15\\n1 1 5\\n2 2 10\") == \"15\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\") == \"7\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"7\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n1 3 10\\n10 20\\n3 5\\n1 3 7\\n2 1"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6\\n'\nprint('All tests passed')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n10 20\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n10 20\\n10 20\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 20\\n10 20\\n10 20\\n10 20\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\") == 30\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\") == 16\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\") == 36\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\\n5 30\\n8 28\\n11 26\") == 60\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\\n5 30\\n8 28\\n11 26\\n5 45\\n8 35\\n11 33\") == 90\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\\n5 30\\n8 28\\n11 26\\n5 45\\n8 35\\n11 33\\n5 60\\n8 48\\n11 46\") == 130\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\\n5 30\\n8 28\\n11 26\\n5 45\\n8 35\\n11 33\\n5 60\\n8 48\\n11 46\\n5 80\\n8 56\\n11 54\") == 170\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n5 15\\n8 13\\n11 12\\n5 20\\n8 18\\n11 16\\n5 30\\n8 28\\n11 26\\n5 45\\n8 35\\n11 33\\n5 60\\n8 48\\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected {output_data}, got {solution(input_data)}\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n10 10\\n3 5\\n1 3"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"3\\n1 ab a\\n1 b\\n1 c\") == \"1 1 \\n1 2\"\nassert solution(\"4\\n1 ab a\\n1 b\\n1 c\\n1 d\") == \"1 1 \\n1 2 \\n0 1 \\n-1 0\"\nassert solution(\"5\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\") == \"1 1 \\n1 2 \\n1 3 \\n0 1 \\n-1 0\"\nassert solution(\"6\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n0 1 \\n-1 0\"\nassert solution(\"7\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n0 1 \\n-1 0\"\nassert solution(\"8\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n0 1 \\n-1 0\"\nassert solution(\"9\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n0 1 \\n-1 0\"\nassert solution(\"10\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\\n1 j\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n1 8 \\n0 1 \\n-1 0\"\nassert solution(\"11\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\\n1 j\\n1 k\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n1 8 \\n1 9 \\n0 1 \\n-1 0\"\nassert solution(\"12\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\\n1 j\\n1 k\\n1 l\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n1 8 \\n1 9 \\n1 10 \\n0 1 \\n-1 0\"\nassert solution(\"13\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\\n1 j\\n1 k\\n1 l\\n1 m\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n1 8 \\n1 9 \\n1 10 \\n1 11 \\n0 1 \\n-1 0\"\nassert solution(\"14\\n1 ab a\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f\\n1 g\\n1 h\\n1 i\\n1 j\\n1 k\\n1 l\\n1 m\\n1 n\") == \"1 1 \\n1 2 \\n1 3 \\n1 4 \\n1 5 \\n1 6 \\n1 7 \\n1 8 \\n1 "
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1\\n-1 0\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin}!= {expected}\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('2\\n2 ab\\n1 b') == '-1 0'\nassert solution('2\\n2 ab a\\n1 b') == '0 1 0'\nassert solution('2\\n2 ab ab\\n1 b') == '0 1 -1'\nassert solution('3\\n2 ab a b\\n1 b') == '-1 0 -1'\nassert solution('3\\n2 ab a b c\\n1 b') == '0 1 0 -1'\nassert solution('1\\n1 a b') == '-1 0'\nassert solution('2\\n1 a b') == '0 1'\nassert solution('3\\n1 a b c') == '0 1 -1'\nassert solution('1\\n1 a b c') == '0 1'\nassert solution('2\\n1 a b c') == '0 1'\nassert solution('3\\n1 a b c') == '0 1 -1'\n\nfrom typing import List"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(*solution(stdin.split()))\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"1\\n2 ab c\\n1 d\") == \"-1 0\"\nassert solution(\"2\\n2 ab c\\n1 d\") == \"-1 0\"\nassert solution(\"1\\n2 ab c\\n1 d\") == \"-1 0\"\nassert solution(\"2\\n1 ab d\\n1 e\") == \"0 1 -1\"\nassert solution(\"1\\n1 ab e\\n1 f\") == \"-1 0\"\nassert solution(\"1\\n1 ab e\\n1 f\") == \"-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 \\n-1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n1 a b\\n1 a c\\n1 a d\\n') == '1 2 \\n-1 0\\n1 2 3\\n'\nassert solution('1\\n1 a\\n2 b\\n3 c\\n4 d\\n') == '0 1 \\n1 2\\n-1 0\\n1 2 3\\n'\nassert solution('10\\n1 a\\n2 b\\n3 c\\n4 d\\n5 e\\n6 f\\n7 g\\n8 h\\n9 i\\n') == '0 1 2 3 4 5 6 7 8 9 \\n1 1 1 1 1 1 1 1 1 1\\n-1 0 0 0 0 0 0 0 0 0\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\\n\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 -1\\n'\nassert solution('2\\n2 ab\\n1 b\\n') == '0 1 -1\\n'\nassert solution('2\\n2 ab\\n1\\n') == '0 1 -1\\n'\nassert solution('2\\n2 ab\\n1\\n') == '0 1 -1\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Solution does not match the expected output\\nExpected: {expected}\\nGot: {solution(input)}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n3\\n'\nassert solution() == '1\\n3\\n'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2 3\\n2 2\\n1 1 1\\n1 1 2\\n1 1 3\\n1 1 4\\n2\") == \"1\\n6\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('pokenom_go.txt', 'r')) == '1\\n3\\n'\nassert solution(open('pokenom_go_2.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '''\n1\n3\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('example.txt', 'r')) == '3\\n'\nassert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n3\\n', \"Test failed: solution()\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('2 6\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('3 5\\n1 1 2\\n1\\n1 1 2\\n2\\n') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('3 7\\n1 1 2\\n1\\n1 1 2\\n2\\n') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\n'\nassert solution(stdin='6\\n10 15 20 25 30 35\\n0 1 2 3 4 5\\n6 7 8 9 10 11\\n12 13 14 15 16 17\\n18 19 20 21 22 23\\n24 25 26 27 28 29\\n30 31 32 33 34 35') == '129\\n'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n7\"\nassert solution(\"2\\n0 0 1\\n1 0 0\") == \"1\\n1\"\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n7\"\nassert solution(\"2\\n0 0 1\\n1 0 0\") == \"1\\n1\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 7, \"Test Failed\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\ndef solution(stdin: str) -> str:\n    n, *cities = map(int, stdin.split())\n    total_flight_duration = 0\n    visited = set()\n    for i in range(n):\n        for j in range(i+1, n):\n            total_flight_duration += cities[j] - cities[i]\n            visited.add((i, j))\n    return str(total_flight_duration)\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=solution.py) == \"7\\n7\\n\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '8', \"Invalid input\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1099511627776') == '8', 'Test failed'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1099511627776) == 8, \"Your solution is incorrect!\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1099511627776\") == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == 8\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1099511627776) == 8, \"Test failed.\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('5 5\\nx..\\n.x.\\nx.x') == '3'\nassert solution('7 7\\nx..\\n.x.\\nx.x') == '4'\nassert solution('1 1\\nx..\\n.x.\\nx.x') == '5'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"The solution should return 2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Solution: {solution}, Expected: {expected}\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == 2\nassert solution(\"5 5\\n....\\n....\\n....\\n....\") == 5\nassert solution(\"10 10\\nx..x\\nx...x\\nx...x\\nx..x\\nx..x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\") == 18\nassert solution(\"15 15\\nx..x\\nx...x\\nx...x\\nx..x\\nx..x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx."
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\ndef solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"5 5\\nx.x.\\nx..\\nx.x\\nx..\") == \"5\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 91\nassert solution(2) == 40"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('4\\n1 1 50 40 30 20\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '65'\nassert solution('5\\n1 1 100 100 100 100\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'\nassert solution('6\\n1 1 150 140 130 120\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'\nassert solution('7\\n1 1 200 190 180 170\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'\nassert solution('8\\n1 1 250 240 230 220\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'\nassert solution('9\\n1 1 300 290 280 270\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'\nassert solution('10\\n1 1 350 340 330 320\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 110 100 100 100') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 40 30 20 10\") == \"91\"\nassert solution(\"3 1 95 95 95 10\") == \"91\"\nassert solution(\"2 1 95 50 30 20\") == \"87\"\n\nfrom typing import List"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"91\", \"Expected output: 91, got: \" + solution(stdin)"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\n\nimport bisect"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == 91"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(2)) == 15\nassert solution(str(2)) == 15\nassert solution(str(2)) == 15\nassert solution(str(2)) == 15\nassert solution(str(2)) == 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 15, \"Expected output 15, but got {}\".format(solution())"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {test_case_index + 1} failed. Expected output: {expected_output}, got: {solution(sample_input)}\"\n\ntest_case_index = 0\nsample_input = \"\"\"\n2\n15 20\n0\n1 1\n\"\"\"\nexpected_output = 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == 15\nassert solution(\"2\\n15 20\\n0\\n2 1\") == 30\nassert solution(\"2\\n15 20\\n1\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n1\\n2 1\") == 15\nassert solution(\"2\\n15 20\\n1\\n3 1\") == 0\nassert solution(\"2\\n15 20\\n2\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n2\\n2 1\") == 30\nassert solution(\"2\\n15 20\\n2\\n3 1\") == 15\nassert solution(\"2\\n15 20\\n3\\n1 1\") == 15\nassert solution(\"2\\n15 20\\n3\\n2 1\") == 15\nassert solution(\"2\\n15 20\\n3\\n3 1\") == 30\nassert solution(\"2\\n15 20\\n4\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n4\\n2 1\") == 0\nassert solution(\"2\\n15 20\\n4\\n3 1\") == 0\nassert solution(\"2\\n15 20\\n4\\n4 1\") == 15\nassert solution(\"2\\n15 20\\n5\\n1 1\") == 0\nassert solution(\"2\\n15 20\\n5\\n2 1\") == 0\nassert solution(\"2\\n15 20\\n5\\n3 1\") == 0\nassert solution(\"2\\n15 20\\n5\\n4 1\") == 0\nassert solution(\"2\\n15 20\\n5\\n5 1\") == 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 15, \"Your solution is incorrect.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 15, \"Your solution is incorrect\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '15', \"The shortest possible time it takes to construct an airplane assuming a single step can be reduced to take no time at all is incorrect\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == 15"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 4\\n1 1\\n3 2 5\\n2 3 2') == 'definitely'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"10 3\\n1 2 6789\\n2 3 1234\\n3 4 5678\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\"\nassert solution(\"5 2\\n1 2 100\\n2 2 200\\n3 2 300\\n4 2 400\\n\") == \"impossible\"\nassert solution(\"5 3\\n1 2 100\\n2 2 200\\n3 2 300\\n4 2 400\\n5 2 500\\n\") == \"possible\"\nassert solution(\"6 5\\n1 2 100\\n2 3 200\\n3 4 300\\n4 5 400\\n5 5 500\\n\") == \"possible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 4\\n3 2 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'definitely'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'impossible', \"Incorrect solution\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\", \"The output is incorrect.\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1.0\n\nsolution(1)"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1.000000000\"\nassert solution(1) == \"1.000000000\"\nassert solution(1000) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\n\") == \"1.000000000\"\nassert solution(stdin=\"2\\n\") == \"2.000000000\"\nassert solution(stdin=\"3\\n\") == \"3.000000000\"\nassert solution(stdin=\"4\\n\") == \"4.000000000\"\nassert solution(stdin=\"5\\n\") == \"5.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1.000000000', 'Test case failed'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '2.000000000'\nassert solution(3) == '3.000000000'\nassert solution(4) == '4.000000000'\nassert solution(5) == '5.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1.000000000'\nassert solution(10) == '1000000000.000000000'\nassert solution(100) == '10000000000000000.000000000'\nassert solution(1000) == '100000000000000000000.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9''') == 115.0\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9''') == 115.0\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9''') == 115.0\nassert solution('''100 3 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10 9\n100 1 10\n15 99 98\n40 3 2\n90 10"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nprint(\"Test Passed\")"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Incorrect output\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Incorrect output\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Incorrect output\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nprint('All test cases pass.')"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nprint(\"All tests passed!\")"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 10\") == 115.0\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == 115.0\nprint('All tests passed.')"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '199.500000', solution(stdin)"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"3\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"5\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"6\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"7\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"8\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"9\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"10\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"11\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"12\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"13\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"14\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"15\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"16\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"17\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"18\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"19\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"20\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"21\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"22\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"23\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"24\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"25\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"26\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"27\\n100 1 1\\n100 1 1.5\") == \"200.000000\"\nassert solution(\"28\\n100 1 1\\n100 1 1.5\") == \"199.5"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"199.500000\\n\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.5\"\nassert solution(\"3\\n100 1 1\\n100 1 1.5\\n100 1 1.5\") == \"200\"\nassert solution(\"4\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5\") == \"200.5\"\n\nfrom typing import List"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n100 1 1\n100 1 1.5\n\"\"\"\n) == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 2\\n1 3 5 2 4 12') == '1\\n'\nassert solution('3 2\\n1 3 5 2 4 6 8 9 7 10 11') == '1\\n'\nassert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 2\\n1 4 6 2 4 12') == '1\\n'\nassert solution('4 2\\n1 4 6 2 4 6 8 9 7 10 11') == '1\\n'\nassert solution('4 2\\n1 4 6 2 4 12 8 9 7 10 11') == '1\\n'\nassert solution('4 2\\n1 4 6 2 4 6 8 9 7 10 11') == '1\\n'\nassert solution('4 2\\n1 4 6 2 4 12 8 9 7 10 11') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"5 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n) == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 5\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 6\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('2 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 6\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 6\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('4 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('5 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('5 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('5 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('6 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('6 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('6 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('7 8\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('7 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('7 12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('8 1"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\nImpossible'\nassert solution('10\\n5 5 5 5') == '30\\n50'\nassert solution('25\\n10 20 30 50') == '1000'\nassert solution('200000000\\n
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13\\n3 2 1 1') == '5'\nassert solution('5\\n3 2 1 1') == 'Impossible'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"1\\n1 1 1 1\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2\\n2 2 2 2\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3\\n3 3 3 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n4 4 4 4\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5\\n5 5 5 5\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"10\\n10 10 10 10\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"11\\n11 11 11 11\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"12\\n12 12 12 12\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"13\\n13 13 13 13\") == \"Impossible on a single line\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\n'\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\nImpossible\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, got {solution(stdin)}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\nImpossible\"\nassert solution(\"1\\n1\") == \"Impossible\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes\\ndef solution(stdin: str) -> str:pass'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n\nfrom typing import List"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"yes\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"no\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"no\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"no\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"no\"\nassert solution(\"aabcad\\naba\\nacd\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aabcad') == 'yes', \"Anthony's claim is not possible\"\nassert solution('aba') == 'yes', \"Anthony's claim is not possible\"\nassert solution('acd') == 'yes', \"Anthony's claim is not possible\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'\nassert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n1 2 3 4') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '''\n5\n'''\n\nassert solution('''\n10 10\n1 2\n3 4\n5 6\n7 8\n9 10\n''') == '''\n4\n'''"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input_, output in [\n    (\"\", \"\"),\n    (\"\\n\", \"\"),\n    (\"\\n\\n\\n\\n\", \"\"),\n    (\"1\\n2\\n3\\n4\\n5\\n\", \"\"),\n    (\"2\\n3\\n1\\n5\\n\", \"3\"),\n    (\"3\\n1\\n2\\n5\\n\", \"1\"),\n    (\"4\\n2\\n3\\n5\\n\", \"5\"),\n    (\"3\\n4\\n7\\n10\\n\", \"1\"),\n    (\"2\\n4\\n3\\n5\\n\", \"2\"),\n    (\"4\\n2\\n8\\n9\\n\", \"5\"),\n]"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\", \"The solution should return the expected output.\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\", \"The correct output should be returned\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"Incorrect output. Expected 4, got {}.\".format(solution())"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Sample Input: {input()}\\nSample Output: {output}\\n\\nOutput should be: {output}\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4, \"Solution not correct.\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n\"\nassert solution(\"5 2\\n3 5 same\\n2 4 same\") == \"1\\n\"\nassert solution(\"5 2\\n2 3 same\\n3 5 same\") == \"2\\n\"\nassert solution(\"5 2\\n2 3 same\\n3 5 different\") == \"0\\n\"\nassert solution(\"5 2\\n2 4 different\\n3 5 same\") == \"1\\n\"\nassert solution(\"5 2\\n2 4 different\\n3 5 different\") == \"0\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nassert solution(\"5 1\\n1 5 same\\n2 4 different\\n\") == \"1\"\nassert solution(\"5 3\\n2 4 same\\n3 5 different\\n\") == \"2\"\nassert solution(\"5 2\\n1 5 same\\n3 4 different\\n\") == \"2\"\nassert solution(\"5 2\\n2 5 same\\n3 4 different\\n\") == \"2\"\nassert solution(\"5 2\\n2 4 same\\n3 5 different\\n\") == \"2\"\nassert solution(\"5 3\\n1 5 same\\n3 4 different\\n\") == \"1\"\nassert solution(\"5 2\\n2 5 same\\n3 5 different\\n\") == \"1\"\nassert solution(\"5 1\\n1 5 same\\n2 4 different\\n\") == \"1\"\nassert solution(\"5 1\\n1 5 same\\n2 5 different\\n\") == \"1\"\nassert solution(\"5 2\\n1 5 same\\n2 5 different\\n\") == \"0\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\\n\"\nassert solution(\"5 2\\n2 4 false\\n3 5 same\\n\") == \"0\\n\"\nassert solution(\"5 2\\n2 4 same\\n3 5 false\\n\") == \"0\\n\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"1\\n\"\nassert solution(\"5 2\\n2 4 false\\n3 5 same\\n\") == \"0\\n\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"1\\n\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"1\\n\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == 3, \"Expected output: 3, got: {}\".format(solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5'))"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\"\nassert solution(\"6 4\\n0 1\\n3 2\\n3 4\\n\") == \"2\"\nassert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3, \"The maximum number of hops in the resulting network should be 3.\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\"\nassert solution(\"6 6\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"6\"\nassert solution(\"5 5\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"5\"\nassert solution(\"5 6\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"6\"\nassert solution(\"5 7\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"7\"\nassert solution(\"5 8\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"8\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Test 1 failed\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3\nassert solution(\"6 4\\n1 2\\n3 4\\n4 5\") == 2\nassert solution(\"6 4\\n2 3\\n4 5\\n5 6\") == 1\nassert solution(\"6 4\\n3 4\\n5 6\\n6 7\") == 0\nassert solution(\"6 4\\n0 1\\n2 3\\n4 5\") == 2\nassert solution(\"6 4\\n0 1\\n3 4\\n5 6\") == 2\nassert solution(\"6 4\\n2 3\\n4 5\\n5 6\") == 1\nassert solution(\"6 4\\n0 1\\n2 3\\n4 5\") == 2"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3\\n', 'Test failed'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == ['9.0', '6.5', '2.5']"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '9.0'\nassert solution('''\n1\n1 1\nD\nD\nU\n''') == '6.5'\nassert solution('''\n1\n1 1\nL\nL\nR\n''') == '2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9.0\\n6.5\\n2.5\\n\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 3 2\n    B 1 2\n    B 2 3\n    R 3 1\n''') == '1'\n\nassert solution('''\n    4 4 3\n    R 1 2\n    R 2 3\n    R 3 4\n    R 4 1\n    R 1 4\n    R 3 2\n''') == '1'\n\nassert solution('''\n    5 5 3\n    B 1 2\n    B 2 3\n    R 3 1\n    R 1 4\n    B 4 2\n    R 4 3\n    R 2 4\n    R 2 1\n''') == '0'\n\nassert solution('''\n    6 6 3\n    B 1 2\n    B 2 3\n    B 1 4\n    R 4 1\n    R 1 5\n    R 5 3\n    R 1 2\n    R 2 3\n    R 3 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R 5 4\n    R 4 5\n    R 5 6\n    R 6 1\n    R 1 5\n    R 5 2\n    R 2 5\n    R "
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\nassert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 4 1\") == \"0\"\nassert solution(\"3 3 3\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution() == '0'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output  # Add your code here"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\nassert solution(\"4 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"3 3 1\") == \"1\"\nassert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 3\\nR 2 3\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    5 0 5\n    7 0 7\n    4\n    88\n    5\n    6\n    7\n''') == '''\n88\n5\n5\n7\n'''"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"88\", \"Incorrect output\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(sample_input)}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"4\\n5\\n6\\n7\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('100 10000 10 1000\\n1000') == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"5 3 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 2 1 1\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 3\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 4\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 2 1 5\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 6\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 7\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 8\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 9\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 10\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 11\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 12\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 13\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 14\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 15\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 16\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 17\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 18\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 19\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 20\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 21\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 22\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 23\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 24\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") =="
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5\nprint(\"All tests passed\")"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3') == -1\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 4') == -1\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 1') == -1\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 2') == -1\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3') == -1\nassert solution('3 2 1 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"4 10 3 1\\n3\\n1 1 1\\n1 2 1\\n2 2 2\\n2 3 2\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"5\\n5\\n5\\n5\\n5\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"The solution is incorrect.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"Hey there! Where are you from?\") == \"Hey there\"\nassert solution(\"Please don't kill me!\") == \"Please don't kill me!\"\nassert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"Hey there! Where are you from?\") == \"Hey there\"\nassert solution(\"Please don't kill me!\") == \"Please don't kill me!\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"hello world\") == \"hello world\"\nassert solution(\"abcde\") == \"abcde\"\nassert solution(\"abcdefghij\") == \"abcdefghij\"\nassert solution(\"test123\") == \"test123\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"32\", \"The output should be 32, but it is: \" + str(solution(stdin))"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 32\nprint(\"All tests passed!\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25\\n') == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == 32, 'Expected Output: 32'\nassert solution('6\\n3 10\\n4 20\\n5 30\\n6 40') == 12, 'Expected Output: 12'\nassert solution('5\\n3 20\\n4 30\\n5 40\\n6 50') == 24, 'Expected Output: 24'\nassert solution('1\\n1 1000000000') == 0, 'Expected Output: 0'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 2\\n1 2 0 3 3\\n1 2 0 3 4\\n1 2 0 3 5\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 2\\n1 2 0 3 4\\n1 2 0 3 5\\n1 2 0 3 1\") == \"4\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 2\\n1 2 0 3 3\\n1 2 0 3 5\\n1 2 0 3 1\\n1 2 0 3 2\") == \"4\\n3\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\nassert solution('4\\n1 2 3 1') == '2\\n'\nassert solution('6\\n1 2 0 1 2') == '2\\n'\nassert solution('8\\n1 2 3 1 1') == '1\\n'\nassert solution('9\\n1 2 3 1 2') == '1\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == '3'\nassert solution(3) == '2'\nassert solution(5) == '2'\nassert solution(1000) == '2'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\") == \"2\\n\"\n\nsolution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The output should be 2, but it is currently {}\".format(solution())"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 5 4\\n- 2 2\\n- 2 4\\n- 3 3\\n- 3 4\\n\") == \"2\"\nassert solution(\"3 3 4\\n+ 2 1\\n+ 2 3\\n+ 2 4\\n- 2 2\\n- 2 3\\n- 2 4\\n+ 3 2\\n+ 3 3\\n+ 3 4\\n- 3 1\\n- 3 3\\n- 3 4\\n\") == \"3\"\nassert solution(\"3 3 3\\n+ 2 2\\n+ 2 3\\n+ 2 4\\n- 2 3\\n- 2 4\\n+ 3 2\\n+ 3 3\\n+ 3 4\\n- 3 3\\n- 3 4\\n- 3 4\\n\") == \"4\"\nassert solution(\"3 4 4\\n+ 2 2\\n+ 2 3\\n+ 2 4\\n- 2 3\\n- 2 4\\n+ 3 2\\n+ 3 3\\n+ 3 4\\n- 3 3\\n- 3 4\\n- 3 4\\n\") == \"5\"\nassert solution(\"1 1 1\\n- 1 1\\n- 2 1\\n- 2 2\\n\") == \"0\"\nassert solution(\"5 6 5\\n+ 1 2\\n+ 1 4\\n+ 2 2\\n+ 2 3\\n+ 2 4\\n- 3 3\\n- 3 4\\n- 4 4\\n- 4 5\\n\") == \"0\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Test case 1 failed\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b=1000000000, p=0) == 0.0\nassert solution(b=1000000000, p=1) == 1.0\nassert solution(b=1000000000, p=2) == 0.75\nassert solution(b=1000000000, p=3) == 0.5\nassert solution(b=1000000000, p=4) == 0.25\nassert solution(b=1000000000, p=5) == 0.125\nassert solution(b=1000000000, p=6) == 0.0625\nassert solution(b=1000000000, p=7) == 0.03125\nassert solution(b=1000000000, p=8) == 0.015625\nassert solution(b=1000000000, p=9) == 0.0078125\nassert solution(b=1000000000, p=10) == 0.00390625\nassert solution(b=1000000000, p=11) == 0.001953125\nassert solution(b=1000000000, p=12) == 0.0009765625\nassert solution(b=1000000000, p=13) == 0.00048828125\nassert solution(b=1000000000, p=14) == 0.000244140625\nassert solution(b=1000000000, p=15) == 0.0001220703125\nassert solution(b=1000000000, p=16) == 0.00006103515625\nassert solution(b=1000000000, p=17) == 0.000030517578125\nassert solution(b=1000000000, p=18) == 0.0000152587890625\nassert solution(b=1000000000, p=19) == 0.00000762939453125\nassert solution(b=1000000000, p=20) == 0.000003814697265625\nassert solution(b=1000000000, p=21) == 0.0000019073486328125\nassert solution(b=1000000000, p=22) == 0.00000095367431640625\nassert solution(b=1000000000, p=23) == 0.000000476837158203125\nassert solution(b=1000000000, p=24) == 0.0000002384185791015625\nassert solution(b=1000000000, p=25) == 0.00000011920927734375\nassert solution(b=1000000000, p=26) == 0.000000059604638671875\nassert solution(b=1000000000, p=27) == 0.00000002980"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004'\nassert solution('5\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n') == '1500000010'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n1000000000\\n1000000000\\n2\\n3\\n4\\n') == '500000004'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Invalid input. Please provide valid input.\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == 500000004\nassert solution('3\\n1000000000 0\\n1000000000 1\\n1000000000 2') == 499999996\nassert solution('4\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3') == 499999994\nassert solution('5\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4') == 499999992\nassert solution('6\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5') == 499999990\nassert solution('7\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6') == 499999988\nassert solution('8\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7') == 499999986\nassert solution('9\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8') == 499999984\nassert solution('10\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9') == 499999982\nassert solution('11\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 "
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\").read()) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"flight_itinerary.txt\", \"r\").read()) == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The function should return '{expected}', but it returns '{solution(input())}'.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"3 19\\n15 10 3\\n12 4 4\\n20 10 5\") == \"6\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"3 19\\n20 5 3\\n12 4 4\\n20 10 5\") == \"2\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"1\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"0\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == 3\nassert solution('4 4 4\\n2 2 2\\n4 4 4') == 3\nassert solution('1 2 3\\n1 1 1\\n3 3 3') == 3\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 3\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 1\nassert solution('5 5 5\\n5 5 5\\n5 5 5') == 1\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 1\nassert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == 1\nassert solution('4 4 4\\n2 2 2\\n4 4 4') == 1\nassert solution('1 2 3\\n1 1 1\\n3 3 3') == 1\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 1\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 0\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"3\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"3\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n1\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"1\\n\", \"Output must be 1, not {}\".format(solution(stdin))"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n1 1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1\") == 1, \"Incorrect solution.\"\nassert solution(\"2\\n1 1 1\\n1 1 1\") == 1, \"Incorrect solution.\"\nassert solution(\"3\\n1 1 1\\n1 1 1\\n1 1 1\") == 1, \"Incorrect solution.\"\nassert solution(\"4\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == 1, \"Incorrect solution.\"\nassert solution(\"5\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == 1, \"Incorrect solution.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n2 3\\n\") == \"1\\n2\\n\"\nassert solution(\"3\\n1 2\\n\") == \"2\\n3\\n\"\nassert solution(\"3\\n1 1\\n\") == \"1\\n3\\n\"\nassert solution(\"3\\n1 3\\n\") == \"3\\n1\\n\"\nassert solution(\"3\\n2 2\\n\") == \"2\\n3\\n\"\nassert solution(\"4\\n1 2\\n\") == \"2\\n4\\n\"\nassert solution(\"4\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"5\\n1 2\\n\") == \"1\\n2\\n\"\nassert solution(\"5\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"5\\n1 4\\n\") == \"1\\n4\\n\"\nassert solution(\"5\\n1 5\\n\") == \"1\\n5\\n\"\nassert solution(\"5\\n1 6\\n\") == \"1\\n6\\n\"\nassert solution(\"6\\n1 2\\n\") == \"1\\n2\\n\"\nassert solution(\"6\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"6\\n1 4\\n\") == \"1\\n4\\n\"\nassert solution(\"6\\n1 5\\n\") == \"1\\n5\\n\"\nassert solution(\"6\\n1 6\\n\") == \"1\\n6\\n\"\nassert solution(\"7\\n1 2\\n\") == \"1\\n2\\n\"\nassert solution(\"7\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"7\\n1 4\\n\") == \"1\\n4\\n\"\nassert solution(\"7\\n1 5\\n\") == \"1\\n5\\n\"\nassert solution(\"7\\n1 6\\n\") == \"1\\n6\\n\"\nassert solution(\"7\\n1 7\\n\") == \"1\\n7\\n\"\nassert solution(\"8\\n1 2\\n\") == \"1\\n2\\n\"\nassert solution(\"8\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"8\\n1 4\\n\") == \"1\\n4\\n\"\nassert solution(\"8\\n1 5\\n\") == \"1\\n5\\n\"\nassert solution(\"8\\n1 6\\n\") == \"1\\n6\\n\"\nassert solution(\"8\\n1 7\\n\") == \"1\\n7\\n\"\nassert solution(\"8\\n1 8\\n\") == \"1\\n8\\n\"\nassert solution(\"9\\n1 2\\n\") == \"1\\n2\\n\"\nassert solution(\"9\\n1 3\\n\") == \"1\\n3\\n\"\nassert solution(\"9\\n1 4\\n\") == \"1\\n4\\n\"\nassert solution(\"9\\n1 5\\n\") == \"1\\n5\\n\"\nassert solution(\"9\\n1 6\\n\") == \"1\\n6\\n\"\nassert solution(\"9\\n1 7\\n\") == \"1\\n7\\n\"\nassert solution(\"9\\n1 8\\n\") == \"1\\n8\\n\"\nassert solution(\"9\\n1 9\\n\") == \"1\\n9\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n1\\n'  # output: 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n1 1\\n\"\nassert solution(\"2\\n2 1\\n\") == \"2\\n1 1\\n\"\nassert solution(\"3\\n1 1\\n2 2\\n\") == \"6\\n1 1\\n2 2\\n\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n\") == \"24\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"60\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"106\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\"\nassert solution(\"7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"216\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\"\nassert solution(\"8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == \"426\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\"\nassert solution(\"9\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\") == \"858\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"1730\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\"\nassert solution(\"11\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"3556\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\"\nassert solution(\"12\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n\") == \"7518\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n\"\nassert solution(\"13\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n\") == \"16738\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n\"\nassert solution(\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3'\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"GRRG\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"GRGB\\nGBBY\\nBYRR\\nYRYR\") == \"3\"\nassert solution(\"GBRG\\nGBBY\\nBYRR\\nYBYR\") == \"3\"\nassert solution(\"GBRR\\nGBBR\\nBYYR\\nYBYR\") == \"3\"\nassert solution(\"GBRR\\nGBBY\\nBYYR\\nYBRR\") == \"3\"\nassert solution(\"GBRR\\nGBBY\\nBYYR\\nYBRR\") == \"3\"\nassert solution(\"GBRR\\nGBBY\\nBBRY\\nYBRR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGR\") == \"3\", \"Test 1\"\nassert solution(\"GBGB\") == \"3\", \"Test 2\"\nassert solution(\"BYBY\") == \"3\", \"Test 3\"\nassert solution(\"YRYR\") == \"3\", \"Test 4\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3\\n'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\") == 3, \"Expected minimum number of moves to solve puzzle RGGR, but got: {}\".format(solution(\"RGGR\"))\nassert solution(\"GBGB\") == 3, \"Expected minimum number of moves to solve puzzle GBGB, but got: {}\".format(solution(\"GBGB\"))\nassert solution(\"BYBY\") == 3, \"Expected minimum number of moves to solve puzzle BYBY, but got: {}\".format(solution(\"BYBY\"))\nassert solution(\"YRYR\") == 3, \"Expected minimum number of moves to solve puzzle YRYR, but got: {}\".format(solution(\"YRYR\"))"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"GRGB\\nBYGB\\nYBYB\\nBYRB\") == \"12\"\nassert solution(\"RRRR\\nRRRR\\nRRRR\\nRRRR\") == \"2\"\nassert solution(\"GRRR\\nBRGR\\nGRBR\\nGRBR\") == \"1\"\nassert solution(\"GBGR\\nGRBG\\nBRGB\\nGRBR\") == \"2\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RRRR\\nGGGG\\nBBBY\\nYYYB\") == \"3\"\nassert solution(\"GBRR\\nGGGG\\nBBBY\\nYYBY\") == \"3\"\nassert solution(\"BBRR\\nGGGG\\nBBBY\\nYYBY\") == \"3\"\nassert solution(\"RRRR\\nGGGG\\nBBBY\\nYYBY\") == \"3\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"AAAAA\", \"The output is incorrect\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed with input: {input_data}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'IMPOSSIBLE', \"Solution not implemented\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\" # Taking input and expected output\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Test failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"2\"\nassert solution(\"abcd\") == \"3\"\nassert solution(\"a\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"a\") == \"1\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\"\"\") == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(\"\"\"5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\"\"\") == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for solution({input()})\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\\austria\\austria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"austria\") == \"12\\n\"\nassert solution(\"autocorrect\") == \"12\\n\"\nassert solution(\"program\") == \"12\\n\"\nassert solution(\"computer\") == \"12\\n\"\nassert solution(\"autocorrelation\") == \"12\\n\"\nassert solution(\"zyx\") == \"12\\n\"\nassert solution(\"austria\") == \"12\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"austria\\n\"\n                 \"autocorrect\\n\"\n                 \"program\\n\"\n                 \"programming\\n\"\n                 \"computer\\n\"\n                 \"autocorrelation\\n\"\n                 \"programming\\n\"\n                 \"competition\\n\"\n                 \"zyx\\n\"\n                 \"austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\")\nassert solution(\"austria\\n\"\n                 \"autocorrelation\\n\"\n                 \"program\\n\"\n                 \"programming\\n\"\n                 \"competition\\n\"\n                 \"zyx\\n\"\n                 \"austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\")\nassert solution(\"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"austria\\n\"\n                 \"aust"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"0\\n1 1\") == 1, \"The solution is incorrect.\"\nassert solution(\"0\\n3 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"0\\n5 1\") == 4, \"The solution is incorrect.\"\nassert solution(\"0\\n1 2\") == 3, \"The solution is incorrect.\"\nassert solution(\"1\\n3 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"2\\n3 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"0\\n1 3\") == 4, \"The solution is incorrect.\"\nassert solution(\"0\\n2 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"0\\n1 1 2\") == 3, \"The solution is incorrect.\"\nassert solution(\"1\\n1 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"0\\n1 1 0\") == 1, \"The solution is incorrect.\"\nassert solution(\"0\\n1 0 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"2\\n0 0 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"2\\n0 1 0\") == 4, \"The solution is incorrect.\"\nassert solution(\"2\\n0 1 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"2\\n1 0 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"2\\n1 0 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"2\\n1 1 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"2\\n1 1 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"2\\n2 0 0\") == 1, \"The solution is incorrect.\"\nassert solution(\"2\\n2 0 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"2\\n2 1 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"2\\n2 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n2 1 1\") == 4, \"The solution is incorrect.\"\nassert solution(\"3\\n3 0 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n3 1 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n3 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n3 2 0\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n3 2 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n4 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n4 2 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n4 2 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n5 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n5 2 0\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n5 2 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n5 3 0\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n5 3 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n6 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n6 2 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n6 2 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n6 3 0\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n6 3 1\") == 3, \"The solution is incorrect.\"\nassert solution(\"3\\n7 1 1\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n7 2 0\") == 2, \"The solution is incorrect.\"\nassert solution(\"3\\n7"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n2 1 3\") == 3\nassert solution(\"5\\n1 1 2 2 2\") == 3\nassert solution(\"6\\n1 1 1 2 2 2\") == 4\nassert solution(\"7\\n1 1 1 1 1 2\") == 3\nassert solution(\"8\\n1 1 1 1 1 1\") == 3\nassert solution(\"9\\n1 1 1 1 1 1\") == 3\nassert solution(\"10\\n1 1 1 1 1 1\") == 3\nassert solution(\"11\\n1 1 1 1 1 1\") == 3\nassert solution(\"12\\n1 1 1 1 1 1\") == 3\nassert solution(\"13\\n1 1 1 1 1 1\") == 3\nassert solution(\"14\\n1 1 1 1 1 1\") == 3\nassert solution(\"15\\n1 1 1 1 1 1\") == 3\nassert solution(\"16\\n1 1 1 1 1 1\") == 3\nassert solution(\"17\\n1 1 1 1 1 1\") == 3\nassert solution(\"18\\n1 1 1 1 1 1\") == 3\nassert solution(\"19\\n1 1 1 1 1 1\") == 3\nassert solution(\"20\\n1 1 1 1 1 1\") == 3\nassert solution(\"21\\n1 1 1 1 1 1\") == 3\nassert solution(\"22\\n1 1 1 1 1 1\") == 3\nassert solution(\"23\\n1 1 1 1 1 1\") == 3\nassert solution(\"24\\n1 1 1 1 1 1\") == 3\nassert solution(\"25\\n1 1 1 1 1 1\") == 3\nassert solution(\"26\\n1 1 1 1 1 1\") == 3\nassert solution(\"27\\n1 1 1 1 1 1\") == 3\nassert solution(\"28\\n1 1 1 1 1 1\") == 3\nassert solution(\"29\\n1 1 1 1 1 1\") == 3\nassert solution(\"30\\n1 1 1 1 1 1\") == 3\nassert solution(\"31\\n1 1 1 1 1 1\") == 3\nassert solution(\"32\\n1 1 1 1 1 1\") == 3\nassert solution(\"33\\n1 1 1 1 1 1\") == 3\nassert solution(\"34\\n1 1 1 1 1 1\") == 3\nassert solution(\"35\\n1 1 1 1 1 1\") == 3\nassert solution(\"36\\n1 1 1 1 1 1\") == 3\nassert solution(\"37\\n1 1 1 1 1 1\") == 3\nassert solution(\"38\\n1 1 1 1 1 1\") == 3\nassert solution(\"39\\n1 1 1 1 1 1\") == 3\nassert solution(\"40\\n1 1 1 1 1 1\") == 3\nassert solution(\"41\\n1 1 1 1 1 1\") == 3\nassert solution(\"42\\n1 1 1 1 1 1\") == 3\nassert solution(\"43\\n1 1 1 1 1 1\") == 3\nassert solution(\"44\\n1 1 1 1 1 1\") == 3\nassert solution(\"45\\n1 1 1 1 1 1\") == 3\nassert solution(\"46\\n1 1 1 1 1 1\") == 3\nassert solution(\"47\\n1 1 1 1 1 1\") == 3\nassert solution(\"48\\n1 1 1"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n0 1 1\\n0 1 1\") == 3\nassert solution(\"5\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 4\nassert solution(\"6\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 4\nassert solution(\"7\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 5\nassert solution(\"8\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 5\nassert solution(\"9\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 6\nassert solution(\"10\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 6\nassert solution(\"11\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 7\nassert solution(\"12\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 7\nassert solution(\"13\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 8\nassert solution(\"14\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 8\nassert solution(\"15\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 9\nassert solution(\"16\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 9\nassert solution(\"17\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\") == 10\nassert solution(\"18\\n0 1 1\\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n\ninput_data = [int(x) for x in input().split()]\noutput = solution(input_data)\nprint(output)"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(4) == 6\nassert solution(5) == 6\nassert solution(6) == 12\nassert solution(7) == 12\nassert solution(8) == 12\nassert solution(9) == 12\nassert solution(10) == 12\nassert solution(11) == 12\nassert solution(12) == 12\nassert solution(13) == 12\nassert solution(14) == 12\nassert solution(15) == 12\nassert solution(16) == 12\nassert solution(17) == 12\nassert solution(18) == 12\nassert solution(19) == 12\nassert solution(20) == 12\nassert solution(21) == 12\nassert solution(22) == 12\nassert solution(23) == 12\nassert solution(24) == 12\nassert solution(25) == 12\nassert solution(26) == 12\nassert solution(27) == 12\nassert solution(28) == 12\nassert solution(29) == 12\nassert solution(30) == 12\nassert solution(31) == 12\nassert solution(32) == 12\nassert solution(33) == 12\nassert solution(34) == 12\nassert solution(35) == 12\nassert solution(36) == 12\nassert solution(37) == 12\nassert solution(38) == 12\nassert solution(39) == 12\nassert solution(40) == 12\nassert solution(41) == 12\nassert solution(42) == 12\nassert solution(43) == 12\nassert solution(44) == 12\nassert solution(45) == 12\nassert solution(46) == 12\nassert solution(47) == 12\nassert solution(48) == 12\nassert solution(49) == 12\nassert solution(50) == 12\nassert solution(51) == 12\nassert solution(52) == 12\nassert solution(53) == 12\nassert solution(54) == 12\nassert solution(55) == 12\nassert solution(56) == 12\nassert solution(57) == 12\nassert solution(58) == 12\nassert solution(59) == 12\nassert solution(60) == 12\nassert solution(61) == 12\nassert solution(62) == 12\nassert solution(63) == 12\nassert solution(64) == 12\nassert solution(65) == 12\nassert solution(66) == 12\nassert solution(67) == 12\nassert solution(68) == 12\nassert solution(69) == 12\nassert solution(70) == 12\nassert solution(71) == 12\nassert solution(72) == 12\nassert solution(73) == 12\nassert solution(74) == 12\nassert solution(75) == 12\nassert solution(76) == 12\nassert solution(77) == 12\nassert solution(78) == 12\nassert solution(79) == 12\nassert solution(80) == 12\nassert solution(81) == 12\nassert solution(82) == 12\nassert solution(83) == 12\nassert solution(84) == 12\nassert solution(85) == 12\nassert solution(86) == 12\nassert solution(87) == 12\nassert solution(88) == 12\nassert solution(89) == 12\nassert solution(90) == 12\nassert solution(91) == 12\nassert solution(92) == 12\nassert solution(93) == 12\nassert solution(94) == 12\nassert solution(95) == 12\nassert solution(96) == 12\nassert solution"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1') == 3\nassert solution('3\\n0 1 2') == 3\nassert solution('3\\n0 1 3') == 3\nassert solution('3\\n0 2 1') == 3\nassert solution('3\\n0 2 2') == 3\nassert solution('3\\n0 2 3') == 3\nassert solution('3\\n0 3 1') == 3\nassert solution('3\\n0 3 2') == 3\nassert solution('3\\n0 3 3') == 3\nassert solution('3\\n0 4 1') == 3\nassert solution('3\\n0 4 2') == 3\nassert solution('3\\n0 4 3') == 3\nassert solution('3\\n0 5 1') == 3\nassert solution('3\\n0 5 2') == 3\nassert solution('3\\n0 5 3') == 3\nassert solution('3\\n0 6 1') == 3\nassert solution('3\\n0 6 2') == 3\nassert solution('3\\n0 6 3') == 3\nassert solution('3\\n0 7 1') == 3\nassert solution('3\\n0 7 2') == 3\nassert solution('3\\n0 7 3') == 3\nassert solution('3\\n0 8 1') == 3\nassert solution('3\\n0 8 2') == 3\nassert solution('3\\n0 8 3') == 3\nassert solution('3\\n0 9 1') == 3\nassert solution('3\\n0 9 2') == 3\nassert solution('3\\n0 9 3') == 3\nassert solution('3\\n0 10 1') == 3\nassert solution('3\\n0 10 2') == 3\nassert solution('3\\n0 10 3') == 3\nassert solution('3\\n0 11 1') == 3\nassert solution('3\\n0 11 2') == 3\nassert solution('3\\n0 11 3') == 3\nassert solution('3\\n0 12 1') == 3\nassert solution('3\\n0 12 2') == 3\nassert solution('3\\n0 12 3') == 3\nassert solution('3\\n0 13 1') == 3\nassert solution('3\\n0 13 2') == 3\nassert solution('3\\n0 13 3') == 3\nassert solution('3\\n0 14 1') == 3\nassert solution('3\\n0 14 2') == 3\nassert solution('3\\n0 14 3') == 3\nassert solution('3\\n0 15 1') == 3\nassert solution('3\\n0 15 2') == 3\nassert solution('3\\n0 15 3') == 3\nassert solution('3\\n0 16 1') == 3\nassert solution('3\\n0 16 2') == 3\nassert solution('3\\n0 16 3') == 3\nassert solution('3\\n0 17 1') == 3\nassert solution('3\\n0 17 2') == 3\nassert solution('3\\n0 17 3') == 3\nassert solution('3\\n0 18 1') == 3\nassert solution('3\\n0 18 2') == 3\nassert solution('3\\n0 18 3') == 3\nassert solution('3\\n0 19 1') == 3\nassert solution('3\\n0 19 2') == 3\nassert solution('3\\n0 19 3') == 3\nassert solution('3\\n0 20 1') == 3\nassert solution('3\\n0 20 2') == 3\nassert solution('3\\n0 20 3') == 3\nassert solution('3\\n0 21 1') == 3\nassert solution('3\\n0 21 2') == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n0 1 1\") == 3\nassert solution(stdin=\"2\\n0 1\\n1 0\") == 2\nassert solution(stdin=\"4\\n0 2 0\\n2 1 1\\n1 0 1\") == 4\nassert solution(stdin=\"5\\n0 3 1\\n2 1 1\\n3 0 1\\n1 2 0\") == 5"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"The function should return 3, not {}.\".format(solution(\"3\\n0 1 1\"))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', 'Expected \"Pre Post In Post In Pre\", but got \"{}\"'.format(solution('HFBIGEDCJA'))\nassert solution('BIGEDCJFAH') == 'In Pre In In In Post', 'Expected \"In Pre In In In Post\", but got \"{}\"'.format(solution('BIGEDCJFAH'))\nassert solution('IGEDCJBAFH') == 'In Pre In In In Post', 'Expected \"In Pre In In In Post\", but got \"{}\"'.format(solution('IGEDCJBAFH'))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='HFBIGEDCJA') == 'In Post Pre In In Pre', 'Test case 1 failed'\nassert solution(stdin='BIGEDCJFAH') == 'Pre Post In Post In Pre', 'Test case 2 failed'\nassert solution(stdin='BIGEDCJFAH') == 'In Post Pre In In Pre', 'Test case 3 failed'\nassert solution(stdin='HFBIGEDCJA') == 'In Post Pre In In Pre', 'Test case 4 failed'\nassert solution(stdin='IGEDCJBAFH') == 'In Post Pre In In Pre', 'Test case 5 failed'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\"\nassert solution(\"JJIGKGLCO\\nBFJIJKOGM\\nFHIJKLGFJ\\n\") == \"In In Pre Post In In In Pre\"\nassert solution(\"DFEADNCA\\nBECIFHAN\\nFBCAHEDF\\n\") == \"Post Post Post In In Post Post\"\nassert solution(\"FFACGEFG\\nCHJIKLGH\\nFIFHIJOK\\n\") == \"Post Post In In Pre Post In\"\nassert solution(\"OOOOO\\nRRRRR\\nSSSSS\\n\") == \"Post In Pre In In In\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"Your implementation of prePrint, inPrint, and postPrint are correct.\"\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', \"Your implementation of prePrint, inPrint, and postPrint are correct.\"\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA', \"Your implementation of prePrint, inPrint, and postPrint are correct.\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'IGEDCJBAFH', 'Incorrect result for def solution(stdin: str) -> str: pass'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\", \"Expected output 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', got: '\"+solution+\"'\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Expected: Pre Post In Post In Pre, Got: {}\".format(solution(\"HFBIGEDCJA\"))\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Expected: Pre Post In Post In Pre, Got: {}\".format(solution(\"BIGEDCJFAH\"))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\"\nassert solution(\"ABCDE\\nFGHIJ\\nKLMNO\") == \"In Pre In In In In In Pre\"\nassert solution(\"AABBCCDDDEEEFFGGGG\") == \"In In Post In Pre In In In\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"In Post In In Post Pre In In In In\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"In Post In In Post Pre In In In In\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"10\", \"Test case 1 failed\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin}!= {expected}\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == 10\nassert solution('1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n5 2 0') == 15"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"13\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2\n    10 0\n    3 1 1\n    1\n    4 1 0\n    \"\"\"\n) == \"15\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\n\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 10000.00, \"Testcase 1 Failed\"\nassert solution(4) == 8000.00, \"Testcase 2 Failed\"\nassert solution(5) == 12000.00, \"Testcase 3 Failed\"\nassert solution(6) == 16000.00, \"Testcase 4 Failed\"\nassert solution(7) == 20000.00, \"Testcase 5 Failed\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'\n\nfrom typing import List"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10000.00\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10000.00, \"Incorrect solution. Expected 10000.00, but got {}\".format(solution())"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"3\\n-5 0 100 100\\n5 5 -100 -100\\n0 0 200 200\\n-50 -50 300 300\") == \"6500.00\"\nassert solution(\"4\\n0 0 100 100\\n50 50 -100 -100\\n50 50 100 100\\n0 0 200 200\") == \"15000.00\"\nassert solution(\"5\\n0 0 100 100\\n50 50 -100 -100\\n50 50 100 100\\n0 0 200 200\\n150 150 -50 -50\") == \"30000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=str) == \"10000.00\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1)<caret>\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed for solution(stdin: '{input_str}', output_str: '{output_str}')\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == 5\nassert solution('1 3\\n2 4\\n3 5\\n4 6') == 2\nassert solution('1 3\\n4 6\\n5 7\\n8 9') == 6\nassert solution('1 3\\n1 2\\n1 1\\n3 3\\n2 2\\n4 4') == 3\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Got: {solution(stdin)}, expected: {expected}\"\nfor i in range(1, 101):\n    n = i\n    for j in range(1, n):\n        assert 1 <= j <= n, f\"j should be between 1 and {n}\"\n    n = i\n    for j in range(n):\n        assert 1 <= j <= i, f\"j should be between 1 and {i}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4\\n') == '5\\n'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n\\n') == '5\\n'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n5 3\\n1 3\\n4 5\\n2 4\\n') == '12\\n'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n5 3\\n1 3\\n4 5\\n2 4\\n6 7\\n') == '12\\n'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n5 3\\n1 3\\n4 5\\n2 4\\n6 7\\n1 3\\n4 5\\n2 4\\n') == '12\\n'\nassert solution('5 3\\n1 3\\n4 5\\n2 4\\n5 3\\n1 3\\n4 5\\n2 4\\n6 7\\n1 3\\n4 5\\n2 4\\n1 3\\n4 5\\n2 4\\n') == '12\\n'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nassert solution(\"5 3\\n1 3\\n4 5\\n1 2\") == 3\nassert solution(\"5 3\\n1 3\\n4 5\\n1 2\\n4 3\") == 1"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n6 7\") == \"5\\n\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n6 7\\n8 9\") == \"14\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nassert solution(\"5 2\\n1 2\\n3 4\\n2 2\") == 5\nassert solution(\"1 3\\n3 2\\n2 4\") == 5\nassert solution(\"2 2\\n3 1\\n4 2\") == 5\nassert solution(\"3 4\\n4 2\\n2 2\") == 5\nassert solution(\"3 1\\n4 3\\n2 2\") == 5\nassert solution(\"1 1\\n1 1\\n1 1\") == 0\nassert solution(\"2 2\\n2 2\\n2 2\") == 0\nassert solution(\"2 2\\n2 2\\n2 2\\n2 2\") == 0\nassert solution(\"3 4\\n2 2\\n1 2\") == 0\nassert solution(\"1 1\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n\nfrom sympy.ntheory.prime_numbers import is_prime"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2095\", \"Incorrect output\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"2095\", \"The solution is not correct.\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2095\", \"Sample Output: \" + str(solution(stdin))"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"100 100 100\\n50 50 50\\n50 50 50\\n\") == \"4949\\n\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print \\\"Hello, World!\\\"; print 5; print 10; print 15; end.\") == \"Hello, World!\\n10\\n15\"\nassert solution(\"var a = 10; var b = 20; var c = 30; print a; print b; print c; end.\") == \"30\\n20\\n10\"\nassert solution(\"var a = 'abc'; var b = 'def'; var c = 'ghi'; print a; print b; print c; end.\") == \"ghi\\ndef\\nabc\"\nassert solution(\"var a = 10; var b = 20; var c = 30; print a; print b; print c; print 'x'; end.\") == \"30\\n20\\n10x\"\nassert solution(\"var a = 'hello'; var b = 'world'; var c = 'goodbye'; print a; print b; print c; end.\") == \"hello\\nworld\\ngoodbye\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution for the given input is not correct.\\nExpected: {sample_output}\\nActual: {solution(sample_input)}\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"My name is Gon\", \"The solution is incorrect\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"print 5;\") == \"5\\n\"\nassert solution(\"var a = 2; var b = 3; print a + b; end.\") == \"5\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a + b; print c; end.\") == \"3\\n\"\nassert solution(\"print 'Hello, world!';\") == \"Hello, world!\\n\"\nassert solution(\"print 'Hello, World!';\") == \"Hello, World!\\n\"\nassert solution(\"print 'Hello\\\\nWorld!';\") == \"Hello\\nWorld!\\n\"\nassert solution(\"print 'Hello\\\\rWorld!';\") == \"Hello\\rWorld!\\n\"\nassert solution(\"print 'Hello\\\\u1234World!';\") == \"Hello\\u1234World!\\n\"\nassert solution(\"print 'Hello\\\\u0000World!';\") == \"Hello\\u0000World!\\n\"\nassert solution(\"print 'Hello\\\\u0001World!';\") == \"Hello\\u0001World!\\n\"\nassert solution(\"print 'Hello\\\\u0002World!';\") == \"Hello\\u0002World!\\n\"\nassert solution(\"print 'Hello\\\\u0003World!';\") == \"Hello\\u0003World!\\n\"\nassert solution(\"print 'Hello\\\\u0004World!';\") == \"Hello\\u0004World!\\n\"\nassert solution(\"print 'Hello\\\\u0005World!';\") == \"Hello\\u0005World!\\n\"\nassert solution(\"print 'Hello\\\\u0006World!';\") == \"Hello\\u0006World!\\n\"\nassert solution(\"print 'Hello\\\\u0007World!';\") == \"Hello\\u0007World!\\n\"\nassert solution(\"print 'Hello\\\\u0008World!';\") == \"Hello\\u0008World!\\n\"\nassert solution(\"print 'Hello\\\\u0009World!';\") == \"Hello\\u0009World!\\n\"\nassert solution(\"print 'Hello\\\\u000AWorld!';\") == \"Hello\\u000AWorld!\\n\"\nassert solution(\"print 'Hello\\\\u000BWorld!';\") == \"Hello\\u000BWorld!\\n\"\nassert solution(\"print 'Hello\\\\u000CWorld!';\") == \"Hello\\u000CWorld!\\n\"\nassert solution(\"print 'Hello\\\\u000DWorld!';\") == \"Hello\\u000DWorld!\\n\"\nassert solution(\"print 'Hello\\\\u000EWorld!';\") == \"Hello\\u000EWorld!\\n\"\nassert solution(\"print 'Hello\\\\u000FWorld!';\") == \"Hello\\u000FWorld!\\n\"\nassert solution(\"print 'Hello\\\\u0010World!';\") == \"Hello\\u0010World!\\n\"\nassert solution(\"print 'Hello\\\\u0011World!';\") == \"Hello\\u0011World!\\n\"\nassert solution(\"print 'Hello\\\\u0012World!';\") == \"Hello\\u0012World!\\n\"\nassert solution(\"print 'Hello\\\\u0013World!';\") == \"Hello\\u0013World!\\n\"\nassert solution(\"print 'Hello\\\\u0014World!';\") == \"Hello\\u0014World!\\n\"\nassert solution(\"print 'Hello\\\\u0015World!';\") == \"Hello\\u0015World!\\n\"\nassert solution(\"print 'Hello\\\\u0016World!';\") == \"Hello\\u0016World!\\n\"\nassert solution(\"print 'Hello\\\\u0017World!';\") == \"Hello\\u0017World!\\n\"\nassert solution(\"print 'Hello\\\\u0018World!';\") == \"Hello\\u0018World!\\n\"\nassert solution(\"print 'Hello\\\\u0019World!';\") == \"Hello\\u0019World!\\n\"\nassert solution(\"print 'Hello\\\\u001AWorld!';\") =="
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = 'Gon';\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = 'Gon';\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\n\"\nassert solution(\"var a = 'Gon';\\nvar b = 'Gon';\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\") == \"My name is Gon\\nMy name is Gon\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\\n67 68 69\\n70 71 72\\n73 74 75\\n76 77 78\\n79 80 81\\n82 83 84\\n85 86 87\\n88 89 90\\n91 92 93\\n94 95 96\\n97 98 99\\n100 101 102\\n103 104 105\\n106 107 108\\n109 110 111\\n112 113 114\\n115 116 117\\n118 119 120\\n121 122 123\\n124 125 126\\n127 128 129\\n130 131 132\\n133 134 135\\n136 137 138\\n139 140 141\\n142 143 144\\n145 146 147\\n148 149 150\\n151 152 153\\n154 155 156\\n157 158 159\\n160 161 162\\n163 164 165\\n166 167 168\\n169 170 171\\n172 173 174\\n175 176 177\\n178 179 180\\n181 182 183\\n184 185 186\\n187 188 189\\n190 191 192\\n193 194 195\\n196 197 198\\n199 200 201\\n202 203 204\\n205 206 207\\n208 209 210\\n211 212 213\\n214 215 216\\n217 218 219\\n220 221 222\\n223 224 225\\n226 227 228\\n229 230 231\\n232 233 234\\n235 236 237\\n238 23"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n', 'The code is missing test cases.'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'impossible'\nprint('impossible')"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'impossible'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 1\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 2\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 3\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: impossible\\n# Test Case 4\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 5\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 6\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 7\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 8\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 9\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 1\\n#         transfer 2 0\\n#         discard 1\\n#         fill 2\\n#         transfer 2 0\\n# Test Case 10\\nprint(solution('2\\n7 8\\n10\\n'))\\n# Output: fill 2\\n#         transfer 2 1\\"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the function\\nassert solution(input()) == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the function with input invalid\\nassert solution(\"2\\n7 8\\ninvalid\\n10\\n\") == 'impossible\\n\\n# Test the function with input invalid\\nassert solution(\"2\\n7 8\\n10\\ninvalid\\n\") == 'impossible\\n\\n# Test the function with input invalid\\nassert solution(\"2\\n7 8\\n10\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n123"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\ninput = input().split()\\nN, T = [int(x) for x in input]\\ninput = input().split()\\nbottles = [int(x) for x in input]\\nT = int(input())\\n\\nmoves = []\\n\\nfor i in range(N):\\n    moves.append(f\"fill {i+1}\")\\n\\nmoves.append(f\"transfer {T} 0\")\\n\\nfor i in range(N-1):\\n    moves.append(f\"transfer {T} {i+1}\")\\n\\nmoves.append(f\"discard {bottles[0]}\")\\n\\nfor i in range(N-1):\\n    moves.append(f\"transfer {T} {i+1}\")\\n\\nmoves.append(f\"fill {bottles[0]}\")\\n\\nmoves.append(f\"transfer {T} 0\")\\n\\nprint('\\n'.join(moves))\\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"5 2 3\") == \"30\"\nassert solution(\"10 4 0\") == \"10\"\nassert solution(\"10 0 3\") == \"10\"\nassert solution(\"20 10 10\") == \"55\"\nassert solution(\"10 5 0\") == \"10\"\nassert solution(\"5 5 0\") == \"0\"\nassert solution(\"5 3 0\") == \"3\"\nassert solution(\"5 0 0\") == \"0\"\nassert solution(\"10 10 10\") == \"55\"\nassert solution(\"10 5 10\") == \"70\"\nassert solution(\"10 10 10\") == \"55\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 3\") == \"27\\n\"\nassert solution(\"5 3 2\") == \"12\\n\"\nassert solution(\"7 3 2\") == \"15\\n\"\nassert solution(\"11 5 2\") == \"19\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"10 4 3\\n\"\n) == \"27\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"27\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 3') == '27\\n'\nassert solution('100 5 4') == '32\\n'\nassert solution('100 5 7') == '15\\n'\nassert solution('1000000000 1000 100') == '60558\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(10) +'' + str(4) +'' + str(3)) == 27\nassert solution(str(10) +'' + str(4) +'' + str(3)) == 27"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\"\n) == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\n\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\", \"The solution is not correct.\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Expected output: {}, Actual output: {}\".format(output, solution(input))"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n-1\\n4\"\nassert solution(stdin) == \"3\\n-1\\n4\"\nassert solution(stdin) == \"3\\n-1\\n4\"\nassert solution(stdin) == \"3\\n-1\\n4\"\nassert solution(stdin) == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for input {input_str}\"\n\ninput_str = \"\"\"4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\"\"\"\n\nexpected_output = \"\"\"3\n-1\n4\"\"\"\n\nprint(solution(input_str))"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 3 5\n    2 3 1 2\n    2\n    1 3 3\n    2\n    1 1 1\n    2\n    \"\"\"\n) == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"533.3333333333\", \"The output is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test 1 failed\"\nassert solution(\"5000 10000 500\") == \"266.6666666667\\n\", \"Test 2 failed\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n\", \"Test 3 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"533.3333333333\", \"Your solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Sample Input:\\n1000 3000 1000\\nSample Output:\\n533.3333333333\\n\"\nassert solution(\"1000 1000 1000\") == \"533.3333333333\\n\", \"Sample Input:\\n1000 1000 1000\\nSample Output:\\n533.3333333333\\n\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Sample Input:\\n1000 3000 1000\\nSample Output:\\n533.3333333333\\n\"\nassert solution(\"1000 1000 1000\") == \"533.3333333333\\n\", \"Sample Input:\\n1000 1000 1000\\nSample Output:\\n533.3333333333\\n\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Sample Input:\\n1000 3000 1000\\nSample Output:\\n533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333', 'The output is incorrect.'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\"\nprint(\"Test passed\")"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\", \"Expected: '533.3333333333', but got: '{}'.\".format(solution(\"1000 3000 1000\"))"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"533.3333333333\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\nprint('All tests passed!')"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 14.14, \"Your solution is incorrect. Please check it again.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == '14.14'\n\nfrom typing import List"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n123457 0\n0 2\n123458 1\n\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Please provide input.\"\n\nimport sys"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"2 3\\n\") == \"1 0\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n\") == \"1 0\\n1 1\\n1 1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"0\\n1\\n1\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n3 5\\n\") == \"1 0\\n1 1\\n1 2\\n1 3\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n\") == \"1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed for input {input} and output {output}\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\n\nSolution:\n\nTo solve this problem, we can follow the below steps:\n\n1. Read the input from the user.\n2. Create a dictionary to store the employees and their respective attributes.\n3. Create a list of subordinates of each employee.\n4. Iterate through the queries.\n5. For each query, find the ID of the boss of the employee.\n6. Count the number of subordinates of the boss.\n7. Output the result.\n\nHere's the Python code for the solution:\n\n```python\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output of solution should be '{expected_output}', but it is '{solution(input())}'.\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n123457 0\n0 2\n123458 1\n'''"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nprint(\"All tests passed!\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == 90, \"The maximum chaos that occurred during the robbery is not 90.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"Incorrect output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed: {input} -> {output}\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n3 3 3 3 3\\n2 4 5 1 3\") == 30"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"The maximum chaos that occurred during the robbery is 90.\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.000000\", \"Incorrect output\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('television_transmitters.txt', 'r').read()) == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(int(input()) + 1)) == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n\") == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 6.000000\nassert solution == \"6.000000\"\nassert solution == \"6.000000\"\nassert solution == \"6.000000\"\nassert solution == \"6.000000\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n...\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") =="
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1, 1, 1, 1) == \"1\"\nassert solution(2, 1, 1, 1, 1) == \"1\"\nassert solution(2, 1, 1, 1, 0) == \"1\"\nassert solution(2, 1, 1, 1, 3) == \"1\"\nassert solution(2, 1, 1, 1, 10) == \"1\"\nassert solution(2, 1, 1, 1, 200) == \"1\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n...\\n0') == '1.\\n...\\n0\\n'\nassert solution('3\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('4\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('5\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('6\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('7\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('8\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('9\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('10\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('11\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('12\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('13\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('14\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('15\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('16\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('17\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('18\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('19\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('20\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('21\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n'\nassert solution('22\\n0 0\\n0 0\\n1.5\\n2.5\\n0.5') == '1.5\\n2.5\\n0.5\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1..\\n..1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n5') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n10') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n15') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n20') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n25') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n30') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n35') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n40') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n45') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n50') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n55') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n60') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n65') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n70') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n75') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n80') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n85') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n90') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n95') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n100') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n105') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n110') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n115') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n120') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n125') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n130') == '1.\\n.."
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n..\n0\n''') == '''\n1.\n..\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, expected_output)"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(\"4\\n1 abca\\n2 abc\\n3 abcd\\n4 a\\n\") == \"1\\n1\\n\"\nassert solution(\"5\\n1 abca\\n2 abc\\n3 abc\\n4 abcd\\n5 abcd\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n1\\nabc\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\\nabc\"\nassert solution() == \"1\\n1\\ndef\"\nassert solution() == \"1\\n2\\ndef\"\nassert solution() == \"1\\n2\\n1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.in', 'r')) == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution(open('input.txt', 'r')) == '1\\n1\\nabc\\ndef\\nghi\\n\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(3) == 1\nassert solution(3) == 1"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\\n1\\ndef\"\nassert solution(\"4\\na\\nbc\\nabc\\n4\\n2 abca\\n3 1\\n3 2\\n\") == \"1\\n1\\ndef\"\nassert solution(\"5\\na\\nbc\\nabc\\n5\\n3 abca\\n4 1\\n4 2\\n4 3\\n\") == \"1\\n2\\ndef\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES\\n'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'YES'\nprint('All test cases passed.')"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"0 1 1 1\") == \"YES\"\nassert solution(\"3 3 3 3\") == \"NO\"\nassert solution(\"2 2 1 1\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n\", \"Expected YES, but got {}.\".format(solution(stdin))"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 2') == 'YES'\nassert solution('3 3 3 3') == 'YES'\nassert solution('4 4 4 4') == 'YES'\nassert solution('5 5 5 5') == 'NO'\nassert solution('6 6 6 6') == 'NO'\nassert solution('7 7 7 7') == 'NO'\nassert solution('8 8 8 8') == 'NO'\nassert solution('9 9 9 9') == 'NO'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES', 'Incorrect output'\nassert solution('2 1 1 1') == 'NO', 'Incorrect output'\nassert solution('3 1 1 1') == 'YES', 'Incorrect output'\nassert solution('1 2 1 1') == 'YES', 'Incorrect output'\nassert solution('1 1 2 1') == 'NO', 'Incorrect output'\nassert solution('1 1 1 2') == 'NO', 'Incorrect output'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"NO\"\nassert solution(\"4 4 4 4\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"YES\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('3 120\\n-0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000') == '102.1592000000'\nassert solution('4 168\\n-0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000') == '119.8488000000'\nassert solution('5 216\\n-0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000') == '135.4697000000'\nassert solution('6 264\\n-0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000\\n0.0080 1.5417 25.0000') == '150.0906000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 "
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.5696000000'\nassert solution('4 120\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n') == '433.8268000000'\nassert solution('5 180\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n0.0000 0.0000 100.0000\\n') == '81.4175000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"10 100\\n0 10 100\\n1 20 100\\n2 20 100\\n3 20 100\\n4 20 100\\n5 20 100\") == \"90.0\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"80.57\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.57\\n'\nassert solution('3 60\\n-0.0100 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '72.20\\n'\nassert solution('4 80\\n-0.0100 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '65.07\\n'\nassert solution('5 100\\n-0.0100 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '60.00\\n'\nassert solution('6 120\\n-0.0100 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '55.00\\n'\nassert solution('7 140\\n-0.0100 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 96\n    0.0080 1.5417 25.0000\n    0.0080 1.5417 25.0000\n    \"\"\"\n) == \"80.57\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('4 1 0 0 1 0 1 0 1') == '2\\n'\nassert solution('3 0 0 1 0 1 1 0 0') == '1\\n'\nassert solution('3 0 0 1 1 1 0 1 0') == '1\\n'\nassert solution('4 0 0 1 1 0 1 0 1') == '0\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Expected output: 2\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'The Bull No. 8'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got {solution}\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 0 0 1 1 1 0 0 1\n\"\"\") == \"2\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n4000 0 500\\n5000 0 400\\n6000 0 300\") == \"impossible\"\nassert solution(\"1 1 1\\n0 0 1\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 1\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 2\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 4\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 8\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 10\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 15\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 18\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 20\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 24\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 28\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 30\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 32\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 35\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 38\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 40\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 42\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 45\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 48\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 50\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 52\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 55\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 58\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 60\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 62\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 65\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 68\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 70\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 72\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 75\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 78\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 80\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 82\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 85\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 88\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 90\") == \"impossible\"\nassert solution(\"3 4 1\\n1 2 92\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 1400\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 200') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 4 5\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n500 0 150\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1400"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0 0 400\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n0 0 399\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n1000 0 200\\n1000 0 250\\n1000 0 300\\n1000 0 350\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test {test_case} failed.\\nExpected output: {output}\\nGot: {solution(input())}\"\nfor test_case in range(1, 11):\n    assert solution(input()) == output, f\"Test {test_case} failed.\\nExpected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"3907\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == 3907\nassert solution(\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == 3907\nassert solution(\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == 3907\nassert solution(\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == 3907\nassert solution(\"\"\"\n10 15\nstockholm\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3907, \"Incorrect output\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nsouthampton\\naustria\\nbucharest\\naustria\\nberlin\\nstockholm\\nhelsinki\\nrome\\nbeijing\\nathens\\nberlin\\nstockholm\\nhelsinki\\nrome\\nbeijing\\nathens\") == 3907, \"Incorrect output for the given input\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\nosolo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbru.s.amsterdam 173\\nstockholm amsterdam\\nosolo london\\nreykjavik dublin\\nbru.s.helsinki') == 3907\nassert solution('10 15\\nsouthwest\\nnewyork\\nhouston\\ndetroit\\noakland\\nlosangeles\\nseattle') == 2105\nassert solution('10 15\\nnyc\\nboston\\nboston\\nboston\\nboston') == 0"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907\nassert solution(\"15 12\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\") == 3907\nassert solution(\"15 15\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\") == 3907\nassert solution(\"20 15\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\") == 3907\nassert solution(\"15 15\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nbrussels\\nstockholm\\ncopenhagen\\nberlin\\nberlin\\nstockholm\\namsterdam\") == 3907\nassert solution(\"15 15\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nbrussels\\nstockholm\\ncopenhagen\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\") == 3907\nassert solution(\"5 10\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nbrussels\\nstockholm\\ncopenhagen\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\") == 3907\nassert solution(\"5 10\\nstockholm\\nberlin\\nstockholm\\nberlin\\ncopenhagen\\nhelsinki\\nbrussels\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nbrussels\\nstockholm\\ncopenhagen\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin\\nstockholm\\namsterdam\\nstockholm\\nberlin\\nberlin"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"3907\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"1\\n2\\n1\\n2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n''') == '''\n2\n1\n2\n1\n'''"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('3 1 2 3\\n1 2 3 4\\n1 3 4 5\\n1 4 5 6\\n1 5 6 7\\n1 6 7 8\\n1 7 8 9\\n2 2 2 2\\n2 3 3 3\\n2 4 4 4\\n3 4 4 5\\n4 5 5 6\\n5 6 6 7\\n6 7 7 8\\n7 8 8 9') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010'\nprint('All tests passed!')"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('3 5\\n10001\\n01001\\n11100') == '01010'\nassert solution('3 5\\n10001\\n10001\\n11100') == '01010'\nassert solution('3 5\\n10001\\n10001\\n11100\\n01010') == '01010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 5\\n10101\\n01111\\n01111\") == \"01011\"\nassert solution(\"3 5\\n11111\\n11111\\n11111\") == \"01000\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('4 5\\n0001\\n0000\\n1111\\n1110') == '00011'\nassert solution('1 2\\n001\\n110\\n111\\n111\\n100') == '00110'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible' # Correctness of the solution\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2\\n0 4\\n6 12\\n') == 'possible'\nassert solution('6 3\\n0 4\\n6 12\\n') == 'impossible'\nassert solution('6 2\\n1 4\\n6 12\\n') == 'impossible'\nassert solution('6 2\\n0 5\\n6 12\\n') == 'impossible'\nassert solution('6 2\\n0 5\\n0 12\\n') == 'possible'\nassert solution('6 2\\n0 5\\n1 12\\n') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n5 3\\n0 5\\n1 2\\n1 3\\n\") == \"impossible\"\nassert solution(\"1\\n2 4\\n0 2\\n1 5\\n1 6\\n\") == \"possible\"\nassert solution(\"1\\n1 10\\n0 10\\n1 5\\n1 10\\n1 15\\n\") == \"impossible\"\nassert solution(\"1\\n2 2\\n1 2\\n0 2\\n0 3\\n0 4\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n3 2\\n0 1\\n5 1\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n2 3\\n0 1\\n2 5\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n2 2\\n\") == \"possible\"\nassert solution(\"1\\n2 3\\n0 1\\n0 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n2 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n2 3\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 3\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n2 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n2 3\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 3\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 2\\n\") == \"possible\"\nassert solution(\"1\\n1 1\\n0 1\\n1 1\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n6 18\\n8 15\\n12 0\") == \"impossible\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\ntest_case(1, 2, 3)\\ntest_case(10, 0, 1)\\ntest_case(-5, 0, 1)\\ntest_case(0, 1, 1)\\ntest_case(10, 0, 1)\\n\\n# example\\n#test_case(1, 2, 3)\\ntest_case(10, 0, 1)\\ntest_case(-5, 0, 1)\\ntest_case(0, 1, 1)\\ntest_case(10, 0, 1)\\n\\n# test cases\\ndef test_case(x_i: int, y_i: int, r_i: int)\\n    opponents = [(x_i, y_i, r_i)]\\n    enemies = []\\n    max_hits = 0\\n\\n    for i in range(1, x_i):\\n        enemy = (x_i, y_i, r_i)\\n        if i > 1 and (enemy[0] == opponents[-1][0] or enemy[1] == opponents[-1][1]):\\n            continue\\n        if i > 1 and enemy in enemies:\\n            continue\\n        enemies.append(enemy)\\n\\n    max_hits = max(max_hits, len(enemies))\\n    return str(max_hits)\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"10\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"10\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"10\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nActual output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test failed\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\", solution(stdin)"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    10\n    \nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n    \"\"\"\n) == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'Yes'\nassert solution(open('sample_input_1.txt').read()) == 'Yes'\nassert solution(open('sample_input_2.txt').read()) == 'Plot Error'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n1 Just A Dream\\nNo\"\n\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nS 2!bobby_dies\\nS 3!bobby_dies\\nS 4!bobby_dies\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 6\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 7\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 8\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 9\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 10\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 11\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 12\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE all_just_a_dream_event\\nD 13\\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error'\nassert solution('E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Yes'\nassert solution('E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == '3 Just A Dream'\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Your implementation goes here...\\n\\n# For testing purposes, you can use the provided sample input:\\n# solution(input())\\n\\n# You can test your implementation using the provided sample input:\\n# solution(input())\\n\\n# To run the provided solution test, copy and paste the code into a Python file (e.g., solution_test.py) and execute it using the following command:\\n# python solution_test.py\\n\\n# Or you can use a Python IDE like PyCharm to write and execute the code.\\n\\n# You can also use the provided solution to solve other input problems and test the correctness of your solution.\\n\\n# If you are stuck or need further assistance, please do not hesitate to ask for help at any time.\\n\\n# Enjoy your coding journey!"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '''+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco|^|\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco|^|\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\") == \"--------------------------------------------------+---------+-------\\n|exercitation ullamco|^|\\n|laboris nisi ut        | ||\\n|aliquip ex ea        |X|\\n|commodo consequat Duis| ||\\n|aute irure dolor in|v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\") == \"|------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n\"\n\nassert solution(\"1000000\") == \"012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut\n    aliquip ex ea commodo consequat Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur Excepteur sint occaecat cupidatat non proident sunt in\n    culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"exercitation ullamco    ^|\\nlaboris nisi ut aliquip | |\\nex ea commodo consequat |X|\\nDuis aute irure dolor in    v|\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco    ^|\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2 3\\nfoo\\nbar\\n\") == \"foo\\nbar\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"exercitation ullamco\\nnisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"\nassert solution(\"4 20\\n0 2 1 1\n1 1 1 0\n1 1 0 0\n0 0 0 0\n2 0 1 1\n3 0 0 1\n4 1 0 0\n5 1 0 0\n6 0 0 1\n7 0 1 0\n8 0 1 0\n9 1 0 0\n10 0 0 0\n11 0 1 1\n12 0 1 0\n13 0 1 1\n14 0 0 0\n15 0 0 0\n\") == \"possible\"\nassert solution(\"4 10\\n1 2 3 4\n2 2 2 2\n3 2 2 2\n4 2 2 2\n\") == \"impossible\"\nassert solution(\"4 20\\n1 2 1 1\n1 1 1 0\n1 1 0 0\n0 0 0 0\n2 0 1 1\n3 0 0 1\n4 1 0 0\n5 1 0 0\n6 0 0 1\n7 0 1 0\n8 0 1 0\n9 1 0 0\n10 0 0 0\n11 0 1 1\n12 0 1 0\n13 0 1 1\n14 0 0 0\n15 0 0 0\n\") == \"impossible\"\nassert solution(\"4 10\\n0 1 2 3\n3 0 2 1\n0 1 3 2\n1 3 0 1\n\") == \"impossible\"\nassert solution(\"4 20\\n1 2 1 1\n1 1 1 0\n1 1 0 0\n0 0 0 0\n2 0 1 1\n3 0 0 1\n4 1 0 0\n5 1 0 0\n6 0 0 1\n7 0 1 0\n8 0 1 0\n9 1 0 0\n10 0 0 0\n11 0 1 1\n12 0 1 0\n13 0 1 1\n14 0 0 0\n15 0 0 0\n\") == \"impossible\"\nassert solution(\"4 10\\n0 1 2 3\n3 0 2 1\n0 1 3 2\n1 3 0 1\n\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\n\nassert solution('''\n5 20\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 1 2 3\\n1 3 2 0\\n2 1 0 4\\n3 0 1 5\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.00000000\", \"Sample Output: \" + solution(stdin)"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1.00000000, \"The expected output is not correct\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"3 2 2\\n2\\n3\\n\") == \"2.00000000\"\nassert solution(\"4 3 2\\n1\\n3\\n2\\n\") == \"3.00000000\"\nassert solution(\"5 4 2\\n2\\n4\\n2\\n\") == \"4.00000000\"\nassert solution(\"6 5 3\\n2\\n4\\n3\\n\") == \"5.00000000\"\nassert solution(\"7 6 3\\n1\\n5\\n3\\n\") == \"5.00000000\"\nassert solution(\"8 7 4\\n1\\n5\\n4\\n\") == \"6.00000000\"\nassert solution(\"9 8 4\\n2\\n6\\n4\\n\") == \"7.00000000\"\nassert solution(\"10 9 5\\n2\\n6\\n5\\n\") == \"7.50000000\"\nassert solution(\"11 10 5\\n2\\n6\\n6\\n\") == \"8.00000000\"\nassert solution(\"12 11 6\\n1\\n8\\n6\\n\") == \"8.50000000\"\nassert solution(\"13 12 6\\n2\\n9\\n6\\n\") == \"9.00000000\"\nassert solution(\"14 13 7\\n2\\n9\\n7\\n\") == \"9.50000000\"\nassert solution(\"15 14 7\\n1\\n10\\n7\\n\") == \"10.00000000\"\nassert solution(\"16 15 8\\n1\\n10\\n8\\n\") == \"10.50000000\"\nassert solution(\"17 16 8\\n2\\n11\\n8\\n\") == \"11.00000000\"\nassert solution(\"18 17 9\\n2\\n11\\n9\\n\") == \"11.50000000\"\nassert solution(\"19 18 9\\n1\\n12\\n9\\n\") == \"12.00000000\"\nassert solution(\"20 19 10\\n1\\n12\\n10\\n\") == \"12.50000000\"\nassert solution(\"21 20 10\\n2\\n13\\n10\\n\") == \"13.00000000\"\nassert solution(\"22 21 11\\n2\\n13\\n11\\n\") == \"13.50000000\"\nassert solution(\"23 22 11\\n1\\n14\\n11\\n\") == \"14.00000000\"\nassert solution(\"24 23 12\\n1\\n14\\n12\\n\") == \"14.50000000\"\nassert solution(\"25 24 12\\n2\\n15\\n12\\n\") == \"15.00000000\"\nassert solution(\"26 25 13\\n2\\n15\\n13\\n\") == \"15.50000000\"\nassert solution(\"27 26 13\\n1\\n16\\n13\\n\") == \"16.00000000\"\nassert solution(\"28 27 14\\n1\\n16\\n14\\n\") == \"16.50000000\"\nassert solution(\"29 28 14\\n2\\n17\\n14\\n\") == \"17.0"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n1\\n3\\n2\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\n\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n1\\n3\"\nassert solution(stdin) == \"1\\n3\"\nassert solution(stdin) == \"3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 2, \"Correct output for sample input\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nfor i in range(Q):\n    L, R = map(int, input().split())\n    assert solution(f\"1 {L} {R}\") == f\"{L}, {R}\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5,4,3,3,2]) == \"2\\n1\\n3\\n\"\nassert solution([3,1,1,2,1]) == \"2\\n1\\n3\\n\"\nassert solution([1,1,2,4]) == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 3\") == \"3\\n\"\nassert solution(\"1 4\") == \"3\\n\"\nassert solution(\"1 5\") == \"2\\n\"\nassert solution(\"2 4\") == \"3\\n\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"never meet\"\n\nfrom typing import List"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed: Expected {output}, got {solution(input)}\" for i, input, output in enumerate(test_cases)"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr'''\n3 2\n0 1\n1 2\n0 2\n'''\n) == 1"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\n\nfrom collections import defaultdict\nfrom typing import List\nfrom random import choice, randint"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"5 4\\n1 3\\n2 4\\n3 4\") == \"20.0\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1\\n'\nassert solution('5 4\\n0 1\\n1 2\\n3 4\\n4 5') == '11'\nassert solution('3 2\\n0 2\\n2 1') == '3'\nassert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('5 4\\n0 1\\n1 2\\n3 4\\n4 5') == '11'\nassert solution('3 2\\n0 2\\n2 1') == '3'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"never meet\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10, 20, 20) == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'5 4 2') == '14500000001'\nassert solution(b'6 4 2') == '6500000000'\nassert solution(b'7 4 2') == '3200000000'\nassert solution(b'8 4 2') == '0'\nassert solution(b'9 4 2') == '2400000000'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 4, 2) == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 4, 2) == '14500000001', \"Incorrect output.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"2 2 2\") == \"75000000001\"\nassert solution(\"1 2 1\") == \"30000000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"14500000001\", \"Test case 1 failed\"\nassert solution(input()) == \"14500000001\", \"Test case 2 failed\"\nassert solution(input()) == \"14500000001\", \"Test case 3 failed\"\nassert solution(input()) == \"14500000001\", \"Test case 4 failed\"\nassert solution(input()) == \"14500000001\", \"Test case 5 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\n\nassert solution(\"10\\n1 2\\n3 4\\n-1 6\\n5 7\") == \"0\\n1\\n2\\n3\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\"\nassert solution(\"5\\n1 3\\n4 5\\n2 6\\n2 7\\n\") == \"0\\n1\\n1\\n2\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0\\n1\\n1\\n2\\n', 'Solution should return 0, 1, 1, 2, but it returned {}'.format(solution())"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed for input:\\n\" + input() + \"\\nExpected output:\\n\" + output() + \"\\nGot output:\\n\" + solution(input())"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3100\", \"Test case failed\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3100, \"The output is incorrect.\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3100'\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000\\n'\nassert solution('''\n10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n52.000000000\\n11.666666667\\n5.000000000\\n17.000000000\\n35.000000000\\n17.000000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5.250000000\", \"The output is incorrect.\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n\"\"\"\n) == \"5.250000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4\\n'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    7\n    1 2 3 1 2 1 1\n    5\n    1 3 1 2 3\n    1 2 1 2\n    2 2 2 3\n    3 2 1 2\n    4 2 1 2\n    \"\"\"\n) == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, \"Test failed\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output\\nInput: {stdin}\\nExpected Output: {expected_output}\\nOutput: {solution(stdin)}\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"7\n2\n2\n0\n4\"\"\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output: {solution(input())}!= {output()}\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '32.6405451448', \"Your solution is incorrect.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\", \"Test case 1 failed\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\"  # Add your code here."
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('arcade_game.txt').read()) == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 4 3\") == \"2 3 4 1\\n\"\nassert solution(\"4 2 1 3\") == \"4 1 2 3\\n\"\nassert solution(\"5 1 3 2\") == \"5 2 3 1\\n\"\nassert solution(\"5 2 3 1\") == \"5 2 3 1\\n\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == # your solution here"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2 3 4 1\\n'\nassert solution(stdin) == '2 3 4 1\\n'\nassert solution(stdin) == '2 3 4 1\\n'\nassert solution(stdin) == '2 3 4 1\\n'\nassert solution(stdin) == '2 3 4 1\\n'\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {case} failed\"\n\nsolution_input = \"\"\"\n4\n2 1 4 3\n\"\"\"\n\nsolution_output = \"\"\"\n2 3 4 1\n\"\"\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2 3 4 1'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'4\\n2 1 4 3') == '2 3 4 1'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''\n\nassert solution('''\n4\n1 2 3 4\n''') == '''\n3 1 4 2\n'''\n\nassert solution('''\n4\n4 3 2 1\n''') == '''\n3 1 2 4\n'''\n\nassert solution('''\n4\n3 2 1 4\n''') == '''\n3 1 2 4\n'''"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n2 1\\n1 1\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7.656854249492381\", \"Your solution is incorrect.\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"10\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\") == \"10.000000000000001\\n10.000000000000001\\n10.000000000000001\\n10.000000000000001\\n10.000000000000001\\n10.000000000000001\\n\"\nassert solution(\"20\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"20.000000000000002\\n20.000000000000002\\n20.000000000000002\\n20.000000000000002\\n20.000000000000002\\n20.000000000000002\\n20.000000000000002\\n\"\nassert solution(\"40\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n\") == \"40.000000000000004\\n40.000000000000004\\n40.000000000000004\\n40.000000000000004\\n40.000000000000004\\n40.000000000000004\\n40.000000000000004\\n\"\nassert solution(\"80\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n\") == \"80.000000000000008\\n80.000000000000008\\n80.000000000000008\\n80.000000000000008\\n80.000000000000008\\n80.000000000000008\\n80.000000000000008\\n\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n3 3\\n3 2\\n2 4\\n1 3\\n1 2\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n3 3\\n3 2\\n2 4\\n1 3\\n1 2\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n2 2\\n2 4\\n1 2\\n2 2\\n2 4\\n1 2\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n4 4\\n4 6\\n2 4\\n2 6\\n4 4\\n4 6\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution(b'6\\n3 3\\n3 2\\n2 4\\n1 3\\n1 2\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"The answer to the problem can be obtained by solving the brute force code for this problem.\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7.656854249492381\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n1 2\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n1 2\") == 1\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Expected output: 2\\nActual output: {}\".format(solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\"))"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5, 3) == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Test 1 failed\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Test 2 failed\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Test 3 failed\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\" for input, output in zip(samples, outputs)"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 1\\n') == '9\\n'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The solution is wrong. Please fix the code and re-submit the problem.\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"Expected output: 9, but got {}\".format(solution(input()))"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == 9, \"Test failed\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"9\", \"Output: 9\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")\n\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n13\\n\") == \"\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2\n    3\n    5\n    7\n    12\n    \"\"\"\n) == \"12\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    1\n    2\n    3\n    4\n    5\n    \"\"\"\n) == \"no solution\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    3\n    8\n    10\n    11\n    12\n    \"\"\"\n) == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"6\\n4\\n5\\n6\\n6\\n\") == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution.__doc__.strip() == \"\"\"\nGiven S, a set of integers, find the largest d such that a + b + c = d\nwhere a, b, c, and d are distinct elements of S.\n\"\"\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"3\\n1\\n6\") == \"1\"\nassert solution(\"1000000000\") == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\\n\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(12345) == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n000\\n000\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('tests/inputs/test_1.txt', 'r')) == -1, \"Output for the given test case should be -1\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111') == '11'\nassert solution('00\\n01\\n10\\n110\\n111\\n01\\n00') == '00'\nassert solution('00\\n01\\n10\\n110\\n111\\n10\\n01\\n00') == '01'\nassert solution('10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00') == '11'\nassert solution('00\\n01\\n10\\n110\\n111\\n10\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n01\\n00\\n10\\n110\\n111\\n01\\n00\\n0"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n\") == \"11\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 0, 0, 0, 0]) == '11'\nassert solution([1, 1, 1, 1, 1]) == '11'\nassert solution([1, 1, 0, 1, 0]) == '11'\nassert solution([0, 0, 1, 1, 0]) == '11'\nassert solution([1, 1, 1, 1, 0]) == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == -1\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n101\\n1011\\n10111\\n101111\\n1011111\\n10111111\\n101111111\\n1011111111\\n10111111111\\n101111111111\\n1011111111111\\n10111111111111\\n101111111111111\\n1011111111111111\\n10111111111111111\\n101111111111111111\\n1011111111111111111\\n10111111111111111111\\n10111111111111111111\\n101111111111111111111\\n1011111111111111111111\\n10111111111111111111111\\n1011111111111111111111111\\n1011111111111111111111111\\n10111111111111111111111111\\n101111111111111111111111111\\n10111111111111111111111111111\\n10111111111111111111111111111\\n10111111111111111111111111111\\n1011111111111111111111111111111\\n10111111111111111111111111111111\\n1011111111111111111111111111111\\n10111111111111111111111111111111\\n101111111111111111111111111111111\\n1011111111111111111111111111111111\\n10111111111111111111111111111111\\n101111111111111111111111111111111\\n1011111111111111111111111111111111\\n10111111111111111111111111111111\\n10111111111111111111111111111111\\n1011111111111111111111111111111111\\n1011111111"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2\n    20 100\n    100 10\n    1\n    150 50\n    1\n    150 100\n    \"\"\"\n) == \"\"\"\n100 250 320\n\"\"\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"100 250 320\\n\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2\\n\"\n    \"20 100\\n\"\n    \"100 10\\n\"\n    \"1\\n\"\n    \"150 50\\n\"\n    \"1\\n\"\n    \"150 100\\n\"\n) == \"100 250 320\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"50 100\\n\"\n) == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"50 101\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"1 100\") == \"2\"\nassert solution(\"101 100\") == \"2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"51 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"60 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"70 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"80 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"90 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"5000000000\") == \"9 9 9 9 9 9 9 9 9 9\"\nassert solution(\"1234567890\") == \"9 9 9 9 9 9 9 9 9 9\"\nassert solution(\"1234567891\") == \"10 9 9 9 9 9 9 9 9 9\"\nassert solution(\"1234567892\") == \"11 9 9 9 9 9 9 9 9 9\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"40.0000000000\"\nassert solution(input()) == \"22.0000000000\"\nassert solution(input()) == \"26.0000000000\"\nassert solution(input()) == \"56.0000000000\"\nassert solution(input()) == \"48.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0, \"The minimum cost to cut B out of A is incorrect.\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == \"40.0000000000\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"40.0000000000\\n\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    0 0\n    0 14\n    15 14\n    15 0\n    ''') == 40.0000000000\n\nassert solution('''\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n    ''') == 14.0000000000\n\nassert solution('''\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n    ''') == 14.0000000000\n\nassert solution('''\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n    ''') == 14.0000000000\n\nassert solution('''\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n    ''') == 14.0000000000\n\nassert solution('''\n    4\n    8 3\n    4 6\n    7 10\n    11 7\n    ''') == 14.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n-8 -3\\n-4 6\\n7 10\\n11 -7\") == 100000000000000.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n-8 -3\\n-4 6\\n7 10\\n11 -7\") == 100000000000000.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n-8 -3\\n-4 6\\n7 10\\n11 -7\") == 100000000000000.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(1)\\nprint(1)\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '''\n1\n1\n'''"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n3\\n1 1 1 1\\n\") == \"1\\n2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == '1\\n1\\n'\nassert solution(\"1\\n3\\n2 1 3\\n4 5 6\\n7 8 9\") == '1\\n1\\n'\nassert solution(\"1\\n3\\n2 1 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == \"1\\n1\\n\"\nassert solution(open('example1.txt', 'r')) == \"1\\n1\\n\"\nassert solution(open('example2.txt', 'r')) == \"2\\n1\\n\"\nassert solution(open('example3.txt', 'r')) == \"2\\n1\\n\"\nassert solution(open('example4.txt', 'r')) == \"3\\n1\\n2\\n\"\nassert solution(open('example5.txt', 'r')) == \"1\\n1\\n2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n1\\n1\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1\\n1\\n'\nassert solution('1\\n3\\n2 3 1') == '1\\n1\\n'\nassert solution('1\\n3\\n2 2 2') == '1\\n1\\n'\nassert solution('1\\n3\\n2 2 1') == '1\\n1\\n'\nassert solution('1\\n3\\n2 1 1') == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"Testcase failed.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"10000.00 250.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 50.00\") == \"None\\n\"\nassert solution(\"1000.00 50.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 100.00\") == \"None\\n\"\nassert solution(\"1000.00 100.00 100.00\") == \"None\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"  # test 1\nassert solution(\"120.00 40.00 20.00\") == \"0 0\"  # test 2\nassert solution(\"50.00 10.00 15.00\") == \"0 0\"  # test 3\nassert solution(\"100.00 20.00 50.00\") == \"0 0\"  # test 4\nassert solution(\"725.85 1.71 2.38\") == \"199 162\"  # test 5"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '199 162\\n'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 16, \"Solution should return 16\"\nassert solution() == 16, \"Solution should return 16\"\nassert solution() == 16, \"Solution should return 16\"\nassert solution() == 16, \"Solution should return 16\"\nassert solution() == 16, \"Solution should return 16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {t+1} failed\" for t, (input_str, expected_output) in enumerate(zip(input_str_list, output_str_list)):\n    print(f\"Test case {t+1}:\")\n    print(\"Input:\")\n    print(input_str)\n    print(\"Output:\")\n    print(solution(input_str))"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str), \"The output is not correct\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Output does not match the expected output. \\nExpected output: {sample_output} \\nActual output: {solution(sample_input)}\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"16\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\nO 4\\n') == '2 1 4\\n', \"Test failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 1\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 2\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 3\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 4\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 5\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 6\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 7\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 8\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 9\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 10\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 11\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 12\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 13\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 14\\nO 15\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 15\\nO 15\\n\") == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1\nO 4\n''') == '''\n2 1 4\n'''"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nE 3\\nE 1\\nI 8\\nO 5\\nO 2\\nE 7\\n\") == \"2 3 8\\n\"\nassert solution(\"3\\nE 1\\nO 5\\nE 2\\n\") == \"4 2 1\\n\"\nassert solution(\"1\\nI 6\\nO 4\\nO 2\\n\") == \"2 1 2\\n\"\nassert solution(\"4\\nO 7\\nE 3\\nO 5\\n\") == \"4 1 1\\n\"\nassert solution(\"5\\nO 9\\nE 4\\nO 8\\nI 5\\n\") == \"2 1 3\\n\"\nassert solution(\"3\\nE 6\\nO 8\\nO 7\\nI 3\\n\") == \"4 1 2\\n\"\nassert solution(\"2\\nO 5\\nO 2\\nO 8\\nE 9\\n\") == \"1 2 3\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2 1 4\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\nassert solution(\"1\\nE 5\\n\") == \"5 4 1\\n\"\nassert solution(\"1\\nI 3\\n\") == \"3 1 4\\n\"\nassert solution(\"1\\nE 10\\n\") == \"10 9 5\\n\"\nassert solution(\"1\\nO 1\\n\") == \"1 1 1\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 8) == 4, \"The expected output is not correct.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"3 5\\n1 2 3 4\\n6 7 8 9\\n10 11 12 13\\n14 15 16 17\") == \"1\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Your code is incorrect. It should return 4, but it returns {}\".format(solution())"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Output: 4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution should return 4.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'\nassert solution('10 10\\n0 0 1 1\\n0 1 1 0\\n1 0 1 1\\n1 1 0 0\\n0 1 1 1\\n') == '10\\n'\nassert solution('10 10\\n0 0 1 1\\n0 1 1 0\\n1 0 1 1\\n1 1 0 0\\n0 1 1 1\\n') == '5\\n'\nassert solution('10 10\\n0 0 1 1\\n0 1 1 0\\n1 0 1 1\\n1 1 0 0\\n0 1 1 1\\n') == '1\\n'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '10\\n'\n\nfrom typing import List"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"9.585073\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Arnar is playing his favourite video game Association of Myths. He\u2019s playing a character by the name of Lumen. Lumen has a special ability where she can shoot a laser beam across the entire map killing all enemies it hits. The only drawback is that the beam is rather narrow and Arnar isn\u2019t always sure where the enemies are located. He now needs your help to determine where the enemies are hiding so he can hit them (and hopefully win the game).\\nArnar is very serious about this game and is therefore willing to meticulously research how the opponents move. He knows they only travel in a straight path called the'medial path'. We can therefore describe their location as a function f of a single variable. After much thought Arnar has concluded that f can be described by\\[ c\\int _ a^b \\left(t_1\\Gamma (x) + \\sqrt [t_2]{\\log (\\operatorname {erf}(t_3 x))} - J_ k(x)^{t_4}\\right)dx \\]\n\nwhere $\\log $ is the natural logarithm,\\[ \\Gamma (z) = \\int _0^{\\infty } x^{z - 1} e^{-x} dx, \\]\\[ \\operatorname {erf}(x) = \\frac{2}{\\sqrt {\\pi }} \\int _0^x e^{-t^2} dt, \\]\n\nand\\[ J_ k(x) = \\frac{1}{\\pi } \\int _0^{\\pi } \\cos (k \\tau - x \\sin \\tau ) d \\tau. \\]\n\nArnar thinks that it maybe a bit tough for you to compute f as previously described so he tells you it is enough to calculate the r-th degree Taylor polynomial around 0, i.e.\\[ P(x) = \\sum _{i = 0}^r \\frac{f^{(i)}(0)}{i!}x^i. \\]\n\nArnar is a afraid he was too aggressive when approximating f with P so he would like to modify P a little bit further. He knows that as the game progresses his opponent will have more in-game currency and will therefore buy better, more agile shoes. To account for this Arnar recursively defines a sequence of polynomials by\\[ P_0(x) = P(x), \\quad P_ n(x) = \\sum _{i = 0}^{r + n} P_{n - 1}(i) x^i. \\]\n\nArnar finally notes that during the endgame phase the opponent will probably have to go to the bathroom and to account for that he wants reduce the size of the final polynomial in his sequence. He therefore takes P_s and differentiates it deg(P_s) + 1 times and calls the outcome g. Arnar is now satisfied that\\[ \\frac{(g(n) + l)^2}{\\pi e} + \\frac{1}{l + 1} \\]\n\ngives the location of his opponent. Why does Arnar take the last step? Well, Arnar won\u2019t tell you because he\u2019s afraid you will be able to beat him in Association of Myths if he tells you all his secrets. He also requests that you give him the answer to at least two correct decimal places since his mouse can track changes as small as a hundredth of an in-game unit of length."
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '9.585073\\n', 'Please provide the correct input'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'\nassert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\\n\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\n'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9.585073\", \"The output does not match the expected output\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor i in range(len(expected)):\n    assert expected[i] == solution(f\"20 30\\n2 {10 + i} {20 + i} {2 + i} {24 + i} {18 + i} {28 + i} {10 + i}\")\nprint(\"All test cases pass\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Impossible\" # Solution not provided"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=stdin) == expected, f\"Expected: {expected}, got: {solution(stdin=stdin)}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got {solution(input())}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"12.74 127.83\", \"Please implement the `solution()` function\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"0116\\n\", \"Expected output: '0116', but got: {}\".format(solution(sample_input))"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\"\n\nimport sys"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0116\", \"The correct output is not given.\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'\nassert solution('2\\n110\\n8\\n') == '8011\\n'\nassert solution('2\\n110\\n9\\n') == '9100\\n'\nassert solution('2\\n110\\n6\\n6\\n6\\n9\\n') == '0116\\n9100\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str=\"2\\n110\\n6\\n\") == \"0116\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0116', \"The solution should be 0116.\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n4 4 4\") == [\"0\", \"2\", \"4\"]\nassert solution(\"10 2\\n3 4\") == [\"2\", \"4\"]\nassert solution(\"10 10\\n4 3 5\") == [\"2\", \"4\"]\nassert solution(\"10 4\\n3 4 5\") == [\"2\", \"4\"]\nassert solution(\"10 2\\n1 2 3 4\") == [\"1\", \"2\", \"4\"]\nassert solution(\"10 3\\n4 3 2 1\") == [\"1\", \"3\", \"2\", \"4\"]\nassert solution(\"10 2\\n1 2 3 4 5\") == [\"1\", \"3\", \"2\", \"4\"]\nassert solution(\"10 2\\n1 2 3 4 5 6\") == [\"1\", \"3\", \"2\", \"4\"]\nassert solution(\"10 2\\n1 2 3 4 5 6 7\") == [\"1\", \"3\", \"2\", \"4\"]\n\nfrom typing import List"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3\\n4 4 4') == ['0', '2', '4']"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0 2 4'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Solution\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == [0, 2, 4]"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'impossible'\nassert solution() == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\n\nassert solution(stdin=\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\"\n\nsample_input = \"\"\"4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n\"\"\"\n\nsample_output = \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution(b'4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution(b'4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n8 3 7\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"impossible\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"impossible\"\nassert solution(\"4\\n20\\n1 2 3 4 5\\n2 1 6 7 8\\n3 1 9 10 11\\n4 1 12 13 14\\n5 1 15 16 17\") == \"possible\"\nassert solution(\"2\\n4\\n6\\n8\\n10\") == \"possible\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n18"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 7, 2, 2, 4) == \"impossible\"\nassert solution(4, 7, 2, 2, 5) == \"impossible\"\nassert solution(4, 7, 2, 1, 5) == \"possible\"\nassert solution(4, 7, 2, 1, 4) == \"possible\"\nassert solution(4, 7, 2, 1, 3) == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5''') == 'impossible'\nassert solution('''4\n3\n1 2\n3 2\n1 4\n2 3\n4 1\n2 5\n2 6\n''') == 'impossible'\nassert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2 4 6\n''') == 'impossible'\nassert solution('''2\n3\n1 2\n3 2\n1 4\n2 3\n4 1\n2 5\n2 6\n''') == 'impossible'\nassert solution('''2\n4\n2 2 4\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n''') == 'impossible'\nassert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2 4 6\n2 1 5\n''') == 'possible'\nassert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2 4 6\n2 1 5\n''') == 'possible'\nassert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2 4 6\n2 1 5\n''') == 'possible'\nassert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n2 4 6\n2 1 5\n''') == 'possible'\nassert solution('''2\n3\n1 2\n3 2\n1 4\n2 3\n4 1\n2 5\n2 6\n''') == 'possible'\nassert solution('''2\n4\n2 2 4\n2 3 3\n2 4 4\n2 5 5\n2 6 6\n2 7 7\n''') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"possible\\n\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4.00000\\n\"\nassert abs(solution(stdin) - \"4.00000\") <= 1e-3\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 4.00000\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\\n\") == \"4.00000\"\nassert solution(\"3\\n1 1\\n1 5\\n2\\n2 2\\n2 6\\n\") == \"1.00000\"\nassert solution(\"2\\n0 0\\n100000 100000\\n2\\n100000 0\\n\") == \"Infinity\"\nassert solution(\"2\\n0 0\\n100000 100000\\n2\\n-100000 0\\n\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0\n    0 10\n    2\n    4 10\n    4 0\n    \"\"\"\n) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 10') == 'impossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 -10') == 'impossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.00000"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4.00000\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Solution should return 1\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n4 4\") == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1\nassert solution() == 0\nassert solution() == 0\nassert solution() == 1\nassert solution() == 0\nassert solution() == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 2, 5, 1, 1, 1, 3, 3, 2, 2]) == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"The function should return 1, but it returned {}\".format(solution())"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '5 3\\n1 0\\n2 4'\nassert solution() == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\"\n) == \"5 3\\n1 0\\n2 4\"\nassert solution(\n    \"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n5 5\"\n) == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4') == '5 4\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n0 5') == '0 5\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n0 5\\n0 0') == 'impossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n0 5\\n0 0\\n0 0') == 'impossible'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '\\n2\\n1 2'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"2\n1 2\"\"\"\n\nassert solution() == \"\"\"1\n1\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1 2\\n'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test Case Failed\"\nelse:\n    print(\"Test Case Passed\")"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''\n2\n1 2\n'''\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\n2\n1 2\n\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\" for test_case, expected_output in zip(range(1, 6), [[\"123456\", \"234567\"], [\"123456789\", \"456789012\"], [\"1234567890\", \"7890123456\"], [\"123456789012\", \"901234567890\"]])"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'\nprint('All test cases passed')"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 2\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9\") == \"0\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 10\\n1 3 5 7 9 11 13 15 17 16\") == \"2\\n\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\") == \"1\\n\"\nassert solution(\"5 10\\n1 3 5 7 9 11 13 15 17 16 18 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\") == \"2\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1\nassert solution(\"10 3\\n1 4 6 8 10 12 14 16 18 17\") == 1\nassert solution(\"10 5\\n1 2 3 5 7 9 11 13 15 17\") == 1\nassert solution(\"10 6\\n1 2 4 5 8 10 12 14 16 18\") == 1\nassert solution(\"10 7\\n1 3 5 6 9 11 13 15 17 19\") == 1\nassert solution(\"10 8\\n1 4 6 8 10 12 14 16 18 19\") == 1\nassert solution(\"10 9\\n1 5 7 9 11 13 15 17 19 21\") == 1\nassert solution(\"10 10\\n1 6 8 10 12 14 16 18 20 21\") == 1\nassert solution(\"10 11\\n1 7 9 11 13 15 17 19 21 23\") == 1\nassert solution(\"10 12\\n1 8 10 12 14 16 18 20 22 23\") == 1\nassert solution(\"10 13\\n1 9 11 13 15 17 19 21 23 25\") == 1\nassert solution(\"10 14\\n1 10 12 14 16 18 20 22 24 25\") == 1\nassert solution(\"10 15\\n1 11 13 15 17 19 21 23 25 27\") == 1\nassert solution(\"10 16\\n1 12 14 16 18 20 22 24 26 27\") == 1\nassert solution(\"10 17\\n1 13 15 17 19 21 23 25 27 29\") == 1\nassert solution(\"10 18\\n1 14 16 18 20 22 24 26 28 29\") == 1\nassert solution(\"10 19\\n1 15 17 19 21 23 25 27 29 31\") == 1\nassert solution(\"10 20\\n1 16 18 20 22 24 26 28 30 31\") == 1\nassert solution(\"10 21\\n1 17 19 21 23 25 27 29 31 33\") == 1\nassert solution(\"10 22\\n1 18 20 22 24 26 28 30 32 33\") == 1\nassert solution(\"10 23\\n1 19 21 23 25 27 29 31 33 35\") == 1\nassert solution(\"10 24\\n1 20 22 24 26 28 30 32 34 35\") == 1\nassert solution(\"10 25\\n1 21 23 25 27 29 31 33 35 37\") == 1\nassert solution(\"10 26\\n1 22 24 26 28 30 32 34 36 37\") == 1\nassert solution(\"10 27\\n1 23 25 27 29 31 33 35 "
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5\\n6 7 8 9 10\") == \"1\\n\"\nassert solution(\"10 10\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\") == \"1\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == # Solution implementation"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1\\n'\n\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('5 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 3\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16 20 21 22') == '1\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 20') == '1\\n'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16 18 19 21') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\", \"The solution is incorrect.\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ACDBB') == '7 4', 'The first line contains the wrong input'\nassert solution('5 6') == '8 9', 'The first line contains the wrong input'\nassert solution('4 13') == '10 9', 'The first line contains the wrong input'\nassert solution('1 10') == '10 9', 'The first line contains the wrong input'\nassert solution('7 4') == '7 4', 'The first line contains the wrong input'\nprint('All tests passed!')"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    main(input())\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1'\nassert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 2'\nassert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 3'\nassert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n7 5\\nACDBB\\n5 "
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test failed\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"example.in\").read()) == \"\"\"7 4\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7 4\\n\"\nprint(\"abc\")"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A >= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A < 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <> 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output: HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n', 'The solution should output the correct output.'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(3, 0, 1) == 3\n\nfrom itertools import combinations"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nassert solution(\"4\\n3 0 1\\n0 1\") == \"2\\n\"\nassert solution(\"5\\n3 0 1\\n0 1\") == \"4\\n\"\nassert solution(\"6\\n3 0 1\\n0 1\") == \"5\\n\"\nassert solution(\"7\\n3 0 1\\n0 1\") == \"32\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2\nassert solution(3) == 1"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3'\n\nfrom itertools import combinations"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"Solution is incorrect.\"\nassert solution(0) == 0, \"Solution is incorrect.\"\nassert solution(1) == 1, \"Solution is incorrect.\"\nassert solution(2) == 1, \"Solution is incorrect.\"\nassert solution(3) == 3, \"Solution is incorrect.\"\nassert solution(4) == 6, \"Solution is incorrect.\"\nassert solution(10) == 10, \"Solution is incorrect.\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 0, 1) == 3\nassert solution(0, 1) == 0\nassert solution(0, 1, 1) == 1\nassert solution(0, 1, 2) == 2\nassert solution(0, 1, 3) == 3\nassert solution(0, 1, 4) == 4"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3  # expected output: 3"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"LLRRRRLL\\nimpossible\"\nassert solution(open('test_input.txt', 'r')) == \"LLRRRRLL\\nRRRRRRRL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"LLRRRRLL\"\nassert solution(1) == \"impossible\"\nassert solution(10) == \"impossible\"\nassert solution(100) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    5\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    1 3\n    2 5\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    1 3\n    2 5\n    4 1\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    1 3\n    2 5\n    4 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    3 4\n    4 5\n    1 3\n    2 5\n    4 1\n    \"\"\"\n) == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\n\"\nassert solution(\"6\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n6 7\\n7 8') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 3\\n1 3\\n3 4\\n1 3\\n2 5\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 3\\n1 3\\n3 5\\n2 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 3\\n1 3\\n3 5\\n2 5\\n3 4\\n1 3\\n2 4\") == \"LLRRRRLL\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 3\\n1 3\\n3 5\\n2 5\\n3 4\\n1 3\\n2 4\\n4 6\\n1 2\") == \"LLRRRRLL\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 1\") == \"impossible\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 3\") == \"LLRRRRLL\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\") == \"RRRRRRRR\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 2\\n3 4\\n5 1\\n2 4\\n1 2\\n1 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3''') == 'LRRRRRRL'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n5 1''') == 'LRRRRRRL'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5''') == 'LRRRRRRL'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n''') == 'impossible'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n5 4\n''') == 'impossible'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == 'impossible'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n''') == 'impossible'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n''') == 'impossible'\n\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n1 4\n1 5\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n''') == 'impossible'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n3 3') == 'LRLR'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n3 3\\n4 4') == 'LRRRR'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n3 3\\n4 4\\n1 1') == 'impossible'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1009 2012\\n1017 2012\\n1009 2013\\n1017 2013\") == \"2\\n2011\\n1017\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1017 2012\\n1009 2013\\n1017 2013\\n1009 2014\\n1017 2014\\n1009 2015\\n1017 2015\") == \"1\\n2011\\n1017\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n1009\\n1017\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011\\n'\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2012\") == \"2\\n2011 2012\"\nassert solution(\"1\\n1001 1002\\n1003 1004\\n1005 1006\") == \"2\\n1001 1002\"\nassert solution(\"1\\n1001 1002\\n1003 1004\\n1005 1007\\n1006 1007\\n1008 1008\\n1009 1009\\n1010 1010\\n1011 1011\\n1012 1012\\n1013 1013\\n1014 1014\\n1015 1015\\n1016 1016\") == \"3\\n1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016\"\nassert solution(\"2\\n1009 2011\\n1009 2011\\n1009 2011\") == \"2\\n2011\"\nassert solution(\"2\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\") == \"2\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1025 2009\") == \"2\\n2009\\n2011\\n2017\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1025 2009\\n1030 2005\") == \"3\\n2005\\n2009\\n2011\\n2017\\n2025\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1025 2009\\n1030 2005\\n1038 2007\") == \"4\\n2007\\n2005\\n2009\\n2011\\n2017\\n2025\\n2030\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1025 2009\\n1030 2005\\n1038 2007\\n1043 2002\") == \"5\\n2002\\n2005\\n2009\\n2011\\n2017\\n2025\\n2030\\n2038\\n2043\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n2011\\n\", \"Testcase 1\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Input: {input_data}\\nOutput: {output_data}\\nSolution: {solution(input_data)}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == ['0 3']"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 3\\n\", \"The output is incorrect. Please check the example.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0 3', \"Expected output: 0 3, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    0 1 100\n    0 2 100\n    1 3 100\n    2 3 100\n    0 3\n    \"\"\"\n) == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == [\"0 3\"]"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"20\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"5.0 15.0\\n1 1 0 0\\n2 3 0 0\\n3 4 0 0\\n4 5 0 0\") == \"1\"\nassert solution(\"3.0 10.0\\n4 4 0 0\\n5 5 0 0\\n6 6 0 0\\n7 7 0 0\") == \"20\"\nassert solution(\"3.0 0.2\\n10 0 0\") == \"10\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20\"\nprint(\"Correct!\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 1 1\") == \"30\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 1 1 0\") == \"30\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 0 1\") == \"30\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 1 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 1 1 1\") == \"30\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 0 0\") == \"0\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 0 0.0001\") == \"100\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n3 0 0 0.00001\") == \"99\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\", \"Test case 1 failed\"\nassert solution(\"4.0 10.0\\n5 5 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"0\", \"Test case 2 failed\"\nassert solution(\"5.0 10.0\\n4 4 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\", \"Test case 3 failed\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"1.999 1.999\\n1.999 1.999\\n1.999 1.999\\n1.999 1.999\\n1.999 1.999\") == \"1.999\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '20', 'The output should be 20'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0 2 3 4 5 6\") == \"4\"\nassert solution(\"1\\n0 1 3 4 5 6\") == \"3\"\nassert solution(\"1\\n1 6 5 4 2 1\") == \"4\"\nassert solution(\"1\\n2 6 5 3 2 1\") == \"3\"\nassert solution(\"1\\n1 1 2 3 4 6\") == \"4\"\nassert solution(\"1\\n2 1 2 3 4 5\") == \"3\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '4'\nassert solution('1\\n1\\n2\\n3\\n4\\n6\\n') == '4'\nassert solution('1\\n6\\n5\\n4\\n2\\n1\\n') == '4'\nassert solution('2\\n6\\n5\\n3\\n2\\n1\\n') == '4'\nassert solution('1\\n1\\n2\\n3\\n4\\n6\\n') == '4'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('6\\n0 2 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '1'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\"\n) == \"4\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\", \"The expected output is not correct.\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n2 2 3 4\\n3 3 4 5\\n4 4 5 6\\n5 5 6 7\") == 4\nassert solution(\"4\\n1 1\\n2 2 3 4\\n3 3 4 5\\n4 4 5 6\\n5 5 6 7\\n6 6 7 8\") == 5\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(stdin))))), \"Please provide the input correctly\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == 4\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n1\\n1\\n1\\n1\\n') == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 4"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(5)) == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == \"6\\n\", \"Test case 1 incorrect\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 2.0\\n\") == \"6\\n\", \"Test case 2 incorrect\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 2.0\\n\") == \"6\\n\", \"Test case 3 incorrect\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 2.0\\n6.0 1.0\\n\") == \"6\\n\", \"Test case 4 incorrect\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 2.0\\n6.0 1.0\\n7.0 1.0\\n\") == \"6\\n\", \"Test case 5 incorrect\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"Expected 6, got {}\".format(solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\"))\nprint(\"Test Passed\")"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n1.0 3.1\\n1.0 4.2\\n1.0 5.0\") == 2\nassert solution(\"5\\n1.0 1.0\\n1.0 3.1\\n1.0 4.2\\n1.0 4.8\") == 4\nassert solution(\"5\\n1.0 1.0\\n1.0 3.1\\n1.0 4.2\\n1.0 4.8\") == 4\nassert solution(\"5\\n1.0 1.0\\n1.0 3.1\\n1.0 4.2\\n1.0 4.8\") == 4"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == \"6\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2\\n2\\n2') == '5\\n'\nassert solution('3\\n2\\n2\\n2\\n2\\n2') == '10\\n'\nassert solution('3\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '15\\n'\nassert solution('3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2') == '20\\n'\nassert solution('3\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 5\nprint(\"All tests passed.\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 5\nassert solution(\"3\\n2\\n2\\n2\") == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 5, \"Testcase 1\"\nassert solution(5) == 5, \"Testcase 2\"\nassert solution(7) == 5, \"Testcase 3\"\nassert solution(9) == 6, \"Testcase 4\"\nassert solution(11) == 6, \"Testcase 5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Your solution is not correct\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'3\\n2\\n2\\n2\\n') == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 1\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"5 10\\n2 3 4 5 6 7 8 9 10\") == \"3 144\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 1\\ndef solution(stdin: str) -> str:\\npass\\n', '\\n'.join(['assert solution(input()) == f\"{output}\\n\" for output in [input(), \"1 1\\npass\"]'])"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"5 10\\n2 3 4 5 6 7 8 9 10\") == \"1 2\"\nassert solution(\"10 100\\n20 30 40 50 60 70 80 90 100\") == \"1 2\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 3\\n2 2 2 2\") == \"1 2\"\nassert solution(\"1 3\\n2 2 2 3\") == \"1 3\"\nassert solution(\"1 3\\n2 2 2 4\") == \"2 0\"\nassert solution(\"1 3\\n2 2 2 5\") == \"2 1\"\nassert solution(\"1 3\\n2 2 2 6\") == \"2 2\"\nassert solution(\"1 3\\n2 2 2 7\") == \"2 3\"\nassert solution(\"1 3\\n2 2 2 8\") == \"3 0\"\nassert solution(\"1 3\\n2 2 2 9\") == \"3 1\"\nassert solution(\"1 3\\n2 2 2 10\") == \"3 2\"\nassert solution(\"1 3\\n2 2 2 11\") == \"3 3\"\nassert solution(\"1 3\\n2 2 2 12\") == \"4 0\"\nassert solution(\"1 3\\n2 2 2 13\") == \"4 1\"\nassert solution(\"1 3\\n2 2 2 14\") == \"4 2\"\nassert solution(\"1 3\\n2 2 2 15\") == \"4 3\"\nassert solution(\"1 3\\n2 2 2 16\") == \"5 0\"\nassert solution(\"1 3\\n2 2 2 17\") == \"5 1\"\nassert solution(\"1 3\\n2 2 2 18\") == \"5 2\"\nassert solution(\"1 3\\n2 2 2 19\") == \"5 3\"\nassert solution(\"1 3\\n2 2 2 20\") == \"6 0\"\nassert solution(\"1 3\\n2 2 2 21\") == \"6 1\"\nassert solution(\"1 3\\n2 2 2 22\") == \"6 2\"\nassert solution(\"1 3\\n2 2 2 23\") == \"6 3\"\nassert solution(\"1 3\\n2 2 2 24\") == \"7 0\"\nassert solution(\"1 3\\n2 2 2 25\") == \"7 1\"\nassert solution(\"1 3\\n2 2 2 26\") == \"7 2\"\nassert solution(\"1 3\\n2 2 2 27\") == \"7 3\"\nassert solution(\"1 3\\n2 2 2 28\") == \"8 0\"\nassert solution(\"1 3\\n2 2 2 29\") == \"8 1\"\nassert solution(\"1 3\\n2 2 2 30\") == \"8 2\"\nassert solution(\"1 3\\n2 2 2 31\") == \"8 3\"\nassert solution(\"1 3\\n2 2 2 32\") == \"9 0\"\nassert solution(\"1 3\\n2 2 2 33\") == \"9 1\"\nassert solution(\"1 3\\n2 2 2 34\") == \"9 2\"\nassert solution(\"1 3\\n2 2 2 35\") == \"9 3\"\nassert solution(\"1 3\\n2 2 2 36\") == \"10 0\"\nassert solution(\"1 3\\n2 2 2 37\") == \"10 1\"\nassert solution(\"1 3\\n2 2 2 38\") == \"10 2\"\nassert solution(\"1 3\\n2 2 2 39\") == \"10 3\"\nassert solution(\"1 3\\n2 2 2 40\") == \"11 0\"\nassert solution(\"1 3\\n2 2 2 41\") == \"11 1\"\nassert solution(\"1 3\\n2 2 2 42\") == \"11 2\"\nassert solution(\"1 3\\n2 2 2 43\") == \"1"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1'\nassert solution('5 3\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005') == '1000000004 1000000004'\nassert solution('1 3\\n2 2 2 1\\n5 3\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5 8'\nassert solution('1000000005 1000000005\\n5 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 "
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'1\\n') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"10000\") == \"10000\"\nassert solution(\"100000\") == \"100000\"\nassert solution(\"1000000\") == \"1000000\"\nassert solution(\"10000000\") == \"10000000\"\nassert solution(\"100000000\") == \"100000000\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"10000000000\") == \"10000000000\"\nassert solution(\"100000000000\") == \"100000000000\"\nassert solution(\"1000000000000\") == \"1000000000000\"\nassert solution(\"10000000000000\") == \"10000000000000\"\nassert solution(\"100000000000000\") == \"100000000000000\"\nassert solution(\"1000000000000000\") == \"1000000000000000\"\nassert solution(\"10000000000000000\") == \"10000000000000000\"\nassert solution(\"100000000000000000\") == \"100000000000000000\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\", \"Please check the given code and input.\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == 10, \"The correct answer is 10.\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"10\"\nassert solution(5) == \"20\"\nassert solution(6) == \"24\"\nassert solution(7) == \"36\"\nassert solution(8) == \"48\"\nassert solution(9) == \"48\"\nassert solution(10) == \"50\"\nassert solution(11) == \"52\"\nassert solution(12) == \"54\"\nassert solution(13) == \"54\"\nassert solution(14) == \"56\"\nassert solution(15) == \"56\"\nassert solution(16) == \"58\"\nassert solution(17) == \"60\"\nassert solution(18) == \"62\"\nassert solution(19) == \"62\"\nassert solution(20) == \"64\"\nassert solution(21) == \"66\"\nassert solution(22) == \"66\"\nassert solution(23) == \"72\"\nassert solution(24) == \"72\"\nassert solution(25) == \"78\"\nassert solution(26) == \"78\"\nassert solution(27) == \"84\"\nassert solution(28) == \"84\"\nassert solution(29) == \"88\"\nassert solution(30) == \"88\"\nassert solution(31) == \"90\"\nassert solution(32) == \"90\"\nassert solution(33) == \"94\"\nassert solution(34) == \"94\"\nassert solution(35) == \"96\"\nassert solution(36) == \"96\"\nassert solution(37) == \"98\"\nassert solution(38) == \"98\"\nassert solution(39) == \"100\"\nassert solution(40) == \"100\"\nassert solution(41) == \"102\"\nassert solution(42) == \"102\"\nassert solution(43) == \"104\"\nassert solution(44) == \"104\"\nassert solution(45) == \"106\"\nassert solution(46) == \"106\"\nassert solution(47) == \"108\"\nassert solution(48) == \"108\"\nassert solution(49) == \"108\"\nassert solution(50) == \"110\"\nassert solution(51) == \"110\"\nassert solution(52) == \"112\"\nassert solution(53) == \"112\"\nassert solution(54) == \"114\"\nassert solution(55) == \"114\"\nassert solution(56) == \"116\"\nassert solution(57) == \"116\"\nassert solution(58) == \"118\"\nassert solution(59) == \"118\"\nassert solution(60) == \"120\"\nassert solution(61) == \"120\"\nassert solution(62) == \"122\"\nassert solution(63) == \"122\"\nassert solution(64) == \"124\"\nassert solution(65) == \"124\"\nassert solution(66) == \"126\"\nassert solution(67) == \"126\"\nassert solution(68) == \"128\"\nassert solution(69) == \"128\"\nassert solution(70) == \"130\"\nassert solution(71) == \"130\"\nassert solution(72) == \"132\"\nassert solution(73) == \"132\"\nassert solution(74) == \"134\"\nassert solution(75) == \"134\"\nassert solution(76) == \"136\"\nassert solution(77) == \"136\"\nassert solution(78) == \"138\"\nassert solution(79) == \"138\"\nassert solution(80) == \"140\"\nassert solution(81) == \"140\"\nassert solution(82) == \"142\"\nassert solution(83) == \"142\"\nassert solution(84) == \"144\"\nassert solution(85) == \"144\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 10\nassert solution(2) == 20\nassert solution(3) == 30\nassert solution(4) == 40\nassert solution(5) == 50"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\nassert solution(\"2 3\\n1000 2 1\\n2 2000 1\\n3 1000 3\") == \"0.001\"\nassert solution(\"3 4\\n1000 3 2\\n3 3000 2\\n4 2000 3\\n5 1000 4\") == \"0.001\"\nassert solution(\"4 5\\n1000 4 3\\n4 4000 3\\n5 3000 4\\n6 2000 5\\n7 1000 6\") == \"0.001\"\nassert solution(\"5 6\\n1000 5 4\\n5 5000 4\\n6 4000 5\\n7 3000 6\\n8 2000 7\\n9 1000 8\") == \"0.001\"\nassert solution(\"6 7\\n1000 6 5\\n6 6000 5\\n7 5000 6\\n8 4000 7\\n9 3000 8\\n10 2000 9\") == \"0.001\"\nassert solution(\"7 8\\n1000 7 6\\n7 7000 6\\n8 6000 7\\n9 5000 8\\n10 4000 9\\n11 3000 10\") == \"0.001\"\nassert solution(\"8 9\\n1000 8 7\\n8 7000 7\\n9 6000 8\\n10 5000 9\\n11 4000 10\\n12 3000 11\") == \"0.001\"\nassert solution(\"9 10\\n1000 9 8\\n9 7000 8\\n10 6000 9\\n11 5000 10\\n12 4000 11\\n13 3000 12\") == \"0.001\"\nassert solution(\"10 11\\n1000 10 9\\n10 7000 9\\n11 6000 10\\n12 5000 11\\n13 4000 12\\n14 3000 13\") == \"0.001\"\nassert solution(\"11 12\\n1000 11 10\\n11 7000 10\\n12 6000 11\\n13 5000 12\\n14 4000 13\\n15 3000 14\") == \"0.001\"\nassert solution(\"12 13\\n1000 12 11\\n12 7000 11\\n13 6000 12\\n14 5000 13\\n15 4000 14\\n16 3000 15\") == \"0.001\"\nassert solution(\"13 14\\n1000 13 12\\n13 7000 12\\n14 6000 13\\n15 5000 14\\n16 4000 15\\n17 3000 16\") == \"0.001\"\nassert solution(\"14 15\\n1000 14 13\\n14 7000 13\\n15 6000 14\\n16 5000 15\\n17 4000 1"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0.001', \"Test case 1 failed. Expected '0.001', got '{0}'.\".format(solution(input()))\nassert solution(input()) == '0.0006875', \"Test case 2 failed. Expected '0.0006875', got '{0}'.\".format(solution(input()))\nassert solution(input()) == '0.0006875', \"Test case 3 failed. Expected '0.0006875', got '{0}'.\".format(solution(input()))\nassert solution(input()) == '0.0006875', \"Test case 4 failed. Expected '0.0006875', got '{0}'.\".format(solution(input()))\nassert solution(input()) == '0.0006875', \"Test case 5 failed. Expected '0.0006875', got '{0}'.\".format(solution(input()))"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\", \"Expected output: 0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\nassert solution(\"1 2\\n1000 2 1\\n1 1000 2\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 1\\n1 1000 2\") == \"0.002\"\nassert solution(\"1 2\\n1000 2 1\\n1 1000 2\") == \"0.002\"\nassert solution(\"1 2\\n1000 1 1\\n1 1000 2\") == \"0.002\"\nassert solution(\"1 2\\n1000 2 1\\n1 1000 2\") == \"0.002\"\nassert solution(\"1 2\\n1000 1 1\\n1 1000 2\") == \"0.002\"\nassert solution(\"1 2\\n1000 2 1\\n1 1000 2\") == \"0.002\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}\\nExpected Output: {expected}\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed.\\nExpected output: {sample_output}\\nGot output: {solution(sample_input)}\" for i, sample_input, sample_output in enumerate(zip(sample_inputs, sample_outputs))"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0\\n'\n\nassert solution('''\n5 5 2 5000\n1 2\n2 3\n3 4\n4 5\n''') == '2\\n'\n\nassert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '1\\n'\n\nassert solution('''\n5 5 2 5000\n1 2\n2 3\n3 4\n4 5\n''') == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == 0\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 1') == 1\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 5') == 2\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 6') == 3\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 7') == 4\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 8') == 5\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 9') == 6\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 10') == 7\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 11') == 8\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 12') == 9\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 13') == 10\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 14') == 11\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 15') == 12\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 16') == 13\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 17') == 14\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 18') == 15\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 19') == 16\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 20') == 17\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 21') == 18\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 22') == 19\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 23') == 20\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 24') == 21\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 25') == 22\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 26') == 23\nassert solution('4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 27') == 24\nassert solution('4 4 2 10000\\n1 2\\n2 "
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\n\nassert solution(\"4 3 1 10000\\n1 2\\n2 3\\n3 4\\n4 1\") == 1\n\nassert solution(\"10 10 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 9\n\nassert solution(\"10 10 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 10\n\nassert solution(\"10000 10000 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 1"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"3 4 4 10000\\n1 2\\n2 3\\n3 4\\n4 3\\n4 2\") == 2\nassert solution(\"3 6 6 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n6 6\") == 0\nassert solution(\"5 4 4 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\"  # Example case\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n\") == 26\n\nfrom collections import defaultdict"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 26, \"The output is incorrect.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"26\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\"\nassert solution(\"5\\n1 2 2 2 1\\n2 1 3 3 2\\n2 3 1 3 2\\n2 3 2 1 1\\n3 2 3 1 2\") == \"42\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n1 3 5 7 9 11 13 15 17 19\\n1 4 6 8 10 12 14 16 18 20\\n2 5 7 9 11 13 15 17 19 21\\n2 6 8 10 12 14 16 18 20 22\\n2 7 9 11 13 15 17 19 21 23\\n3 8 10 12 14 16 18 20 22 24\\n3 9 11 13 15 17 19 21 23 25\\n4 10 12 14 16 18 20 22 24 26\") == \"1568\"\n\nfrom typing import List"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(0) == 0\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\n\nn = int(input())\ncolors = [[int(x) for x in input().split()] for _ in range(n)]"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed with output '{solution(stdin)}' and expected output '{expected_output}'\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == ['0.333333333', '0.666666667']"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected output: {expected}\\nGot: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input)}\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.333333333\\n0.666666667\\n', \"Test failed!\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 0.75, \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\nprint(\"All tests passed!\")"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.75, \"Test Failed\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.75, \"The code is not correct\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 0.75, \"The answer should be 0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\\n\", \"Test case 1\"\n\nassert solution(\"60 45 0 0\") == \"0.375\\n\", \"Test case 2\"\n\nassert solution(\"45 60 0 0\") == \"0.125\\n\", \"Test case 3\"\n\nassert solution(\"0 0 180 180\") == \"0.25\\n\", \"Test case 4\"\n\nassert solution(\"360 180 0 0\") == \"0.5\\n\", \"Test case 5\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"45 45 0 0\"\n) == \"0.75\", \"Incorrect output.\"\nassert solution(\n    \"50 45 0 0\"\n) == \"0.75\", \"Incorrect output.\"\nassert solution(\n    \"45 50 0 0\"\n) == \"0.75\", \"Incorrect output.\"\nassert solution(\n    \"45 45 180 0\"\n) == \"0.20\", \"Incorrect output.\"\nassert solution(\n    \"45 45 90 0\"\n) == \"0.20\", \"Incorrect output.\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.75\", \"Your solution is incorrect\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Your solution is wrong. Please check the output.\\n\\n{input()}\\n\\nOutput:\\n{output()}\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"Incorrect output\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4\\n'\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"Test case failed\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\nassert solution(\"2 2 1\\n2 1 1\\n1 1 1\") == \"0\\n\"\nassert solution(\"2 1 1\\n1 2 1\\n1 1 1\") == \"24\\n\"\nassert solution(\"3 3 1\\n2 2 1\\n2 1 1\") == \"0\\n\"\nassert solution(\"3 2 1\\n2 2 1\\n2 1 1\") == \"12\\n\"\nassert solution(\"5 4 1\\n4 3 1\\n4 2 1\") == \"180\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4, \"The correctness of solution is not verified.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4, \"Test failed\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10 10 0 5') == 100, \"The expected output is 100, but it is: \" + solution('1\\n10 10 0 5')"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"100\\n\", \"Output should be 100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 100, \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 100\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100\\n'\nassert solution('2\\n20 10 5 0\\n') == '200\\n'\nassert solution('3\\n30 20 25 7\\n') == '300\\n'\nassert solution('4\\n40 30 20 15\\n') == '400\\n'\nassert solution('5\\n50 40 30 25\\n') == '500\\n'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100\", \"Your solution is incorrect.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '100', \"Test case 1 failed\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"Expected 1, got: {}\".format(solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\"))"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8']) == 1, 'Test 1'\nassert solution(['3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8']) == 0, 'Test 2'\nassert solution(['3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8']) == 1, 'Test 3'\nassert solution(['3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8']) == 0, 'Test 4'\nassert solution(['3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8']) == 1, 'Test 5'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Expected output to be 1, but got {}\".format(solution())"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3]) == 1\nassert solution([3, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]) == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\", \"Test Case 1 Failed\"\n\nassert solution(\"0 0 4 4\") == \"0\", \"Test Case 2 Failed\"\n\nassert solution(\"0 0 3 3\") == \"0\", \"Test Case 3 Failed\"\n\nassert solution(\"0 0 1 1\") == \"0\", \"Test Case 4 Failed\"\n\nassert solution(\"0 0 10 10\") == \"0\", \"Test Case 5 Failed\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('0 0 2 2\\n1 1 2 3') == 0\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n1 1 2 3\\n2 2 3 4') == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n\") == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(3)) == 1, \"Error: solution should return 1\"\nassert solution(str(5)) == 0, \"Error: solution should return 0\"\nassert solution(str(4)) == 1, \"Error: solution should return 1\"\nassert solution(str(1)) == 0, \"Error: solution should return 0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"1\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1, 'Correct solution'\nassert solution('1\\n0 0 1 1') == 0, 'Correct solution'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '17\\n'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 17, \"Test case 1\"\nassert solution(4) == 17, \"Test case 2\"\nassert solution(10) == 17, \"Test case 3\"\nassert solution(15) == 17, \"Test case 4\"\nassert solution(20) == 17, \"Test case 5\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"17\\n\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"The given output is not the expected result.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"17\", \"Your solution is incorrect.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"10 10\\nS S S S S\\n1 2 3 4 5\\n6 7 8 9 10\\n-1 -1 -1 -1 -1\\n10 10 10 10 10\\n\") == \"10\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 3 5 2\\n2 3 5 1 4\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"6\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"10\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n1 1 1 1 1\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\\nimpossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n1 1 1 1 1\") == \"impossible\"\nassert solution(\"5\\n2 2 2 2 2\") == \"impossible\"\nassert solution(\"5\\n3 3 3 3 3\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n1 1 1 1 1\") == \"impossible\"\nassert solution(\"5\\n2 2 2 2 2\") == \"impossible\"\nassert solution(\"5\\n3 3 3 3 3\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 4 3 5 2\"\nassert solution(\"5\\n3 1 2 4 5\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 6\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 4 3 5 2\"\nassert solution(\"5\\n3 2 3 1 2\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('5\\n2 3 5 1 4') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('5\\n5 1 2 3 4') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 3 5 1 4\\n3 1 2 4 5\\nimpossible\"\nassert solution(input()) == \"2 3 5 1 4\\n1 4 3 5 2\\nimpossible\"\nassert solution(input()) == \"1 4 3 5 2\\n3 1 2 4 5\\nimpossible\"\nassert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\\nimpossible\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.76772047\", \"Your solution is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047\\n'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == 0.76772047\nassert solution('1\\n1 0\\n2 2') == 0.35089403\nassert solution('1\\n0 2\\n3 0') == 0.0\nassert solution('2\\n4 0\\n1 2') == 0.55555556\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\"\nassert solution(\"1\\n2 1 1\\n1 4\\n\") == \"0.67312918\"\nassert solution(\"1\\n3 1 1\\n1 4\\n\") == \"0.7297266\"\nassert solution(\"1\\n4 2 1\\n1 4\\n\") == \"0.62259935\"\nassert solution(\"1\\n5 3 1\\n1 4\\n\") == \"0.63233376\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047', \"The solution should be 0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.76772047, \"The given solution is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.76772047, \"The output should be 0.76772047, but it's {}\".format(solution())"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"world\") == \"0\"\nassert solution(\"aabbcc\") == \"0\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The expected output is not correct. Please provide the correct input and the output.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('hello teams') == '27\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\"\n\nSolution:"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Sample Output: 2\"\nassert solution(\"4 3 5\\n6 3\\n1 8\") == 2, \"Sample Output: 2\"\nassert solution(\"5 5 5 5 5 5\") == 1, \"Sample Output: 1\"\nassert solution(\"1 1 1 1 1\") == 2, \"Sample Output: 2\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect output for sample input.\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2, \"Output should be 2, but got {}\".format(solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3'))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect output\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Incorrect solution\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == 2\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n18 4 5\\n10 2 4\\n\") == 3\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n20 2 3\\n\") == 4\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n18 4 5\\n10 2 4\\n19 2 3\\n\") == 5\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == 2, \"Incorrect output\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"10 5\\nabc\\ndef\\nghi\\nhij\\nklm\") == \"5\"\nassert solution(\"10 4\\nabc\\ndef\\nghi\\nhij\\nklm\") == \"1\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a') == '26'\nassert solution('b') == '6'\nassert solution('c') == '2'\nassert solution('d') == '8'\nassert solution('e') == '4'\nassert solution('cad') == '26'\nassert solution('abc') == '15'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"26\", \"Output should be 26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == 26"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 26\nassert solution(5, 4) == 12\nassert solution(10, 4) == 15\nassert solution(10, 6) == 17\nassert solution(20, 5) == 18\nassert solution(20, 7) == 21\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"26\", \"Incorrect output\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"b\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\"\nfor _ in range(test_cases):\n    n, k = map(int, input().split())\n    strings = list(map(str.lower, input().split()))\n    strings.extend(strings[1:])\n    test_string = input().strip()\n    composites = [\"\".join(sorted(s, reverse=True)) for s in combinations(strings, k)]\n    composites.append(test_string)\n    composites.sort()\n    pos = composites.index(test_string)\n    print(pos % (10**9 + 7))"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. \\nExpected output: {output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3 5 2 1 4', \"Test case 1 failed\"\n\nassert solution(input()) == 'impossible', \"Test case 2 failed\"\n\nassert solution(input()) == '3 4 5 1 2', \"Test case 3 failed\"\n\nassert solution(input()) == '3 5 2 4 1', \"Test case 4 failed\"\n\nassert solution(input()) == 'impossible', \"Test case 5 failed\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('10 5 3 1 3\\n5 10 30') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3\\n10 5 3 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1 3\\n10 5 3 1"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nprint('All tests passed!')"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 4 2 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 4 3 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 4 3 4\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 4 4 3\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 4 4 5\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 4 5 4\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\nassert solution(\"3\\n2 3\\n2 3\") == \"1\\nshovel time!\"\nassert solution(\"1 1\\n2 3\\n4 4\") == \"0\\nshovel time!\"\nassert solution(\"2 3\\n2 3\\n1 2\") == \"1\\nshovel time!\"\nassert solution(\"1 1\\n2 3\\n2 3\\n2 3\") == \"1\\nshovel time!\"\nassert solution(\"1 1\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\\n\"\nassert solution(\"1\\n1\\n1\") == \"0\\nshovel time!\\n\"\nassert solution(\"2\\n2\\n3\\n3\\n3\") == \"2\\nshovel time!\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"2\\nshovel time!\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == 2\nassert solution(\"4\\n1 1\\n2 3\\n2 3\\n\") == 1\nassert solution(\"5\\n1 1\\n2 3\\n2 3\\n\") == 2\nassert solution(\"6\\n1 1\\n2 3\\n2 3\\n\") == 3\nassert solution(\"7\\n1 1\\n2 3\\n2 3\\n\") == 3\nassert solution(\"8\\n1 1\\n2 3\\n2 3\\n\") == 4\nassert solution(\"9\\n1 1\\n2 3\\n2 3\\n\") == 4\nassert solution(\"10\\n1 1\\n2 3\\n2 3\\n\") == 5\nassert solution(\"11\\n1 1\\n2 3\\n2 3\\n\") == 5\nassert solution(\"12\\n1 1\\n2 3\\n2 3\\n\") == 6\nassert solution(\"13\\n1 1\\n2 3\\n2 3\\n\") == 6\nassert solution(\"14\\n1 1\\n2 3\\n2 3\\n\") == 7\nassert solution(\"15\\n1 1\\n2 3\\n2 3\\n\") == 7\nassert solution(\"16\\n1 1\\n2 3\\n2 3\\n\") == 8\nassert solution(\"17\\n1 1\\n2 3\\n2 3\\n\") == 8\nassert solution(\"18\\n1 1\\n2 3\\n2 3\\n\") == 8\nassert solution(\"19\\n1 1\\n2 3\\n2 3\\n\") == 9\nassert solution(\"20\\n1 1\\n2 3\\n2 3\\n\") == 9\nassert solution(\"21\\n1 1\\n2 3\\n2 3\\n\") == 9\nassert solution(\"22\\n1 1\\n2 3\\n2 3\\n\") == 10\nassert solution(\"23\\n1 1\\n2 3\\n2 3\\n\") == 10\nassert solution(\"24\\n1 1\\n2 3\\n2 3\\n\") == 10\nassert solution(\"25\\n1 1\\n2 3\\n2 3\\n\") == 11\nassert solution(\"26\\n1 1\\n2 3\\n2 3\\n\") == 11\nassert solution(\"27\\n1 1\\n2 3\\n2 3\\n\") == 11\nassert solution(\"28\\n1 1\\n2 3\\n2 3\\n\") == 11\nassert solution(\"29\\n1 1\\n2 3\\n2 3\\n\") == 11\nassert solution(\"30\\n1 1\\n2 3\\n2 3\\n\") == 12\nassert solution(\"31\\n1 1\\n2 3\\n2 3\\n\") == 12\nassert solution(\"32\\n1 1\\n2 3\\n2 3\\n\") == 12\nassert solution(\"33\\n1 1\\n2 3\\n2 3\\n\") == 12\nassert solution(\"34\\n1 1\\n2 3\\n2 3\\n\") == 12\nassert solution(\"35\\n1 1\\n2 3\\n2 3\\n\") == 13\nassert solution(\"36\\n1 1\\n2 3\\n2 3\\n\") == 13\nassert solution(\"37\\n1 1\\n2 3\\n2 3\\n\") == 13\nassert solution(\"38\\n1 1\\n2 3\\n2 3\\n\") == 13\nassert solution(\"39\\n1 1\\n2 3\\n2 3\\n\") == 13\nassert solution(\"40\\n1 1\\n2 3\\"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"3\\n1 1\\n2 3\\n2 3\\n4 5\\n\") == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n2 3\n2 3''') == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input '{input_data}' and output '{output_data}'.\" for input_data, output_data in [\n    ('3\\n1 1\\n2 3\\n2 3', '2\\nshovel time!'),\n    ('3\\n2 1\\n1 2\\n1 3', '1\\n'),\n    ('3\\n1 2\\n2 2\\n1 3', '2\\nslow snowmobile!'),\n]"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\n\"\nassert solution(\"10\\n1 1\\n2 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"20\\n\"\nassert solution(\"1\\n0\\n0\\n1\") == \"0\\nshovel time!\\n\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2\\n'\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2, \"Expected 2, got: \" + str(solution(\"3\\n1 1\\n2 3\\n2 3\"))"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\n\nsolution(\"3\\n1 1\\n2 3\\n2 3\")"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The given solution {solution(input())} is incorrect. Expected output: {output}, but got: {output}\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n', \"Test Case 1\"\nassert solution('4\\n1 2 1 2') == '3\\n', \"Test Case 2\"\nassert solution('4\\n1 2 1 2') == '3\\n', \"Test Case 3\"\nassert solution('4\\n1 2 1 2') == '3\\n', \"Test Case 4\"\nassert solution('4\\n1 2 1 2') == '3\\n', \"Test Case 5\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2 1 2\\n\") == \"5\\n\"\nassert solution(\"7\\n1 2 1 2\\n\") == \"6\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 1, 2, 1, 2) == 3, \"Expected output: 3, but got: {}\".format(solution(4, 1, 2, 1, 2))"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\nprint(\"Success!\")"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'\nassert solution('5\\n1 2 1 2 3') == '3\\n'\nassert solution('6\\n1 2 1 2 3 4') == '3\\n'\nassert solution('7\\n1 2 1 2 3 4 5') == '3\\n'\nassert solution('8\\n1 2 1 2 3 4 5 6') == '3\\n'\nassert solution('9\\n1 2 1 2 3 4 5 6 7') == '3\\n'\nassert solution('10\\n1 2 1 2 3 4 5 6 7 8') == '3\\n'\nassert solution('11\\n1 2 1 2 3 4 5 6 7 8 9') == '3\\n'\nassert solution('12\\n1 2 1 2 3 4 5 6 7 8 9 10') == '3\\n'\nassert solution('13\\n1 2 1 2 3 4 5 6 7 8 9 10 11') == '3\\n'\nassert solution('14\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('15\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13') == '3\\n'\nassert solution('16\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '3\\n'\nassert solution('17\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '3\\n'\nassert solution('18\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '3\\n'\nassert solution('19\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '3\\n'\nassert solution('20\\n1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '3\\n'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Expected output 79, got {}\".format(solution(\"4 4 999999937\"))"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '79'\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"5 5 999999999\") == 79\nassert solution(\"6 6 999999999\") == 79\nassert solution(\"10 10 999999999\") == 79\nassert solution(\"10 10 1000000000\") == 79"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: {solution(input())}\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '79\\n', solution(stdin)"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Expected Output: 79, Actual Output: \" + str(solution(\"4 4 999999937\"))"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test failed: got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    \"\"\"\n) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    2 +pineapple -banana -grapes\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3 +pineapple +banana -grapes +onions +mushrooms\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    4 +pineapple +banana -grapes +onions +mushrooms -mozzarella\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    5 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    6 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\n\"\n\nassert solution(\n    \"\"\"\n    7\n    7 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    8 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage +bread\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\nbread\\n\"\n\nassert solution(\n    \"\"\"\n    9\n    9 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage +bread +breadfruit\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\nbread\\nbreadfruit\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    10 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage +bread +breadfruit +tomato\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\nbread\\nbreadfruit\\ntomato\\n\"\n\nassert solution(\n    \"\"\"\n    11\n    11 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage +bread +breadfruit +tomato +broccoli\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\nbread\\nbreadfruit\\ntomato\\nbroccoli\\n\"\n\nassert solution(\n    \"\"\"\n    12\n    12 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pepperoni -oil +sausage +bread +breadfruit +tomato +broccoli +carrot\n    \"\"\"\n) == \"pineapple\\nbanana\\ngrapes\\nonions\\nmushrooms\\nmozzarella\\npepperoni\\noil\\nsausage\\nbread\\nbreadfruit\\ntomato\\nbroccoli\\ncarrot\\n\"\n\nassert solution(\n    \"\"\"\n    13\n    13 +pineapple +banana -grapes +onions +mushrooms -mozzarella +pep"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=r'''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == ['zucchini','mozzarella','mushrooms', 'artichoke']\n\nassert solution(stdin=r'''\n2\n5 +tomato +carrots +potatoes +eggplant -radish\n''') == ['tomato', 'carrots', 'potatoes', 'eggplant', 'radish']\n\nassert solution(stdin=r'''\n3\n4 +pepperoni +mushrooms +onions +pineapple\n''') == ['pepperoni','mushrooms', 'onions', 'pineapple']\n\nassert solution(stdin=r'''\n4\n3 +carrots +cucumber +broccoli +spinach\n''') == ['carrots', 'cucumber', 'broccoli','spinach']\n\nassert solution(stdin=r'''\n5\n2 +broccoli +carrots +onions -spinach\n''') == ['broccoli', 'carrots', 'onions','spinach']\n\nassert solution(stdin=r'''\n6\n5 +eggplant +broccoli +carrots +onions -spinach\n''') == ['eggplant', 'broccoli', 'carrots', 'onions','spinach']\n\nassert solution(stdin=r'''\n7\n6 +broccoli +carrots +onions -spinach +tomato\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato']\n\nassert solution(stdin=r'''\n8\n7 +broccoli +carrots +onions -spinach +tomato +chili\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili']\n\nassert solution(stdin=r'''\n9\n8 +broccoli +carrots +onions -spinach +tomato +chili +lettuce\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce']\n\nassert solution(stdin=r'''\n10\n9 +broccoli +carrots +onions -spinach +tomato +chili +lettuce +green pepper\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce', 'green pepper']\n\nassert solution(stdin=r'''\n11\n10 +broccoli +carrots +onions -spinach +tomato +chili +lettuce +green pepper +pepperoni\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce', 'green pepper', 'pepperoni']\n\nassert solution(stdin=r'''\n12\n11 +broccoli +carrots +onions -spinach +tomato +chili +lettuce +green pepper +pepperoni +sugar\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce', 'green pepper', 'pepperoni','sugar']\n\nassert solution(stdin=r'''\n13\n12 +broccoli +carrots +onions -spinach +tomato +chili +lettuce +green pepper +pepperoni +sugar +spinach\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce', 'green pepper', 'pepperoni','sugar','spinach']\n\nassert solution(stdin=r'''\n14\n13 +broccoli +carrots +onions -spinach +tomato +chili +lettuce +green pepper +pepperoni +sugar +spinach +mushrooms\n''') == ['broccoli', 'carrots', 'onions','spinach', 'tomato', 'chili', 'lettuce', 'green pepper', 'pepperoni','sugar','spinach','mushrooms']\n\nassert solution(stdin=r'''\n15\n14 +bro"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == ['zucchini','mozzarella','mushrooms', 'artichoke']"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"1\\n4 +yogurt +mushrooms +olives -pepperoni\\n1 +pineapple\\n2 +peas\\n3 +apples -spinach\") == \"yogurt\\nmushrooms\\nolives\\npepperoni\"\nassert solution(\"1\\n4 +eggs +spam +ham +peas -clam\\n1 +tomatoes -pineapple\") == \"eggs\\nspam\\nclam\"\n\nfrom typing import List"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n\"\"\"\n) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\n\nassert solution(\n    \"\"\"\n2\n5 +sushi +cheese -bacon +pepperoni -cherry\n\"\"\"\n) == \"sushi\\ncheese\"\n\nassert solution(\n    \"\"\"\n3\n+pineapple -banana +orange -kiwi\n\"\"\"\n) == \"pineapple\\nbanana\\norange\\nkiwi\"\n\nassert solution(\n    \"\"\"\n4\n+bread +cheese -hamburger +pizza\n\"\"\"\n) == \"bread\\ncheese\\nhamburger\\npizza\"\n\nassert solution(\n    \"\"\"\n5\n+rice +milk +bread +cheese -hamburger +pizza\n\"\"\"\n) == \"rice\\nmilk\\nbread\\ncheese\\nhamburger\\npizza\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\", \"Test case 1\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"PP\\nPP\\nRR\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['PS', 'PP', 'RR', 'SS']"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"PS\\nPP\\nRR\\nSS\\n\", \"Expected output: PS\\nPP\\nRR\\nSS\\n, but got: \" + solution(stdin)"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == ['PS', 'PP', 'RR', 'SS'], \"Test case 1 failed\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"PS\\nPP\\nRR\\nSS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The solution does not match the expected output.\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == 'PS\\nPP\\nRR\\nSS'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the provided code and the examples.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2.0\\n0\\n0\\n0\\n0\\n\") == \"288.0\"\nassert solution(\"2\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"233.0\"\nassert solution(\"10\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"22.0\"\nassert solution(\"10\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"22.0\"\nassert solution(\"10\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"22.0\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '288\\n'\nassert solution('10\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '1103\\n'\nassert solution('15\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '1260\\n'\nassert solution('20\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '1413\\n'\nassert solution('25\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '1563\\n'\nassert solution('30\\n0.1 2.0\\n0\\n0\\n0\\n0\\n') == '1710\\n'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '288'\n\nfrom typing import List"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 'not implemented'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"288\\n\"\nassert solution(\"5\\n100.0 20.0\\n50 100\\n100 50\\n100 50\\n100\\n\") == \"812000\\n\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 288"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"The meow factor of the string 'pastimeofwhimsy' is incorrect\"\nassert solution(\"abc\") == 0, \"The meow factor of the string 'abc' is incorrect\"\nassert solution(\"a\") == 0, \"The meow factor of the string 'a' is incorrect\"\nassert solution(\"baa\") == 0, \"The meow factor of the string 'baa' is incorrect\"\nassert solution(\"aba\") == 1, \"The meow factor of the string 'aba' is incorrect\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Expected output: 1, received: {}\".format(solution(\"pastimeofwhimsy\"))"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('4 5\\n1 2 3 4 5') == 'NO'\nassert solution('6 3\\n1 2 3 4 5 6') == 'YES'\nassert solution('3 0\\n1 2 3 4 5') == 'NO'\nassert solution('3 1\\n1 2 3 4 5') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"5 4\\n1 2 2 1 1 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\"\nassert solution(\"3 4\\n1 2 2 1 1 2 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 1 3 \") == \"YES\\n\"\nassert solution(\"3 4\\n1 2 2 1 1 4 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 2 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 3 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 1 4 \") == \"NO\\n\"\nassert solution(\"3 4\\n1 2 2 2 1 \") == \"YES\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4 1\\n1 1 1 1 \") == \"YES\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3 2\\n1 2 1 1 2 3 3 1 2 3 1 \") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"5 6\\n2 2 2 2 2\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 2 2 1') == 'YES'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(30) == \"3/1\"\nassert solution(5) == \"1/1\"\nassert solution(1) == \"1/1\"\nassert solution(3) == \"1/1\"\nassert solution(10) == \"1/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3/1\", \"The solution is incorrect.\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3/1'\nassert solution(4) == '4/2'\nassert solution(6) == '6/1'\nassert solution(7) == '7/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\", \"The output is incorrect\"\nassert solution(\"10\\n1 2\\n3\\n4\\n\") == \"10/1\", \"The output is incorrect\"\nassert solution(\"100\\n1 2\\n3\\n4\\n\") == \"100/1\", \"The output is incorrect\"\nassert solution(\"1000000\\n1 2\\n3\\n4\\n\") == \"1000000/1\", \"The output is incorrect\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n\", \"Test Case 1\"\n\nassert solution(\"4\\n1 3\\n5 6\\n7\\n\") == \"12/1\\n\", \"Test Case 2\"\n\nassert solution(\"3\\n2 4\\n1 5\\n7 8\\n\") == \"6/2\\n\", \"Test Case 3\"\n\nassert solution(\"7\\n1 2\\n3 4\\n5 6\\n8 9\\n\") == \"4/3\\n\", \"Test Case 4\"\n\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"2/3\\n\", \"Test Case 5\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == '3/1'\nassert solution(3) == '3/1'\nassert solution(4) == '3/1'\nassert solution(5) == '3/1'\nassert solution(6) == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 3/1"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '3/1', 'Test case 1 failed'\nassert solution(12) == '3/4', 'Test case 2 failed'\nassert solution(20) == '5/1', 'Test case 3 failed'\nassert solution(1000000000) == '9/1', 'Test case 4 failed'\nassert solution(1000000000000) == '19/1', 'Test case 5 failed'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1\\n7/2\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1/4\\n3/9\\n11/16\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '1/3\\n3/6\\n15/12\\n21/24\\n'\nassert solution('2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n2 3') == '3/1\\n7/2\\n'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n1 "
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Solution returned {solution(input())} but expected {output}\"\nprint(f\"Expected payment divided by {N**2}\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\nassert solution(\"5\\n1 10\\n2 20\\n3 30\\n4 40\\n5 50\") == \"60.45833333333333\\n\"\nassert solution(\"100000\\n
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1.2 10.2\n2.2 15.2\n''') == 1.114672365\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1.114672365', 'Incorrect output'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2\\n'\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Input\") == \"Input\"\nassert solution(\"Input\\nInput\\nInput\\nInput\") == \"Input\\nInput\\nInput\\nInput\"\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input) == example_output, f\"The solution for the given example should be {example_output}, but it is {solution(example_input)}.\"\n\nexample_input = \"\"\"\n4\n0 3\n1 1\n2 1\n2 0\n\"\"\"\n\nexample_output = \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\nassert solution(input()) == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1 2 3 2'\nassert solution(open('sample_input.txt', 'r')) == '3\\n1 2 3 2'\nassert solution(open('input.txt', 'r')) == '3\\n1 2 3 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('5\\n3 0\\n1 1\\n2 1\\n2 2\\n1 2\\n2 3\\n1 2') == '3\\n1 2 3 2 3'\nassert solution('6\\n0 3\\n1 1\\n2 1\\n2 2\\n1 2\\n2 3\\n1 2\\n2 4\\n2 4\\n2 5\\n1 2') == '5\\n1 2 3 2 3 3'\nassert solution('7\\n0 3\\n1 1\\n2 1\\n2 2\\n1 2\\n2 3\\n1 2\\n2 4\\n2 4\\n2 5\\n1 2\\n2 6\\n2 6\\n2 7\\n2 7\\n1 2') == '5\\n1 2 3 2 3 3 3'\nassert solution('8\\n0 3\\n1 1\\n2 1\\n2 2\\n1 2\\n2 3\\n1 2\\n2 4\\n2 4\\n2 5\\n1 2\\n2 6\\n2 6\\n2 7\\n1 2\\n2 8\\n2 8\\n2 9\\n2 9\\n2 10\\n2 10\\n2 11\\n2 11\\n2 12\\n2 12\\n2 13\\n2 13\\n2 14\\n2 14\\n2 15\\n2 15\\n2 16\\n2 16\\n2 17\\n2 17\\n2 18\\n2 18\\n2 19\\n2 19\\n2 20\\n2 20\\n2 21\\n2 21\\n2 22\\n2 22\\n2 23\\n2 23\\n2 24\\n2 24\\n2 25\\n2 25\\n2 26\\n2 26\\n2 27\\n2 27\\n2 28\\n2 28\\n2 29\\n2 29\\n2 30\\n2 30\\n2 31\\n2 31\\n2 32\\n2 32\\n2 33\\n2 33\\n2 34\\n2 34\\n2 35\\n2 35\\n2 36\\n2 36\\n2 37\\n2 37\\n2 38\\n2 38\\n2 39\\n2 39\\n2 40\\n2 40\\n2 41\\n2 41\\n2 42\\n2 42\\n2 43\\n2 43\\n2 44\\n2 44\\n2 45\\n2 45\\n2 46\\n2 46\\n2 47\\n2 47\\n2 48\\n2 48\\n2 49\\n2 49\\n2 50\\n2 50\\n2 51\\n2 51\\n2 52\\n2 52\\n2 53\\n2 53\\n2 54\\n2 54\\n2 55\\n2 55\\n2 56\\n2 56\\n2 57\\n2 57\\n2 58\\n2 58\\n2 59\\n2 59\\n2 60\\n2 60\\n2 61\\n2 61\\n2 62\\n2 62\\n2 63\\n2 63\\"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5\\n0 3\\n1 1\\n2 1\\n2 0\") == \"4\\n2 1 3 2 1\"\nassert solution(\"6\\n0 3\\n1 1\\n2 1\\n2 0\") == \"4\\n2 1 3 2 1\"\nassert solution(\"7\\n0 3\\n1 1\\n2 1\\n2 0\") == \"5\\n3 1 2 2 1\"\nassert solution(\"8\\n0 3\\n1 1\\n2 1\\n2 0\") == \"5\\n3 1 2 2 1\"\nassert solution(\"9\\n0 3\\n1 1\\n2 1\\n2 0\") == \"6\\n3 1 2 2 1 1\"\nassert solution(\"10\\n0 3\\n1 1\\n2 1\\n2 0\") == \"6\\n3 1 2 2 1 1\"\nassert solution(\"11\\n0 3\\n1 1\\n2 1\\n2 0\") == \"7\\n4 2 1 2 1 1\"\nassert solution(\"12\\n0 3\\n1 1\\n2 1\\n2 0\") == \"7\\n4 2 1 2 1 1\"\nassert solution(\"13\\n0 3\\n1 1\\n2 1\\n2 0\") == \"8\\n5 3 1 2 1 1\"\nassert solution(\"14\\n0 3\\n1 1\\n2 1\\n2 0\") == \"8\\n5 3 1 2 1 1\"\nassert solution(\"15\\n0 3\\n1 1\\n2 1\\n2 0\") == \"9\\n6 4 1 2 1 1\"\nassert solution(\"16\\n0 3\\n1 1\\n2 1\\n2 0\") == \"9\\n6 4 1 2 1 1\"\nassert solution(\"17\\n0 3\\n1 1\\n2 1\\n2 0\") == \"10\\n7 5 1 2 1 1\"\nassert solution(\"18\\n0 3\\n1 1\\n2 1\\n2 0\") == \"10\\n7 5 1 2 1 1\"\nassert solution(\"19\\n0 3\\n1 1\\n2 1\\n2 0\") == \"11\\n8 6 1 2 1 1\"\nassert solution(\"20\\n0 3\\n1 1\\n2 1\\n2 0\") == \"11\\n8 6 1 2 1 1\"\nassert solution(\"21\\n0 3\\n1 1\\n2 1\\n2 0\") == \"12\\n9 7 1 2 1 1\"\nassert solution(\"22\\n0 3\\n1 1\\n2 1\\n2 0\") == \"12\\n9 7 1 2 1 1\"\nassert solution(\"23\\n0 3\\n1 1\\n2 1\\n2 0\") == \"13\\n10 8 1 2 1 1\"\nassert solution(\"24\\n0 3\\n1 1\\n2 1\\n2 0\") == \"13\\n10 8 1 2 1 1\"\nassert solution(\"25\\n0 3\\n1 1\\n2 1\\n2 0\") == \"14\\n11 9 1 2 1 1\"\nassert solution(\"26\\n0 3\\n1 1\\n2 1\\n2 0\") == \""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()} and expected output: {expected_output}\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The function solution({stdin}) should return {expected_output}, but it returns {solution}.\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\nSample Output 1: 1\\nSample Output 2: none\\nSample Input 3: 4\\n1 2 1 3\\nSample Output 3: none') == '1\\n2\\n3\\nnone'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['1', '2', '3']\nassert solution() == ['none', 'none', 'none']\nassert solution() == ['none', 'none', 'none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == ['1', '2', '3']\nassert solution('3\\n1 1 2\\n') == ['none']\nassert solution('4\\n1 2 1 3\\n') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin} and output {solution(stdin)}\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\", \"Output should be: 1\\n2\\n3\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1 0 1 2 3 3\\n') == '5'\nprint('All tests passed!')"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\", \"Test failed\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"The output does not match the expected output\"\n\nsample_input = \"\"\"\n7\n2 1 0 1 2 3 3\n\"\"\"\n\nsample_output = \"\"\"5\"\"\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0 1 2 3 3\\n7\") == \"5\\n\"\nassert solution(\"1 2 3\\n4 5 6 7\") == \"1\\n\"\nassert solution(\"5 4 3 2 1\\n7 6 5 4 3\") == \"1\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"8\\n1 0 2 1 1 2 2 3 1 2\") == \"13\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"20\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 6\n     #####\n     #...#\n     #_###\n     #_M.#\n     #__.#\n     #####\n    ''') == '''-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n'''"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [\"-1 -1 -1 -1 -1\", \"-1 4 5 6 -1\", \"-1 4 -1 -1 -1\", \"-1 1 0 1 -1\", \"-1 3 1 2 -1\", \"-1 -1 -1 -1 -1\"]\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution() == \"0 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution() == \"0 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution() == \"0 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution() == \"0 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#M.##\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#M.##\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Solution does not match the expected output. \\nInput: {input} \\nOutput: {output}\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"Expected: 6\\nActual: {}\".format(solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\"))"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == 6\nassert solution('4 7 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == 0"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\"\nassert solution(\"4 6 2\\n2 3 2\\n2 4 4\") == \"Impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n11 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n11 3 1\\n12 3 1\\n\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 1\\n5 4 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n6\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"01001\"\nassert solution(stdin: str) == \"11000\"\nassert solution(stdin: str) == \"01000\"\nassert solution(stdin: str) == \"00101\"\nassert solution(stdin: str) == \"01000\"\nassert solution(stdin: str) == \"00101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11000\"\nassert solution(stdin: str) == \"11000\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11000\"\nassert solution(stdin: str) == \"00101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"01101\"\nassert solution(stdin: str) == \"11100\"\nassert solution(stdin: str) == \"01101\"\nassert solution"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 2, 1) == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"0 1 1 0\") == \"10110\"\nassert solution(\"0 0 0 0\") == \"00000\"\nassert solution(\"0 1 0 0\") == \"10000\"\nassert solution(\"1 1 0 0\") == \"10000\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '01001'\nprint(\"Test Passed\")"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n1 3\\n2 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n< 1\\n^ 1\\n< 1\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed for solution: {}\\nInput: {}\\nOutput: {}\\nSolution: {}\".format(solution_input, solution_input, solution_output, solution(solution_input))"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n> 1\\n^ 4\\n> 2\\n> 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 3\\n4 4\") == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution('5 6 10\\n3 3\\n1 1\\n1 2\\n1 3\\n1 4\\n2 2\\n2 3\\n2 4\\n3 4\\n3 5') == 'impossible'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0, \"Solution is not correct\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nassert solution(\"5\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 0\") == \"5.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution {solution} does not match expected output {expected_output}\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.0\\n\", \"Output is incorrect\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_file) == output_file, f\"Test failed. Input: {input_file}, Output: {output_file}\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Output should be 4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == 4, \"Luka can delete the second, fourth, sixth and seventh columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka can delete the second, fourth, sixth and seventh columns.\"\nprint(\"Test passed\")"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=f) == output\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"The correct solution is not provided.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Incorrect output: expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    4\n    2 0\n    10 10\n    '''\n) == '2'\n\nassert solution(\n    '''\n    5\n    10 10\n    5 5\n    '''\n) == '3'\n\nassert solution(\n    '''\n    2\n    -10 0\n    10 10\n    '''\n) == '3'\n\nassert solution(\n    '''\n    10\n    10 10\n    10 0\n    '''\n) == '3'\n\nassert solution(\n    '''\n    4\n    -5 0\n    5 5\n    '''\n) == '2'\n\nassert solution(\n    '''\n    3\n    -5 0\n    5 5\n    '''\n) == '1'\n\nassert solution(\n    '''\n    4\n    -5 0\n    5 5\n    '''\n) == '1'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n-10 0\\n-10 10\\n') == '2'\nassert solution('6\\n50 0\\n-10 10\\n') == '3'\nassert solution('5\\n0 0\\n10000 0\\n') == '1'\nassert solution('10\\n0 0\\n0 10000\\n') == '4'\nassert solution('6\\n0 0\\n0 10000\\n') == '4'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test Failed\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n'\nassert solution('10000\\n10000\\n10000') == '2\\n'\nassert solution('4\\n20 30') == '2\\n'\nassert solution('10000\\n10000\\n10000') == '2\\n'\nassert solution('3\\n10000\\n10000') == '0\\n'\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == 2\nprint(\"Test Passed\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nassert solution(\"4\\n10 0\\n10 10\") == \"2\\n\"\nassert solution(\"4\\n10000 0\\n10000 10000\") == \"2\\n\"\nassert solution(\"4\\n-10000 0\\n-10000 10000\") == \"2\\n\"\nassert solution(\"4\\n-10 0\\n10 10\") == \"2\\n\"\nassert solution(\"4\\n-10000 0\\n10000 10000\") == \"2\\n\"\nassert solution(\"4\\n-10000 0\\n10000 10000\") == \"2\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Your solution is incorrect!\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 10') == '10'\nassert solution('10 100') == '100'\nassert solution('100 1000000') == '1000000'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0\nassert solution(b'def solution(stdin: str) -> str:\\n    pass\\n\\n') == 0"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"1\\n\"\nassert solution(\"3 3\") == \"2\\n\"\nassert solution(\"4 4\") == \"4\\n\"\nassert solution(\"5 5\") == \"10\\n\"\nassert solution(\"6 6\") == \"10\\n\"\nassert solution(\"7 7\") == \"10\\n\"\nassert solution(\"8 8\") == \"20\\n\"\nassert solution(\"9 9\") == \"20\\n\"\nassert solution(\"10 10\") == \"30\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    1 5\n    ''') == '0'\n\nassert solution('''\n    2 3\n    3 4\n    ''') == '1'\n\nassert solution('''\n    3 10\n    5 10\n    6 10\n    ''') == '2'\n\nassert solution('''\n    4 10\n    3 10\n    2 10\n    ''') == '2'\n\nassert solution('''\n    5 10\n    4 10\n    3 10\n    ''') == '2'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n\") == \"0\\n\"\nassert solution(\"2 5\\n\") == \"1\\n\"\nassert solution(\"3 5\\n\") == \"4\\n\"\nassert solution(\"4 5\\n\") == \"9\\n\"\nassert solution(\"5 5\\n\") == \"25\\n\"\nassert solution(\"10 5\\n\") == \"50\\n\"\nassert solution(\"20 5\\n\") == \"100\\n\"\nassert solution(\"30 5\\n\") == \"200\\n\"\nassert solution(\"40 5\\n\") == \"300\\n\"\nassert solution(\"50 5\\n\") == \"400\\n\"\nassert solution(\"100 5\\n\") == \"500\\n\"\nassert solution(\"200 5\\n\") == \"1000\\n\"\nassert solution(\"300 5\\n\") == \"2000\\n\"\nassert solution(\"400 5\\n\") == \"3000\\n\"\nassert solution(\"500 5\\n\") == \"4000\\n\"\nassert solution(\"1000 5\\n\") == \"5000\\n\"\nassert solution(\"2000 5\\n\") == \"10000\\n\"\nassert solution(\"3000 5\\n\") == \"20000\\n\"\nassert solution(\"4000 5\\n\") == \"30000\\n\"\nassert solution(\"5000 5\\n\") == \"40000\\n\"\nassert solution(\"10000 5\\n\") == \"50000\\n\"\nassert solution(\"20000 5\\n\") == \"100000\\n\"\nassert solution(\"30000 5\\n\") == \"200000\\n\"\nassert solution(\"40000 5\\n\") == \"300000\\n\"\nassert solution(\"50000 5\\n\") == \"400000\\n\"\nassert solution(\"100000 5\\n\") == \"500000\\n\"\nassert solution(\"200000 5\\n\") == \"1000000\\n\"\nassert solution(\"300000 5\\n\") == \"2000000\\n\"\nassert solution(\"400000 5\\n\") == \"3000000\\n\"\nassert solution(\"500000 5\\n\") == \"4000000\\n\"\nassert solution(\"1000000 5\\n\") == \"5000000\\n\"\nassert solution(\"2000000 5\\n\") == \"10000000\\n\"\nassert solution(\"3000000 5\\n\") == \"20000000\\n\"\nassert solution(\"4000000 5\\n\") == \"30000000\\n\"\nassert solution(\"5000000 5\\n\") == \"40000000\\n\"\nassert solution(\"10000000 5\\n\") == \"50000000\\n\"\nassert solution(\"20000000 5\\n\") == \"100000000\\n\"\nassert solution(\"30000000 5\\n\") == \"200000000\\n\"\nassert solution(\"40000000 5\\n\") == \"300000000\\n\"\nassert solution(\"50000000 5\\n\") == \"400000000\\n\"\nassert solution(\"100000000 5\\n\") == \"500000000\\n\"\nassert solution(\"200000000 5\\n\") == \"1000000000\\n\"\nassert solution(\"300000000"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"10 10\") == \"15\\n\"\nassert solution(\"1000000 1000000\") == \"1111111\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"10 5\") == \"1\\n\"\nassert solution(\"100 50\") == \"15\\n\"\nassert solution(\"1000000 1000000\") == \"2500\\n\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '''\n0 0\n1 1\n'''"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output. Expected: {sample_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution should return {sample_output}, but it returned {solution(sample_input)}.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0 0\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0') == ['0 0', '1 1']\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700001 50') == '45.375'\nassert solution('1 2 0.950000\\n0.700000 50000') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.01') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.00') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.0001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.00000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.0000000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.000000000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.00000000000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.0000000000000001') == '45000.0'\nassert solution('1 2 0.950000\\n0.700000 50000.000000000000000001') == '45000.0'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.650000 45\\n0.550000 35\\n0.450000 25\\n0.350000 15\\n0.250000 5\\n0.150000 0') == '11.25'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.650000 45\\n0.550000 35\\n0.450000 25\\n0.350000 15\\n0.250000 5\\n0.150000 0\\n1 3 0.925000') == '33.625'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.650000 45\\n0.550000 35\\n0.450000 25\\n0.350000 15\\n0.250000 5\\n0.150000 0\\n1 3 0.925000\\n0.700000 60\\n0.650000 55\\n0.550000 45\\n0.450000 35\\n0.350000 25\\n0.250000 15\\n0.150000 5\\n0.050000 0\\n0.950000 100') == '79.125'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.650000 45\\n0.550000 35\\n0.450000 25\\n0.350000 15\\n0.250000 5\\n0.150000 0\\n1 3 0.925000\\n0.700000 60\\n0.650000 55\\n0.550000 45\\n0.450000 35\\n0.350000 25\\n0.250000 15\\n0.150000 5\\n0.050000 0\\n0.950000 100\\n1 4 0.850000\\n0.700000 60\\n0.650000 55\\n0.550000 45\\n0.450000 35\\n0.350000 25\\n0.250000 15\\n0.150000 5\\n0.050000 0\\n0.950000 100\\n0.850000 75\\n0.750000 60\\n0.650000 55\\n0.550000 45\\n0.450000 35\\n0.350000 25\\n0.250000 15\\n0.150000 5\\n0.050000 0\\n0.950000 100\\n0.85"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"2 4 0.850000\\n0.700000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.600000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.550000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.450000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.650000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.550000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.600000 45\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.600000 45\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nprint(\"Test passed\")"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.999999\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 51\") == \"45.0\"\nassert solution(\"1 2 0.999999\\n0.700000 51\") == \"45.0\"\nassert solution(\"1 2 0.950000\\n0.700000 100\") == \"44.975\"\nassert solution(\"1 2 0.999999\\n0.700000 100\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"44.975\", \"The expected output is incorrect.\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '44.975'\nassert solution(open('sample_input.txt', 'r')) == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1''') == '2\\n'\n\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n2\n2''') == 'IMPOSSIBLE\\n'\n\nassert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n2\n1''') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1''') == '2'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\\nIMPOSSIBLE\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0\\n'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4.0\\n'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'\n\nassert solution('''3 3\n0.0 0.0\n1000.0 1000.0\n1000.0 0.0\n0.0 0.0\n0.0 1000.0''') == '3.0'\n\nassert solution('''3 3\n0.0 0.0\n0.0 0.0\n0.0 1000.0\n0.0 0.0\n0.0 0.0''') == '0.0'\n\nassert solution('''3 3\n0.0 0.0\n0.0 0.0\n0.0 1000.0\n0.0 0.0\n0.0 0.0''') == '0.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"5 3\\n0.0 0.0\\n1.0 1.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\"\nassert solution(\"0 0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000\\n'\nassert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n190 40') == '36000\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 18000"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('3\\n300 100\\n250 150\\n300 200') == '45000'\nassert solution('2\\n100 50\\n75 25\\n125 30') == '30000'\nassert solution('1\\n100 50') == '50000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '18000\\n'\nassert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000\\n'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000\\n'\n\nassert solution('''\n3\n150 100\n200 200\n180 200\n''') == '18000\\n'\n\nassert solution('''\n5\n200 30\n200 15\n200 25\n200 30\n200 40\n''') == '18000\\n'\n\nassert solution('''\n10\n220 29\n195 20\n200 9\n180 30\n180 40\n200 50\n200 60\n''') == '18000\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '18000', 'Please implement the solution for the problem.'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '18000\\n', \"Test failed\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"NOSTICKERS\\n5\\nSTICKY 5\\nSTICKY 10\\nSTICKY 5\\nSTICKY 15\\nSTICKY 20\\nSTICKY 25\\nSTICKY 30\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"QUICKSTART\\n5\\nSTICKY 5\\nSTICKY 10\\nSTICKY 5\\nSTICKY 15\\nSTICKY 20\\nSTICKY 25\\nSTICKY 30\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28, \"Incorrect output\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nSTICKY 10\\nTICKERS 1\") == 28, \"Incorrect output\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\") == \"IMPOSSIBLE\", \"Incorrect output\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n') == 28"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 9\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 2\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 10\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 7\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == [\"INDV 1\", \"INDV 2\", \"CORP 1\", \"INDV 4\", \"CORP 2\", \"INDV 3\", \"CORP 3\", \"INDV 5\"]"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, but got {solution(input)}\"\nfor i in range(1, 6):\n    assert solution(f\"5 {i} 8\") == f\"INDV {i}\", f\"Expected INDV {i}, but got {solution(f\"5 {i} 8\")}\"\n    assert solution(f\"1 {i}\") == f\"INDV {i}\", f\"Expected INDV {i}, but got {solution(f\"1 {i}\")}\"\n    assert solution(f\"2 {i}\") == f\"INDV {i}\", f\"Expected INDV {i}, but got {solution(f\"2 {i}\")}\"\n    assert solution(f\"3 {i}\") == f\"INDV {i}\", f\"Expected INDV {i}, but got {solution(f\"3 {i}\")}\"\n    assert solution(f\"4 {i}\") == f\"CORP {i}\", f\"Expected CORP {i}, but got {solution(f\"4 {i}\")}\"\n    assert solution(f\"5 {i}\") == f\"CORP {i}\", f\"Expected CORP {i}, but got {solution(f\"5 {i}\")}\"\n    assert solution(f\"3 {i}\") == f\"CORP {i}\", f\"Expected CORP {i}, but got {solution(f\"3 {i}\")}\"\n    assert solution(f\"4 {i}\") == f\"CORP {i}\", f\"Expected CORP {i}, but got {solution(f\"4 {i}\")}\"\n    assert solution(f\"5 {i}\") == f\"CORP {i}\", f\"Expected CORP {i}, but got {solution(f\"5 {i}\")}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2.4142135624\", \"Expected output: 2.4142135624, actual output: \" + solution(sample_input)"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f\"\"\"4\n10 1\n1\n0\n10\n10\"\"\") == 2.4142135624\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\\n\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2.4142135624\\n'"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n20\\n\") == 2.5\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n5\\n\") == 2.5"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'Bwahahahahaha!!! Your nemesis, the dashingly handsome spy Waco Powers, has at last fallen to your secret volcano base\\'s deathtraps (or so you assume, being a little too busy to witness it firsthand). At long last, you are all set to Conquer The World!\n\nNothing will stand in your way! Well, nothing except a minor problem of logistics. Your evil armies have announced that they will not continue carving their relentless path of destruction across the puny nations of the world without being paid. And unfortunately you are running low on cash \u2013 a volcano lair has many wonderful qualities, but \u201creasonably affordable\u201d is not one of them. You have had to pull funds from the travel budget to pay your ungrateful underlings. Now you are not sure how you will actually get your armies into position to Conquer The World.\n\nYou have a map of the nations of the world and all your available transport routes between them. Each route connects two nations and has a fixed cost per army that uses it. The routes are laid out such that there is exactly one way to travel between any two nations. You know the current position of each of your armies and how many you will need to place permanently in each nation in order to subjugate it. How can you move the armies into place as cheaply as possible so you can Conquer The World?\n\n-----Input-----\nThe first line of input contains an integer $n$ ($1 \\le n \\le 250000$), the number of nations. This is followed by $n-1$ lines, each containing three integers $u$, $v$, and $c$ ($1 \\le u, v \\le n$, $1 \\le c \\le 10^6$), indicating that there is a bidirectional route connecting nations $u$ and $v$, which costs $c$ per army to use.\n\nFinally, another $n$ lines follow, the $i^{\\text {th}}$ of which contains two non-negative integers $x_ i$ and $y_ i$, indicating that there are currently $x_ i$ armies in nation $i$, and you need at least $y_ i$ armies to end up in that nation in the final configuration. The total number of armies (the sum of the $x_ i$ values) is at least the sum of the $y_ i$ values, and no more than $10^6$.\n\n-----Output-----\nDisplay the minimum cost to move your armies such that there are at least $y_ i$ armies in nation $i$ for all $i$.\n\n-----Examples-----\nSample Input:\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\nSample Output:\n15"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\nassert solution(\"4 1 1\\n2 2 2\\n3 1 2\\n1 2 2\\n1 1 1\\n2 1 1\") == \"12\"\nassert solution(\"4 1 1\\n2 2 2\\n3 1 2\\n1 2 2\\n1 1 1\\n2 1 1\") == \"12\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('5\\n10 10 10\\n10 10 10\\n10 10 10\\n5 5') == '50'\nassert solution('10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10') == '500'\nassert solution('2\\n1 2\\n1 3') == '2'\nassert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('5\\n10 10 10\\n10 10 10\\n10 10 10\\n5 5') == '50'\nassert solution('10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10') == '500'\nassert solution('2\\n1 2\\n1 3') == '2'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'Bwahahahahaha!!! Your nemesis, the dashingly handsome spy Waco Powers, has at last fallen to your secret volcano base\u2019s deathtraps (or so you assume, being a little too busy to witness it firsthand). At long last, you are all set to Conquer The World!\\n'\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '....@DDDDdef', \"Test Failed\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5 3 3 4') == '..BBC..A.C..C..@DDDDdef'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC..@DDDD\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 10 3 5 1\") == \"....\\n..BBB\\n..A.B\\n....B\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 5 1 1 5\") == \"....\\n..AAA\\n..A.A\\n....A\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 10 10 10 10\") == \"....\\n..AAB\\n..A.A\\n....A\\n@DDEE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\"\nassert solution(\"5 10 1 1 100\") == \".....\\n....@\\n....@\\n....@\\n....@\\n....@\"\nassert solution(\"5 10 10 1 100\") == \"....@\\n....@\\n....@\\n....@\\n....@\\n....@\"\nassert solution(\"1 1 1 1 1\") == \"....\\n....\\n....\\n....\"\nassert solution
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"001\\n001\\n001\\n111\\n200\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 4\\n011\\n000\\n111\\n000') == '000\\n000\\n000\\n000'\nassert solution('5 4\\n011\\n000\\n111\\n000') == '000\\n000\\n000\\n000'\nassert solution('5 4\\n011\\n000\\n111\\n000') == '000\\n000\\n000\\n000'\nassert solution('5 4\\n011\\n000\\n111\\n000') == '000\\n000\\n000\\n000'\nassert solution('5 4\\n011\\n000\\n111\\n000') == '000\\n000\\n000\\n000'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"001\"\nassert solution(input()) == \"001\"\nassert solution(input()) == \"001\"\nassert solution(input()) == \"111\"\nassert solution(input()) == \"200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"001\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n000\\n111\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 4\\n111\\n001\\n000\\n111\\n000\\n111\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\") == \"001\\n001\\n001\\n111\\n200\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n\"\"\") == \"19 20\\n17 15 14 13 7 2\"\n\nassert solution(\"\"\"\n18/6\n10/1\n18/13\n4/3\n20/7\n18/10\n18/17\n\"\"\") == \"18 17\\n18 13 7 2\"\n\nassert solution(\"\"\"\n18/6\n10/1\n18/13\n4/3\n20/7\n18/10\n18/17\n\"\"\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n') == '19 20\\n17 15 14 13 7 2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"19 17\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n\"\"\") == \"19 20\\n17 15 14 13 7 2\"\n\nassert solution(\"\"\"\n22/10\n6/1\n22/12\n5/3\n22/8\n22/16\n22/11\n22/9\n22/15\n\"\"\") == \"22 16\\n14 12 11 10 9 7 5 4 3 2 1\"\n\nassert solution(\"\"\"\n18/12\n7/1\n18/14\n4/3\n18/13\n18/15\n18/11\n18/9\n18/17\n\"\"\") == \"18 17\\n14 12 11 10 9 7 5 4 3 2 1\"\n\nassert solution(\"\"\"\n20/14\n5/1\n20/16\n4/3\n20/12\n20/10\n20/18\n20/13\n\"\"\") == \"20 18\\n16 14 13 12 10 8 6 5 3 2 1\"\n\nassert solution(\"\"\"\n15/11\n8/1\n15/13\n4/3\n15/12\n15/14\n15/10\n15/16\n\"\"\") == \"15 16\\n10 8 7 6 5 4 2 1\"\n\nassert solution(\"\"\"\n22/12\n6/1\n22/14\n4/3\n22/10\n22/8\n22/16\n22/11\n22/9\n22/15\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n22/10\n6/1\n22/12\n5/3\n22/8\n22/16\n22/11\n22/9\n22/15\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n18/12\n7/1\n18/14\n4/3\n18/13\n18/15\n18/11\n18/9\n18/17\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n20/14\n5/1\n20/16\n4/3\n20/12\n20/10\n20/18\n20/13\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n15/11\n8/1\n15/13\n4/3\n15/12\n15/14\n15/10\n15/16\n\"\"\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"5 5\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 4\\n3 0 3\") == \"impossible\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\"\"\") == \"possible\"\nassert solution(\"\"\"1 2 3\n2 0 0\n0 1\n1 0 0\n0 0 0\"\"\") == \"impossible\"\nassert solution(\"\"\"3 3\n0 0\n1 1\n1 0\n2 2\n2 0\n3 3\"\"\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nprint('All tests passed')"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"3 3\\n4 4\\n0 0\\n1 1\\n1 2\\n2 1\\n2 3\\n3 2\\n4 0\\n\") == \"possible\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 3\\n3 2\\n4 0\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    4 4\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == 'possible'\nassert solution(sample_input_2) == 'impossible'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output: 4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) =="
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\") == \"4\"\nassert solution(\"3\\n1 2\") == \"4\"\nassert solution(\"4\\n1 2 3\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n\") == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected, f\"The expected output is {expected}, but got {solution(input_str)}\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case not passed!\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4, \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\", \"Incorrect output\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Slavko\\n'\n\nassert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Slavko\", \"Mirko and his faithful friend Slavko got really bored one day. The result of their boredom is the creation of a new game! In the beginning of the game, they draw 3 points in a coordinate system. The players take turns and Mirko plays first. He draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points. In the following moves, the player draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points located on the line drawn in the previous move of the opponent. No single line must be drawn twice. The loser is the player who cannot play his move. Determine who has the winning strategy.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n') == 'Mirko\\n'\nassert solution('1\\n2\\n3\\n') == 'Slavko\\n'\nassert solution('1\\n1\\n1\\n') == 'Mirko\\n'\nassert solution('1\\n2\\n3\\n') == 'Slavko\\n'\nassert solution('1\\n2\\n3\\n') == 'Mirko\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 3\\n\") == \"Slavko\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n3 3\\n\") == \"Mirko\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n4 3\\n\") == \"Slavko\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n5 3\\n\") == \"Mirko\\n\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Mirko\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(34) == \"2 4\"\nassert solution(38) == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2 4\"\nassert solution(6) == \"2 3 4 5\"\nassert solution(34) == \"2 3 5\"\nassert solution(38) == \"2 3 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\\n\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\\n\", \"Your solution is not correct.\"\nassert solution(\"1\\n10\\n100\\n1000\\n\") == \"2 3 4 5 6\\n\", \"Your solution is not correct.\"\nassert solution(\"1001\\n\") == \"1001\\n\", \"Your solution is not correct.\"\nassert solution(\"10\\n\") == \"1\\n\", \"Your solution is not correct.\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2 4\\n', \"Expected '2 4', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2 4\\n\"\nassert solution(\"6\\n34\\n38\\n\") == \"2 4\\n4 6\\n\"\nassert solution(\"1000000000\\n\") == \"1 0000000000\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n2\n4\n'''"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\nassert solution(\"5\\n5\\n10\\n100\") == \"2 5 10 100\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12\\n', \"Test 1\"\nassert solution('5\\n8 10 2 1000000 30556926000') == '12\\n', \"Test 2\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12, \"Sample Input 1: 4\\n10000 400000 500000 900000\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == 12, \"Sample Input 2: 5\\n8 10 2 1000000 30556926000\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12'\nassert solution('5\\n8 10 2 1000000 30556926000') == '12'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\"\n\nfrom typing import List"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, \"Test failed\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 12, \"Expected output 12, got {}\".format(solution())"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12\\n\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([4, 10000, 400000, 500000, 900000]) == 12\nprint(\"All test cases passed\")"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"6 3\\n2 3 4 5 6\") == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"10 5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n\") == \"Impossible\\n\"\nassert solution(\"10 4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n\") == \"5 6 1 2 3\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"10 2\\n1 2 3 4 5 6\") == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''5 6 1 2 3 4'''"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4\\n'\nassert solution('6 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 "
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nprint(\"Correct\")"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 3\\n1 2 3 4 5 6\") == \"Impossible\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Expected 20512, got: \" + solution(\"5 2 8 4\")\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Test 1 failed\"\nassert solution(\"10 5 9 4\") == \"18541\", \"Test 2 failed\"\nassert solution(\"15 25 20 25\") == \"2018012820180128\", \"Test 3 failed\"\nassert solution(\"10 10 10 10\") == \"IMPOSSIBLE\", \"Test 4 failed\"\nassert solution(\"10 10 10 9\") == \"18541\", \"Test 5 failed\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 1 1 1') == 'IMPOSSIBLE'\nassert solution('3 4 5 6') == 'IMPOSSIBLE'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 8 4') == '20512', \"Expected '20512', but got '{}'\".format(solution('5 2 8 4'))\nassert solution('5 2 8 3') == 'IMPOSSIBLE', \"Expected 'IMPOSSIBLE', but got '{}'\".format(solution('5 2 8 3'))\nassert solution('5 2 8 7') == 'IMPOSSIBLE', \"Expected 'IMPOSSIBLE', but got '{}'\".format(solution('5 2 8 7'))\nassert solution('5 2 8 0') == 'IMPOSSIBLE', \"Expected 'IMPOSSIBLE', but got '{}'\".format(solution('5 2 8 0'))\nassert solution('5 2 8 -1') == 'IMPOSSIBLE', \"Expected 'IMPOSSIBLE', but got '{}'\".format(solution('5 2 8 -1'))\nassert solution('5 2 8 10') == 'IMPOSSIBLE', \"Expected 'IMPOSSIBLE', but got '{}'\".format(solution('5 2 8 10'))"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 8 4') == '20512', \"Your solution is incorrect.\"\nassert solution('1000001 500000 100000 999999') == 'IMPOSSIBLE', \"Your solution is incorrect.\"\nassert solution('1000000 000000 000000 000000') == 'IMPOSSIBLE', \"Your solution is incorrect.\"\nassert solution('1 0 0 0') == 'IMPOSSIBLE', \"Your solution is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Test case 1 failed.\"\n\nassert solution(\"10 3 7 4\") == \"IMPOSSIBLE\", \"Test case 2 failed.\"\n\nassert solution(\"10 2 7 4\") == \"IMPOSSIBLE\", \"Test case 3 failed.\"\n\nassert solution(\"5 5 5 5\") == \"55555\", \"Test case 4 failed.\"\n\nassert solution(\"5 2 7 4\") == \"71504\", \"Test case 5 failed.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 8 4') == '20512', \"Test case 1 failed.\"\nassert solution('5 4 8 4') == 'IMPOSSIBLE', \"Test case 2 failed.\"\nassert solution('7 1 8 4') == 'IMPOSSIBLE', \"Test case 3 failed.\"\nassert solution('5 7 8 4') == 'IMPOSSIBLE', \"Test case 4 failed.\"\nassert solution('5 2 7 4') == 'IMPOSSIBLE', \"Test case 5 failed.\"\nassert solution('5 2 8 7') == 'IMPOSSIBLE', \"Test case 6 failed.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Solution not working\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\n\nassert solution(open('sample_input.txt', 'r')) == '2'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 3\nBAC\nABC\n''') == '2'\n\nassert solution('''3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == solution(stdin: str)"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2') == 3\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution for the given input {input()} is {output}, but the expected output is {output}\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"3 4\\n\") == \"10\\n\"\nassert solution(\"5 4\\n\") == \"16\\n\"\nassert solution(\"1 3\\n\") == \"5\\n\"\nassert solution(\"4 3\\n\") == \"16\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"6\\n\"\nassert solution(\"4 5\") == \"12\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\", \"Incorrect output for input 1.\"\n\nassert solution(\"1 2\") == \"3\\n\", \"Incorrect output for input 2.\"\n\nassert solution(\"3 4\") == \"3\\n\", \"Incorrect output for input 3.\"\n\nassert solution(\"5 6\") == \"3\\n\", \"Incorrect output for input 4.\"\n\nassert solution(\"7 8\") == \"3\\n\", \"Incorrect output for input 5.\"\n\nassert solution(\"9 10\") == \"3\\n\", \"Incorrect output for input 6.\"\n\nassert solution(\"11 12\") == \"3\\n\", \"Incorrect output for input 7.\"\n\nassert solution(\"13 14\") == \"3\\n\", \"Incorrect output for input 8.\"\n\nassert solution(\"15 16\") == \"3\\n\", \"Incorrect output for input 9.\"\n\nassert solution(\"17 18\") == \"3\\n\", \"Incorrect output for input 10.\"\n\nassert solution(\"19 20\") == \"3\\n\", \"Incorrect output for input 11.\"\n\nassert solution(\"21 22\") == \"3\\n\", \"Incorrect output for input 12.\"\n\nassert solution(\"23 24\") == \"3\\n\", \"Incorrect output for input 13.\"\n\nassert solution(\"25 26\") == \"3\\n\", \"Incorrect output for input 14.\"\n\nassert solution(\"27 28\") == \"3\\n\", \"Incorrect output for input 15.\"\n\nassert solution(\"29 30\") == \"3\\n\", \"Incorrect output for input 16.\"\n\nassert solution(\"31 32\") == \"3\\n\", \"Incorrect output for input 17.\"\n\nassert solution(\"33 34\") == \"3\\n\", \"Incorrect output for input 18.\"\n\nassert solution(\"35 36\") == \"3\\n\", \"Incorrect output for input 19.\"\n\nassert solution(\"37 38\") == \"3\\n\", \"Incorrect output for input 20.\"\n\nassert solution(\"39 40\") == \"3\\n\", \"Incorrect output for input 21.\"\n\nassert solution(\"41 42\") == \"3\\n\", \"Incorrect output for input 22.\"\n\nassert solution(\"43 44\") == \"3\\n\", \"Incorrect output for input 23.\"\n\nassert solution(\"45 46\") == \"3\\n\", \"Incorrect output for input 24.\"\n\nassert solution(\"47 48\") == \"3\\n\", \"Incorrect output for input 25.\"\n\nassert solution(\"49 50\") == \"3\\n\", \"Incorrect output for input 26.\"\n\nassert solution(\"51 52\") == \"3\\n\", \"Incorrect output for input 27.\"\n\nassert solution(\"53 54\") == \"3\\n\", \"Incorrect output for input 28.\"\n\nassert solution(\"55 56\") == \"3\\n\", \"Incorrect output for input 29.\"\n\nassert solution(\"57 58\") == \"3\\n\", \"Incorrect output for input 30.\"\n\nassert solution(\"59 60\") == \"3\\n\", \"Incorrect output for input 31.\"\n\nassert solution(\"61 62\") == \"3\\n\", \"Incorrect output for input 32.\"\n\nassert solution(\"63 64\") == \"3\\n\", \"Incorrect output for input 33.\"\n\nassert solution(\"65 66\") == \"3\\n\", \"Incorrect output for input 34.\"\n\nassert solution(\"67 68\") == \"3\\n\", \"Incorrect output for input 35.\"\n\nassert solution(\"69 70\") == \"3\\n\", \"Incorrect output for input 36.\"\n\nassert solution(\"71 72\") == \"3\\n\", \"Incorrect output for input 37.\"\n\nassert solution(\"73 74\") == \"3\\n\", \"Incorrect output for input 38.\"\n\nassert solution(\"75 76\") == \"3\\n\", \"Incorrect output for input 39.\"\n\nassert solution(\"77 78\") == \"3\\n\", \"Incorrect output for input 40.\"\n\nassert solution(\"79 80\") =="
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"3\"\nassert solution(\"4 5\\n\") == \"6\"\nassert solution(\"6 7\\n\") == \"9\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"10 10\\n\") == \"40\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 4\") == \"28\"\nassert solution(\"3 3\") == \"15\"\nassert solution(\"5 4\") == \"252\"\nassert solution(\"6 5\") == \"1070\"\nassert solution(\"7 6\") == \"65280\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"Your solution should return '3'.\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '3', \"The given input does not match the expected output.\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"The output is incorrect\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3', 'Your solution is incorrect.'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {index+1} failed: Expected output '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected output {output_str}\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3\n    ''') == 3, \"The solution does not work correctly for the given input.\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('3\\n2\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('3\\n2\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('3\\n2\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('3\\n2\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('1 1\\n1 2\\n2 1\\n1 2\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('1 1\\n1 2\\n2 1\\n1 2\\n2 2\\n3 1\\n3 2\\n3') == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'YES'\nassert solution(2) == 'NO'\nassert solution(3) == 'NO'\nassert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(6) == 'NO'\nassert solution(7) == 'NO'\nassert solution(8) == 'YES'\nassert solution(9) == 'YES'\nassert solution(10) == 'YES'\nassert solution(11) == 'NO'\nassert solution(12) == 'YES'\nassert solution(13) == 'NO'\nassert solution(14) == 'YES'\nassert solution(15) == 'YES'\nassert solution(16) == 'YES'\nassert solution(17) == 'YES'\nassert solution(18) == 'YES'\nassert solution(19) == 'YES'\nassert solution(20) == 'YES'\nassert solution(21) == 'NO'\nassert solution(22) == 'YES'\nassert solution(23) == 'NO'\nassert solution(24) == 'YES'\nassert solution(25) == 'YES'\nassert solution(26) == 'YES'\nassert solution(27) == 'YES'\nassert solution(28) == 'NO'\nassert solution(29) == 'YES'\nassert solution(30) == 'NO'\nassert solution(31) == 'NO'\nassert solution(32) == 'YES'\nassert solution(33) == 'YES'\nassert solution(34) == 'YES'\nassert solution(35) == 'YES'\nassert solution(36) == 'YES'\nassert solution(37) == 'YES'\nassert solution(38) == 'NO'\nassert solution(39) == 'YES'\nassert solution(40) == 'YES'\nassert solution(41) == 'YES'\nassert solution(42) == 'YES'\nassert solution(43) == 'NO'\nassert solution(44) == 'YES'\nassert solution(45) == 'YES'\nassert solution(46) == 'YES'\nassert solution(47) == 'YES'\nassert solution(48) == 'YES'\nassert solution(49) == 'YES'\nassert solution(50) == 'YES'\nassert solution(51) == 'NO'\nassert solution(52) == 'YES'\nassert solution(53) == 'YES'\nassert solution(54) == 'YES'\nassert solution(55) == 'YES'\nassert solution(56) == 'YES'\nassert solution(57) == 'YES'\nassert solution(58) == 'YES'\nassert solution(59) == 'NO'\nassert solution(60) == 'YES'\nassert solution(61) == 'YES'\nassert solution(62) == 'YES'\nassert solution(63) == 'YES'\nassert solution(64) == 'YES'\nassert solution(65) == 'YES'\nassert solution(66) == 'YES'\nassert solution(67) == 'YES'\nassert solution(68) == 'NO'\nassert solution(69) == 'YES'\nassert solution(70) == 'YES'\nassert solution(71) == 'YES'\nassert solution(72) == 'YES'\nassert solution(73) == 'YES'\nassert solution(74) == 'YES'\nassert solution(75) == 'YES'\nassert solution(76) == 'YES'\nassert solution(77) == 'YES'\nassert solution(78) == 'YES'\nassert solution(79) == 'NO'\nassert solution(80) == 'YES'\nassert solution(81) == 'YES'\nassert solution(82) == 'YES'\nassert solution(83) == 'YES'\nassert solution(84) == 'YES'\nassert solution(85) == 'YES'\nassert solution(86) == 'YES'\nassert solution(87) == 'YES'\nassert solution(88) == 'YES'\nassert solution(89) == 'YES'\nassert solution(90) == 'NO'\nassert solution(91) == 'YES'\nassert solution(92) == 'YES'\nassert solution(93) == 'YES'\nassert solution(94) == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES\\nNO'\nassert solution('10\\n4\\n1 1\\n1 2\\n2 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 'YES\\nNO'\nassert solution('1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'YES'\nassert solution(\"4\\n3\\n1 1\\n1 2\\n2 1\\n2 2\") == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(stdin=\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n') == 'YES'\nassert solution('2\\n10\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n\\n1 1\\n1 2\\n2 1\\n') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'YES'\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'NO'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n') == '3.000000000\\n'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output: {output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '3.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == '3.000000000'  # expected output: 3.000000000"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '3.000000000\\n'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('3') == '3.000000000'\nassert solution('4') == '4.000000000'\nassert solution('5') == '5.000000000'\nassert solution('6') == '6.000000000'\nassert solution('7') == '6.000000000'\nassert solution('8') == '7.000000000'\nassert solution('9') == '7.000000000'\nassert solution('10') == '7.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3.000000000', 'Expected output: 3.000000000\\n'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '3.000000000'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\nActual output: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n'  # expected output: 1\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3\") == 1\nassert solution(\"1 2\\n4 5\") == 2\nassert solution(\"2 3\\n4 5 6\") == 1\nassert solution(\"3 4\\n5 6 7\") == 1\nassert solution(\"4 5\\n6 7 8\") == 1\nassert solution(\"5 6\\n7 8 9\") == 1\nassert solution(\"6 7\\n8 9 10\") == 1\nassert solution(\"7 8\\n9 10 11\") == 1\nassert solution(\"8 9\\n10 11 12\") == 1\nassert solution(\"9 10\\n11 12 13\") == 1\nassert solution(\"10 11\\n12 13 14\") == 1\nassert solution(\"11 12\\n13 14 15\") == 1\nassert solution(\"12 13\\n14 15 16\") == 1\nassert solution(\"13 14\\n15 16 17\") == 1\nassert solution(\"14 15\\n16 17 18\") == 1\nassert solution(\"15 16\\n17 18 19\") == 1\nassert solution(\"16 17\\n18 19 20\") == 1\nassert solution(\"17 18\\n19 20 21\") == 1\nassert solution(\"18 19\\n20 21 22\") == 1\nassert solution(\"19 20\\n21 22 23\") == 1\nassert solution(\"20 21\\n22 23 24\") == 1\nassert solution(\"21 22\\n23 24 25\") == 1\nassert solution(\"22 23\\n24 25 26\") == 1\nassert solution(\"23 24\\n25 26 27\") == 1\nassert solution(\"24 25\\n26 27 28\") == 1\nassert solution(\"25 26\\n27 28 29\") == 1\nassert solution(\"26 27\\n28 29 30\") == 1\nassert solution(\"27 28\\n29 30 31\") == 1\nassert solution(\"28 29\\n30 31 32\") == 1\nassert solution(\"29 30\\n31 32 33\") == 1\nassert solution(\"30 31\\n32 33 34\") == 1\nassert solution(\"31 32\\n33 34 35\") == 1\nassert solution(\"32 33\\n34 35 36\") == 1\nassert solution(\"33 34\\n35 36 37\") == 1\nassert solution(\"34 35\\n36 37 38\") == 1\nassert solution(\"35 36\\n37 38 39\") == 1\nassert solution(\"36 37\\n38 39 40\") == 1\nassert solution(\"37 38\\n39 40 41\") == 1\nassert solution(\"38 39\\n40 41 42\") == 1\nassert solution(\"39 40\\n41 42 43\") == 1\nassert solution(\"40 41\\n42 43 44\") == 1\nassert solution(\"41 42\\n43 44 45\") == 1\nassert solution(\"42 43\\n44 45 46\") == 1\nassert solution(\"43 44\\n45 46 47\") == 1\nassert solution(\"44 45\\n46 47 48\") == 1\nassert solution(\"45 46\\n47 48 49\") == 1\nassert solution(\"46 47\\n48 4"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3') == 1\nassert solution('2 3\\n1 2') == 2\nassert solution('3 1\\n1 2 3') == 3\nassert solution('2 4\\n1 2 3 4') == 4\nassert solution('4 2\\n1 2 3 4 5') == 5\nassert solution('5 4\\n1 2 3 4 5 6') == 6\nassert solution('6 5\\n1 2 3 4 5 6 7') == 7\nassert solution('7 6\\n1 2 3 4 5 6 7 8') == 8\nassert solution('8 7\\n1 2 3 4 5 6 7 8 9') == 9\nassert solution('9 8\\n1 2 3 4 5 6 7 8 9 10') == 10\nassert solution('10 9\\n1 2 3 4 5 6 7 8 9 10 11') == 11\nassert solution('11 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == 12\nassert solution('12 11\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == 13\nassert solution('13 12\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14') == 14\nassert solution('14 13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == 15\nassert solution('15 14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == 16\nassert solution('16 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == 17\nassert solution('17 16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == 18\nassert solution('18 17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == 19\nassert solution('19 18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 20\nassert solution('20 19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == 21\nassert solution('21 20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == 22\nassert solution('22 21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23') == 23\nassert solution('23 22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '3'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '1'\nassert solution(5) == '1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n2\\n3\\n1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n2\\n3\\n1\\n', \"Test 1\"\nassert solution(stdin) == '3\\n2\\n3\\n1\\n', \"Test 2\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    3 4 5\n    1 3 4\n    0 2 2 3 2\n    1 3 2\n    1 2 4\n    1 1 4\n    '''\n) == '3\\n2\\n3\\n1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"1 2 1\\n1 1 1\\n1 1 1\") == \"1\\n1\\n1\"\nassert solution(\"1 2 2\\n1 1 1\\n1 1 1\") == \"1\\n1\\n1\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r\"Test data starts with the number $0 \\le N \\le 100\\n\nAfter the fragments in the repository have all been listed, comes the actual code snippet to find matches for.\\n\nLines are guaranteed to be no longer than $254$ characters.\\n\nNo code fragment will be longer than $10000$ lines.\\n\nAny code and file name lines will only contain the ASCII characters 32-126.\\n\nThe total size of the input file will not exceed $10^6$ characters.\") == 2\nassert solution(stdin=r\"2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\") == 2\nassert solution(stdin=r\"Test data starts with the number $0 \\le N \\le 100\\n\nAfter the fragments in the repository have all been listed, comes the actual code snippet to find matches for.\\n\nLines are guaranteed to be no longer than $254$ characters.\\n\nNo code fragment will be longer than $10000$ lines.\\n\nAny code and file name lines will only contain the ASCII characters 32-126.\\n\nThe total size of the input file will not exceed $10^6$ characters.\") == 0\nassert solution(stdin=r\"1\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\") == 0"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(data) == [\"2 HelloWorld.c\", \"def solution(stdin: str) -> str: pass\"]"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"int Main() { printf(\\\"Hello %d\\\", i); }\") == \"2 HelloWorld.c\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\", i); } ***END***\") == \"2 HelloWorld.c\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\", i); } The End ***END***\") == \"0\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\", i); } The End ***END***\") == \"0\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"3 3\"\nassert solution(stdin) == \"2 3\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HelloWorld.c\") == \"HelloWorld.c\"\nassert solution(\"Add.c\") == \"Add.c\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }***END***\\n\") == \"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }***END***\\nint Main() { printf(\\\"The END\\\\n\\\"); }***END***\") == \"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }***END***\\n\") == \"0\"\nassert solution(\"int Main() { printf(\\\"Hello %d\\\\n\\\", i); }***END***\\nint Main() { printf(\\\"The END\\\\n\\\"); }***END***\\n\") == \"0\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the code snippet: \")) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(input(\"Enter the code snippet: \")) == \"Add.c\\nint Main() { for (int i=0; i<10; i++) sum += i; printf(\\\"SUM %d\\\", sum); }\\n\"\nassert solution(input(\"Enter the code snippet: \")) == \"int Main() { printf(\\\"Hello %d\\\\n\\\", i); printf(\\\"THE END\\\\n\\\"); }\\n\"\nassert solution(input(\"Enter the code snippet: \")) == \"0\\n\"\nassert solution(input(\"Enter the code snippet: \")) == \"0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\\n0'\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(test_input) == \"2 2 1 1\"\nassert solution(test_input2) == \"0\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"10 10\\n1 1 1\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n1 1 1\\n2 2 2\\n4 2 1\\n4 4 1\") == \"2\\n2\\n1\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 3\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\nassert solution(\"5 5\\n5 5 5\\n5 5 5\\n5 5 5\\n5 5 5\") == \"1\\n2\\n2\\n2\\n3\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == \"1\\n2\\n2\\n2\"\nassert solution(4, 2, 1, 4, 2, 1) == \"1\\n2\\n2\\n2\"\nassert solution(3, 3) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '1\\n2\\n2\\n2\\n'\nassert solution('''2 4 1\n3 2 3\n4 1 2\n5 3 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 1 2\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''5 3 2\n4 1 2\n3 2 3\n2 1 4''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 3\n2 2 1\n4 4 1\n4 2 1''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 4 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1 4\n1 5 3''') == '1\\n2\\n2\\n2\\n'\nassert solution('''3 2 3\n2 1 4\n1 5 3\n4 1 2''') == '1\\n2\\n2\\n2\\n'\nassert solution('''4 2 1\n3 2 3\n2 1"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\"\nassert solution(\"3 4\\n1 1 1\\n2 1 1\\n3 2 1\") == \"1\\n2\\n2\\n\"\nassert solution(\"3 5\\n1 2 2\\n2 1 1\\n3 3 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Output mismatch: got '{solution(input())}', expected '{output}'\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 20\\n50 70"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\nassert solution(\"3 10\\n50 60 30\\n100 80 20\\n150 90 18\") == \"10\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution.__doc__ == \"\"\"\nWrite 5 lines of code to test the correctness of solution:\nYou are developing software to stream music to users over the Interwebs. In order to reduce network traffic for your servers, you plan to do this in a peer-to-peer way: a user who has listened to a given song for a while longer than some other user will have parts of the song that the second user needs and can send them to her directly. \n\nIt is now time to develop the logic to decide which users should send which data to which other users. At a high level, the logic works as follows. Each second, the data available at the different users listening to a song is examined. Based on this, the system decides what data users should transmit, and to whom.\n\nTo be specific, suppose there are $n$ users currently listening to the song. The $i$\u2019th user\u2019s playback is currently at the $p_ i$\u2019th byte of the song, and has already received the first $b_ i \\ge p_ i$ bytes of the song, and no other parts of the song. Furthermore, each user has a bandwidth $u_ i$ bounding how many bytes she can upload in total to other users during the one second interval. After one second, each user\u2019s playback will be $C$ bytes further, i.e., the $i$\u2019th user will be at byte $p_ i + C$. Each user now has the first $b_ i\u2019$ bytes of the song, where $b_ i\u2019$ depends exactly on what data was received from other users during the second. Thus, after the one second interval, the buffer that the $i$\u2019th user has is $b_ i\u2019 - (p_ i + C)$ bytes. During the one second interval, a user can only upload data that she had before the interval started (i.e., from the first $b_ i$ bytes of the song). A user can send data to any number of other users, but in order to send a piece of data to several users it needs to be sent to each user individually.\n\nIn order to minimize the risk for jitter, the system should make sure that each user\u2019s buffer is as large as possible. Specifically, the goal is to make sure that after the second has passed, the minimum buffer size $b_ i\u2019-(p_ i+C)$ is as large as possible. Note that it may be the case that this value is negative, indicating that it is impossible to avoid that some user runs out of buffer during the one second interval.\n\nFor simplicity, we\u2019ll assume that this takes place on the Interwebs of an alternate reality where upload speeds are completely captured by the $u_ i$ parameters (e.g., they do not depend on where the data is being uploaded to), and there are no such things as packet losses, slow ping times, or anything else that might make the idealized situation described here unrealistic.\n\n-----Input-----\nThe first line of input contains two integers $n$ ($1 \\le n \\le 50000$) and $C$ ($1 \\le C \\le 10^9$). Then follow $n$ lines. The $i$\u2019th of these lines contains the three integers $p_ i$, $b_ i$, $u_ i$ with meanings as described above. You may assume that $0 \\le p_ i \\le b_ i \\le 10^9$, and $0 \\le u_ i \\le 10^9$.Warning\n\nThis problem has somewhat large amounts of input. We recommend you to make sure that your input is properly buffered in order to make the most of the few seconds of execution time that we give you.\n\n-----Output-----\nOutput a single line containing an integer $B$, the maximum possible smallest buffer size after one second.\n\n-----Examples-----\nSample Input:\n3 20\n50 70 10\n100 110 4\n150 190 16\nSample Output:\n5\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n    2 5\n    2 4\n    2 3\n    2 2\n    2 1\n    2 0\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    2 7\n    2 8\n    2 9\n    2 10\n    2 11\n    2 12\n    2 13\n    2 14\n    2 15\n    2 16\n    2 17\n    2 18\n    2 19\n    2 20\n    2 21\n    2 22\n    2 23\n    2 24\n    2 25\n    2 26\n    2 27\n    2 28\n    2 29\n    2 30\n    2 31\n    2 32\n    2 33\n    2 34\n    2 35\n    2 36\n    2 37\n    2 38\n    2 39\n    2 40\n    2 41\n    2 42\n    2 43\n    2 44\n    2 45\n    2 46\n    2 47\n    2 48\n    2 49\n    2 50\n    2 51\n    2 52\n    2 53\n    2 54\n    2 55\n    2 56\n    2 57\n    2 58\n    2 59\n    2 60\n    2 61\n    2 62\n    2 63\n    2 64\n    2 65\n    2 66\n    2 67\n    2 68\n    2 69\n    2 70\n    2 71\n    2 72\n    2 73\n    2 74\n    2 75\n    2 76\n    2 77\n    2 78\n    2 79\n    2 80\n    2 81\n    2 82\n    2 83\n    2 84\n    2 85\n    2 86\n    2 87\n    2 88\n    2 89\n    2 90\n    2 91\n    2 92\n    2 93\n    2 94\n    2 95\n    2 96\n    2 97\n    2 98\n    2 99\n    2 100\n    2 101\n    2 102\n    2 103\n    2 104\n    2 105\n    2 106\n    2 107\n    2 108\n    2 109\n    2 110\n    2 111\n    2 112\n    2 113\n    2 114\n    2 115\n    2 116\n    2 117\n    2 118\n    2 119\n    2 120\n    2 121\n    2 122\n    2 123\n    2 124\n    2 125\n    2 126\n    2 127\n    2 128\n    2 129\n    2 130\n    2 131\n    2 132\n    2 133\n    2 134\n    2 135\n    2 136\n    2 137\n    2 138\n    2 139\n    2 140\n    2 141\n    2 142\n    2 143\n    2 144\n    2 145\n    2 146\n    2 147\n    2 148\n    2 149\n    2 150\n    2 151\n    2 152\n    2 153\n    2 154\n    2 155\n    2 156\n    2 157\n    2 158\n    2 159\n    2 160\n    2 161\n    2 162\n    2 163\n    2 164\n    2 165\n    2 166\n    2 167\n    2 168\n    2 169\n    2 170\n    2 171\n    2 172\n    2 173\n    2 174\n    2 175\n    2 176\n    2 177\n    2 178\n    2 179\n    2 180\n    2 181\n    2 182\n    2 183\n    2 18"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(2 5) (5 3).....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 5\n    2 5\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    1 12\n    1 13\n    1 14\n    1 15\n    1 16\n    1 17\n    1 18\n    1 19\n    1 20\n    1 21\n    1 22\n    1 23\n    1 24\n    1 25\n    1 26\n    1 27\n    1 28\n    1 29\n    1 30\n    1 31\n    1 32\n    1 33\n    1 34\n    1 35\n    1 36\n    1 37\n    1 38\n    1 39\n    1 40\n    1 41\n    1 42\n    1 43\n    1 44\n    1 45\n    1 46\n    1 47\n    1 48\n    1 49\n    1 50\n    1 51\n    1 52\n    1 53\n    1 54\n    1 55\n    1 56\n    1 57\n    1 58\n    1 59\n    1 60\n    1 61\n    1 62\n    1 63\n    1 64\n    1 65\n    1 66\n    1 67\n    1 68\n    1 69\n    1 70\n    1 71\n    1 72\n    1 73\n    1 74\n    1 75\n    1 76\n    1 77\n    1 78\n    1 79\n    1 80\n    1 81\n    1 82\n    1 83\n    1 84\n    1 85\n    1 86\n    1 87\n    1 88\n    1 89\n    1 90\n    1 91\n    1 92\n    1 93\n    1 94\n    1 95\n    1 96\n    1 97\n    1 98\n    1 99\n    1 100\n    1 101\n    1 102\n    1 103\n    1 104\n    1 105\n    1 106\n    1 107\n    1 108\n    1 109\n    1 110\n    1 111\n    1 112\n    1 113\n    1 114\n    1 115\n    1 116\n    1 117\n    1 118\n    1 119\n    1 120\n    1 121\n    1 122\n    1 123\n    1 124\n    1 125\n    1 126\n    1 127\n    1 128\n    1 129\n    1 130\n    1 131\n    1 132\n    1 133\n    1 134\n    1 135\n    1 136\n    1 137\n    1 138\n    1 139\n    1 140\n    1 141\n    1 142\n    1 143\n    1 144\n    1 145\n    1 146\n    1 147\n    1 148\n    1 149\n    1 150\n    1 151\n    1 152\n    1 153\n    1 154\n    1 155\n    1 156\n    1 157\n    1 158\n    1 159\n    1 160\n    1 161\n    1 162\n    1 163\n    1 164\n    1 165\n    1 166\n    1 167\n    1 168\n    1 169\n    1 170\n    1 171\n    1 172\n    1 173\n    1 174\n    1 175\n    1 176\n    1 177\n    1 178\n    1 179\n    1 180\n    1 181\n    1 182\n    1 183\n    1 184\n    1 185\n    1 186\n    1 187\n    "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\nassert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.## \\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\nIMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n\"\"\") == \"26\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"26\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\nIMPOSSIBLE'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"success\", \"Your code is not correct!\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test {test_case} failed\" for test_case in range(1, 11)"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"failure\", \"Expected failure, but got success.\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'possible'\n\nassert solution('''\n1 1 1\n1 2 1\n2 2 1\n2 1 2\n''') == 'impossible'\n\nassert solution('''\n2 1 1\n1 1 2\n2 1 2\n1 2 2\n''') == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed: {solution(input_str)}!= {expected_output}\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n6 6') == 'impossible'\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n0') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''possible'''"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"4 3\\n1 1 2\\n2 2 3\\n3 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"10 5\\n1 1 2\\n2 2 3\\n3 3 1\\n4 1 2\\n5 2 3\\n1 3 4\\n2 4 3\\n3 3 1\\n4 4 3\\n5 5 1\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\") == \"3\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == 0"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0\\n'\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 5\\n1 1 1 1 1\\n2 1 1 1 1\\n3 1 1 1 1\\n4 1 1 1 1\") == \"2\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 2 2\") == \"2\\n\"\n\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output: 0\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\"\n) == \"0\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, Received output: {solution()}\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n353\\n') == '3\\n353\\n'\nassert solution('4 2\\n1234\\n') == '4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n353\"\nassert solution() == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12 30 45 3 11') == \"NO\"\nassert solution('12 0 1 12 1') == \"YES\"\nassert solution('3 47 0 4 9') == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Expected 'NO', got '{}' instead.\".format(solution(\"12 30 45 3 11\"))\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Expected 'YES', got '{}' instead.\".format(solution(\"12 0 1 12 1\"))\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Expected 'YES', got '{}' instead.\".format(solution(\"3 47 0 4 9\"))\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\\n\"\n\nprint(\"All tests pass\")"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\n\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\n\nassert solution('''1 1 2 3 1 0\n2 2 1''') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == 3\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == 2\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == 0\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\\n\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\\n\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\\n\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\\n\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\\n\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\\n\") == \"0\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4\\n'\n\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '6\\n'\n\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == '4\\n'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == '6\\n'\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"4\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\\n\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\\n\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '6'\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution is incorrect. Expected '{solution_output}', but got '{solution(solution_input)}'.\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"0 0 6 0 6 6 0 6\n    1 3 3 5 5 3 3 1\"\"\"\n) == \"YES\\n\"\n\nassert solution(\n    \"\"\"0 0 6 0 6 6 0 6\n    7 3 9 5 11 3 9 1\"\"\"\n) == \"NO\\n\"\n\nassert solution(\n    \"\"\"6 0 6 6 0 6 0 0\n    7 4 4 7 7 10 10 7\"\"\"\n) == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES\\n', 'Sample Case 1'\n\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO\\n', 'Sample Case 2'\n\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES\\n', 'Sample Case 3'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\"\"\") == \"YES\"\nassert solution(\"\"\"0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\"\"\") == \"NO\"\nassert solution(\"\"\"6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\"\"\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n\"\"\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES\\n'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO\\n'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES\\n'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\"\nassert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n2 0\\n\") == \"cslnb\"\nassert solution(\"1\\n3 2\\n\") == \"sjfnb\"\nassert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n2 0\\n\") == \"cslnb\"\nassert solution(\"1\\n3 2\\n\") == \"sjfnb\"\nassert solution(\"1\\n0\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) =='sjfnb'\nassert solution(input()) == 'cslnb'\nassert solution(input()) =='sjfnb'\nassert solution(input()) == 'cslnb'\nassert solution(input()) =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"cslnb\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"sjfnb\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"cslnb\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"sjfnb\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"cslnb\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"sjfnb\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\\n\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\\n\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\\n\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. The expected output is {output}, but the actual output is {solution(input())}.\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n\\n1 1\\n1\\n\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\\n1 1\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5 3') == '2\\n'\nassert solution('1 2') == '1\\n'\nassert solution('1 1') == '0\\n'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2\\n'\nassert solution('1 2\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n') == '0\\n'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\") == 2\nassert solution(\"1 2\\n1\") == 1\nassert solution(\"1 1\\n1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == [1, 0, 1]\nassert solution(2) == [-1, 0, 1]\n\nprint(-1)"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(2) == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(3) == \"3\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(4) == \"4\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(5) == \"5\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(6) == \"6\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(7) == \"7\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(8) == \"8\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(9) == \"9\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(10) == \"10\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(11) == \"11\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(12) == \"12\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(13) == \"13\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(14) == \"14\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(15) == \"15\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(16) == \"16\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(17) == \"17\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(18) == \"18\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(19) == \"19\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(20) == \"20\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(21) == \"21\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(22) == \"22\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(23) == \"23\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(24) == \"24\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(25) == \"25\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(26) == \"26\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(27) == \"27\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(28) == \"28\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(29) == \"29\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(30) == \"30\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(31) == \"31\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(32) == \"32\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(33) == \"33\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(34) == \"34\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(35) == \"35\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 0\nassert solution('4') == 0\nassert solution('5') == 1\nassert solution('6') == 0\nassert solution('7') == -1\nassert solution('8') == 0\nassert solution('9') == 0\nassert solution('10') == -1\nassert solution('11') == 0\nassert solution('12') == 0\nassert solution('13') == 0\nassert solution('14') == 0\nassert solution('15') == -1\nassert solution('16') == 0\nassert solution('17') == 0\nassert solution('18') == 0\nassert solution('19') == 0\nassert solution('20') == -1\nassert solution('21') == 0\nassert solution('22') == 0\nassert solution('23') == 0\nassert solution('24') == 0\nassert solution('25') == -1\nassert solution('26') == 0\nassert solution('27') == 0\nassert solution('28') == 0\nassert solution('29') == 0\nassert solution('30') == -1\nassert solution('31') == 0\nassert solution('32') == 0\nassert solution('33') == 0\nassert solution('34') == 0\nassert solution('35') == -1\nassert solution('36') == 0\nassert solution('37') == 0\nassert solution('38') == 0\nassert solution('39') == 0\nassert solution('40') == -1\nassert solution('41') == 0\nassert solution('42') == 0\nassert solution('43') == 0\nassert solution('44') == 0\nassert solution('45') == -1\nassert solution('46') == 0\nassert solution('47') == 0\nassert solution('48') == 0\nassert solution('49') == 0\nassert solution('50') == -1\nassert solution('51') == 0\nassert solution('52') == 0\nassert solution('53') == 0\nassert solution('54') == 0\nassert solution('55') == -1\nassert solution('56') == 0\nassert solution('57') == 0\nassert solution('58') == 0\nassert solution('59') == 0\nassert solution('60') == -1\nassert solution('61') == 0\nassert solution('62') == 0\nassert solution('63') == 0\nassert solution('64') == 0\nassert solution('65') == -1\nassert solution('66') == 0\nassert solution('67') == 0\nassert solution('68') == 0\nassert solution('69') == 0\nassert solution('70') == -1\nassert solution('71') == 0\nassert solution('72') == 0\nassert solution('73') == 0\nassert solution('74') == 0\nassert solution('75') == -1\nassert solution('76') == 0\nassert solution('77') == 0\nassert solution('78') == 0\nassert solution('79') == 0\nassert solution('80') == -1\nassert solution('81') == 0\nassert solution('82') == 0\nassert solution('83') == 0\nassert solution('84') == 0\nassert solution('85') == -1\nassert solution('86') == 0\nassert solution('87') == 0\nassert solution('88') == 0\nassert solution('89') == 0\nassert solution('90') == -1\nassert solution('91') == 0\nassert solution('92') == 0\nassert solution('93') == 0\nassert solution('94') == 0\nassert solution('95') == -1\nassert solution('96') == 0\nassert solution('97') == 0\nassert solution('98') == 0\nassert solution('99') == 0\nassert solution('100') == -1\nassert solution('101') == 0\nassert solution('102') == 0\nassert solution('103') == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\"\nassert solution(3) == \"-1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 4\nassert solution(8) == 4\nassert solution(9) == 5\nassert solution(10) == 5\nassert solution(11) == 6\nassert solution(12) == 6\nassert solution(13) == 7\nassert solution(14) == 7\nassert solution(15) == 8\nassert solution(16) == 8\nassert solution(17) == 9\nassert solution(18) == 9\nassert solution(19) == 10\nassert solution(20) == 10\nassert solution(21) == 11\nassert solution(22) == 11\nassert solution(23) == 12\nassert solution(24) == 12\nassert solution(25) == 13\nassert solution(26) == 13\nassert solution(27) == 14\nassert solution(28) == 14\nassert solution(29) == 15\nassert solution(30) == 15\nassert solution(31) == -1\nassert solution(32) == -1\nassert solution(33) == -1\nassert solution(34) == -1\nassert solution(35) == -1\nassert solution(36) == -1\nassert solution(37) == -1\nassert solution(38) == -1\nassert solution(39) == -1\nassert solution(40) == -1\nassert solution(41) == -1\nassert solution(42) == -1\nassert solution(43) == -1\nassert solution(44) == -1\nassert solution(45) == -1\nassert solution(46) == -1\nassert solution(47) == -1\nassert solution(48) == -1\nassert solution(49) == -1\nassert solution(50) == -1\nassert solution(51) == -1\nassert solution(52) == -1\nassert solution(53) == -1\nassert solution(54) == -1\nassert solution(55) == -1\nassert solution(56) == -1\nassert solution(57) == -1\nassert solution(58) == -1\nassert solution(59) == -1\nassert solution(60) == -1\nassert solution(61) == -1\nassert solution(62) == -1\nassert solution(63) == -1\nassert solution(64) == -1\nassert solution(65) == -1\nassert solution(66) == -1\nassert solution(67) == -1\nassert solution(68) == -1\nassert solution(69) == -1\nassert solution(70) == -1\nassert solution(71) == -1\nassert solution(72) == -1\nassert solution(73) == -1\nassert solution(74) == -1\nassert solution(75) == -1\nassert solution(76) == -1\nassert solution(77) == -1\nassert solution(78) == -1\nassert solution(79) == -1\nassert solution(80) == -1\nassert solution(81) == -1\nassert solution(82) == -1\nassert solution(83) == -1\nassert solution(84) == -1\nassert solution(85) == -1\nassert solution(86) == -1\nassert solution(87) == -1\nassert solution(88) == -1\nassert solution(89) == -1\nassert solution(90) == -1\nassert solution(91) == -1\nassert solution(92) == -1\nassert solution(93) == -1\nassert solution(94) == -1\nassert solution(95) == -1\nassert solution(96) == -1\nassert solution(97) == -1\nassert solution(98) == -1\nassert solution(99) == -1\nassert solution(100) == -1\nassert solution(101) == -1\nassert solution(102) == -1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('7') == '1'\nassert solution('8') == '-1'\nassert solution('9') == '-1'\nassert solution('10') == '0'\nassert solution('11') == '0'\nassert solution('12') == '0'\nassert solution('13') == '0'\nassert solution('14') == '-1'\nassert solution('15') == '0'\nassert solution('16') == '0'\nassert solution('17') == '0'\nassert solution('18') == '0'\nassert solution('19') == '0'\nassert solution('20') == '0'\nassert solution('21') == '0'\nassert solution('22') == '0'\nassert solution('23') == '0'\nassert solution('24') == '0'\nassert solution('25') == '0'\nassert solution('26') == '0'\nassert solution('27') == '0'\nassert solution('28') == '0'\nassert solution('29') == '0'\nassert solution('30') == '0'\nassert solution('31') == '0'\nassert solution('32') == '0'\nassert solution('33') == '0'\nassert solution('34') == '0'\nassert solution('35') == '0'\nassert solution('36') == '0'\nassert solution('37') == '0'\nassert solution('38') == '0'\nassert solution('39') == '0'\nassert solution('40') == '0'\nassert solution('41') == '0'\nassert solution('42') == '0'\nassert solution('43') == '0'\nassert solution('44') == '0'\nassert solution('45') == '0'\nassert solution('46') == '0'\nassert solution('47') == '0'\nassert solution('48') == '0'\nassert solution('49') == '0'\nassert solution('50') == '0'\nassert solution('51') == '0'\nassert solution('52') == '0'\nassert solution('53') == '0'\nassert solution('54') == '0'\nassert solution('55') == '0'\nassert solution('56') == '0'\nassert solution('57') == '0'\nassert solution('58') == '0'\nassert solution('59') == '0'\nassert solution('60') == '0'\nassert solution('61') == '0'\nassert solution('62') == '0'\nassert solution('63') == '0'\nassert solution('64') == '0'\nassert solution('65') == '0'\nassert solution('66') == '0'\nassert solution('67') == '0'\nassert solution('68') == '0'\nassert solution('69') == '0'\nassert solution('70') == '0'\nassert solution('71') == '0'\nassert solution('72') == '0'\nassert solution('73') == '0'\nassert solution('74') == '0'\nassert solution('75') == '0'\nassert solution('76') == '0'\nassert solution('77') == '0'\nassert solution('78') == '0'\nassert solution('79') == '0'\nassert solution('80') == '0'\nassert solution('81') == '0'\nassert solution('82') == '0'\nassert solution('83') == '0'\nassert solution('84') == '0'\nassert solution('85') == '0'\nassert solution('86') == '0'\nassert solution('87') == '0'\nassert solution('88') == '0'\nassert solution('89') == '0'\nassert solution('90') == '0'\nassert solution('91') == '0'\nassert solution('92') == '0'\nassert solution('93') == '0'\nassert solution('94') == '0'\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0 1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"0 1\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"0 1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12\") == \"0 1\"\nassert solution(\"13\") == \"0\"\nassert solution(\"14\") == \"0 1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"0 1\"\nassert solution(\"17\") == \"0\"\nassert solution(\"18\") == \"0 1\"\nassert solution(\"19\") == \"1\"\nassert solution(\"20\") == \"0 1\"\nassert solution(\"21\") == \"0\"\nassert solution(\"22\") == \"0 1\"\nassert solution(\"23\") == \"1\"\nassert solution(\"24\") == \"0 1\"\nassert solution(\"25\") == \"0\"\nassert solution(\"26\") == \"0 1\"\nassert solution(\"27\") == \"1\"\nassert solution(\"28\") == \"0 1\"\nassert solution(\"29\") == \"0\"\nassert solution(\"30\") == \"0 1\"\nassert solution(\"31\") == \"1\"\nassert solution(\"32\") == \"0 1\"\nassert solution(\"33\") == \"0\"\nassert solution(\"34\") == \"0 1\"\nassert solution(\"35\") == \"1\"\nassert solution(\"36\") == \"0 1\"\nassert solution(\"37\") == \"0\"\nassert solution(\"38\") == \"0 1\"\nassert solution(\"39\") == \"1\"\nassert solution(\"40\") == \"0 1\"\nassert solution(\"41\") == \"0\"\nassert solution(\"42\") == \"0 1\"\nassert solution(\"43\") == \"1\"\nassert solution(\"44\") == \"0 1\"\nassert solution(\"45\") == \"0\"\nassert solution(\"46\") == \"0 1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"48\") == \"0 1\"\nassert solution(\"49\") == \"0\"\nassert solution(\"50\") == \"0 1\"\nassert solution(\"51\") == \"1\"\nassert solution(\"52\") == \"0 1\"\nassert solution(\"53\") == \"0\"\nassert solution(\"54\") == \"0 1\"\nassert solution(\"55\") == \"1\"\nassert solution(\"56\") == \"0 1\"\nassert solution(\"57\") == \"0\"\nassert solution(\"58\") == \"0 1\"\nassert solution(\"59\") == \"1\"\nassert solution(\"60\") == \"0 1\"\nassert solution(\"61\") == \"0\"\nassert solution(\"62\") == \"0 1\"\nassert solution(\"63\") == \"1\"\nassert solution(\"64\") == \"0 1\"\nassert solution(\"65\") == \"0\"\nassert solution(\"66\") == \"0 1\"\nassert solution(\"67\") == \"1\"\nassert solution(\"68\") == \"0 1\"\nassert solution(\"69\") == \"0\"\nassert solution(\"70\") == \"0 1\"\nassert solution(\"71\") == \"1\"\nassert solution(\"72\") == \"0 1\"\nassert solution(\"73\") == \"0\"\nassert solution(\"74\") == \"0 1\"\nassert solution(\"75\") == \"1\"\nassert solution(\"76\") == \"0 1\"\nassert solution(\"77\") == \"0\"\nassert solution(\"78\") == \"0 1\"\nassert solution(\"79\") == \"1\"\nassert solution(\"80\") == \"0 1\"\nassert solution(\"81\") == \"0\"\nassert solution(\"82\") == \"0 1\"\nassert solution(\"83\") == \"1\"\nassert solution(\"84\") == \"0 1\"\nassert solution(\"85\") == \"0\"\nassert solution(\"86\") == \"0 "
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 3 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 3 3 3\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 2 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2  \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 3\\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == \"1 3 3 \"\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == \"2 3 2 \"\n\nassert solution(\"\"\"\n3 2 5 3\n1 3 1\n\"\"\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\" for i, input, output in enumerate(zip(stdin, stdout, stderr))"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 '\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 '\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \\n1 3 3  \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2  \\n1 3 1  \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n\nimport math"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('110\\n2\\n') == '3\\n'\nassert solution('111111011\\n2\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'\nassert solution(open('input2.txt', 'r').read()) == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"11.084259940083\", \"Test case 1 failed\"\nassert solution() == \"33.121375178000\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input1) == solution_output1, \"Test 1 failed\"\nassert solution(solution_input2) == solution_output2, \"Test 2 failed\"\nassert solution(solution_input3) == solution_output3, \"Test 3 failed\"\nassert solution(solution_input4) == solution_output4, \"Test 4 failed\"\nassert solution(solution_input5) == solution_output5, \"Test 5 failed\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"11.084259940083\\n\", \"Test case 1 failed.\"\nassert solution(stdin) == \"33.121375178000\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"your_code_here\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n\ninput = \"\"\"3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\"\"\"\n\noutput = \"\"\"11.084259940083\n33.121375178000\"\"\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '11.084259940083'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"The output is not as expected.\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\\n\", \"Test 1\"\nassert solution(\"5 10 1\\n01000\") == \"2\\n\", \"Test 2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\\n\", \"Test 3\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == 11\nassert solution(open('input.txt', 'r').read()) == 2\nassert solution(open('input.txt', 'r').read()) == 0"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1 10\\n01000') == '11'\nassert solution('5 10 1\\n01000') == '2'\nassert solution('7 2 3\\n1111111') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution(\"5 1 10\\n01000\") == '11'\nassert solution(\"5 10 1\\n01000\") == '2'\nassert solution(\"7 2 3\\n1111111\") == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 1 10\\n01000\\n\\n5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\\n0') == '11\\n2\\n0'\nassert solution('5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\\n0') == '2\\n0'\nassert solution('7 2 3\\n1111111\\n\\n0') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n\") == \"2 1\\n\"\nassert solution(\"5 1 2\\n\") == \"19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n\nexpected_output = \"2 1\\n19 5\"\ninput_ = \"5 1 2\"\nassert solution(input_) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n\nexpected_output = \"19 5\"\ninput_ = \"3 1 1\"\nassert solution(input_) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n\nexpected_output = \"0 -1\"\ninput_ = \"2 100 1\"\nassert solution(input_) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n\nexpected_output = \"-1 -1\"\ninput_ = \"3 1 100\"\nassert solution(input_) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 1) == 2, \"Expected 2, got {}\".format(solution(3, 1, 1))\nassert solution(5, 1, 2) == 19, \"Expected 19, got {}\".format(solution(5, 1, 2))"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"6 1 3\") == \"-1\"\nassert solution(\"7 1 4\") == \"-1\"\nassert solution(\"8 1 5\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(3, 1, 1)) == \"2 1\"\nassert solution(str(5, 1, 2)) == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 5 2\\n\") == \"-1\\n\"\nassert solution(\"1 1 1\\n1 1 2\\n1 1 3\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"1 2 1\\n2 3 1\\n\") == \"19 5\\n\"\nassert solution(\"1 1000 1\\n1000 2 1\\n1000 3 1\\n\") == \"19 5\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test Failed\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\"\nassert solution(\"\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\") == \"6\", \"Solution 1 is incorrect\"\nassert solution(\"10 2\") == \"4\", \"Solution 2 is incorrect\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed with input {input_data}, expected output {expected_output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == \"2\\n149.154.167.99\\n149.154.167.120/29\"\nassert solution(read_input()) == \"-1\\n127.0.0.4/30\"\nassert solution(read_input()) == \"-1\\n195.0.0.0/8\"\nassert solution(read_input()) == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\nassert solution(read_input()) == \"-1\\n127.0.0.1/32\\n127.0.0.1\\n195.0.0.1/32\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\nassert solution('149.154.167.99') == ['0.0.0.0/0']\\n# Test case 2\\nassert solution('149.154.167.100/30') == ['149.154.167.100/30']\\n# Test case 3\\nassert solution('149.154.167.128/25') == ['149.154.167.128/25']\\n# Test case 4\\nassert solution('-149.154.167.120/29') == ['149.154.167.120/29']\\n# Test case 5\\nassert solution('-127.0.0.4/31') == ['127.0.0.4/31']\\n# Test case 6\\nassert solution('+127.0.0.8') == ['127.0.0.0/30']\\n# Test case 7\\nassert solution('-195.82.146.208/29') == ['195.0.0.0/8']\\n# Test case 8\\nassert solution('-127.0.0.6/31') == ['127.0.0.4/30']\\n# Test case 9\\nassert solution('+127.0.0.1/32') == [-1]\\n# Test case 10\\nassert solution('-127.0.0.1') == [-1]\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n0.0.0.0/0\\n2\\n149.154.167.99\\n149.154.167.120/29\\n2\\n195.0.0.0/8\\n127.0.0.4/30\\n-1\\n'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\") == 1\nassert solution(\"22\\n0011223344556677889988\") == 2\nassert solution(\"11\\n31415926535\") == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\nassert solution('11\\n31415926535') == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\n\nassert solution(\"80123456789\") == \"1\"\nassert solution(\"80000000000\") == \"0\"\n\nassert solution(\"31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\nprint(f\"Test {test_num}: Passed\") if test_num < 5 else print(\"All tests passed\")"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 23 # your answer here"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == 4\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == -1\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == 3\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1') == 1"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0') == '-1'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '3\\nrow 1\\nrow 2\\nrow 3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Input: {stdin}, Output: {solution(stdin)}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == '6\\n'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == '12\\n'\nassert solution('2 2\\n1 2\\n2 1\\n') == '-1\\n'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n4 2\\n1 3\\n1 4\\n\\nOutput\\n6\\n\\nInput\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\nOutput\\n12\\n\\nInput\\n2 2\\n1 2\\n2 1\\n\\nOutput\\n-1\") == \"Output\\n12\\n\\nInput\\n2 2\\n1 2\\n2 1\\n\\nOutput\\n-1\\n\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 6, \"The correct answer is 6, not {}\".format(solution)"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == -1"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\" # Example 1\nassert solution(input()) == \"NO\" # Example 2"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == \"YES\"\nassert solution(1, 0, 1) == \"YES\"\nassert solution(1, 1, 0) == \"YES\"\nassert solution(1, 0, 0) == \"YES\"\nassert solution(1, 0, 0) == \"YES\"\n\nprint(\"YES\")"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO' # Here is the solution for the given problem"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'YES\\n'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES\\n'\n\nassert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO\\n'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES\\n'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\", \"Test 2 failed\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6'\nassert solution() == '8'\nassert solution() == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\nassert solution(5, 6, 3) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"2 2 1\") == -1\nassert solution(\"1 1 1\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6', \"Output should be 6\"\nassert solution(stdin) == '8', \"Output should be 8\"\nassert solution(stdin) == '-1', \"Output should be -1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4') == '2'\nassert solution('3\\n4 1 1\\n\\n4\\n0 3 0 4') == '2'\nassert solution('4\\n0 3 0 4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5\n    1 2 2 4 3\n    ''') == '2'\n\nassert solution('''\n    3\n    4 1 1\n    ''') == '2'\n\nassert solution('''\n    4\n    0 3 0 4\n    ''') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"expected 2, but got {}\".format(solution())"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, \"1 2 2 4 3\") == \"2\"\nassert solution(3, \"4 1 1\") == \"2\"\nassert solution(4, \"0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2', 'Test case 1 failed'\nassert solution(stdin) == '2', 'Test case 2 failed'\nassert solution(stdin) == '2', 'Test case 3 failed'\nassert solution(stdin) == '0', 'Test case 4 failed'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"8\\n10000011\\n\\n2\\n01\\n\\n\") == \"5\"\nassert solution(stdin=\"2\\n01\\n0\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Input error or output error\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000011\") == \"5\"\nassert solution(\"01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring.\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\") == 3\nassert solution(\"4\\n4 4 4 4\") == -1\nassert solution(\"4\\n2 1 4 3\") == 1"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 1 4') == '3'\nassert solution('4\\n4 4 4 4') == '-1'\nassert solution('4\\n2 1 4 3') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Expected output: 3\"\nassert solution(\"4\\n2 3 1 4\") == 3, \"Expected output: 3\"\nassert solution(\"4\\n4 4 4 4\") == -1, \"Expected output: -1\"\nassert solution(\"4\\n2 1 4 3\") == 1, \"Expected output: 1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4\\n2 3 1 4\\n\\nOutput\\n3\\n\\nInput\\n4\\n4 4 4 4\\n\\nOutput\\n-1\\n\\nInput\\n4\\n2 1 4 3\\n\\nOutput\\n1') == '3\\n\\n1'\nassert solution('Input\\n4\\n4 4 4\\n\\nOutput\\n-1\\n\\nInput\\n4\\n2 1 4 3\\n\\nOutput\\n1') == '-1'\nassert solution('Input\\n4\\n2 1 4 3\\n\\nOutput\\n1') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n') == '3'\nassert solution('4\\n4 4 4 4\\n4\\n2 1 4 3\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0'\nassert solution('2\\n2 2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 3 2 0\n7\n1 3 3 2 1 2 3\n2\n2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7\n1 3 3 2 1 2 3\n2\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\\n7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0'\nassert solution('2\\n2 2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n6\\n5\") == \"210\\n\"\nassert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n6\\n5\\n\") == \"210\\n\"\nassert solution(\"9\\n7\\n6\\n5\") == \"504\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9') == '504', 'Expected 504, got {}'.format(solution('9'))\nassert solution('7') == '210', 'Expected 210, got {}'.format(solution('7'))\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"504\", \"Expected 504, got \" + solution(input())\nassert solution(input()) == \"210\", \"Expected 210, got \" + solution(input())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in [\n    ('9', '504'),\n    ('7', '210'),\n]"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == '504', 'Incorrect output'\nassert solution(7) == '210', 'Incorrect output'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(9) == \"504\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"504\", \"Wrong output\"\nassert solution(\"7\") == \"210\", \"Wrong output\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 1\"\nassert solution(4) == \"1 1\"\nassert solution(5) == \"1 1\"\nassert solution(6) == \"1 1\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 0 1 1\\n1 1 1 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 0 1 1\\n1 1 1 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 0 1 1\\n1 1 1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1 4 4\\n1 1 4 4\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"1 1\\n1 1\\n1 1\\n3 4\"\n\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n\\n1 1 4 4\\n1 1 4 4\\n\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"1 1\\n1 1\\n1 1\\n3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n'), 'Expected output: 1 1'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n'), 'Expected output: 1 1'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n'), 'Expected output: 1 1'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n'), 'Expected output: 3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1 1'\nassert solution(4) == '1 1'\nassert solution(5) == '1 1'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n1 1\\n1 1\\n1 1\\n\\n1 1\\n1 1\\n1 1\") == \"1 1\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n18 55 16 17\\n') == 'YES\\n'\nassert solution('6\\n40 41 43 44 44 44\\n') == 'NO\\n'\nassert solution('8\\n5 972 3 4 1 4 970 971\\n') == 'YES\\n'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n18 55 16 17\\n6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\\n') == \"YES\"\nassert solution('6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\\n') == \"NO\"\nassert solution('8\\n5 972 3 4 1 4 970 971\\n') == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 18, 55, 16, 17) == 'YES'\nassert solution(6, 40, 41, 43, 44, 44) == 'NO'\nassert solution(8, 5, 972, 3, 4, 1, 4, 970, 971) == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\", \"Test failed\"\nassert solution(stdin) == \"NO\", \"Test failed\"\nassert solution(stdin) == \"YES\", \"Test failed\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 9\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n9'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\") == \"Vasya\\n\", \"First sample should output Vasya.\"\nassert solution(stdin=\"2\") == \"Petya\\n\", \"Second sample should output Petya.\"\nassert solution(stdin=\"8\") == \"Petya\\n\", \"Third sample should output Petya.\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Vasya\"\nassert solution(stdin) == \"Vasya\"\nassert solution(stdin) == \"Petya\"\nassert solution(stdin) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"Petya\", \"Expected 'Petya', but got '{}'\".format(solution(2))\nassert solution(8) == \"Petya\", \"Expected 'Petya', but got '{}'\".format(solution(8))"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"Vasya\\n\"\nassert solution(\"2\\n\") == \"Petya\\n\"\nassert solution(\"8\\n\") == \"Petya\\n\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n\nassert solution() == \"2\"\n\nassert solution() == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {index+1} failed\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 2 3\n1 2\n2 2\n2 1\n\"\"\") == \"0\\n\"\n\nassert solution(\n\"\"\"\n1 5 3\n1 3\n1 1\n1 5\n\"\"\") == \"2\\n\"\n\nassert solution(\n\"\"\"\n4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test {i + 1} failed. Expected output: {output}, but got: {solution(input)}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"Input\\n1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"Input\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Your solution here\", \"The solution does not match the expected output.\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"\n\nassert solution(stdin) == \"2\\n\"\n\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n' # Example case.\n\nfrom collections import defaultdict\nfrom math import factorial"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"0\"\nassert solution(\"4\\nA\\nB\\nA\\xB\") == \"0\"\nassert solution(\"4\\nA\\nB\\xA\\xB\") == \"1\"\nassert solution(\"4\\nA\\nB\\xA\\xB\") == \"1\"\nassert solution(\"4\\nA\\nA\\xA\\xA\") == \"3\"\nassert solution(\"4\\nA\\xA\\xA\\xA\") == \"3\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"0\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"1\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"1\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"2\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"2\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"3\"\nassert solution(\"4\\xA\\xA\\xA\\xA\") == \"3\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2\\n'\nassert solution('4\\nA\\nB\\nA\\nB') == '1\\n'\nassert solution('4\\nA\\nB\\B\\A') == '1\\n'\nassert solution('4\\nA\\nA\\A\\A') == '1\\n'\nassert solution('4\\nA\\A\\B\\B') == '1\\n'\nassert solution('4\\A\\A\\B\\B') == '1\\n'\nassert solution('4\\B\\A\\B\\B') == '1\\n'\nassert solution('4\\B\\B\\A\\B') == '1\\n'\nassert solution('4\\B\\B\\B\\A') == '1\\n'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt').read()) == '2\\n' # expected output: 2"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"10\\nA\\nB\\nB\\nA\") == \"4\"\nassert solution(\"1000\\nA\\nB\\nB\\nA\") == \"32\"\nassert solution(\"20\\nA\\nB\\nB\\nA\") == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n\nassert solution(\"1\\nA\\nB\\nB\\nA\") == \"1\"\n\nassert solution(\"2\\nA\\nB\\nB\\nA\") == \"2\"\n\nassert solution(\"1\\nA\\nA\\nB\\nA\") == \"1\"\n\nassert solution(\"3\\nA\\nA\\nB\\nA\") == \"3\"\n\nassert solution(\"4\\nA\\nA\\nA\\nB\") == \"4\"\n\nassert solution(\"5\\nA\\nA\\nA\\nA\") == \"5\"\n\nassert solution(\"6\\nA\\nA\\nA\\xA\") == \"6\"\n\nassert solution(\"7\\nA\\nA\\xA\\xA\") == \"7\"\n\nassert solution(\"8\\xA\\xA\\xA\\xA\") == \"8\"\n\nassert solution(\"9\\xA\\xA\\xA\\xA\") == \"9\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"6\\nA\\nB\\nA\\nB\\nC\\nD\\nC\\nD\") == \"0\"\nassert solution(\"4\\nAA\\nAB\\nBA\\nBB\") == \"2\"\nassert solution(\"2\\nA\\nB\\nC\\nD\") == \"0\"\nassert solution(\"1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\") == \"13\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 6 7\\n\\nOutput\\n3\") == \"Output\\n2\\n\\nInput\\n5\\n2 3 4 6 7\\n\\nOutput\\n3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nfrom functools import lcm"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 6 7\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n3\") == \"3\\n\"\nassert solution(\"1\\n1 1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Incorrect output: expected {output}, got {solution(input)}\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"5\\nABAC\") == \"10\"\nassert solution(\"5\\nBAAC\") == \"12\"\nassert solution(\"5\\nBAC\") == \"11\"\nassert solution(\"5\\nACA\") == \"9\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nABAAC') == '11'\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\nA\\nB\\nC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"11\", \"Test failed!\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\", \"The solution is incorrect\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\nABAAC\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\n\") == \"11\\n\"\n\nassert solution(\"5\\nB\\n\") == \"9\\n\"\n\nassert solution(\"5\\nC\\n\") == \"9\\n\"\n\nassert solution(\"5\\nABC\\n\") == \"11\\n\"\n\nassert solution(\"5\\nabcd\\n\") == \"10\\n\"\n\nassert solution(\"5\\nhello\\n\") == \"10\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution() == '-1'\nassert solution() == '3'\nassert solution() == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, \"Your solution is not correct.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str} and output {output_str}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 3\nassert solution(2) == 1\nassert solution(3) == 3\nassert solution(4) == 1\nassert solution(5) == -1\nassert solution(6) == -1"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"3\\n5 4 3\") == \"2\"\nassert solution(\"1\\n1000000000\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n5 4\") == \"2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"3\\n4 5\") == \"1\\n\", \"Test Case 2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n\nThe provided solution works for the sample input. It selects the prime p greater than or equal to 3 and p consecutive cards and flips all of them. Then, it flips the same card again to flip the selected cards, and the process repeats for p-1 times. The number of operations required to achieve the objective is 2, since we need to flip all the cards, and each card needs to be flipped once."
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\", \"Test Case 1\"\nassert solution(\"2\\n4 5\") == \"2\", \"Test Case 2\"\nassert solution(\"2\\n4 5\") == \"2\", \"Test Case 3\"\nassert solution(\"2\\n4 5\") == \"2\", \"Test Case 4\"\nassert solution(\"2\\n4 5\") == \"2\", \"Test Case 5\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5') == '2\\n'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"2\n    4 5\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"3\n    2 3\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"5\n    1 2 3 4 5\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"2\\n3 4\") == \"2\\n\"\nassert solution(\"2\\n5 4\") == \"2\\n\"\nassert solution(\"100\\n1\\n1\\n1\\n1\") == \"0\\n\"\nassert solution(\"100\\n1\\n2\\n1\\n1\") == \"2\\n\"\nassert solution(\"100\\n2\\n1\\n1\\n1\") == \"2\\n\"\nassert solution(\"100\\n3\\n1\\n1\\n1\") == \"2\\n\"\nassert solution(\"100\\n4\\n1\\n1\\n1\") == \"2\\n\"\nassert solution(\"100\\n5\\n1\\n1\\n1\") == \"2\\n\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n0 1 0 1 2 3 2\"\nassert solution() == \"NO\"\nassert solution() == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\\n\") == \"NO\"\nassert solution(\"2 2 2 3\\n\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: {input()} should output {output}, but got {solution(input())}.\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\" #pass\nassert solution() == \"NO\" #pass"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"1 2 1\") == 666666672\nassert solution(\"1 2 3\") == 66666666\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r\"1 1 1\\n\") == \"0\"\nassert solution(stdin=r\"1 2 1\\n\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\\n1 2 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == 0\nassert solution('1 2 1') == 666666672\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\nfrom typing import List"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"  # Output: 0\nassert solution(\"1 2 1\\n\") == \"666666672\"  # Output: 666666672\n\nimport math"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 0"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4\") == \"4\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5\") == \"3\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5 6\") == \"4\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5 6 7\") == \"3\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5 6 7 8\") == \"2\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"6\\n7 2 3 1 5 6 4 5 6 7 8 9 10\") == \"2\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"12\\n456 123 789 654 321 0\") == \"12\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n5\\n'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"6\\n5 2 8 11 14 17\") == \"10\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\\n\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"7\\n1 2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"5\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"5\\n\"\nassert solution(\"6\\n7 8 9 10 11 12\") == \"6\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\\n\"\nassert solution(\"6\\n7 8 9 10 11 12 13\") == \"5\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n7 2 3 1 5 6\\n') == '5'\nassert solution('6\\n7 2 3 1 5 4\\n') == '4'"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"The first sample test case failed.\"\nassert solution(\"4 2 2 6\") == \"3\", \"The second sample test case failed.\"\nassert solution(\"3 7 4 6\") == \"1\", \"The third sample test case failed.\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\\n\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\\n\", \"Test 3\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\nassert solution(\"1 1 2 8\") == \"2\"\nassert solution(\"1 1 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution(\"1 2 2 8\") == \"2\"\nassert solution"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1 8') == '2', 'Expected \"2\" but got \"%s\"' % solution('1 1 1 8')\nassert solution('4 2 2 6') == '3', 'Expected \"3\" but got \"%s\"' % solution('4 2 2 6')\nassert solution('3 7 4 6') == '1', 'Expected \"1\" but got \"%s\"' % solution('3 7 4 6')"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Expected: '2', but got: '{}'\".format(solution(\"1 1 1 8\"))\nassert solution(\"4 2 2 6\") == \"3\", \"Expected: '3', but got: '{}'\".format(solution(\"4 2 2 6\"))\nassert solution(\"3 7 4 6\") == \"1\", \"Expected: '1', but got: '{}'\".format(solution(\"3 7 4 6\"))"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\\n\"\nassert solution(\"-1 4 15\") == \"4\\n\"\nassert solution(\"0 -1 5\") == \"-1\\n\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect.\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed!\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution('6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution('6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('monday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('wednesday') == 'YES'\nassert solution('thursday') == 'YES'\nassert solution('friday') == 'YES'\nassert solution('saturday') == 'YES'\nassert solution('sunday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\\ntuesday\\n\") == \"NO\"\nassert solution(\"sunday\\nsunday\\n\") == \"YES\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('monday') == 'NO', \"Solution:'monday' should be 'NO'.\"\nassert solution('tuesday') == 'NO', \"Solution: 'tuesday' should be 'NO'.\"\nassert solution('sunday') == 'NO', \"Solution:'sunday' should be 'NO'.\"\nassert solution('saturday') == 'NO', \"Solution:'saturday' should be 'NO'.\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(35) == '17\\n'\nassert solution(10000000000) == '91\\n'\nassert solution(123456789) == '225\\n'\nassert solution(10000000001) == '92\\n'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12345') == '17'\nassert solution('10000000000') == '91'\n\nassert solution('5000000001') == '91'\nassert solution('4999999999') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000000000\") == \"91\", \"1\"\nassert solution(\"35\") == \"17\", \"2\"\nassert solution(\"10000000000\") == \"91\", \"3\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES', \"Expected YES, got {}\".format(solution('AHA'))\nassert solution('Z') == 'NO', \"Expected NO, got {}\".format(solution('Z'))\nassert solution('XO') == 'NO', \"Expected NO, got {}\".format(solution('XO'))\n"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AHA') == 'YES', 'Test case 1 failed'\nassert solution('Z') == 'NO', 'Test case 2 failed'\nassert solution('XO') == 'NO', 'Test case 3 failed'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test Case 1\"\nassert solution(\"Z\") == \"NO\", \"Test Case 2\"\nassert solution(\"XO\") == \"NO\", \"Test Case 3\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Incorrect output for AHA\"\nassert solution(\"Z\") == \"NO\", \"Incorrect output for Z\"\nassert solution(\"XO\") == \"NO\", \"Incorrect output for XO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5') == '0\\n'\nassert solution('3 1 2 5') == '1\\n'\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected {expected_output}, got {solution(input())}\"\n\nn = int(input())\nstewards = [int(x) for x in input().split()]"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test 2 failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test 3 failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test 4 failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Expected 'Yes', got {}\".format(solution(\"2 2\\nRU\"))\nassert solution(\"1 2\\nRU\") == \"No\", \"Expected 'No', got {}\".format(solution(\"1 2\\nRU\"))\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Expected 'Yes', got {}\".format(solution(\"-1 1000000000\\nLRRLU\"))\nassert solution(\"0 0\\nD\") == \"Yes\", \"Expected 'Yes', got {}\".format(solution(\"0 0\\nD\"))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Input 1\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Input 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Input 3\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Input 4\"\nassert solution(\"2 2\\nLD\") == \"No\", \"Input 5\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\\n\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test case 1 failed.\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test case 2 failed.\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test case 3 failed.\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test case 4 failed.\"\n\nfor line in [\"2 2\\nRU\", \"1 2\\nRU\", \"-1 1000000000\\nLRRLU\", \"0 0\\nD\"]:\n    assert solution(line) == \"Yes\", f\"Test case {line} failed.\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n'\nassert solution('1 2\\nRU') == 'No\\n'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n'\nassert solution('0 0\\nD') == 'Yes\\n'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\"\nassert solution(\"1 2\\nRU\\n\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"Sample Output 1\"\nassert solution(\"10   3   7\") == \"1\\n\", \"Sample Output 2\"\nassert solution(\"314\") == \"0\\n\", \"Sample Output 3\"\nassert solution(\"22 19 3\") == \"1\\n\", \"Sample Output 4\"\nassert solution(\"   60\\n\\n29\\n\\n  31\\n\\n  31\\n\\n  31\\n\") == \"1\\n\", \"Sample Output 5\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60   \\n\\t29\\n\\t 31\\n\\t\\t   \\n\\t\\t\\t   \\n\\t\\t\\t\\t\\t   \\n\\t\\t\\t\\t\\t   \") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Expected {expected1}, got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected {expected2}, got {solution(input2)}\"\nassert solution(input3) == expected3, f\"Expected {expected3}, got {solution(input3)}\"\nassert solution(input4) == expected4, f\"Expected {expected4}, got {solution(input4)}\"\nassert solution(input5) == expected5, f\"Expected {expected5}, got {solution(input5)}\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\\n29\\n   31\\n    \\n    \\n    \\n    \") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n 29\\n   31\\n     35\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"First test case failed\"\nassert solution(\"10   3   7\") == \"1\\n\", \"Second test case failed\"\nassert solution(\"314\") == \"0\\n\", \"Third test case failed\"\nassert solution(\"22 19 3\") == \"1\\n\", \"Fourth test case failed\"\nassert solution(\"   60\\n   29\\n   31\\n   358\\n\") == \"1\\n\", \"Fifth test case failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n   31\\n   358\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n  31\\n  \\n\\n  \") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\\n10   3   7\\n314\\n159 265\\n358\\n\") == \"1\\n\"\nassert solution(\"22 19 3\\n\") == \"1\\n\"\nassert solution(\"   60\\n29\\n31\\n\") == \"1\\n\"\nassert solution(\"314\\n159 265\\n358\\n\") == \"0\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n31\\n\\n\\n\\n358\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"13\"\nassert solution(\"1000\") == \"13\"\nassert solution(\"10000\") == \"15\"\n\nfrom typing import List"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"9\\n\"\nassert solution(\"2\\n\") == \"18\\n\"\nassert solution(\"3\\n\") == \"27\\n\"\nassert solution(\"4\\n\") == \"36\\n\"\nassert solution(\"5\\n\") == \"45\\n\"\nassert solution(\"6\\n\") == \"54\\n\"\nassert solution(\"7\\n\") == \"63\\n\"\nassert solution(\"8\\n\") == \"72\\n\"\nassert solution(\"9\\n\") == \"81\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Incorrect answer\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"9\"\n\nassert solution(10) == \"10\"\n\nassert solution(123) == \"3\"\n\nassert solution(456789) == \"5\"\n\nassert solution(123456789) == \"10\"\n\nassert solution(12345678901234567890) == \"20\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\", \"Test Case 1 failed.\"\nassert solution(\"1234567890\") == \"9\", \"Test Case 2 failed.\"\nassert solution(\"1234567891\") == \"11\", \"Test Case 3 failed.\"\nassert solution(\"1234567892\") == \"13\", \"Test Case 4 failed.\"\nassert solution(\"1234567893\") == \"15\", \"Test Case 5 failed.\"\nassert solution(\"1234567894\") == \"17\", \"Test Case 6 failed.\"\nassert solution(\"1234567895\") == \"19\", \"Test Case 7 failed.\"\nassert solution(\"1234567896\") == \"21\", \"Test Case 8 failed.\"\nassert solution(\"1234567897\") == \"23\", \"Test Case 9 failed.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"9\", \"Test case 1 failed\"\nassert solution(2) == \"18\", \"Test case 2 failed\"\nassert solution(3) == \"21\", \"Test case 3 failed\"\nassert solution(4) == \"24\", \"Test case 4 failed\"\nassert solution(5) == \"25\", \"Test case 5 failed\"\nassert solution(6) == \"26\", \"Test case 6 failed\"\nassert solution(7) == \"27\", \"Test case 7 failed\"\nassert solution(8) == \"28\", \"Test case 8 failed\"\nassert solution(9) == \"29\", \"Test case 9 failed\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"9\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n3 6 28 9\\n') == '4\\n-1\\n'\nassert solution('5\\n5 12 9 16 48\\n') == '3\\n-1\\n'\nassert solution('4\\n1 2 4 8\\n') == '-1\\n'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 6 28 9\\n\\n5\\n5 12 9 16 48\\n\\n4\\n1 2 4 8\\n\\n-1') == '4\\n-1\\n'\nassert solution('5\\n5 12 9 16 48\\n\\n4\\n1 2 4 8\\n\\n-1') == '-1\\n'\nassert solution('4\\n1 2 4 8\\n\\n-1') == '-1\\n'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '4'\nassert solution(4) == '4'\nassert solution(5) == '3'\nassert solution(4) == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 28 9\") == 4, \"Test 1 failed\"\nassert solution(\"5 12 9 16 48\") == 3, \"Test 2 failed\"\nassert solution(\"4 1 2 4 8\") == -1, \"Test 3 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\"\nassert solution(\"4\\n3 6 28 9\") == \"4\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\nassert solution() == 3\nassert solution() == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n-1\"  # expected output\nassert solution() == \"3\\n3\"  # expected output\nassert solution() == \"4\\n-1\"  # expected output\nassert solution() == \"5\\n3\"  # expected output\nassert solution() == \"4\\n-1\"  # expected output\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 6 28 9\\n') == '4\\n'\nassert solution('5\\n5 12 9 16 48\\n') == '3\\n'\nassert solution('4\\n1 2 4 8\\n') == '-1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(7) == 1\nassert solution(5) == 2"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n2\\n'\nassert solution(stdin) == 'Output\\n1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"2\"\nassert solution(7) == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Wrong output\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n2\\n4\\n5\") == \"2\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 2, \"Case 1\"\nassert solution(5) == 5, \"Case 2\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {case + 1} failed\"\n\nfrom typing import List"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution {solution(input())} does not match expected output {output}\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\", \"Test 1\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\", \"Test 2\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\", \"Test 3\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4') == '18\\n3 4 \\n1 5 \\n', 'Test 1'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4') == '31\\n1 2 \\n3 4 \\n', 'Test 2'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3') == '23\\n1 3 5 \\n4\\n', 'Test 3'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n'''\n) == '''\n18\n3 4 \n1 5 \n\n'''\n\nassert solution(\nr'''\n4 2 2\n10 8 8 3\n10 7 9 4\n'''\n) == '''\n31\n1 2 \n3 4 \n\n'''\n\nassert solution(\nr'''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n'''\n) == '''\n23\n1 3 5 \n4\n'''"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"Input\\n2 1\\n1 2\\n\\nOutput\\nYes\\naa\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\") == \"Yes\\naa\\nNo\"\nassert solution(stdin=\"Input\\n2 1\\n1 2\\n\\nOutput\\nYes\\naa\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\") == \"Yes\\naa\\nNo\"\nassert solution(stdin=\"Input\\n2 1\\n1 2\\n\\nOutput\\nYes\\naa\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\") == \"Yes\\naa\\nNo\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 1\n    1 2\n''') == 'Yes'\nassert solution('''\n    4 3\n    1 2\n    1 3\n    1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\" # correct output\nassert solution() == \"aa\" # correct output\nassert solution() == \"No\" # correct output"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n1 2\n''') == \"Yes\\naa\\n\"\n\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\\na\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\na'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7\\n'\n\nassert solution('''\n0 2 2\n1 0 100\n1 2 0\n3\n''') == '19\\n'\n\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n5\n''') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == 87\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=f\"\"\"\n0 1 1\n1 0 1\n1 1 0\n3\n\"\"\") == \"7\\n\"\n\nassert solution(stdin=f\"\"\"\n0 2 2\n1 0 100\n1 2 0\n3\n\"\"\") == \"19\\n\"\n\nassert solution(stdin=f\"\"\"\n0 2 1\n1 0 100\n1 2 0\n5\n\"\"\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(0, 1, 1) == 7\nassert solution(0, 1, 1) == 19\nassert solution(0, 2, 2) == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\\n\", \"The minimum cost of solving SmallY's puzzle is 7.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"Bulbbasaur is not a valid input\"\nassert solution(\"F\") == \"0\", \"F is not a valid input\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"aBddulbasaurrgndgbualdBdsagaurrgndbb is not a valid input\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Bulbbasaur') == '1', 'Solution 1 failed'\nassert solution('F') == '0', 'Solution 2 failed'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2', 'Solution 3 failed'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == 1, \"First case\"\nassert solution(\"F\") == 0, \"Second case\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2, \"Third case\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"3 2\\nrac\\narc\") == \"YES\"\nassert solution(\"1 1\\nabc\") == \"YES\"\nassert solution(\"1 1\\nxyz\") == \"NO\"\nassert solution(\"1 1\\n\") == \"NO\"\nassert solution(\"3 3\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\\n\"\nassert solution(\"2 3\\nabc\\nbcd\\n\") == \"NO\\n\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES', 'Test case failed'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nbaa\\nbba\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('3 2\\nabc\\ndef') == 'NO'\nassert solution('2 3\\n') == 'YES'\nassert solution('3 2\\n') == 'NO'\nassert solution('') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\nassert solution('2 3\\nabc\\nxyz\\n') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n\", \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nsru\\n\") == \"NO\"\nassert solution(\"2 3\\nstr\\n\") == \"NO\"\nassert solution(\"2 3\\nsrf\\n\") == \"YES\"\nassert solution(\"2 3\\nstrg\\n\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nrac\\nbac\") == \"NO\"\nassert solution(\"1 1\\nabc\") == \"YES\"\nassert solution(\"1 1\\ndef\") == \"NO\"\nassert solution(\"1 2\\nabc\") == \"YES\"\nassert solution(\"1 2\\nxyz\") == \"NO\"\nassert solution(\"1 3\\nabc\") == \"YES\"\nassert solution(\"1 3\\nxyz\") == \"NO\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\\n\") == \"0\\n\"\n\nfrom functools import reduce"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n2 222\\n1111\\n10111\\n10010\") == \"3\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n2 222\\n1111\\n10111\\n10010\\n2 222\\n1111\\n10111\\n10010\") == \"1\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'\nassert solution('2 11\\n111\\n101\\n100\\n111\\n101\\n100') == '2\\n'\nassert solution('3 111\\n101010\\n111111\\n101111\\n101111\\n101010') == '13\\n'\nassert solution('1 1\\n11\\n11\\n11\\n11\\n11') == '1\\n'\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\") == \"2\\n\"\nassert solution(\"2 111\\n1110\\n10111\\n10010\") == \"1\\n\"\nassert solution(\"3 111\\n1111\\n10110\\n10010\") == \"3\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10011\") == \"5\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"6 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"10 11 11\") == \"1\\n\"\nassert solution(\"11 22 22\") == \"1\\n\"\nassert solution(\"11 11 22\") == \"-1\\n\"\nassert solution(\"10 11 11 11 11 11\") == \"1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\\n11 2 3\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == \"-1\\n\"\nassert solution(\"10 10 10\\n\") == \"-1\\n\"\nassert solution(\"11 11 5\\n11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 11 5\\n10 10 10\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\\n11 2 3\\n\") == \"1\"\nassert solution(\"11 11 5\\n11 10 5\\n\") == \"-1\"\nassert solution(\"11 11 5\\n10 11 5\\n\") == \"1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 2, 20) == 20.0\nprint(\"All tests passed!\")"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 2 6\\n4 2 20\\n\") == \"6.5\\n20.0\\n\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0\n\nfrom typing import Tuple"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#. \\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##. \\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 2\n..\n..\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2 2\n..\n..\n''') == '2'\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#. \\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##. \\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 2\n..\n..\n''') == '2'\n\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example_input) == example_output, f\"Expected output {example_output}, got {solution(example_input)}\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.#.#\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\"\nassert solution(\"5\\n1 1 2\\n3 2 4\\n\") == \"40\"\nassert solution(\"2\\n2\\n\") == \"3\"\nassert solution(\"10\\n3 3 3\\n5 4 5\\n1 2 3\\n\") == \"72\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"15\\n\"\nassert solution(stdin) == \"68\\n\"\nassert solution(stdin) == \"256\\n\"\nassert solution(stdin) == \"92368\\n\"\n\nfrom typing import TextIO"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\\n\", \"The given constraints and input do not meet the requirements. Please check the input and constraints.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3') == '6\\n'\n\nprint(sum(1 for i in range(3) for j in range(i+1)))\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")."
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 3') == '6'\nassert solution('5\\n1 2 3 4 5') == '17'\nassert solution('6\\n2 3 4 5 6') == '32'\nassert solution('7\\n2 3 4 5 6 7') == '43'\nassert solution('8\\n2 3 4 5 6 7 8') == '54'\nassert solution('9\\n2 3 4 5 6 7 8 9') == '65'\nassert solution('10\\n2 3 4 5 6 7 8 9 10') == '76'\nassert solution('11\\n2 3 4 5 6 7 8 9 10 11') == '87'\nassert solution('12\\n2 3 4 5 6 7 8 9 10 11 12') == '98'\nassert solution('13\\n2 3 4 5 6 7 8 9 10 11 12 13') == '109'\nassert solution('14\\n2 3 4 5 6 7 8 9 10 11 12 13 14') == '120'\nassert solution('15\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '131'\nassert solution('16\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '142'\nassert solution('17\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '153'\nassert solution('18\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '164'\nassert solution('19\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '175'\nassert solution('20\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '186'\nassert solution('21\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == '197'\nassert solution('22\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == '208'\nassert solution('23\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23') == '219'\nassert solution('24\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '230'\nassert solution('25\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25') == '241'\nassert solution"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na_1 a_2... a_N\") == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the length of the sequence: \")) == \"Enter the length of the sequence: \" + str(input()) + \"\\n11\"\nassert solution(input(\"Enter the length of the sequence: \")) == \"Enter the length of the sequence: \" + str(input()) + \"\\n3\"\nassert solution(input(\"Enter the length of the sequence: \")) == \"Enter the length of the sequence: \" + str(input()) + \"\\n1\"\nassert solution(input(\"Enter the length of the sequence: \")) == \"Enter the length of the sequence: \" + str(input()) + \"\\n4\"\nassert solution(input(\"Enter the length of the sequence: \")) == \"Enter the length of the sequence: \" + str(input()) + \"\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2\\n'\n\nassert solution('5\\n1 4 3 7 5\\n') == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2'\nassert solution('5\\n1 4 3 7') == '7\\n2'\nassert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2'\nassert solution('5\\n1 4 3 7') == '7\\n2'\nassert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2'\nassert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\n\nsolution(\"5\\n1 4 3 7 5\\n\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected output '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10.25\", \"Expected 10.25, got %s\" % solution(input())"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10.25', 'Expected: \"10.25\" but got: \"{}\"'.format(solution(input()))"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"10.25\"\nassert solution(str(input())) == \"10.3\"\nassert solution(str(input())) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10.25\\n\"\nassert solution(stdin) == \"10.3\\n\"\nassert solution(stdin) == \"9.2\\n\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\", \"Expected 'Impossible' but got '{}'\".format(solution(\"1 2 3 4\"))\n\nassert solution(\"1 2 2 1\") == \"0110\", \"Expected '0110' but got '{}'\".format(solution(\"1 2 2 1\"))\n\nassert solution(\"5 3 1 0\") == \"Impossible\", \"Expected 'Impossible' but got '{}'\".format(solution(\"5 3 1 0\"))"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Impossible\", \"Your code does not match the expected output.\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'Impossible', 'Input is invalid'\nassert solution('1 2 2 1') == '0110', 'Input is invalid'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n\nfrom typing import List"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"1 2 1 0\") == \"Impossible\"\nassert solution(\"1 0 1 1\") == \"0110\"\nassert solution(\"1 1 1 1\") == \"0110\"\nassert solution(\"1 1 0 1\") == \"Impossible\"\nassert solution(\"1 0 1 0\") == \"Impossible\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"The output {solution(input())} should be {output()}, but it's {solution(input())}\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\n\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\\n\\n10\\n.**PP.*P.*\\n\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\\n\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n*..P*P*\\n\\n10\\n.**PP.*P.*\\n\\n') == '3'\nassert solution('10\\n.**PP.*P.*\\n\\n') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\\n10\\n.**PP.*P.*\\n\") == \"3\\n\"\nassert solution(\"10\\n*.*P*.*\\n**PPP*P*\\n*.*PPP*\\n**PPP*P*\\n*.*P*.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(input()))) == '3'\nassert solution(solution(input())) == '2'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4'\n\nSolution:\n\nTo solve this problem, we need to find the minimum number of points that should be blocked to make all the points 4-connected. Let's assume that there is one integral point C and another special point D. Then, we need to find the minimum number of points that should be blocked to make:\n\n1. C and D are 4-connected with each other.\n2. C is 4-connected with D.\n3. D is 4-connected with B.\n\nTherefore, we can assume that there are three special points: A, B, and C.\n\nUsing the given constraints, we can find the number of points that should be blocked to make all the points 4-connected:\n\n1. A and B are 4-connected with each other.\n2. C is 4-connected with D.\n3. D is 4-connected with B.\n\nTherefore, there are 1 points that should be blocked to make all the points 4-connected.\n\nTherefore, the minimum number of points that should be blocked to make all the points 4-connected is 1.\n\nWe can use this approach to solve the problem in O(n^2) time complexity."
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", \"The minimum number of points that should be blocked is 4.\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\", \"The minimum number of points that should be blocked is 4\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '16\\n'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4', \"The minimum number of points that should be blocked is 4.\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"10 100 1 100 100 100\") == \"59 59 59 59 59 59\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 5 5 2 1\\n\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\\n\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"print(x1, y1, x2, y2)\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TTTTTTTT\\n1 2\") == \"No\"\nassert solution(\"FTFFTTTT\\n4 2\") == \"Yes\"\nassert solution(\"TTTTTFFT\\n2 3\") == \"No\"\nassert solution(\"F\\n1 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"FTFFTTTT\\n2 4\") == \"No\\n\", \"Test failed\"\nassert solution(\"TFTFFTTT\\n3 6\") == \"No\\n\", \"Test failed\"\nassert solution(\"FFTTTFTT\\n1 1\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"F\\n\") == \"No\\n\", \"Test failed\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the instruction sequence: \")) == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Test case failed for the given constraints.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\\n\") == \"Yes\"\nassert solution(\"TFFFTFFF\\n4 2\\n\") == \"No\"\nassert solution(\"TFFFTTT\\n4 2\\n\") == \"No\"\nassert solution(\"FTFFTTTT\\n4 2\\n\") == \"No\"\nassert solution(\"TTFFTTTT\\n4 2\\n\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\nassert solution('TGTGT\\n6 4') == 'No'\nassert solution('TTTTTT\\n4 4') == 'No'\nassert solution('TFTF\\n4 3') == 'Yes'\nassert solution('TTTTTT\\n4 2') == 'No'\nassert solution('TFTF\\n4 2') == 'No'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nprint(1)"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"The given code is incorrect. Please see the example in the prompt for the correct solution.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 2, \"Expected output: 2\"\nassert solution(3) == 3, \"Expected output: 3\"\nassert solution(4) == 6, \"Expected output: 6\"\nassert solution(5) == 12, \"Expected output: 12\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\na_1 a_2 a_3\\np 3\\n') == '1.3333333333'\nassert solution('3\\na_1 a_2 a_3\\np 5\\n') == '1.0000000000'\nassert solution('3\\na_1 a_2 a_3\\np 1\\n') == '0.0000000000'\nassert solution('3\\na_1 a_2 a_3\\np 10\\n') == '0.0000000000'\nassert solution('3\\na_1 a_2 a_3\\np 50\\n') == '0.0000000000'\nassert solution('3\\na_1 a_2 a_3\\np 0\\n') == '0.0000000000'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == 1.3333333333\nassert solution(\"4\\n2 3 1\\n4\") == 1\nassert solution(\"5\\n1 2 3\\n4\") == 1\nassert solution(\"6\\n1 2 3\\n4\") == 1"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == 1.3333333333\nassert solution(\"5\\n1 2 3 4 5\\n10\") == 1.3333333333\nassert solution(\"100\\n100 100 100\\n10\") == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np 3\\n\") == \"1.3333333333\"\nassert solution(\"2\\na_1 a_2 a_3\\np 3\\n\") == \"1.5000000000\"\nassert solution(\"3\\na_1 a_2 a_3\\np 5\\n\") == \"1.6666666667\"\n\nfor i in range(1, 6):\n    for j in range(1, 6):\n        n = i * j\n        order = (i, j)\n        assert f\"{n} / {6} = {n / 6}\" == solution(f\"3\\na_1 {order[0]} a_2 {order[1]} a_3\\np {j}\\n\")\n\nfor i in range(1, 6):\n    for j in range(1, 6):\n        n = i * j\n        order = (i, j)\n        assert f\"{n} / {6} = {n / 6}\" == solution(f\"2\\na_1 {order[0]} a_2 {order[1]} a_3\\np {j}\\n\")\n\nfor i in range(1, 6):\n    for j in range(1, 6):\n        n = i * j\n        order = (i, j)\n        assert f\"{n} / {6} = {n / 6}\" == solution(f\"3\\na_1 {order[0]} a_2 {order[1]} a_3\\np {j}\\n\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == 1.3333333333\nassert solution(\"1\\n3\\n4\") == 0\nassert solution(\"5\\n1 2 3 4\\n3\") == 1\nassert solution(\"3\\n2 4 6\\n5\") == 1\nassert solution(\"3\\n2 3 4\\n5\") == 1\nassert solution(\"5\\n1 2 3\\n6\") == 1\nassert solution(\"10\\n1 2 3 4 5 6\\n7\") == 0.0\nassert solution(\"5\\n1 2 3\\n4\") == 0\nassert solution(\"5\\n1 2 3 4\\n5\") == 1\nassert solution(\"10\\n1 2 3 4 5 6\\n7\") == 0.0\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"1.3333333333\"\nassert solution(\"4\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"1.0\"\nassert solution(\"5\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.75\"\nassert solution(\"6\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.5\"\nassert solution(\"7\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.25\"\nassert solution(\"8\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.1\"\nassert solution(\"9\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"10\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"11\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"12\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"13\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"14\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"15\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"16\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"17\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"18\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"19\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\"\nassert solution(\"20\\na_1 a_2 a_3\\na_4 a_5 a_6\\na_7 a_8 a_9\\na_10 a_11 a_12\") == \"0.0\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\np\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n1 2 3\\n\") == \"2.0000000000\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n1 2 3\\n2 1 3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n1 2 3\\n2 1 3\\n2 3 1\\n\") == \"2.6666666667\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n1 2 3\\n2 1 3\\n2 3 1\\n3 1 2\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\na_1 a_2 a_3\\np\\n1 2 3\\n1 2 3\\n2 1 3\\n2 3 1\\n3 1 2\\n3 2 1\\n\") == \"2.6666666667\\n\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"4\\n1 2 3\\n4\\n\") == \"1.3333333333\"\nassert solution(\"5\\n1 2 3\\n5\\n\") == \"1.3333333333\"\nassert solution(\"6\\n1 2 3\\n6\\n\") == \"1.3333333333\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"13 7\\n986 605\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\n\nprint(\"Correct\")"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"The solution is incorrect.\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution is incorrect. Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"Test 1\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\", \"Test 2\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"Test 1 failed\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\", \"Test 2 failed\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"Test 3 failed\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\", \"Test 4 failed\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\", \"Test 5 failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\") == \"986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986') == '13 7\\n986 605'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 4 4\") == 1\nassert solution(\"3 3 3 3 5\") == 0\nassert solution(\"5 5 1 2 3\") == -1\nassert solution(\"3 4 1 1 3\") == 3\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\nassert solution(open(\"test_case_1.txt\", \"r\")) == \"1\"\nassert solution(open(\"test_case_2.txt\", \"r\")) == \"0\"\nassert solution(open(\"test_case_3.txt\", \"r\")) == \"-1\"\nassert solution(open(\"test_case_4.txt\", \"r\")) == \"3\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\\n\\n4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n\\n\") == \"0\\n\\n2\\n4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2\\nG3 G3\\n') == 0\nassert solution(stdin='4\\nG4 R4 R3 B3\\n') == 2\nassert solution(stdin='5\\nB1 Y1 W1 G1 R1\\n') == 4"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'''\n    2\n    G3 G3\n''') == '0\\n'\n\nassert solution(r'''\n    4\n    G4 R4 R3 B3\n''') == '2\\n'\n\nassert solution(r'''\n    5\n    B1 Y1 W1 G1 R1\n''') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"G3 G3\") == 0\nassert solution(\"G4 R4 R3 B3\") == 2\nassert solution(\"B1 Y1 W1 G1 R1\") == 4"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(stdin=\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\"\nassert solution(stdin=\"2\\nG3 G3\\n\") == \"0\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 4\") == \"2\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    4\n    3 3 4 3\n    4 7 6 5\n    \"\"\") == \"\"\"\n    2 6\n    \"\"\"\n\nassert solution(\"\"\"\n    2\n    1 1\n    100 100\n    \"\"\") == \"\"\"\n    1 1\n    \"\"\"\n\nassert solution(\"\"\"\n    5\n    10 30 5 6 24\n    10 41 7 8 24\n    \"\"\") == \"\"\"\n    3 11\n    \"\"\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\n\nassert solution(r\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"1 1\"\n\nassert solution(r\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '''\n2 6\n'''\n\nassert solution('''\n2\n1 1\n100 100\n''') == '''\n1 1\n'''\n\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '''\n3 11\n'''"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2 6\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n11 6\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n\\n1 1\\n\\n3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n1 1\\n100 100\\n3 11'\nassert solution('2\\n1 1\\n100 100\\n100 100') == '1 1\\n100 100\\n100 100'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('2\\n1 1\\n100 100\\n') == '1 1'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n'\nassert solution('2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '1 1\\n'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11\\n'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2 6\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n3 11\") == \"3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\\n\") == \"3B\\n\"\nassert solution(\"2 2\\n\") == \"Impossible\\n\"\nassert solution(\"3 2\\n\") == \"1A1B\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3B\"\nassert solution(input()) == \"Impossible\"\nassert solution(input()) == \"1A1B\"\nassert solution(input()) == \"3B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"5 4\\n\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\n\nfor p in range(2, 20001, 2):\n    for k in range(2, p, 2):\n        if is_prime(p) and is_prime(k):\n            if f(p, k) == f(p, k):\n                count += 1\n\nprint(count % (10**9 + 7))"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3\"\nassert solution(5) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"25\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nprint(\"Example Test Passed\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == 1\n\nassert solution(stdin='4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == 1"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.After that, the graph is separated into two connected components.The score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2.Therefore, Snuke's profit is 0 + 2 - 1 = 1.He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == 1\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2\\n'  # remove the upper-right and lower-left leaves\nassert solution(stdin) == '-1\\n'  # no solution possible"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 2, \"The correctness of the solution is not verified.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n', \"Expected Output: 2, Actual Output: \" + solution(stdin)"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.T\\n\") == 2\nassert solution(\"3 3\\n.o.o.o.T\\nS.o\\n\") == 2\nassert solution(\"3 3\\n.o.o.o.o.T\\nS.o\\n\") == 1\nassert solution(\"3 3\\n.o.o.o.o.o.T\\nS.o\\no\\n\") == -1\nassert solution(\"3 3\\n.o.o.o.o.o.T\\nS.o\\noo\\n\") == -1\nassert solution(\"3 3\\n.o.o.o.o.o.T\\nS.o\\noos\\n\") == -1\nassert solution(\"3 3\\n.o.o.o.o.o.T\\nS.o\\noos\\nS\\n\") == 1\nassert solution(\"3 3\\n.o.o.o.o.o.T\\nS.o\\noos\\nS.o\\n\") == -1"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\no.o.o\\no.o.T\\n\") == \"2\\nRemove the upper-right"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\no.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"2 2\\n.o.\\no.\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n.o.\\no.\\n.o.\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\n.o.\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''4 4\no...\n...o\n..T.\n.o...''') == '-1'\n\nassert solution('''3 3\n..S\nS..\n...T\n....''') == '-1'\n\nassert solution('''4 4\n...\n...\n...\n...''') == '-1'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1), \"The solution is incorrect for input 1\"\nassert solution(3), \"The solution is incorrect for input 3\"\nassert solution(199), \"The solution is incorrect for input 199\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\", \"Test case 1 failed\"\nassert solution(\"3 2\") == \"3\", \"Test case 2 failed\"\nassert solution(\"199 200\") == \"200\", \"Test case 3 failed\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nActual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(199, 200) == 200\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('3 2\\n') == '3\\n'\nassert solution('199 200\\n') == '200\\n'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'1 1') == '1'\nassert solution(r'3 2') == '3'\nassert solution(r'199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\", \"Expected output: 1\"\nassert solution(\"3 2\") == \"3\", \"Expected output: 3\"\nassert solution(\"199 200\") == \"200\", \"Expected output: 200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n3 2\\n199 200\") == \"200\"\nassert solution(\"1 2\\n2 3\\n5 6\") == \"1\"\nassert solution(\"5 10\") == \"2\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('3 2') == '3\\n'\nassert solution('199 200') == '200\\n'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n3 3\\n\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki\\n'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"3\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"4\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"6\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"7\\n5 2\\n3 3\\n\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"4\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"5\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"1\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"1\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"1\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"1\\n5 2\\n3 3\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"3\\n1 2\\n2 3\") == \"Takahashi\\n\"\nassert solution(\"1\\n3 4\\n4 2\") == \"Takahashi\\n\"\nassert solution(\"1\\n2 4\\n3 2\") == \"Aoki\\n\"\nassert solution(\"2\\n1 4\\n4 3\") == \"Aoki\\n\"\nassert solution(\"3\\n4 2\\n2 1\") == \"Takahashi\\n\"\nassert solution(\"3\\n1 4\\n4 2\") == \"Aoki\\n\"\nassert solution(\"4\\n3 2\\n2 1\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"1\\n2\\n3\\n\") == \"Takahashi\"\nassert solution(\"1\\n1\\n3\\n\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"3\\n6 5\\n3 4\\n\") == \"Takahashi\"\nassert solution(\"4\\n2 1\\n2 2\\n\") == \"Aoki\"\nassert solution(\"1\\n1\\n4\\n\") == \"Takahashi\"\nassert solution(\"1\\n2\\n1\\n\") == \"Aoki\"\nassert solution(\"2\\n4 2\\n2 1\\n\") == \"Aoki\"\nassert solution(\"3\\n4 3\\n2 2\\n\") == \"Takahashi\"\nassert solution(\"4\\n4 4\\n2 3\\n\") == \"Aoki\"\nassert solution(\"5\\n6 7\\n3 4\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n5 2\\n3 3\\n') == 'Aoki'\nassert solution('5\\n50 5\\n100 10\\n') == 'Takahashi'\nassert solution('2\\n10 1\\n100 1\\n') == 'Takahashi'\nassert solution('2\\n5 2\\n10 1\\n') == 'Aoki'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: {output()}\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n') == '0\\n'\nassert solution('3 3\\n') == '8\\n'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == 0\nassert solution(\"3 3\") == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", \"Output: {}\".format(solution(stdin))"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == 0\nassert solution(\"3 3\") == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Output {output()} is incorrect. Expected {output()}\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 4\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\", \"First example\"\nassert solution(input()) == \"0\", \"Second example\"\nassert solution(input()) == \"-1\", \"Third example\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 2 3 4\n1 5 3 4\n''') == '1\\n'\n\nassert solution('''\n2 2\n1 2 3 4\n1 5 6 4\n''') == '0\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 7\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'\n\nassert solution('''\n2 3\n1 2 4 5\n1 2 6 4\n''') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\"\nassert solution(open(\"example1.txt\").read()) == \"1\"\nassert solution(open(\"example2.txt\").read()) == \"0\"\nassert solution(open(\"example3.txt\").read()) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2, 2\\n1, 2 3 4\\n1, 5 3 4\\n2, 2\\n1, 2 3 4\\n1, 5 6 4\\n2, 3\\n1, 2 4 5\\n1, 2 1 3 2 3\\n-1\"\nassert solution == \"1\\n0\\n-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('24') == '17:30', \"24 hours format should be '17:30'\"\nassert solution('12') == '07:30', \"12 hours format should be '07:30'\"\nassert solution('24') == '09:09', \"24 hours format should be '09:09'\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\", \"Incorrect output: 24-hours format\"\nassert solution(\"12\") == \"07:30\", \"Incorrect output: 12-hours format\"\nassert solution(\"24\") == \"09:09\", \"Incorrect output: 24-hours format\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"24\\n17:30\") == \"17:30\"\nassert solution(stdin=\"12\\n17:30\") == \"07:30\"\nassert solution(stdin=\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n', \"Incorrect output\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '6\\n'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"3 3\n2\n1 2 1\n2 3 1\n3 1 1\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\\n\\n0\\n\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\\n-1\\n\\n-1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Output mismatch. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"2\\n0\\n\") == \"-1\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\\n\"\nassert solution(\"6\\n0 1 1 1 1 2\\n\") == \"5\\n1 2\\n1 3\\n3 4\\n3 5\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\na_1 0 3 0 1 1\\n\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\na_0\\n\") == \"0\"\nassert solution(\"6\\na_3 2 2 2 1 1\\n\") == \"-1\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0 4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\\nExpected: {}\\nGot: {}\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 0\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 0 0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4 \\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 0\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \\n\", \"First test case failed.\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \", \"Second test case failed.\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: '{solution(input())}'\\nExpected output: '{output()}'\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.73\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.55"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\\n\") == 11.547005383792516398\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 -2 3 4 -5\\n6 7 8 -9 -10\\n-1 0\\n\") == 1.0\nassert solution(\"0 -100 100 0\\n0 0 0 0\\n0 0 0 0\\n\") == 0.0\nassert solution(\"0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == 0.0\nassert solution(\"1 2 3 4\\n6 7 8 9\\n-1 -1\\n-1 0\\n\") == 2.0\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n-1 -1\\n-1 0\\n\") == 4.285714285714285678\nassert solution(\"1 2 3 "
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\n\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Second\\nFirst\\nSecond'\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Second\\nFirst\\nSecond\\n\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(\"OK\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond', \"Test case 1 failed\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs(), sample_outputs())"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n') == 'Second\\nFirst\\nSecond\\n'\n\nassert solution('2\\n1\\n5\\n3\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond\\n', \"Testcase 1 failed\"\n\nTaro the first and Jiro the second will play a game against each other. They will alternately take turns, with Taro the first going first. In each player's turn, the player can make one of the following two moves:\nWhen one or more bags contain coin(s): Choose one bag that contains coin(s) and one dish, then move all coins in the chosen bag onto the chosen dish. (The chosen dish may already have coins on it, or not.)\nWhen no bag contains coins: Choose one dish with coin(s) on it, then remove one or more coins from the chosen dish.\nThe player who first becomes unable to make a move loses. Determine the winner of the game when the two players play optimally.\nYou are given T test cases. Solve each of them.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq T \\leq 10^5\n - 1 \\leq N \\leq 10^{5}\n - 1 \\leq a_i \\leq 10^9\n - In one input file, the sum of N does not exceed 2 \\times 10^5.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nT\n\\mathrm{case}_1\n\\vdots\n\\mathrm{case}_T\n\nEach case is in the following format:\nN\na_1 a_2 \\cdots a_N\n\n-----Output-----\nPrint T lines. The i-th line should contain First if Taro the first wins in the i-th test case, and Second if Jiro the second wins in the test case.\n\n-----Sample Input-----\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n\n-----Sample Output-----\nSecond\nFirst\nSecond\n\n- In test case 1, Jiro the second wins. Below is one sequence of moves that results in Jiro's win:\n - In Taro the first's turn, he can only choose Bag 1 and move the coins onto Dish 1.\n - In Jiro the second's turn, he can choose Dish 1 and remove all coins from it, making Taro fail to make a move and lose.\n - Note that when there is a bag that contains coin(s), a player can only make a move in which he chooses a bag that contains coin(s) and moves the coin(s) onto a dish.\n - Similarly, note that when there is no bag that contains coin(s), a player can only make a move in which he chooses a dish and removes one or more coins."
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 4\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5 3 2\\n1000000000\") == \"1000000000\"\nassert solution(\"5 3 4\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5 3 2\\n-1000000000\") == \"-1000000000\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 1\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"2\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"3\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 5\") == \"4\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 2\") == \"1\"\nassert solution(stdin=\"5 3 2\\n4 3 1 5 2\\n4 3 1 5 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', Actual output: '{solution(input())}'\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'output', 'Test failed'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n\nfor N in [1, 3, 5, 7, 10, 20]:\n    for k in range(1, 5001):\n        print(f\"{N} {k}\", end=\" \")\n    print()"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\nassert solution('1 2') == '3'\nassert solution('1 3') == '5'\nassert solution('1 2 3') == '9'\nassert solution('4 3 2') == '20'\nassert solution('3 1 2') == '10'\nassert solution('1 2 1 1 2 3 3 3 3 3 3 3') == '37'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output: 24'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(3) == 24\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1) == 1, \"Example 1\"\nassert solution(3, 2) == 24, \"Example 2\"\nassert solution(3, 1) == 10, \"Example 3\"\nassert solution(4, 3) == 44, \"Example 4\"\nassert solution(5, 2) == 170, \"Example 5\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(31) == \"6\\n\"\nassert solution(4) == \"3\\n\"\nassert solution(7) == \"1196\\n\"\n\nfor n, m in [(3, 2), (4, 4), (7, 3)]:\n    assert solution(n, m) == str(n*m) + \"\\n\"\n\nfor n, m in [(3, 2), (4, 4), (7, 3)]:\n    assert len(set(solution(n, m).split(\"\\n\")) - set([solution(n, m).split(\"\\n\") for _ in range(n)])) == 0"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3100) == \"6\"\nassert solution(4000) == \"3\"\nassert solution(7000) == \"1196\"\nassert solution(3000) == \"64921457\"\nassert solution(1000) == \"6\"\nassert solution(5000) == \"3\"\nassert solution(2000) == \"1196\"\nassert solution(10000) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(31, 8) == 64921457, \"Test Failed\"\nassert solution(4, 4) == 3, \"Test Failed\"\nassert solution(7, 3) == 1196, \"Test Failed\"\nassert solution(1, 1) == 0, \"Test Failed\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"6 2\") == \"7\"\nassert solution(\"6 3\") == \"7\"\nassert solution(\"7 4\") == \"9\"\nassert solution(\"8 2\") == \"10\"\nassert solution(\"8 3\") == \"10\"\nassert solution(\"9 2\") == \"12\"\nassert solution(\"9 3\") == \"12\"\nassert solution(\"10 2\") == \"14\"\nassert solution(\"10 3\") == \"14\"\nassert solution(\"11 2\") == \"15\"\nassert solution(\"11 3\") == \"15\"\nassert solution(\"12 2\") == \"17\"\nassert solution(\"12 3\") == \"17\"\nassert solution(\"13 2\") == \"18\"\nassert solution(\"13 3\") == \"18\"\nassert solution(\"14 2\") == \"20\"\nassert solution(\"14 3\") == \"20\"\nassert solution(\"15 2\") == \"22\"\nassert solution(\"15 3\") == \"22\"\nassert solution(\"16 2\") == \"24\"\nassert solution(\"16 3\") == \"24\"\nassert solution(\"17 2\") == \"26\"\nassert solution(\"17 3\") == \"26\"\nassert solution(\"18 2\") == \"28\"\nassert solution(\"18 3\") == \"28\"\nassert solution(\"19 2\") == \"30\"\nassert solution(\"19 3\") == \"30\"\nassert solution(\"20 2\") == \"32\"\nassert solution(\"20 3\") == \"32\"\nassert solution(\"21 2\") == \"34\"\nassert solution(\"21 3\") == \"34\"\nassert solution(\"22 2\") == \"36\"\nassert solution(\"22 3\") == \"36\"\nassert solution(\"23 2\") == \"38\"\nassert solution(\"23 3\") == \"38\"\nassert solution(\"24 2\") == \"40\"\nassert solution(\"24 3\") == \"40\"\nassert solution(\"25 2\") == \"42\"\nassert solution(\"25 3\") == \"42\"\nassert solution(\"26 2\") == \"44\"\nassert solution(\"26 3\") == \"44\"\nassert solution(\"27 2\") == \"46\"\nassert solution(\"27 3\") == \"46\"\nassert solution(\"28 2\") == \"48\"\nassert solution(\"28 3\") == \"48\"\nassert solution(\"29 2\") == \"50\"\nassert solution(\"29 3\") == \"50\"\nassert solution(\"30 2\") == \"52\"\nassert solution(\"30 3\") == \"52\"\nassert solution(\"31 2\") == \"54\"\nassert solution(\"31 3\") == \"54\"\nassert solution(\"32 2\") == \"56\"\nassert solution(\"32 3\") == \"56\"\nassert solution(\"33 2\") == \"58\"\nassert solution(\"33 3\") == \"58\"\nassert solution(\"34 2\") == \"60\"\nassert solution(\"34 3\") == \"60\"\nassert solution(\"35 2\") == \"62\"\nassert solution(\"35 3\") == \"62\"\nassert solution(\"36 2\") == \"64\"\nassert solution(\"36 3\") == \"64\"\nassert solution(\"37 2\") == \"66\"\nassert solution(\"37 3\") == \"66\"\nassert solution(\"38 2\") == \"68\"\nassert solution(\"38 3\") =="
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n\") == \"6\\n\"\nassert solution(\"4 4\\n\") == \"3\\n\"\nassert solution(\"7 3\\n\") == \"1196\\n\"\nassert solution(\"31 8\\n\") == \"64921457\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\", \"Incorrect output\" # correct output\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\"\n\nfrom typing import List"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"X#.\\n.X.#\\n...#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\"\n\nfrom typing import List"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/test_solution.txt').read()) == '''#XXX\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: Input: {input_data}, Output: {output_data}\"\nfor input_data, output_data in zip(test_cases, expected_outputs):\n    assert solution(input_data) == output_data, f\"Test failed for input: {input_data}, Output: {output_data}\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2\") == \"#X#\"\nassert solution(\"5 4 5\") == \"#XXX\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == '#.X#\\nX.#.\\n#...\\n'\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n1 1') == '1'\nassert solution('5\\n1 2 2 2') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"1\\n\"\nassert solution(open('input2.txt', 'r').read()) == \"3\\n\"\nassert solution(open('input3.txt', 'r').read()) == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('5\\n1 2 2 2\\n18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '3'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    1 1\n    ''') == '1\\n'\n\nassert solution('''\n    5\n    1 2 2 2\n    ''') == '3\\n'\n\nassert solution('''\n    18\n    1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n    ''') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n1 1\\n') == '1\\n'\nassert solution(stdin='5\\n1 2 2 2\\n') == '3\\n'\nassert solution(stdin='18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 4 1 5 3'\nprint('All tests passed.')"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\\n\"\nassert solution(\"5 5 2\") == \"-1\\n\"\nassert solution(\"3 2 4\") == \"-1\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"-1\"\nassert solution(\"5 3 3\") == \"2 3 1\"\nassert solution(\"4 3 2\") == \"2 4 1\"\nassert solution(\"2 3 2\") == \"2 3 1\"\nassert solution(\"2 3 4\") == \"2 4 1\"\nassert solution(\"3 2 2\") == \"2 3 1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"-1\"  # solution for N=1, A=3, B=2\nassert solution() == \"2 4 1 5 3\"  # solution for N=5, A=3, B=2\nassert solution() == \"1 2 3 4 5\"  # solution for N=5, A=3, B=2\nassert solution() == \"2 4 1 5 3\"  # solution for N=5, A=3, B=2\nassert solution() == \"4 3 1 5 2\"  # solution for N=5, A=3, B=2\nassert solution() == \"-1\"  # solution for N=1, A=3, B=2"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 3 2\n    \"\"\"\n) == \"\"\"\n    2 4 1 5 3\n    \"\"\"\nassert solution(\n    \"\"\"\n    4 3 2\n    \"\"\"\n) == \"\"\"\n    2 4 1 5 3\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 4 5\n    \"\"\"\n) == \"\"\"\n    -1\n    \"\"\"\nassert solution(\n    \"\"\"\n    3 2 1\n    \"\"\"\n) == \"\"\"\n    -1\n    \"\"\"\nassert solution(\n    \"\"\"\n    5 5 5\n    \"\"\"\n) == \"\"\"\n    -1\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4 5\n    \"\"\"\n) == \"\"\"\n    1 2 3 4 5\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4 5 6\n    \"\"\"\n) == \"\"\"\n    1 2 3 4 5 6\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4 5 6 7\n    \"\"\"\n) == \"\"\"\n    1 2 3 4 5 6 7\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4 5 6 7 8\n    \"\"\"\n) == \"\"\"\n    1 2 3 4 5 6 7 8\n    \"\"\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nassert solution('5 7 1') == '1 7 5 3 2'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '-1'\nassert solution('5 10 5') == '5 10 5 10 5'\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='5 3 2\\n') == '2 4 1 5 3\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"5 3 2\\n\") == b\"2 4 1 5 3\\n\"\nassert solution(b\"5 4 3\\n\") == b\"-1\\n\"\nassert solution(b\"5 10 6\\n\") == b\"-1\\n\"\nassert solution(b\"5 1 3\\n\") == b\"-1\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\\n\") == \"Yes\"\nassert solution(\"2\\n7 17\\n\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"Yes\" # expected output: \"Yes\"\nassert solution(2) == \"No\" # expected output: \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3,6,9,18,36,108) == \"Yes\"\nassert solution(2,7,17) == \"No\"\nassert solution(9,4,8,10,12,15,18,33,44,81) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Expected: {output()}\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes\\n'\nassert solution('2\\n7 17') == 'No\\n'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes\\n'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\", \"The solution is incorrect.\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n3 6 9 18 36 108\\n2\\n7 17\\n9\\n4 8 10 12 15 18 33 44 81') == 'Yes\\n'\nassert solution('2\\n7 17\\n9\\n4 8 10 12 15 18 33 44 81') == 'No\\n'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes\\n'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'Yes'\nassert solution == 'No'\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\", \"Testcase Failed\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 6\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 4\") == \"10\\n\"\nassert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 2\") == \"10\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\"\nassert solution(\"6\\n1 2 -6 4 5\\n\") == \"12\"\nassert solution(\"6\\n1 2 -6 4 5 3 4\\n\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"4\\n2 1 3 -4\") == \"10\\n\"\nassert solution(\"5\\n1 2 3 4 -5\") == \"12\\n\"\nassert solution(\"3\\n1 2 3\") == \"8\\n\"\nassert solution(\"100\\n10000\") == \"100000\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 -3\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"6\\n1 2 -6 4 5 -3\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\", \"Your solution is incorrect.\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5\\n', \"Incorrect output\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nassert solution(\"5 10\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"10 10\\n1 1 1 1 1\\n\") == \"10\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\", \"Test failed\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"100 100\\n1 1 1 1 1 1\") == \"1\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"100 1000\\n1 1 1 1 1 1\") == \"1\"\nassert solution(\"200 1000\\n1 2 3 4 5 6 7 8 9\") == \"11\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\", \"The output should be 5, but it is {}\".format(solution(stdin))"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5'\nassert solution('4 3\\n3 2 1 4') == '4'\nassert solution('4 3\\n3 3 1 4') == '3'\nassert solution('4 3\\n3 1 4 1') == '3'\nassert solution('4 3\\n3 1 4 1') == '2'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1') == '0 0\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1') == '0 1\\n2 1\\n'\nassert solution('3\\n3 2 1\\n3\\n3 1 2') == '2 1\\n1 2\\n'\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 1\\n3 3 2 1\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n3 2 1\\n3 3 2 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\\n3 2 1\\n3 3 2 1\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1') == '0 0\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1') == '0 1\\n'\nassert solution('3\\n3 2 1\\n3\\n1 2 3') == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 0\"\nassert solution() == \"0 1\"\nassert solution() == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0 0\\n0 1\\n2 1\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"0 0\\n0 1\\n1 1\\n\", \"Test 2 failed\"\nassert solution(stdin) == \"2 1\\n0 1\\n1 1\\n\", \"Test 3 failed\"\nassert solution(stdin) == \"0 1\\n1 1\\n\", \"Test 4 failed\"\nassert solution(stdin) == \"0 1\\n2 1\\n\", \"Test 5 failed\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n2 3 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n2 3 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\"\nassert solution(\"3\\n2 3 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '0 0\\n', \"Output should be '0 0'\"\nassert solution(3) == '0 0\\n', \"Output should be '0 0'\"\nassert solution(3) == '0 1\\n', \"Output should be '0 1'\"\nassert solution(3) == '2 1\\n', \"Output should be '2 1'\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\"\nassert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\na\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nbb\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\", \"The solution should be 6\"\n\nassert solution() == \"8\", \"The solution should be 8\"\n\nassert solution() == \"8\", \"The solution should be 8\"\n\nassert solution() == \"6\", \"The solution should be 6\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\na\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nabbb\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input_data)}\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == 'NO'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n') == 'YES\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\\n\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t} failed. Expected output: '{expected_output}', but got: '{solution(input())}'\"\nfor t in range(1, len(input()) + 1):\n    expected_output = input()\n    assert solution(input()) == expected_output, f\"Test case {t} failed. Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(read()) == expected, f\"Expected {expected}, got {solution(read())}\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1 \\n\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1 \\n\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {id(self)} failed: {output}!= {solution(input())}\"\nfor i in range(input()):\n    assert solution(input()) == output[i], f\"Test {id(self)} failed: {output[i]}!= {solution(input())}\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5 6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5 6 10 15 1000 75\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"YES\\n2 2 1 1\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"NO\\n6 15 35 77 22\\n\") == \"NO\\n6 15 35 77 22\\n\"\nassert solution(\"YES\\n2 2 1 1\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"YES\\n2 2 1 1\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"YES\\n2 2 1 1\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"YES\\n2 2 1 1\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"NO\\n6 10 15 1000 75\\n\") == \"NO\\n6 10 15 1000 75\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100\\n60\\n70\\n') == '40'\nassert solution('410\\n55\\n70\\n') == '5'\nassert solution('600\\n60\\n70\\n') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100\\n60\\n70') == '40\\n'\nassert solution('410\\n55\\n70') == '5\\n'\nassert solution('600\\n60\\n70') == '0\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(stdin=\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(stdin=\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(input()) == \"1\\n1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()} does not produce output {output}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(int(input()))) == 'Output\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution() == \"1\\n1 1\"\nassert solution() == \"1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution('5\\n1 1 1 1 1') == '1\\n1 1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output', 'Input error.'\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n2 3 4 5\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n5\\n1 1 1 1 1') == 12\nassert solution('5\\n1 1 1 1 1') == 1"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"5 3\\n1 2 2\\n2 3 4\\n3 4 5\\n\") == \"15\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"4 3\\n2 2 2\\n\") == \"12\\n\"\nassert solution(\"4 3\\n2 2 1\\n\") == \"1\\n\"\nassert solution(\"2 4\\n3 3 3\\n\") == \"15\\n\"\nassert solution(\"2 4\\n3 3 1\\n\") == \"1\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"4 2\\n1 2 1\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"3 2\\n1 2 2\\n2 2 1\\n\") == \"6\\n\"\nassert solution(\"5 3\\n1 2 2\\n2 2 2\\n3 2 1\\n\") == \"6\\n\"\nassert solution(\"6 3\\n1 2 2\\n2 2 2\\n3 2 2\\n4 1 1\\n\") == \"6\\n\"\nassert solution(\"7 3\\n1 2 2\\n2 2 2\\n3 2 2\\n4 1 1\\n5 2 2\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6', \"The count modulo 10^9+7 is: {}\".format(solution(input()))\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"10 2\\n1 2 3 4\\n5 6 7 8 9\\n\") == \"100\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('87654\\n30') == '10\\n'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\\n\"\nassert solution(\"87655\\n30\\n\") == \"-1\\n\"\nassert solution(\"87654\\n300\\n\") == \"-1\\n\"\nassert solution(\"10\\n87654\\n\") == \"10\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"123456\\n987654321\\n\") == \"-1\"\nassert solution(\"123456\\n123456789\\n\") == \"123456\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nprint(solution
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654 30\") == \"10\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654 30\") == 10"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654 30\") == \"10\"\nassert solution(\"100 87654\") == \"10\"\nassert solution(\"10 87654\") == \"10\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abcdefg\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 'Second', \"Test failed. The function should return 'Second', but returned '{}'.\".format(solution('aba'))\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aba') == 'Second', \"The correct output should be 'Second'.\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\", \"Input is invalid.\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(10) + '\\n' + '12345' == \"6\\n\")\nassert solution(str(16) + '\\n' + '439873893693495623498263984765' == \"40\\n\")"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 6, \"Test case 1 failed\"\nassert solution(16) == 40, \"Test case 2 failed\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\n\", \"Test 2 failed\"\nassert solution(\"\") == \"0\\n\", \"Test 3 failed\"\nassert solution(\"1\") == \"0\\n\", \"Test 4 failed\"\nassert solution(\"1234\") == \"0\\n\", \"Test 5 failed\"\nassert solution(\"123456\") == \"0\\n\", \"Test 6 failed\"\nassert solution(\"1234567\") == \"0\\n\", \"Test 7 failed\"\nassert solution(\"1234567890\") == \"0\\n\", \"Test 8 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\ndef solution(stdin: str) -> str: \\n\\tpass\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n12345\\n\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6, \"The output should be 6\"\nassert solution() == 40, \"The output should be 40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n12345') == '6', 'Test 1 failed'\nassert solution('16\\n439873893693495623498263984765') == '40', 'Test 2 failed'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, \"Test case failed\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \\\n    f\"Solution is {solution(input())}, but expected output is {expected_output}.\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"The expected output is {expected}, but it is {solution}.\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"332748119\\n332748119\\n\"\nassert solution() == \"3\\n3\\n\"\nassert solution() == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"The expected output is incorrect. Got: \" + solution(\"AJKEQSLOBSROFGZ\")\nassert solution(\"OVGURWZLWVLUXTH\") == \"OZ\", \"The expected output is incorrect. Got: \" + solution(\"OVGURWZLWVLUXTH\")\nassert solution(\"AA\") == \"0\", \"The expected output is incorrect. Got: \" + solution(\"AA\")"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"The output is incorrect.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ', \"Test Case 1\"\nassert solution('OVGURWZLWVLUXTH') == 'OZ', \"Test Case 2\"\nassert solution('AA') == '0', \"Test Case 3\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" + \"\\n\" + \"OVGURWZLWVLUXTH\" + \"\\n\" + \"OZ\") == \"ORZ\"\nassert solution(\"AA\" + \"\\n\" + \"A\" + \"\\n\" + \"A\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ', 'Test 1'\nassert solution('OVGURWZLWVLUXTH') == 'OZ', 'Test 2'\nassert solution('AA') == 0, 'Test 3'\n\nfrom typing import List\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test case 1 failed\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Test case 2 failed\"\nassert solution(\"AA\") == \"0\", \"Test case 3 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99\\n'\n\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0\\n'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99, \"Incorrect output\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0, \"Incorrect output\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(stdin=\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 1) == 1, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(3, 2) == 1, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(3, 3) == 0, \"Maxim loves to fill in a matrix in a special manner.\"\nassert solution(1000000000000, 1048576) == 118606527258, \"Maxim loves to fill in a matrix in a special manner.\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1, \"The output is incorrect\"\nassert solution(1000000000000) == 118606527258, \"The output is incorrect\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"Input\\n1 1\") == \"1\\n\"\nassert solution(r\"Input\\n3 2\") == \"1\\n\"\nassert solution(r\"Input\\n3 3\") == \"0\\n\"\nassert solution(r\"Input\\n1000000000000 1048576\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\", \"The first example should output 1.\"\nassert solution(\"3 2\\n\") == \"1\\n\", \"The second example should output 1.\"\nassert solution(\"3 3\\n\") == \"0\\n\", \"The third example should output 0.\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\", \"The fourth example should output 118606527258.\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"The solution is incorrect.\"\nassert solution(\"3 2\") == \"1\\n\", \"The solution is incorrect.\"\nassert solution(\"3 3\") == \"0\\n\", \"The solution is incorrect.\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The given solution is incorrect\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\", \"Test Case 1 Failed\"\nassert solution(\"+-\") == \"No\", \"Test Case 2 Failed\"\nassert solution(\"++\") == \"Yes\", \"Test Case 3 Failed\"\nassert solution(\"-\") == \"No\", \"Test Case 4 Failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('-++-') == 'No', \"Expected 'No', got '{}'\".format(solution('-++-'))\nassert solution('+-') == 'No', \"Expected 'No', got '{}'\".format(solution('+-'))\nassert solution('++') == 'No', \"Expected 'No', got '{}'\".format(solution('++'))\nassert solution('-') == 'No', \"Expected 'No', got '{}'\".format(solution('-'))\n\nassert solution('++-') == 'Yes', \"Expected 'Yes', got '{}'\".format(solution('++-'))\nassert solution('+--') == 'No', \"Expected 'No', got '{}'\".format(solution('+--'))\nassert solution('++-') == 'Yes', \"Expected 'Yes', got '{}'\".format(solution('++-'))\nassert solution('-+-') == 'No', \"Expected 'No', got '{}'\".format(solution('-+-'))"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"++\") == \"Yes\"\nassert solution(\"-++\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-\") == \"Yes\", \"Testcase 1 failed\"\nassert solution(\"++\") == \"Yes\", \"Testcase 2 failed\"\nassert solution(\"-\") == \"No\", \"Testcase 3 failed\"\nassert solution(\"+-\") == \"Yes\", \"Testcase 4 failed\"\nassert solution(\"++\") == \"Yes\", \"Testcase 5 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}.\"\nprint(answer)"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12.566370614359172464\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"12.566370614359172464\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\", \"Expected output: 9 42 but got: \" + solution(\"48\")\nassert solution(\"6\") == \"6 6\", \"Expected output: 6 6 but got: \" + solution(\"6\")"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"12 24\"\nassert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9 42\", \"Input not correct\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"48\") == \"9 42\", \"Invalid input\"\nassert solution(\"6\") == \"6 6\", \"Invalid input\"\n\nfrom typing import List"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"48\") == \"9 42\", \"Input 48\"\nassert solution(\"6\") == \"6 6\", \"Input 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\", \"The expected output is '9 42', but it's actually '%s'.\" % solution(\"48\")\nassert solution(\"6\") == \"6 6\", \"The expected output is '6 6', but it's actually '%s'.\" % solution(\"6\")"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n((((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n)()\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\") == \"Yes\\n\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())())(((((\") == \"No\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n)()\\n') == 'Yes\\n'\nassert solution('3\\n(()\\n') == 'No\\n'\nassert solution('2\\n()()\\n') == 'Yes\\n'\nassert solution('10\\n)))(((((\\n') == 'No\\n')"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"No\"\nassert solution(3) == \"Yes\"\nassert solution(4) == \"Yes\"\nassert solution(5) == \"No\"\nassert solution(6) == \"No\"\nassert solution(7) == \"No\"\nassert solution(8) == \"No\"\nassert solution(9) == \"Yes\"\nassert solution(10) == \"No\"\nassert solution(11) == \"No\"\nassert solution(12) == \"No\"\nassert solution(13) == \"No\"\nassert solution(14) == \"No\"\nassert solution(15) == \"No\"\nassert solution(16) == \"No\"\nassert solution(17) == \"No\"\nassert solution(18) == \"No\"\nassert solution(19) == \"No\"\nassert solution(20) == \"No\"\nassert solution(21) == \"No\"\nassert solution(22) == \"No\"\nassert solution(23) == \"No\"\nassert solution(24) == \"No\"\nassert solution(25) == \"No\"\nassert solution(26) == \"No\"\nassert solution(27) == \"No\"\nassert solution(28) == \"No\"\nassert solution(29) == \"No\"\nassert solution(30) == \"No\"\nassert solution(31) == \"No\"\nassert solution(32) == \"No\"\nassert solution(33) == \"No\"\nassert solution(34) == \"No\"\nassert solution(35) == \"No\"\nassert solution(36) == \"No\"\nassert solution(37) == \"No\"\nassert solution(38) == \"No\"\nassert solution(39) == \"No\"\nassert solution(40) == \"No\"\nassert solution(41) == \"No\"\nassert solution(42) == \"No\"\nassert solution(43) == \"No\"\nassert solution(44) == \"No\"\nassert solution(45) == \"No\"\nassert solution(46) == \"No\"\nassert solution(47) == \"No\"\nassert solution(48) == \"No\"\nassert solution(49) == \"No\"\nassert solution(50) == \"No\"\nassert solution(51) == \"No\"\nassert solution(52) == \"No\"\nassert solution(53) == \"No\"\nassert solution(54) == \"No\"\nassert solution(55) == \"No\"\nassert solution(56) == \"No\"\nassert solution(57) == \"No\"\nassert solution(58) == \"No\"\nassert solution(59) == \"No\"\nassert solution(60) == \"No\"\nassert solution(61) == \"No\"\nassert solution(62) == \"No\"\nassert solution(63) == \"No\"\nassert solution(64) == \"No\"\nassert solution(65) == \"No\"\nassert solution(66) == \"No\"\nassert solution(67) == \"No\"\nassert solution(68) == \"No\"\nassert solution(69) == \"No\"\nassert solution(70) == \"No\"\nassert solution(71) == \"No\"\nassert solution(72) == \"No\"\nassert solution(73) == \"No\"\nassert solution(74) == \"No\"\nassert solution(75) == \"No\"\nassert solution(76) == \"No\"\nassert solution(77) == \"No\"\nassert solution(78) == \"No\"\nassert solution(79) == \"No\"\nassert solution(80) == \"No\"\nassert solution(81) == \"No\"\nassert solution(82) == \"No\"\nassert solution(83) == \"No\"\nassert solution(84) == \"No\"\nassert solution(85) == \"No\"\nassert solution(86) == \"No\"\nassert solution(87) == \"No\"\nassert solution(88) == \"No\"\nassert solution(89) == \"No\"\nassert solution(90) == \"No\"\nassert solution(91) == \"No\"\nassert solution(92) == \"No\"\nassert solution(93) == \"No\"\nassert solution(94) == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n)()\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())(((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n)(') == 'Yes'\nassert solution('3\\n(()') == 'No'\nassert solution('2\\n()') == 'Yes'\nassert solution('10\\n(((') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n)()\") == \"Yes\"\nassert solution(\"3\\n)()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((((((\\n\")) == \"No\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\n\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n1\\n\"\nassert solution(stdin) == \"5\\n2\\n\"\nassert solution(stdin) == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\") == \"1\\n1\\n\"\nassert solution(\"3 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\nassert solution(\"\") == \"0\\n0\\n\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 50\\n50\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"-1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 6 8\n5\n2 3 4 9 12\n4\n5 7 2 9\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4\n5 7 2 9\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n5\n2 3 4 9 12\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"The correct answer is: 2\"\nassert solution() == \"2\", \"The correct answer is: 2\"\nassert solution() == \"4\", \"The correct answer is: 4\"\nassert solution() == \"1\", \"The correct answer is: 1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3\\n17 18\\n15 24\\n12 15') == '6\\n'\nassert solution('Input\\n2\\n10 16\\n7 17') == '-1\\n'\nassert solution('Input\\n5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30') == '5\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) == \"6\"\nassert solution(solution) =="
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 6, \"The solution is incorrect. Expected: 6, actual: \" + str(solution(3))\nassert solution(2) == -1, \"The solution is incorrect. Expected: -1, actual: \" + str(solution(2))\nassert solution(5) == 5, \"The solution is incorrect. Expected: 5, actual: \" + str(solution(5))"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == 5\nassert solution() == -1"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"2\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3'\nassert solution('bb') == '2\\n1 0\\n1 3'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0 0\"\nassert solution(\"bbbb\") == \"0\\n0 0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"1\\n1\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 2 3\\n4 1 5\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1\\n1\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 2 3\\n4 1 5\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n4 3 2\\n5 6\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 6\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 1\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 5\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test Case {test_case} Failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"5 1000000007\") == \"2\"\nassert solution(\"3 1000000007\") == \"0\"\nassert solution(\"1 1000000007\") == \"0\"\nassert solution(\"4 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"5 1000000007\") == \"5\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\nassert solution(\"3 2000000007\") == \"3\\n\"\nassert solution(\"1 1000000007\") == \"1\\n\"\nassert solution(\"4 2000000007\") == \"4\\n\"\nassert solution(\"5 3000000007\") == \"5\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('5 2000000003') == '4'\nassert solution('1 1') == '1'\nassert solution('1 5') == '1'\nassert solution('2 3') == '2'\nassert solution('3 2') == '1'\nassert solution('5 1') == '1'\nassert solution('1 5') == '1'\nassert solution('5 3') == '2'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 5 1\\n-') == '999999228'\nassert solution('2 2 3 3\\n+-+') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\\n\", \"The output does not match.\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n\nfrom typing import List"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\"\nassert solution(\"1 2 3 1\") == \"2\\n\"\nassert solution(\"10 2 1 7\") == \"0\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"10 5\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"5 3\") == \"15\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n') == '6\\n'\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\", \"Please provide a valid input\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\", \"Incorrect Output\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6\\n'\nassert solution('5 3') == '10\\n'\nassert solution('7 3') == '28\\n'\nassert solution('10 3') == '100\\n'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n', \"Your implementation is incorrect. Please check the constraints and test cases.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"12\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"20\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"13\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n\") == \"11\\n\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n\") == \"196\\n\"\nassert solution(\"7\\n1 2\\n3 4\\n5 6\\n\") == \"1320\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 5\") == \"15\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n1 5 6 7 1 3 4\") == \"128\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Test Case 1 failed!\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"5\"\nprint(5) # This should print 5"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1') == '2'\nassert solution('3\\n0 2 0\\n1 0 3') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Solution should be 2.\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution() == '4'\nassert solution() == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2, \"Expected 2 but got \" + solution(3)\nassert solution(3) == 2, \"Expected 2 but got \" + solution(3)\nassert solution(11) == 18, \"Expected 18 but got \" + solution(11)"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"2\"\nassert solution(4) == \"3\"\nassert solution(5) == \"3\"\nassert solution(6) == \"4\"\nassert solution(7) == \"4\"\nassert solution(8) == \"5\"\nassert solution(9) == \"6\"\nassert solution(10) == \"6\"\nassert solution(11) == \"9\"\nassert solution(12) == \"10\"\nassert solution(13) == \"10\"\nassert solution(14) == \"12\"\nassert solution(15) == \"13\"\nassert solution(16) == \"13\"\nassert solution(17) == \"14\"\nassert solution(18) == \"16\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case not passing\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces') == 'YES\\n'\nassert solution('6 5\\nvk*cup\\nvkcup') == 'YES\\n'\nassert solution('1 1\\nv\\nk') == 'NO\\n'\nassert solution('9 6\\ngfgf*gfgf\\ngfgfgf') == 'NO\\n'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"YES\"\nassert solution == \"YES\"\nassert solution == \"YES\"\nassert solution == \"NO\"\nassert solution == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 10\") == \"YES\"\nassert solution(\"6 5\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"9 6\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n'''\n6 10\ncode*s\ncodeforces\n''') == 'YES'\n\nassert solution(\n'''\n6 5\nvk*cup\nvkcup\n''') == 'YES'\n\nassert solution(\n'''\n1 1\nv\nk\n''') == 'NO'\n\nassert solution(\n'''\n9 6\ngfgf*gfgf\ngfgfgf\n''') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.8\"\nassert solution(\"2\\n0.1 0.2\") == \"0.26\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"Input\\n2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.260000000000\\n', \"Output is not correct.\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == 0.8\nassert solution('2\\n0.1 0.2') == 0.26"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == 0.8\nassert solution(\"2\\n0.1 0.2\") == 0.26\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.800000000000\"\n\nassert solution(input()) == \"0.260000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"5.0000000000\"\nassert solution(stdin=input()) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5.0000000000', \"The solution should return 5.0000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 6, 1, 2, 1) == \"4.7142857143\" # pass\nprint(\"All tests passed.\")"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 10 1 2 5\\n3 6 1 2 1\\n') == 5.0000000000\nassert solution('5 10 1 2 5\\n3 6 1 2 1\\n') == 4.7142857143\nprint('All test cases passed.')"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.250\\n\" # correct solution\nassert solution(input()) == \"0.279\\n\" # correct solution"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    0.000 0.500 0.750 1.000 2.000 3.000\n    3\n    4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '''\n    0.250\n'''\n\nassert solution('''\n    3\n    4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '''\n    0.279\n'''"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\", \"Test 1\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\", \"Test 2\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\", \"Incorrect output\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.279\\n\", \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.250\"\nassert solution(input()) == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.279'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 18, \"The output is incorrect\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1\\n0 0') == '8'\nassert solution('1 5\\n5 2') == '18'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\", \"The length of minimal path of the quadcopter to surround the flag and return back should be 18.\"\nassert solution(\"0 1\\n0 0\") == \"8\", \"The length of minimal path of the quadcopter to surround the flag and return back should be 8.\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1,5) == 18\nassert solution(0,1) == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '10'\nassert solution(10) == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {stdin}, expected output {expected_output}, got {solution(input())}\"\n\ninput_data = [1, 2, 3]\nassert solution(str(len(input_data))) == \"0\", f\"Test failed with input {input_data}, expected output 0, got {solution(str(len(input_data)))}\"\n\ninput_data = [1, 1, 2, 2]\nassert solution(str(len(input_data))) == \"2\", f\"Test failed with input {input_data}, expected output 2, got {solution(str(len(input_data)))}\"\n\ninput_data = [1, 4, 1, 4, 9]\nassert solution(str(len(input_data))) == \"2\", f\"Test failed with input {input_data}, expected output 2, got {solution(str(len(input_data)))}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0, \"Expected 0, got {}\"\nassert solution(4) == 2, \"Expected 2, got {}\"\nassert solution(5) == 2, \"Expected 2, got {}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}, expected {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabccc') == 'YES', \"Test 1\"\nassert solution('bbacc') == 'NO', \"Test 2\"\nassert solution('aabc') == 'YES', \"Test 3\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\nassert solution(\"aaabbbb\") == \"NO\"\nassert solution(\"aabcc\") == \"YES\"\nassert solution(\"abccba\") == \"YES\"\nassert solution(\"abcdef\") == \"YES\"\nassert solution(\"abbcde\") == \"NO\"\nassert solution(\"abc\") == \"YES\"\nassert solution(\"acbc\") == \"NO\"\nassert solution(\"aaaabbbc\") == \"NO\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaabccc') == \"YES\"\nassert solution('bbacc') == \"NO\"\nassert solution('aabc') == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2', \"Testcase 1\"\nassert solution(input()) == '2', \"Testcase 2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5\\n4 1 2 5 3\\n\\nOutput\\n2\\n\\nInput\\n4\\n4 1 3 2\\n\\nOutput\\n2\\n\") == \"Output\\n2\\n2\\n\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n5\\n4 1 2 5 3\") == \"Output\\n2\"\n\nassert solution(\"Input\\n4\\n4 1 3 2\") == \"Output\\n2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 2\nassert solution(input()) == 2\nassert solution(input()) == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4 1 3 2\") == \"2\"\nassert solution(\"4\\n4 1 2 5 3\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1') == '3.5'\nassert solution('6 3') == '4.96'\nassert solution('2 2') == '1.76'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"3.5\", \"Test Case 1\"\nassert solution(\"6 3\") == \"4.96\", \"Test Case 2\"\nassert solution(\"2 2\") == \"1.76\", \"Test Case 3\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n6 3\\n2 2\\n2 2') == '3.500000000000\\n'\nassert solution('6 3\\n6 1\\n2 2\\n2 2') == '4.958333333333\\n'\nassert solution('2 2\\n2 2\\n2 2\\n2 2') == '1.750000000000\\n'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case not passing\"\n\nfrom typing import List"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The solution is not correct\"\nprint(\"The solution is correct\")"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n\") == \"3.500000000000\\n4.958333333333\\n1.750000000000\\n\", \"Test case 1 incorrect\"\nassert solution(\"6 3\\n6 1\\n2 2\\n\") == \"3.500000000000\\n4.958333333333\\n1.750000000000\\n\", \"Test case 2 incorrect\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\", \"Test case 3 incorrect\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n6 3\\n2 2\\n2 2\") == \"3.500000000000\\n4.958333333333\\n1.750000000000\"\nassert solution(\"6 3\\n2 2\\n2 2\") == \"4.958333333333\\n3.916666666667\\n1.750000000000\"\nassert solution(\"2 2\\n2 2\") == \"1.750000000000\\n1.750000000000\"\nassert solution(\"2 2\\n2 2\") == \"1.750000000000\\n1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(6, 1)) == '3.5'\nassert solution(str(6, 3)) == '4.96'\nassert solution(str(2, 2)) == '1.76'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<>\") == \"3\"\nassert solution(\"3\\n4\\n<--\") == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nfor i in range(t):\n    n = int(input())\n    s = input()\n    output = solution(s)\n    print(output)\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<--\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<->\\n5\\n>>>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n-><>\") == \"0\"\nassert solution(\"4\\n4\\n<->\") == \"3\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n->\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"4\\n4\\n->-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nsolution(\"4\\n4\\n<-\\n5\\n>>>>>\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\"\nassert solution(input()) == \"3\\n5\\n3\\n0\"\nassert solution(input()) == \"5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"3\\n3\\n<-\\n2\\n<>\") == \"2\\n2\\n3\\n0\"\n\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>\") == \"5\\n3\\n5\\n0\"\nassert solution(\"3\\n3\\n<-\\n2\\n<>\") == \"2\\n2\\n3\\n0\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10 \\n202\\n101 101 101 101 \\n-1'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101 \\n-1'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10 \\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101 \\n'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n3\\n4 5\\n4 5\\n4 10\\n\\nInput\\n4\\n1 100\\n100 1\\n1 100\\n100 1\\n\\nInput\\n3\\n1 1\\n100 100\\n1 1\\n\\n') == '16\\n9 9 10\\n\\n202\\n101 101 101 101\\n\\n-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3\\n4 5\\n4 5\\n4 10\\n\\nInput\\n4\\n1 100\\n100 1\\n1 100\\n100 1\\n\\nInput\\n3\\n1 1\\n100 100\\n1 1\\n') == 'Output\\n16\\n9 9 10 \\n202\\n101 101 101 101 \\n-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"9 9 10\"\nassert solution(4) == \"16\"\nassert solution(4) == \"202\"\nassert solution(4) == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"16\\n9 9 10 \\n202\\n101 101 101 101\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2\\n', \"Test case 1 failed.\"\nassert solution('3\\n1 2 3') == '0 2\\n', \"Test case 2 failed.\"\nassert solution('5\\n1 2 3 2 2') == '0 1 3\\n', \"Test case 3 failed.\"\n\nfor k in range(1, int(n/2)+1):\n    print(k, end=' ')\nprint()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\\n3\\n1 2 3\") == \"1 2 2\\n0 2\\n0\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1 2 2\\n'\nassert solution('3\\n1 2 3\\n') == '0 2\\n'\nassert solution('5\\n1 2 3 2 2\\n') == '0 1 3\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Solution: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\", \"Test 1 failed\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \", \"Test 2 failed\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \", \"Test 3 failed\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Solution should be {expected}, but got {solution}\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\", \"0 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\", \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1 2 2\\n0 2\\n0 1 3\\n', \"The function should return the expected output.\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"01100011\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('101101') == '110110', 'Input 1'\nassert solution('10010110') == '01100011', 'Input 2'\nassert solution('10') == '01', 'Input 3'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n\"\nassert solution(open(\"input2.txt\").read()) == \"0\\n\"\nassert solution(open(\"input3.txt\").read()) == \"-1\\n\"\nassert solution(open(\"input4.txt\").read()) == \"0\\n\"\nassert solution(open(\"input5.txt\").read()) == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(r\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\") == -1\nassert solution(r\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\\n') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case failed with input: {input()}\\nExpected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() # check if the function returns the expected output"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 1) == -1, \"Input 1\"\nassert solution(3, 4, 2) == 1, \"Input 2\"\nassert solution(3, 4, 3) == 0, \"Input 3\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"-1\"\nassert solution(\"1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution failed for input {solution_input} and output {solution_output}.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2 '\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your code is not correct\"\nprint(output())"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 3 1 2\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\"\nassert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 3 1 2 1 2\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 2 2 1 2 2 2\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5]) == ['2']\nassert solution([3]) == ['9999', '10000', '9998']"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 2 3 1 2'\nprint('All test cases passed')"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2 2 3 1 2', \"Expected output: 2 2 3 1 2, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5)) == \"103\"\nassert solution(str(6)) == \"105\"\nassert solution(str(3)) == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input}, {solution_output}\" for solution_input, solution_output in test_cases"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22\\n'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103\\n'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105\\n'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0\\n'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"22\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\\nOutput\\nYES\\n2 3 2 3\\n\\nInput\\n3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\\nOutput\\nYES\\n1 3 1 3\\n\\nInput\\n3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\\nOutput\\nYES\\n3 3 2 3\\n\\nInput\\n3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\\nOutput\\nNO\\n') == 'YES\\n2 3 2 3\\n\\nYES\\n1 3 1 3\\n\\nYES\\n3 3 2 3\\n\\nNO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}' but it's '{solution(input())}'.\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\nYES\\n1 3 1 3'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'\nassert solution('1 3 1 1\\n2 2 1 2\\n3 1 1 3\\n4 1 1 4') == 'NO'\nassert solution('1 3 1 2\\n2 2 1 3\\n3 1 1 4\\n4 1 1 5') == 'NO'\nassert solution('1 2 1 3\\n2 1 1 4\\n3 1 1 5\\n4 1 1 6') == 'NO'\nassert solution('1 1 1 2\\n2 1 1 3\\n3 1 1 4\\n4 1 1 5') == 'NO'\nassert solution('1 1 1 3\\n2 1 1 4\\n3 1 1 5\\n4 1 1 6') == 'NO'\nassert solution('1 2 2 3\\n2 1 1 4\\n3 1 1 5\\n4 1 1 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('1 1 1 4\\n2 1 1 5\\n3 1 1 6\\n4 1 1 7') == 'NO'\nassert solution('1 1 1 5\\n2 1 1 6\\n3 1 1 7\\n4 1 1 8') == 'NO'\nassert solution('1 1 1 6\\n2 1 1 7\\n3 1 1 8\\n4 1 1 9') == 'NO'\nassert solution('1 1 1 7\\n2 1 1 8\\n3 1 1 9\\n4 1 1 10') == 'NO'\nassert solution('1 1 1 8\\n2 1 1 9\\n3 1 1 10\\n4 1 1 11') == 'NO'\nassert solution('1 1 1 9\\n2 1 1 10\\n3 1 1 11\\n4 1 1 12') == 'NO'\nassert solution('1 1 1 10\\n2 1 1 11\\n3 1 1 12\\n4 1 1 13') == 'NO'\nassert solution('1 1 1 11\\n2 1 1 12\\n3 1 1 13\\n4 1 1 14') == 'NO'\nassert solution('1 1 1 12\\n2 1 1 13\\n3 1 1 14\\n4 1 1 15') == 'NO'\nassert solution('1 1 1 13\\n2 1 1 14\\n3 1 1 15\\n4 1 1 16') == 'NO'\nassert solution('1 1 1 14\\n2 1 1 15\\n3 1 1 16\\n4 1 1 17') == 'NO'\nassert solution('1 1 1 15\\n2 1 1 16\\n3"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case failed: {input}!= {output}\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\\n\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\\n\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\\n\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(\"1\\n4 1\\n2 3 4 1\\n\") == \"YES\"\nassert solution(\"1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"1\\n4 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"1\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\"\nassert solution(\"1\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"1\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\"\nassert solution(\"1\\n4 2\\n2 1 4 3\\n\") == \"YES\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4') == '''1 1\n3 1\n1 5\n4 4'''\n\nassert solution('7') == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6'''\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\", \"Ivan places knights on infinite chessboard. Initially there are 4 knights. If there is free cell which is under attack of at least 4 knights then he places new knight in this cell.\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"Ivan asks you to find initial placement of exactly 7 knights such that in the end there will be at least 4 knights.\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4\\n\\nInput\\n7\\n\\nOutput\\n2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\\nOutput\\n2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nprint('All tests passed')"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"1 1\n3 1\n1 5\n4 4\n\"\"\"\n\nassert solution(stdin) == \"\"\"2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n\"\"\"\n\nassert solution(stdin) == \"\"\"1 1\n3 1\n1 5\n4 4\n\"\"\"\n\nassert solution(stdin) == \"\"\"1 1\n3 1\n1 5\n4 4\n\"\"\"\n\nassert solution(stdin) == \"\"\"1 1\n3 1\n1 5\n4 4\n\"\"\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '-1', \"Expected -1, but got: \" + solution(stdin)"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == -1  # no moves\nassert solution(\"3\\n1 2 3\\n\") == 3  # empty third chest\nassert solution(\"3\\n1 2 1 2 3\\n\") == 5  # move 2 to empty second chest\nassert solution(\"3\\n1 2 1 2 1 2 3\\n\") == 8  # move 3 to empty third chest\nassert solution(\"3\\n1 2 1 2 1 2 1 2 3\\n\") == 12  # move 3 to empty fourth chest\nassert solution(\"3\\n1 2 1 2 1 2 1 2 1 2 3\\n\") == 17  # move 4 to empty fifth chest"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == '-1'\n\nassert solution('3\\n1 2 3\\n') == '3'\n\nassert solution('3\\n1 1 2\\n') == '2'\n\nassert solution('3\\n1 1 2\\n') == '2'\n\nassert solution('3\\n1 1 2\\n') == '2'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\nassert solution(\"4\\n1 2 3 4\\n\") == 6\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == 15"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == -1\nassert solution('3\\n1 2 3\\n') == 3\nassert solution('2\\n1 2\\n') == 2\nassert solution('3\\n1 2 3\\n') == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n\\n3\\n1 2 3') == 3\nassert solution('4\\n1 2 3') == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n\\n3\\n1 2 3') == '-1'\nassert solution('3\\n1 2 3') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n''') == -1\n\nassert solution('''\n3\n1 2 3\n''') == 3\n\nprint('All test cases pass!')"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='46 2\\n2018 214\\n') == '3\\n92 205 1'\nassert solution(stdin='2 10\\n5 3\\n') == '1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7\\n0 1 0 0 1 1 1\\n3\\n92 205 1\\n'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"2018 214\\n46 2\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"2018 214\\n46 2\\n46 2\\n2018 214\\n\") == \"7\\n0 1 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n46 2\\n46 2\\n2018 214\\n46 2\\n46 2\\n2018 214\\n46 2\\n46 2\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"46 2\\n2018 214\\n46 2\\n46 2\\n2018 214\\n46 2\\n46 2\\n2018 214\\n46 2\\n46 2\\n46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n0 0 0 0 1 1 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"\"\"7\n0 1 0 0 1 1 1\n\n3\n92 205 1\"\"\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '7\\n0 1 0 0 1 1 1\\n3\\n92 205 1'\nassert solution(input()) == '3\\n92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"46 10\") == \"-1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"200 3\\n20 5\\n\") == \"2\\n1 1 1\\n\"\nassert solution(\"45 3\\n10 20\\n\") == \"2\\n10 10 20\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n3 20 20\\n6 2\\n1 3\\n2 6\\n\\nOutput\\n5.000000000000000\\n\\nInput\\n4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\\nOutput\\n0.400000000000000') == '5.000000000000000\\n\\n0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5.000000000000000'\nassert solution(input()) == '0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == '5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6') == '5.000000000000000'\nassert solution('4 1 1\\n2 3\\n3 2\\n2 3\\n3 2') == '0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 20 20\n6 2\n1 3\n2 6\n\"\"\") == \"5.000000000000000\\n\"\n\nassert solution(\"\"\"\n4 1 1\n2 3\n3 2\n2 3\n3 2\n\"\"\") == \"0.400000000000000\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.000000000000000\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\nassert solution('10 12') == '6'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"4\", \"First sample\"\nassert solution(\"8 2\") == \"5\", \"Second sample\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num} failed: Expected output '{expected_output}', got '{solution(input())}'.\"\nfor test_case_num in range(1, len(test_cases) + 1):\n    test_case = test_cases[test_case_num - 1]\n    expected_output = test_case[0]\n    assert solution(test_case[1:]) == expected_output, f\"Test case {test_case_num} failed: Expected output '{expected_output}', got '{solution(test_case[1:])}'.\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Conan\"\nassert solution(input()) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is not correct. \\nExpected: {output}\\nReceived: {solution(input())}\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Conan\"\nassert solution() == \"Agasa\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, \"4 5 7\") == \"Conan\"\nassert solution(2, \"1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5 7\\n2\\n1 1\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##. \\n..# \\n#.# \\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 3\\n\") == \"3 3\\n3..#\\n..#\"\nassert solution(stdin=\"5 7\\n\") == \"7 7\\n7. #.#\\n. #.#\\n. #.#\\n. #.#\"\nassert solution(stdin=\"10 10\\n\") == \"10 10\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\"\nassert solution(stdin=\"100 100\\n\") == \"100 100\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\\n#.#.#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n#\\n#\"\nassert solution(\"3 3\\n\") == \"3 3\\n#\"\nassert solution(\"2 4\\n\") == \"3 4\\n###\"\nassert solution(\"3 4\\n\") == \"3 4\\n###\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3\\n#.#..\\n..#..\\n#.#..\"\nprint(solution(\"2 3\"))"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3') == '3 3\\n3..#\\n.#.#'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"3 3\\n##.##\\n..#..#\\n#.#....\\n\"\nprint(\"Test passed\")"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the values of A and B: \")) == expected_output, \"The provided solution is incorrect.\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n3.#\\n#..#\"\n\nassert solution(\"5 6\\n\") == \"5 6\\n#.#\\n#.##\\n#..#\\n#...#\\n\"\n\nassert solution(\"1 1\\n\") == \"1 1\\n..#\"\n\nassert solution(\"5 5\\n\") == \"5 5\\n#.#\\n#.##\\n#..#\\n#...#\\n\"\n\nassert solution(\"2 2\\n\") == \"2 2\\n..#\\n.##\\n\"\n\nassert solution(\"1 1\\n\") == \"1 1\\n..#\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n') == '4\\n1 3 4 5 \\n'\nassert solution('3 2\\n+ 1\\n- 2\\n') == '1\\n3  \\n'\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n') == '0\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '3\\n2 3 5 \\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1') == '4\\n1 3 4 5'\nassert solution('3 2\\n+ 1\\n- 2\\n') == '1\\n3'\nassert solution('2 4\\n+ 1\\n- 1\\n+ 2\\n- 2') == '0'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4') == '3\\n2 3 5'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n\") == \"\\n4\\n1 3 4 5 1\\n\\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"\\n1\\n3 1\\n\\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n\") == \"\\n0\\n1 2 3 5\\n\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1''') == '''4\n1 3 4 5 '''\nassert solution('''3 2\n+ 1\n- 2\n''') == '''1'''\nassert solution('''2 4\n+ 1\n- 1\n+ 2\n- 2''') == '''0'''\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4''') == '''3\n2 3 5 '''\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1''') == '''0'''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3  \\n\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n2 3  \\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3  \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 4\\n+ "
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n+ 1\n+ 2\n- 2\n- 1\n''') == '''\n4\n1 3 4 5 \n''', \"Test 1\"\n\nassert solution('''\n3 2\n+ 1\n- 2\n''') == '''\n1\n3 \n''', \"Test 2\"\n\nassert solution('''\n2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '''\n0\n''', \"Test 3\"\n\nassert solution('''\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n''') == '''\n3\n2 3 5 \n''', \"Test 4\"\n\nassert solution('''\n2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '''\n0\n''', \"Test 5\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\\n\\n- 1\\n+ 2\\n- 2\") == \"1\\n3 2\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\") == \"0\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\") == \"0\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\\n\") == \"1\\n\"\nassert solution(\"10\\n\\n20\\n\\n30\\n\\n40\\n\\n\") == \"0\\n\"\nassert solution(\"3 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 2 3\n1 2 3\n9\n''') == 4\n\nassert solution('''\n5 1\n5 4 2 4 5\n2\n5\n''') == 1\n\nassert solution('''\n3 2\n1 2\n2 3\n3 4\n5 6\n7 8\n9 10\n''') == 0"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\"\nassert solution(\"3 3\\n5 10 15 20\\n5 10 15 20\") == \"0\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n100\") == \"0\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 "
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\na 2 3\\nb 1 2 3\\nx 9\\n\") == \"4\"\nassert solution(\"5 1\\nx 5 4 2 4 5\\nx 2\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution() == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3) + \" \" + str(3) + \"\\n\" + str(1) + \" \" + str(2) + \" \" + str(3) + \"\\n\" + str(1) + \" \" + str(2) + \" \" + str(3) + \"\\n\" + str(9)) == \"4\\n\"\nassert solution(str(5) + \" \" + str(1) + \"\\n\" + str(5) + \" \" + str(4) + \" \" + str(2) + \" \" + str(4) + \" \" + str(5) + \"\\n\" + str(2)) == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n') == '4\\n\\n1\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\ncab\\n') == 'NO'\nassert solution('3 4\\ncab\\n') == 'cbd'\nassert solution('4 4\\nab\\n') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncab\\n\") == \"NO\"\nassert solution(\"3 4\\ncab\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nbca\") == \"NO\"\nassert solution(\"3 4\\nbca\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n0101') == 'quailty'\nassert solution('6 1\\n010101') == 'once again'\nassert solution('6 5\\n010101') == 'tokitsukaze'\nassert solution('4 1\\n0011') == 'once again'"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n0101\\n') == 'quailty'\nassert solution('6 1\\n010101\\n') == 'once again'\nassert solution('6 5\\n010101\\n') == 'tokitsukaze'\nassert solution('4 1\\n0011\\n') == 'once again'\nprint('All test cases pass')"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n\nfrom typing import List"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed for input {solution_input} and output {solution_output}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"50\"\nassert solution(input()) == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    2 4 50\n    20 100\n    60 10 40 80\n    ''') == '50'\n\nassert solution('''\n    1 2 10\n    11\n    ''') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 4 50\n20 100\n60 10 40 80\"\"\") == \"50\"\n\nassert solution(\"\"\"1 2 10\n11\n15 7\"\"\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == output_string, f\"Test failed: {input_string}!= {output_string}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\"\nassert solution(\"3 5\\n1 1\\n\") == \"1 1\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(stdin=input())}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\"\n\nassert solution(\"2 3\\n1 1\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3\\n3 3\\n'\nassert solution('2\\n1 2 3 4 5') == '0\\n1\\n2\\n3\\n4\\n5\\n'\nassert solution('5\\n0 1 2 3 4 5') == '0\\n0 1 2 3 4 5\\n'"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n-2 5 -1\n\"\"\") == \"\"\"\n2\n2 3\n3 3\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3\\n3 3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"-1 -2 0 1 -3 4 -5 6\") == \"1\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"3\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"2\n2 3\n3 3\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\", \"Test case 1 failed\"\nassert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\", \"Test case 2 failed\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n2 3\\n3 4\\n4 5\", \"Test case 3 failed\"\nassert solution(\"7\\n-3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 6\\n6 7\", \"Test case 4 failed\"\nassert solution(\"10\\n-1000000000 1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 10\", \"Test case 5 failed\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n2 3\\n3 3\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('inputs/emuskald.txt', 'r')) == '3\\n'\nassert solution(open('inputs/emuskald_2.txt', 'r')) == '1\\n'\nassert solution(open('inputs/emuskald_3.txt', 'r')) == '3\\n'\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"3\\n\"\n\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"1\\n\"\n\nassert solution(\"2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"3\\n\"\n\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"1\\n\"\n\nassert solution(\"2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"3\\n\"\n\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 5\") == \"1\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\\n') == '3'\nassert solution('1\\n0 4\\n\\n2\\n1 10\\n2 2\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2\\n') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n'\nassert solution('3 50\\n25 25 50\\n') == '3\\n0 25 50\\n'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == 16, \"Test 1 failed\"\nassert solution(\"3 50\\n25 25 50\") == 3, \"Test 2 failed\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 16\n\n```python\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution() == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}:\\nExpected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '\nassert solution('3 50\\n25 25 50') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\"\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Expected output: 3, got: {}\".format(solution())  # Expected output: 3, got: 1"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"180\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21\\n'\nassert solution('1\\n5 10') == '50\\n'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == 21\nassert solution(\"1\\n5 10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == 21\nassert solution(\"1\\n5 10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"4\") == \"4\\n\"\nassert solution(\"9\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: 1\"\nassert solution(stdin) == \"2\\n\", \"Output: 2\"\nassert solution(stdin) == \"1\\n\", \"Output: 1\"\nassert solution(stdin) == \"4\\n\", \"Output: 4\"\nassert solution(stdin) == \"3\\n\", \"Output: 3\"\nassert solution(stdin) == \"4\\n\", \"Output: 4\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 10') == '2\\n'\nassert solution('5\\n0 1 2 3 4') == '1\\n'\nassert solution('4\\n0 0 0 0') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"The output is incorrect.\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\nprint(solution())"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5\\n', 'Incorrect output'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5\\n'\nprint('5')"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"2\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"5\nW 1\nW 2\nW 3\nW 4\nW 5\nB 1\nB 2\nB 3\nB 4\nB 5\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"6\nW 1\nW 2\nW 3\nW 4\nW 5\nB 1\nB 2\nB 3\nB 4\nB 5\nW 6\n\"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"7\nW 1\nW 2\nW 3\nW 4\nW 5\nW 6\nW 7\nB 1\nB 2\nB 3\nB 4\nB 5\nW 7\nW 8\n\"\"\"\n) == \"5\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\", \"The solution should be 4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"5\\nB 3\\nW 2\\nB 1\\nW 3\\nW 1\\nB 4\\n\") == \"6\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\nB 4\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"1\\nW 1\\nB 2\\nW 2\\nW 3\\nB 1\\nB 3\\nW 1\\nW 3\\nB 2\\nB 3\\nB 2\") == \"4\"\nassert solution(\"1\\nW 1\\nB 2\\nW 2\\nW 3\\nB 1\\nB 3\\nW 1\\nW 3\\nB 2\\nB 3\\nB 2\") == \"4\"\nassert solution(\"1\\nW 1\\nB 2\\nW 2\\nW 3\\nB 1\\nB 3\\nW 1\\nW 3\\nB 2\\nB 3\\nB 2\") == \"4\"\nassert solution(\"1\\nW 1\\nB 2\\nW 2\\nW 3\\nB 1\\nB 3\\nW 1\\nW 3\\nB 2\\nB 3\\nB 2\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor i in range(int(input())):\n    assert solution(input()) == output()"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"4\\n4\\n4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 4\nassert solution(5) == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\\n4\"\nassert solution() == \"Output\\n4\"\nassert solution() == \"Output\\n4\"\nassert solution() == \"Output\\n4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == 4\nassert solution(\"5\\n3\\n5\\n\") == 4"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '2'\n\nprint('Input')\nn = int(input())\na = list(map(int, input().split()))\n\nassert len(a) == n\n\nlargest = float('-inf')\n\nfor i in range(n):\n    if a[i] > 0 and a[i] < largest:\n        largest = a[i]\n\nprint(largest)"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Solution is not correct\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output: 2\", \"Your solution is incorrect.\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n4\\n2\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n2\\n4\\n8\\n1\\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"8\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2\\n\\nOutput\\n2\\n\\nInput\\n8\\n1 2 4 8 16 32 64 576\\n\\nOutput\\n32\\n') == '32\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2', \"The output should be '2', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(stdin=\"50 2\\n100 25\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor input_ in [400, 50, 50, 50, 400, 400, 400, 400, 400]:\n    print(solution(str(input_)))"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2\\n'\nassert solution('50 2\\n100 25\\n') == '3\\n'\nassert solution('50 2\\n100 25\\n') == '3\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\nassert solution(\"5 2\\n\") == \"22\\n\"\nassert solution(\"6 3\\n\") == \"196\\n\"\nassert solution(\"7 3\\n\") == \"584\\n\"\nassert solution(\"8 3\\n\") == \"2048\\n\"\nassert solution(\"9 4\\n\") == \"9536\\n\"\nassert solution(\"10 4\\n\") == \"362880\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"10 4\") == \"6\\n\", \"Test case 2 failed\"\nassert solution(\"7 2\") == \"11\\n\", \"Test case 3 failed\"\nassert solution(\"4 5\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"10 8\") == \"480\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\\n\"  # test case 1\nassert solution(\"3 3\") == \"2\\n\"  # test case 2\nassert solution(\"2 2\") == \"1\\n\"  # test case 3\nassert solution(\"4 2\") == \"1\\n\"  # test case 4\nassert solution(\"1 2\") == \"3\\n\"  # test case 5\nassert solution(\"2 3\") == \"2\\n\"  # test case 6\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output. Please check the problem statement for the correct format.\"\nprint(6)"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 1\"\nassert solution(\"10\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 2\"\nassert solution(\"5\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 3\"\nassert solution(\"15\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 4\"\nassert solution(\"10000\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 5\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Example test case\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"1068702437\"\nassert solution(\"5\") == \"1903516716\"\nassert solution(\"6\") == \"2512529678\"\nassert solution(\"7\") == \"3386635856\"\nassert solution(\"8\") == \"4590366016\"\nassert solution(\"9\") == \"5946539116\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"10\") == \"998244353\"\nassert solution(\"2\") == \"0\"\nassert solution(\"11\") == \"998244353\"\n\nfrom fractions import gcd"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"499122178\"\nassert solution(10) == \"1005032655\"\nassert solution(100) == \"998307247\"\nassert solution(1000) == \"999656209\"\nassert solution(1000000000) == \"9998354653\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test 1 failed.\"\nassert solution(\"5\\n\") == \"318758194\\n1015625\\n375000\\n\", \"Test 2 failed.\"\nassert solution(\"6\\n\") == \"792485096\\n535065596\\n222999889\\n\", \"Test 3 failed.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"499122178\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '6669'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"6\\n\"\nassert solution(\"3\\n\") == \"6669\\n\"\nassert solution(\"10\\n\") == \"-1\\n\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 6, \"Test failed\"\nassert solution(\"3\") == 6669, \"Test failed\"\nassert solution(\"10\") == -1, \"Test failed\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == '6'\nassert solution(3) == '6669'\nassert solution(10) == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '6669'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5\\n\\nOutput\\n1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\\nInput\\n2\\n\\nOutput\\n-1\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nassert solution('2') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\n-1'''"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'Solution to problem'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\n\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"Yes\" #pass\nassert solution() == \"No\" #pass\nassert solution() == \"No"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\", \"Solution is incorrect\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {index + 1} failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes', \"One of the sequences is not a valid BFS traversal of the given tree.\"\n\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No', \"One of the sequences is a valid BFS traversal of the given tree.\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\"\"\") == \"24500\"\n\nassert solution(\"\"\"\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n\"\"\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Test Case {test_case} failed. Expected output: {expected_output}, Received output: {solution(input_string)}\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == 24500\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000') == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"24500\\n\"\nassert solution(open(\"example.in\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"24500\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"24500\"\nassert solution() == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == 24500\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000') == -1\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n\nimport math"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.828427125\", \"Expected 0.828427125, got {} instead\".format(solution(input()))\nassert solution(input()) == \"19.668384925\", \"Expected 19.668384925, got {} instead\".format(solution(input()))"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Expected '{output}', got '{solution(stdin=input())}'.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\", \"3000\"),\n    (\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\", \"992\"),\n    (\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\", \"1\"),\n]"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == '3000'\n\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == '992'\n\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3000\\n\", \"Expected Output: 3000\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\n\nassert solution('''\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n''') == '992'\n\nassert solution('''\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected output: {}, got: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(n) +'' + str(m) + '\\n') == str(6), \"Test failed\"\n\nassert solution(str(n) +'' + str(m) + '\\n' + str(n) +'' + str(l_i) + '\\n' + str(n) +'' + str(s_i) + '\\n' + str(n + m) +'' + str(c_i) + '\\n' + str(n + m) + '\\n') == str(62), \"Test failed\"\n\nassert solution(str(n) +'' + str(m) + '\\n' + str(n) +'' + str(l_i) + '\\n' + str(n) +'' + str(s_i) + '\\n' + str(n + m) +'' + str(c_i) + '\\n' + str(n + m) + '\\n') == str(62), \"Test failed\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\nOutput\\n6\\n\\nInput\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\nOutput\\n2\\n\\nInput\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\\nOutput\\n62\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 6\nassert solution(stdin=\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 2\nassert solution(stdin=\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"The solution is incorrect\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6\\n'\n\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2\\n'\n\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62\\n'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Output\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n\"\"\") == 6\n\nassert solution(r\"\"\"\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100\n\"\"\") == 2\n\nassert solution(r\"\"\"\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4\n\"\"\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\nOutput\\n6\\n\\nInput\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\nOutput\\n2\\n\\nInput\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\\nOutput\\n62') == 'Output\\n6\\n\\nInput\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\nOutput\\n2\\n\\nInput\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\\nOutput\\n62'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\", \"Test failed\"\nassert solution(\"abaa\") == \"YES\", \"Test failed\"\nassert solution(\"aabb\") == \"NO\", \"Test failed\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaba') == 'YES', \"Invalid Output: Expected YES, got {}\".format(solution('aaba'))\nassert solution('abaa') == 'YES', \"Invalid Output: Expected YES, got {}\".format(solution('abaa'))\nassert solution('aabb') == 'NO', \"Invalid Output: Expected NO, got {}\".format(solution('aabb'))"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('abab') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n3\\n2\\n1\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"YES\" # check if it is possible to swap all pairs of positions so that the permutation stays the same."
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"NO\"  # Test case 1\nassert solution(1) == \"YES\"  # Test case 2"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n\") == \"YES\\n1,2\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'NO\\n'\nprint('YES')"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"NO\\n\"\nassert solution(\"1\\n\") == \"YES\\n(0, 1)\\n(1, 0)\\n(2, 2)\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_id} failed: {expected_output}!= {solution(input())}\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ab') == 'a?'\nassert solution('ac') == 'a?a'\nassert solution('cd') == 'a?a.cd'\nassert solution('1 2') == 'a?a.1.2'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"1 2 3\") == \"Yes\\na?\"\n\nassert solution(\".svn\") == \"Yes\\na??\"\nassert solution(\".git\") == \"Yes\\na??\"\nassert solution(\"....\") == \"Yes\\na??\"\nassert solution(\"...\") == \"Yes\\na??\"\nassert solution(\"..\") == \"Yes\\na??\"\nassert solution(\".\") == \"Yes\\na??\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab\\nac\\ncd\\n1 2\\n\") == \"Yes\\na?\"\nassert solution(\"test\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\\n\") == \"Yes\\n?es?\"\nassert solution(\"a\\nb\\nc\\ndd\\n1 2 3 4\\n\") == \"No\"\nassert solution(\"test\\ntest2\\ntest3\\ntest4\\ntest5\\n1 2 3\\n\") == \"Yes\\n.???def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()} and expected output {expected_output}\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) =="
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format(solution(input()))\nassert solution(input()) == \"Yes\", \"Expected 'Yes', but got {}\".format"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"No\", \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\", solution(input())\n\nfrom typing import List"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test.txt\", \"r\")) == \"Yes\\na?\"\nassert solution(open(\"test.txt\", \"r\")) == \"Yes\\ntes?\"\n\nassert solution(open(\"test.txt\", \"r\")) == \"No\"\n\nassert solution(open(\"test.txt\", \"r\")) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"3 2\\nab\\nac\\ncd\\n1 2\\n\") == \"Yes\\na?\"\n\nassert solution(\n\"5 3\\ntest\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\\n\") == \"Yes\\n?es?\"\n\nassert solution(\n\"4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\\n\") == \"No\"\n\nassert solution(\n\"6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\\n\") == \"Yes\\n.???def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"3\"\nassert solution(\"3\\n2 3 1\") == \"1\"\nassert solution(\"3\\n3 2 1\") == \"2\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 3\") == \"3\"\nassert solution(\"3\\n2 3 2\") == \"2\"\nassert solution(\"3\\n3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 3 1\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"3\"\nassert solution(\"3\\n3 2 3\") == \"2\"\nassert solution(\"3\\n1 1 3\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n2 3 1\") == \"2\"\nassert solution(\"3\\n3 2 1\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 3 1\") == \"1\"\nassert solution(\"3\\n2 3 2\") == \"2\"\nassert solution(\"3\\n3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 3\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"3\"\nassert solution(\"3\\n3 2 3\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 3 1\") == \"1\"\nassert solution(\"3\\n2 3 2\") == \"2\"\nassert solution(\"3\\n3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 3\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"3\"\nassert solution(\"3\\n3 2 3\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 3 1\") == \"1\"\nassert solution(\"3\\n2 3 2\") == \"2\"\nassert solution(\"3\\n3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 3\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"3\"\nassert solution(\"3\\n3 2 3\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 3 1\") == \"1\"\nassert solution(\"3\\n2 3 2\") == \"2\"\nassert solution(\"3\\n3 2 2\") == \"2\"\nassert solution(\"3\\n1 1 3\") == \"1\"\nassert solution(\"3\\n1 2 2\") == \"2\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"3\"\nassert solution(\"3\\n3 2 3\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"3\\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"3\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"3\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"4\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"4\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"5\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"5\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"5\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"6\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"6\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"7\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"7\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"7\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"7\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"8\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"8\\n\"\nassert solution(\"25\\n1 2 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Correct\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"3\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"3\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"2\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"2\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"2\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"2\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"2\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"2\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"2\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"2\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"2\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"2\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"2\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"2\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"2\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\nprint(2)"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\nprint('All tests passed.')"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"0\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == \"2\\n\"\nassert solution(open('input2.txt').read()) == \"5\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n\") == \"11\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output\\n4\\n'\nassert solution(stdin) == 'Output\\n5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution() == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2 5') == '4', \"Expected: 4, but got: {}\".format(solution('7 2 5'))\nassert solution('10 3 10') == '5', \"Expected: 5, but got: {}\".format(solution('10 3 10'))"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\"\nprint(output())"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"The solution is not correct. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3 \"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == 2\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == 1\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    5 6\n    1 2\n    1 3\n    2 3\n    2 5\n    3 4\n    4 5\n\"\"\") == '2'\n\nassert solution(\"\"\"\n    4 4\n    1 2\n    1 3\n    1 4\n    3 4\n\"\"\") == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3 \\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '2 2 3'\nassert solution() == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n') == '2\\n2 3'\nassert solution('4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n') == '1\\n1 '"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes'\nassert solution('3\\n100 150 250') == 'No'\n\nsolution = '''\nimport math"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n75 150 75 50\") == \"Yes\\n\", \"Test 1\"\nassert solution(\"Input\\n3\\n100 150 250\") == \"No\\n\", \"Test 2\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Solution is not correct. Expected: '{output_str}', but got: '{solution(input_str)}'\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"150\", \"The maximum sum of array elements can be obtained if it is allowed to perform any number of described operations.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"150\\n\", \"Your solution is incorrect.\"\nassert solution(\"Input\\n2\\n50 50 50\\n\") == \"150\\n\", \"Your solution is incorrect.\"\nassert solution(\"Input\\n2\\n-1 -100 -1\\n\") == \"100\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, \"The solution is incorrect\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Test 1\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Test 2\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2\n50 50 50''') == '150'\nassert solution('''2\n-1 -100 -1''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Sample 1\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Sample 2\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\"\n\nassert solution(\"3\\n1 2 3 4 5\") == \"120\\n\"\nassert solution(\"3\\n6 1 2 3 4 5\") == \"130\\n\"\nassert solution(\"3\\n-1 -2 -3 -4 -5\") == \"90\\n\"\n\nassert solution(\"4\\n1 2 3 4\") == \"40\\n\"\nassert solution(\"4\\n5 6 7 8 9\") == \"50\\n\"\nassert solution(\"4\\n-1 -2 -3 -4\") == \"20\\n\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"150\\n\"\nassert solution(\"5\\n6 7 8 9 10\") == \"350\\n\"\nassert solution(\"5\\n-1 -2 -3 -4 -5\") == \"150\\n\"\n\nassert solution(\"6\\n1 2 3 4 5 6\") == \"50\\n\"\nassert solution(\"6\\n7 8 9 10 11 12\") == \"150\\n\"\nassert solution(\"6\\n-1 -2 -3 -4 -5 -6\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Test 1\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Test 2\"\n\nsolution(\"2\\n50 50 50\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 5\nab a\ncc c\nca a\nee c\nff d\n'''\n) == '4\\n'\n\nassert solution(\n'''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n'''\n) == '1\\n'\n\nassert solution(\n'''\n6 2\nbb a\nba a\n'''\n) == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d') == '4'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1'\nassert solution('6 2\\nbb a\\nba a\\n') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 4, \"Expected 4, got %s\" % solution(open(\"input.txt\", \"r\"))\nassert solution(open(\"input_2.txt\", \"r\")) == 1, \"Expected 1, got %s\" % solution(open(\"input_2.txt\", \"r\"))\nassert solution(open(\"input_3.txt\", \"r\")) == 0, \"Expected 0, got %s\" % solution(open(\"input_3.txt\", \"r\"))"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4, \"Expected 4, got {}\".format(solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\"))\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1, \"Expected 1, got {}\".format(solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\"))\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0, \"Expected 0, got {}\".format(solution(\"6 2\\nbb a\\nba a\\n\"))"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == input()"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"The output is incorrect. Expected: {output}, Actual: {solution(stdin)}\"\nfor i, (a1, b1) in enumerate(stdin.split('\\n')):\n    a1, b1 = a1.strip(), b1.strip()\n    assert len(a1) == 2, f\"The first line should contain exactly 2 strings, found {len(a1)}.\"\n    assert len(b1) == 1, f\"The second line should contain exactly 1 string, found {len(b1)}.\"\n    assert a1[0] in 'abcdefghijklmnopqrstuvwxyz', f\"The first string should contain only letters from the English alphabet, found '{a1[0]}'.\"\n    assert a1[1] in 'abcdefghijklmnopqrstuvwxyz', f\"The second string should contain only letters from the English alphabet, found '{a1[1]}'.\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1\\n', \"Expected 1, got {} instead\".format(solution())\nassert solution() == '3\\n', \"Expected 3, got {} instead\".format(solution())\nassert solution() == '10\\n', \"Expected 10, got {} instead\".format(solution())"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output\\n10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nimport math"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"The expected output is 1, but it is not.\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\nassert solution(4) == 1262143847\n\nfrom functools import reduce"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'\n\nfrom functools import reduce"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.000000000000\"\nassert solution(input()) == \"1.250000000000\"\nassert solution(input()) == \"1.250000000000\"\nassert solution(input()) == \"1.250000000000\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output\nprint(\"OK\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 10\nassert solution(6) == -1"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n12\\n11 8\\n7 5') == '10.0000000000\\n'\nassert solution('3\\n1\\n1 4 1\\n2 5 3') == '-1\\n'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3') == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10.0000000000\", \"Your code is incorrect. Please check the solution.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '10.0000000000\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10.0000000000\\n\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10.0000000000\", solution(stdin)"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}', but got '{solution(input())}'.\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"0\\n\"\nassert solution(10) == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\\n\"\nassert solution(\"10\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Wh.\", \"The first example is incorrect.\"\nassert solution(\"1 2\") == \"Wh.Wh.\", \"The second example is incorrect.\"\nassert solution(\"1 111111111111\") == \"Wh.Wh.Wh.Wh.Wh.\", \"The third example is incorrect.\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111\\n') == 'Wh.\\nWh.\\nWh.'\n\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n') == 'abdef\\n.defab\\n.abab\\n.abab\\n.abab\\n'\n\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n') == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Wh.', \"Output should be 'Wh.' for the first example\"\nassert solution(input()) == 'abdef', \"Output should be 'abdef' for the second example\"\nassert solution(input()) == 'Areyoubusy', \"Output should be 'Areyoubusy' for the third example\"\nassert solution(input()) == '.', \"Output should be '.' for the fourth example\"\nassert solution(input()) == '.', \"Output should be '.' for the fifth example\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.'\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef'\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Wh.\"\nassert solution(\"1 2\") == \"Wh.\"\nassert solution(\"1 111111111111\") == \"Wh.\"\n\nassert solution(\"0 69\") == \"abdef\"\nassert solution(\"1 194\") == \"abdef\"\nassert solution(\"1 139\") == \"abdef\"\nassert solution(\"0 47\") == \"abdef\"\nassert solution(\"1 66\") == \"abdef\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\"\nassert solution(\"3 75\") == \"Areyoubusy\"\nassert solution(\"3 530\") == \"Areyoubusy\"\nassert solution(\"4 1829\") == \"Areyoubusy\"\nassert solution(\"4 1651\") == \"Areyoubusy\"\nassert solution(\"3 187\") == \"Areyoubusy\"\nassert solution(\"4 584\") == \"Areyoubusy\"\nassert solution(\"4 255\") == \"Areyoubusy\"\nassert solution(\"4 774\") == \"Areyoubusy\"\nassert solution(\"2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got {solution(input())}\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\", \"Incorrect answer\"\nassert solution(\"? -? = 1\") == \"Impossible\", \"Incorrect answer\"\nassert solution(\"? = 1000000\") == \"Possible\", \"Incorrect answer\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"? +? = 1\") == \"Impossible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? +? +? = 1000000\") == \"Impossible\"\nassert solution(\"? +? -? +? = 42\") == \"Possible\"\nassert solution(\"? +? -? +? = 43\") == \"Possible\"\nassert solution(\"? +? = 1000001\") == \"Impossible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible', 'Incorrect answer'\nassert solution('? -? = 1') == 'Impossible', 'Incorrect answer'\nassert solution('? = 1000000') == 'Possible', 'Incorrect answer'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7 4 5\\n\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '7 4 5\\n', 'Expected output not found'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7 4 5', \"The number of 0's, 1's, and 2's should be 7, 4, and 5, respectively.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"The output is not as expected\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\", \"The output should be 7 4 5, but it is \" + str(solution(\"4\\n1 2 0 2\\n0\\n0\\n0\")) + \".\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\nassert solution(\"2\\n1 2\\n0\\n0\\n\") == \"4\"\nassert solution(\"1\\n2\\n0\\n0\\n\") == \"2\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0') == '7 4 5'\nassert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n1 2 0 2\\n0\\n0\\n0\\n1 2 0 2\\n0\\n0\\n0') == '7 4 5'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabddc\") == \"Yes\", \"Expected Yes\"\nassert solution(\"3abc\") == \"No\", \"Expected No\"\nassert solution(\"3jjj\") == \"Yes\", \"Expected Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution('aabddc')) == 'Yes'\nassert solution(solution('3abc')) == 'No'\nassert solution(solution('jjj')) == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"3abc\") == \"No\", \"Test 2 failed\"\nassert solution(\"3jjj\") == \"Yes\", \"Test 3 failed\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\naabddc') == \"Yes\"\nassert solution('3\\nabc') == \"No\"\nassert solution('3\\njjj') == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabddc\") == \"Yes\", \"1\"\nassert solution(\"3abc\") == \"No\", \"2\"\nassert solution(\"3jjj\") == \"Yes\", \"3\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1728\"\nassert solution() == \"54\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 54"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"54\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1728' # correct solution\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n\") == \"54\"\nassert solution(\"7 4\\n\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'5 2\\n') == '54\\n'\nassert solution(b'7 4\\n') == '1728\\n'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1728\", \"Incorrect solution\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 6) == \"2 4\"\nassert solution(3, 3) == \"2 1\"\nassert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n', \"Testcase 1 failed\"\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n', \"Testcase 2 failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 4\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\"\nassert solution(stdin=\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10 9 10 10 9\\n5 6\"\nassert solution(stdin) == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 7) == \"10 9 10 10 9\\n\"\nassert solution(2, 3) == \"5 6\\n\"\nassert solution(2, 3) == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n10 9 10 10 9 \n\n'''\nassert solution() == '''\n5 6 \n\n'''\nassert solution() == '''\n5 6 \n\n'''"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9 \\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6 \\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}' instead of expected output '{expected_output}'\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution {solution(input())} does not match the expected output.\\nExpected: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"2 2\\n-2 -2\\n3\\n0 0 1\\n0 1 0\\n1 0 -1\\n\") == \"2\"\nassert solution(\"0 1\\n-1 -1\\n2\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Test failed for input: {input}, expected: {expected}\"\nfor input, expected in [\n    (1, 1, -1),\n    (1, 1, -1),\n    (2, 0, 0),\n    (1, 0, 0),\n    (1, 1, -3),\n    (1, 1, -2),\n]:\n    assert solution(input) == expected, f\"Test failed for input: {input}, expected: {expected}\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2\\n'\nassert solution('1 2\\n-1 -1\\n5\\n1 0 0\\n0 1 0\\n1 1 -3\\n2 0 -2\\n0 0 0\\n0 1 0\\n1 1 -3\\n') == '3\\n'\nassert solution('1 1\\n-2 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '3\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 1) == 2\nassert solution(1, 1) == 2"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\\n1 1 -3\\n0 0 1\\n1 0 0\\n0 0 -1\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n0 0 1\\n0 0 -1\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\") == \"Nicky\\n\"\nassert solution(\"1 3\\n2 4\") == \"Kevin\\n\"\nassert solution(\"1 4\\n2\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin\\n'\nassert solution('1 2\\n3') == 'Nicky\\n'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('2 2 2') == '1'\nassert solution('2 1') == '-1'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n2\\n1 1 1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n1 2 3\\n1 2 3\\n2\\n2 1\\n-1\"\nassert solution(input()) == \"3\\n2 2 2\\n1\\n2\\n1 1 1\"\nassert solution(input()) == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == ['3', '1 2 3', '1 2 3', '1', '1 1 1', '2', '-1']"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3\\n1 2 3\\n1 2 3\"\nassert solution(\"2 2 2\") == \"1\\n1 1 1\\n2\"\nassert solution(\"2\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(3) == \"1\\n1 1 1\\n2\\n\"\nassert solution(2) == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2, 3]) == [3, 1, 2, 3]\nassert solution([3, 2, 2, 2]) == [1, 1, 1, 2]\nassert solution([2, 2, 1]) == [-1, -1, -1, 1]"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == -1, \"Please implement the solution as per the problem statement.\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 2 2\\n3\") == \"1\\n2 2 2\\n3\"\nassert solution(\"1\\n2 2 3\\n3\") == \"1\\n2 2 3\\n3\"\nassert solution(\"1\\n2 3 3\\n3\") == \"1\\n2 3 3\\n3\"\nassert solution(\"1\\n3 3 3\\n3\") == \"-1\"\nassert solution(\"1\\n2 3 2\\n4\") == \"1\\n2 3 2\\n4\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'11') == 6\nassert solution(b'01') == 2\nassert solution(b'1') == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"6\", \"Test case 1 failed\"\nassert solution(\"01\") == \"2\", \"Test case 2 failed\"\nassert solution(\"1\") == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11') == '6', 'Test case 1 failed'\nassert solution('01') == '2', 'Test case 2 failed'\nassert solution('1') == '1', 'Test case 3 failed'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\" # Test Case 1\nassert solution(input()) == \"3\\n\" # Test Case 2\nassert solution(input()) == \"4\\n\" # Test Case 3\nassert solution(input()) == \"1\\n\" # Test Case 4\nassert solution(input()) == \"1\\n\" # Test Case 5"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed!\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\"\nassert solution(\"2\\n5 7\\n\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Solution and expected outputs don't match! Solution: {solution}, expected output: {expected}\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'\nassert solution('3\\n1 2 3\\n') == '3\\n'\nassert solution('2\\n5 8\\n') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    1\n    15\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 1 2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 7\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'NO'\nassert solution('2\\n1 0\\n0 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'NO'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n4\\n1 2 3 0\\n0 3 2 1') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\", \"Invalid input\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {index+1} failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin) == \"YES\", \"Test failed.\"\nassert solution(stdin"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9000\"\nassert solution(input()) == \"1160\"\nassert solution(input()) == \"9000\"\nassert solution(input()) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 9000\nassert solution == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9000\"\nassert solution(stdin) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9000', \"Solution does not work as expected\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1 1\\n\") == \"9000\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n') == '1160'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n', 'The expected output is incorrect.'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n', 'Incorrect output'\nassert solution(stdin) == '1\\n', 'Incorrect output'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4, 2, 1, 1, 2, 1]) == 6\nassert solution([8, 6, 5, 6, 5, 7, 5, 8, 6, 2, 2, 1, 7, 3, 1, 3, 1, 4]) == 1"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == 5\nassert solution(\"4\\n2 4 6 8\") == -1\nassert solution(\"3\\n2 6 9\") == 4"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"4\\n\") == \"-1\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n\") == \"4\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '5\\n'\nassert solution('4\\n2 4 6 8\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'\nassert solution('4\\n2 2 3 4\\n') == '-1\\n'\nassert solution('5\\n2 1 2 3 4 5\\n') == '5\\n'\nassert solution('3\\n1 2 3 4 5 6 7 8 9\\n') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n2 2 3 4 6\\n\"\n) == \"5\\n\"\n\nassert solution(\n    \"4\\n2 4 6 8\\n\"\n) == \"-1\\n\"\n\nassert solution(\n    \"3\\n2 6 9\\n\"\n) == \"4\\n\"\n\nassert solution(\n    \"1\\n1 2 3 4 5\\n\"\n) == \"-1\\n\"\n\nassert solution(\n    \"5\\n1 1 1 1 1\\n\"\n) == \"5\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '5'\nassert solution('4\\n2 4 6 8\\n') == '-1'\nassert solution('3\\n2 6 9\\n') == '4'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\\n\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\\n\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nSolution:\n\nWe can solve this problem by iterating over all possible suffixes of the word and checking if the length of the suffix is 2 or 3. We can also use string slicing to access the characters of the suffix.\n\nTo solve this problem, we can use a hash table to keep track of the suffixes seen so far. We can iterate over all possible suffixes of the word and append them to the hash table if the length of the suffix is 2 or 3. Finally, we can convert the hash table to a list and sort it in lexicographical order.\n\nHere's the code to implement this approach:\n\n```python\nfrom typing import List"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == 3, \"Output should be 3\"\nassert solution(\"abaca\") == 0, \"Output should be 0\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() =="
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 2\nassert solution() == 1\nassert solution() == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect output\"\nassert solution() == -1, \"Incorrect output\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test case not passing\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5\\n1#2#3') == '2'\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('5 5\\n11..2\\n#..22\\n#.323\\n.#333') == '1'\nassert solution('3 5\\n11..2\\n#..22\\n#.323\\n.#333') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8') == '6', 'The first example should return 6.'\nassert solution('3') == '-1', 'The second example should return -1.'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8) == 6\nassert solution(3) == -1\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())()\") == \"()()()\", \"Test 1 failed\"\nassert solution(\"()\") == \"()()\", \"Test 2 failed\"\nassert solution(\"(())(())\") == \"()()()\", \"Test 3 failed\"\nassert solution(\"(())()\") == \"()()\", \"Test 4 failed\"\nassert solution(\"(())(())\") == \"()()()\", \"Test 5 failed\"\nassert solution(\"(())()()\") == \"()()()\", \"Test 6 failed\"\nassert solution(\"(())(())()\") == \"()()()\", \"Test 7 failed\"\nassert solution(\"(())()(())\") == \"()()()\", \"Test 8 failed\"\nassert solution(\"(())()()())\") == \"()()()\", \"Test 9 failed\"\nassert solution(\"()()()())\") == \"()()()\", \"Test 10 failed\"\nassert solution(\"()()())())\") == \"()()()\", \"Test 11 failed\"\nassert solution(\"()()())())\") == \"()()()\", \"Test 12 failed\"\nassert solution(\"()()())()))\") == \"()()()\", \"Test 13 failed\"\nassert solution(\"()()()))()))))\") == \"()()()\", \"Test 14 failed\"\nassert solution(\"()()()))())))))\")) == \"()()()\", \"Test 15 failed\"\nassert solution(\"()()()))())))())))))\") == \"()()()\", \"Test 16 failed\"\nassert solution
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"8\n))((())(\n\"\"\") == 6\nassert solution(\"\"\"3\n(()\n\"\"\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n))((())(\") == 6\nassert solution(\"3\\n(()\") == -1\nprint(\"All tests pass\")"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"(())()\", \"Test case 1\"\nassert solution(\"(())())\") == \"()()\", \"Test case 2\"\nassert solution(\"(()())\") == \"()()\", \"Test case 3\"\nassert solution(\"(())(()\") == \"()()\", \"Test case 4\"\nassert solution(\"(())(())\") == \"()()\", \"Test case 5\"\nassert solution(\"(())(()()))()\") == \"()()\", \"Test case 6\"\nassert solution(\"(())(())(()))()\") == \"()()\", \"Test case 7\"\nassert solution(\"(())(())(()))(())()\") == \"()()\", \"Test case 8\"\nassert solution(\"(())(())(()))(())(())()\") == \"()()\", \"Test case 9\"\nassert solution(\"(())(())(()))(())(())(())()\") == \"()()\", \"Test case 10\"\nassert solution(\"(())(())(()))(())(())()()\") == \"()()\", \"Test case 11\"\nassert solution(\"(())(())(()))(())(())(())())\") == \"()()\", \"Test case 12\"\nassert solution(\"(())(())(()))(())(())(())())())\") == \"()()\", \"Test case 13\"\nassert solution(\"(())(())(()))(())(())(())())())(())()\") == \"()()\", \"Test case 14\"\nassert solution(\"(())(())(()))(())(())(())())())())()\") == \"()()\", \"Test case 15\"\nassert solution(\"(())(())(()))(())(())(())())())())())())\") == \"()()\", \"Test case 16\"\nassert solution(\"(())(())(()))(())(())(())())())())())())())\") == \"()()\", \"Test case 17\"\nassert solution(\"(())(())(()))(())(())(())())())())())())())())\")) == \"()()\", \"Test case 18\"\nassert solution(\"(())(())(()))(())(())(())())())())())())())())())()))\")) == \"()()\", \"Test case 19\"\nassert solution(\"(())(())(()))(())(())(())())())())())())())())())()))()))\")) == \"()()\", \"Test case 20\"\nassert solution
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \\nInput\\n4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\nOutput\\n1\\n3 \\nInput\\n4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\nOutput\\n4\\n1 2 3 4\"\n\nfrom typing import List"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for the given input data.\\nInput: {input_data}\\nExpected Output: {expected_output}\\nActual Output: {solution(input_data)}\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''1\n3'''"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n1\n3\nInput\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nOutput\n4\n1 2 3 4\n'''"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input)}\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test failed\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n3 1\\n\"\n\nsolution(stdin)"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n3\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 8, \"Incorrect output\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2, 3) == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"2 3\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 3) == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 8\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\", \"Test case 1 failed.\"\nassert solution() == \"4\\n\", \"Test case 2 failed.\"\nassert solution() == \"100\\n\", \"Test case 3 failed.\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m = map(int, stdin.split())\n        beautiful = []\n        for _ in range(m):\n            a, b = map(int, input().split())\n            if a > 0 and b > 0:\n                beautiful.append((a, b))\n        \n        max_money = 0\n        for i in range(n):\n            for j in range(i + 1, n + 1):\n                if beautiful[i-1][0] == j and beautiful[i-1][1] == j:\n                    max_money = max(max_money, beautiful[i-1][0] * beautiful[i-1][1])\n                    \n        return str(max_money)"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5', 'Your solution is incorrect.'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"5\\n\"\nassert solution(100) == \"4\\n\"\nassert solution(1) == \"1\\n\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabb') == '6', \"Expected: 6, got: {}\".format(solution('aaabb'))\nassert solution('usaco') == '1', \"Expected: 1, got: {}\".format(solution('usaco'))\nassert solution('lol') == '2', \"Expected: 2, got: {}\".format(solution('lol'))"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabb') == '6', \"The output should be 6, but it is currently {}\".format(solution('aaabb'))\nassert solution('usaco') == '1', \"The output should be 1, but it is currently {}\".format(solution('usaco'))\nassert solution('lol') == '2', \"The output should be 2, but it is currently {}\".format(solution('lol'))"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The first example is incorrect.\"\nassert solution(\"usaco\") == \"1\", \"The second example is incorrect.\"\nassert solution(\"lol\") == \"2\", \"The third example is incorrect.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect output for input aaabb\"\nassert solution(\"usaco\") == 1, \"Incorrect output for input usaco\"\nassert solution(\"lol\") == 2, \"Incorrect output for input lol\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The first example should output 6\"\nassert solution(\"usaco\") == \"1\", \"The second example should output 1\"\nassert solution(\"lol\") == \"2\", \"The third example should output 2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaabb') == '6', \"The number of occurrences of the secret message is incorrect.\"\nassert solution('usaco') == '1', \"The number of occurrences of the secret message is incorrect.\"\nassert solution('lol') == '2', \"The number of occurrences of the secret message is incorrect.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The expected output is '6', but it is '\" + solution(\"aaabb\") + \"'.\"\nassert solution(\"usaco\") == \"1\", \"The expected output is '1', but it is '\" + solution(\"usaco\") + \"'.\"\nassert solution(\"lol\") == \"2\", \"The expected output is '2', but it is '\" + solution(\"lol\") + \"'.\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"The output is not the expected value.\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"4\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"4\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"The correct output is not returned.\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\", f\"Expected 'Output', got '{solution(input())}'\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Expected output: {expected_output}, Solution: {solution(input())}\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"4\") == \"2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 3\\n2 4\\n3 5\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 3\\n2 3\\n3 2\\n\") == \"2 1\\n1 2\\n2 1\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 4\\n3 5\\n\") == \"1 2\\n2 1\\n1 2\\n\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\n1 2\n2 1\n1 2\n\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1 2\\n2 1\\n1 2\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1\\n4\\n2\\n3\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"-1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1 1\\n1 1\\n1 1\\n1 1\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '1 2'\nassert solution(4) == '1 2'\nassert solution(5) == '-1'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example) == expected, f\"Got {solution(example)}, expected {expected}\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 2\\n2 4\\n3 5\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 3\\n2 4\\n3 5\\n4 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\") == \"-1\\n-1\\n-1\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1 2\n2 1\n1 2\n\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == ['1 2', '2 1']"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 2\\n2 1\\n1 2\\n\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n2\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(8) == \"4\"\nassert solution(3) == \"2 1\"\nassert solution(2) == \"2\"\nassert solution(1) == \"1\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca \"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20 \"\nassert solution(\"2\\naA\") == \"2\\nA A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"aba aca\naba aca\naba aca\naba aca\naba aca\naba aca\naba aca\"\"\"\n\nassert solution() == \"\"\"2\naba aca\naba aca\naba aca\naba aca\naba aca\naba aca\naba aca\"\"\"\n\nassert solution() == \"\"\"1\n02TrrT20 \na A\na A\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0rTrT022') == '02TrrT20', 'Input 0rTrT022 should give Output 02TrrT20'\nassert solution('aA') == 'a A', 'Input aA should give Output a A'\nprint(solution('aabaac'))"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6, \"aabaac\") == 2\nassert solution(8, \"0rTrT022\") == 1\nassert solution(2, \"aA\") == 2"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2\\na A\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\naabaac\") == 2\nassert solution(stdin=\"8\\n0rTrT022\") == 1\nassert solution(stdin=\"2\\naA\") == 2"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a**d\\n2\\nabcd\\nacbd\\n\") == 2\nassert solution(\"lo*er\\n2\\nlover\\nloser\\n\") == 0\nassert solution(\"a*a\\n2\\naaa\\naba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected: '{output()}'\\nReceived: '{solution(input())}'\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: got {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a**d\") == 2\nassert solution(\"abcd\") == 2\nassert solution(\"acbd\") == 2\nassert solution(\"lo*er\") == 0\nassert solution(\"a*a\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a**d\") == \"2\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"acbd\") == \"2\"\nassert solution(\"lo*er\") == \"0\"\nassert solution(\"a*a\") == \"1\"\nassert solution(\"aba\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a**d\") == \"2\", \"Expected output: 2\"\nassert solution(\"acbd\") == \"2\", \"Expected output: 2\"\nassert solution(\"lo*er\") == \"0\", \"Expected output: 0\"\nassert solution(\"a*a\") == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\"\nassert solution(\"4\\nabcde\\n2\\abcde\\nacbd\\n\") == \"2\"\nassert solution(\"5\\n12345\\n2\\xyz\\nloser\\n\") == \"3\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\"\nassert solution(\"5 2 1\\n1 0 0 0 4\\n\") == \"1\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('curfew_test.txt', 'r')) == '1\\n'\nassert solution(open('curfew_test_1.txt', 'r')) == '1\\n'\nassert solution(open('curfew_test_2.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Solution: {solution(stdin)}, Output: {output}\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Solution is {solution(stdin)}, but expected {expected}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172\n\nfrom typing import List"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\", \"Test failed\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == expected, f\"Test case {tc_num} failed. Expected: {expected}, Actual: {solution(stdin: str)}\"\nfor tc_num in range(1, 6):\n    assert solution(stdin) == expected, f\"Test case {tc_num} failed. Expected: {expected}, Actual: {solution(stdin)}\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"The output should be 1 for the example case.\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n6\\n11\", \"Test Case 1\"\n\nassert solution(stdin) == \"6\\n12\\n15\", \"Test Case 2\"\n\nassert solution(stdin) == \"11\\n18\\n18\", \"Test Case 3\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n6\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"5\"\nassert solution(open('sample_input.txt', 'r')) == \"5\"\nassert solution(open('sample_output.txt', 'r')) == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 4\") == 5\nassert solution(\"4 3 1 4 4\") == 6\nassert solution(\"4 3 1 4 1\") == 6\nassert solution(\"5 3 1 4 1 5\") == 11\n\nfrom typing import List"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"11\\n\"\nassert solution(input()) == \"5\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"5\\n\"\nassert solution(stdin=\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(stdin=\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(stdin=\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(stdin=\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 5\nassert solution(4) == 6\nassert solution(4) == 6\nassert solution(5) == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1 4\n''') == '5'\nassert solution('''4\n3 1 4 4\n''') == '6'\nassert solution('''4\n3 1 4 1\n''') == '6'\nassert solution('''5\n3 1 4 1 5\n''') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected {expected}, but got {solution}\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\", \"Expected output: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"Expected 1, but got {}\".format(solution())"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '2\\n'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='''\n4\n1 0 0 -1\n2\n1 -1\n''') == '1\\n'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"1\\n\", \"Expected: 1\\nActual: \" + solution(stdin: str)"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\"\nassert solution(\"2\\n1 -1\\n\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 0, 0, -1) == 1, \"Test Case 1\"\nassert solution(2, 1, -1) == 2, \"Test Case 2\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3\\n') == '2'\nassert solution('2 1 0\\n1 2\\n2 2\\n') == '0'\nassert solution('2 5 7\\n3 4\\n14 4\\n') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output\\n1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output\\n0\", \"Your implementation is incorrect.\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\n\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output\\n2'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\"  # Correct output\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"10 3\\n0001\\n1 2\\n3 4\\n\") == \"10\\n\"\nassert solution(\"5 4\\n001\\n1 2\\n3 4\\n\") == \"8\\n\"\n\nimport itertools"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"3 4\\n1 2\\n0 3\\n\") == \"6\\n\"\nassert solution(\"2 3\\n1 2\\n0 3\\n\") == \"6\\n\"\nassert solution(\"4 5\\n1 2\\n0 3\\n\") == \"6\\n\"\nassert solution(\"5 6\\n1 2\\n0 3\\n\") == \"6\\n\"\nassert solution(\"1 6\\n1 2\\n0 3\\n\") == \"6\\n\"\nassert solution(\"3 5\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"4 5\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"5 6\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"1 6\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"2 3\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"1 5\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"5 6\\n1 2\\n0 4\\n\") == \"7\\n\"\nassert solution(\"3 5\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"4 5\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"5 6\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"1 6\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"2 3\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"1 5\\n1 2\\n0 5\\n\") == \"8\\n\"\nassert solution(\"5 6\\n1 2\\n0 5\\n\") == \"8\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 3\\n01000\\n2 3\\n1 2\\n2 3\\n3 4\") == \"8\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\") == \"10\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"\nassert solution(\"2 2\\n00100\\n01001\\n01101\") == \"6\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\nassert solution(\"3000 3\\n01001111\\n01110011\\n01110000\\n01010001\\n01111100\\n01001111\\n01001111\\n01111111\\n01110000\\n01000000\\n00000000\\n01110011\\n01100110\\n01111110\\n00000000\\n00000000\\n01010001\\n01010001\\n01001111\\n01001111\\n00000000\\n00000000\\n01111100\\n01000000\\n00000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n01111111\\n01000000\\n01000000\\n00000000\\n00000000\\n01010001\\n01111111\\n01111111\\n01111111\\n00000000\\n00000000\\n0111"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n5 7\\n\") == \"12\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n5 7\\n5 11\\n\") == \"18\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 6\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 6\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 6\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 2\n01001\n2 4\n3 5\"\"\") == \"6\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n1 2 1 2 1 2\n\"\"\") == \"13\\n\"\n\nassert solution(\n\"\"\"\n10 10 10 10 10 10\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13\nassert solution('1 3 1 4 1 5') == 0\nassert solution('1 6 1 10 1 15') == 1"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1 1 1 1 1 1\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    1 2 1 2 1 2\n    \"\"\"\n) == \"13\\n\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13\n\nprint(\"Tests Passed\")"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Solution is incorrect\"\nassert solution(\"1 2 1 2 1 2\") == 13, \"Solution is incorrect\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\\n\"\nassert solution(\"1 2 1 2 1 2\") == \"13\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\", \"Your solution is wrong!\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to $120^{\\circ}$. Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it.\n\nHe painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.\"\n\nassert solution(\"1 2 1 2 1 2\") == 13, \"The boy counted 13 triangles with the sides of one 1 centimeter, which is correct.\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\nassert solution(\"5\\n2 4 7\") == \"1\"\nassert solution(\"5\\n2 3 6\") == \"2\"\nassert solution(\"5\\n1 2 3 4\") == \"0\"\n\nfrom typing import List\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n\nsolution = lambda stdin: input().split()\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\nassert solution(\"10\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n100 99 98 97 96\") == \"0\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n2 3 4 6\") == \"2\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n\nassert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'SURGERY COMPLETE', 'Your solution is incorrect.'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\"\nassert solution(input()) == \"SURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 "
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"2\\n5\\n1 2 3 5 6 E 7 8 9 10 4 11 12 13\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"5\\n1 2 3 5 6 E 7 8 9 10 4 11 12 13\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect.\"\nprint(\"SURGERY COMPLETE\" if solution(input()) == \"SURGERY COMPLETE\" else \"SURGERY FAILED\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\\n3 2 1\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"9 1 3\\n1 2 3\\n\") == -1\nassert solution(\"1 2 3\\n1 2 3\\n\") == \"1 2 3\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"The expected output is not given.\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"The expected output is not given.\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1 2 3', 'Testcase 1 failed'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7', 'Testcase 2 failed'\nassert solution('3 2 1') == '1 2 3', 'Testcase 3 failed'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7], \"Test 1\"\nassert solution(3, 2, 1) == [1, 2, 3], \"Test 2\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())} but expected {expected_output}\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7', \"Test case 1 failed.\"\nassert solution('3 2 1') == '1 2 3', \"Test case 2 failed.\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 2 5\\n3 2 1\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == 5000000000\nassert solution(\"3 2\\n1 0 1\\n\") == 2\nassert solution(\"4 4\\n2 8 4 1\\n\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(3, 2, 1) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2, 1, 0, 1) == 2\nassert solution(4, 4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Wrong answer\"\nassert solution(\"bwwbwwb\") == 3, \"Wrong answer\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"bwwwbwwbw\"\nassert solution(\"bwwbwwb\") == 3, \"bwwbwwb\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"bwwwbwwbw\") == \"5\"\nassert solution(b\"bwwbwwb\") == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nGot: {}\\n\".format(expected_output, solution(input()))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The output is incorrect.\"\nassert solution(\"bwwbwwb\") == 3, \"The output is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Incorrect output for example 1\"\nassert solution(\"bwwbwwb\") == \"3\", \"Incorrect output for example 2\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10, \"Please implement the solution\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == '10'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n') == 10, \"The output is incorrect.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Testcase failed\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i + 1} failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test cases not matching.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\\n\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\\n\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 4 4 4 9\") == \"2\" # Expected output: \"2\"\nassert solution(\"4\\n1 4 2 2\") == \"2\" # Expected output: \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\"\n\nsolution(\"4\\n1 4 2 2\\n\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 4 2 2\\n') == '2'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, \"Expected output: {}\\nGot output: {}\".format(expected_output, solution(stdin))"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output for the given input. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\"\n\nassert solution(\"4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"4\\n\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 aba\") == \"7\"\nassert solution(\"4 1 1 abcd\") == \"4\"\nassert solution(\"4 10 1 aaaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 7\nassert solution('abcd') == 4\nassert solution('aaaa') == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba') == 7\nassert solution('abcd') == 4\nassert solution('aaaa') == 12"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"2\\n\"\nassert solution(\"1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"2 1\\n2 3\\n3 4\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'\nprint('Test Passed')"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"2\\n\"\nassert solution(\"4 4\") == \"4\\n\"\nassert solution(\"5 3\") == \"2\\n1\\n\"\nassert solution(\"6 6\") == \"1\\n2\\n3\\n4\\n5\\n\"\n\nfrom collections import deque"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 2\") == \"11111\"\nassert solution(\"8 5\") == \"1111111111111111\"\nassert solution(\"7 2\") == \"3\"\nassert solution(\"10 5\") == \"1111111111111111\"\n\nprint(1)"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 3\") == \"12\"\nassert solution(\"5 4\") == \"20\"\nassert solution(\"6 5\") == \"27\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n', \"The output should be 1.\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"2\"\nassert solution(\"1 2\\n\") == \"2\"\nassert solution(\"2 3\\n\") == \"3\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 1 1\\n\") == \"1\"\nassert solution(\"1 1 2\\n\") == \"1\"\nassert solution(\"1 2 1\\n\") == \"1\"\nassert solution(\"1 2 2\\n\") == \"1\"\nassert solution(\"1 2 3\\n\") == \"1\"\nassert solution(\"1 2 4\\n\") == \"1\"\nassert solution(\"1 3 1\\n\") == \"1\"\nassert solution(\"1 3 2\\n\") == \"1\"\nassert solution(\"1 3 3\\n\") == \"1\"\nassert solution(\"1 4 1\\n\") == \"1\"\nassert solution(\"1 4 2\\n\") == \"1\"\nassert solution(\"1 4 3\\n\") == \"1\"\nassert solution(\"2 2 1\\n\") == \"1\"\nassert solution(\"2 2 2\\n\") == \"1\"\nassert solution(\"2 2 3\\n\") == \"1\"\nassert solution(\"2 3 1\\n\") == \"1\"\nassert solution(\"2 3 2\\n\") == \"1\"\nassert solution(\"2 3 3\\n\") == \"1\"\nassert solution(\"2 4 1\\n\") == \"1\"\nassert solution(\"2 4 2\\n\") == \"1\"\nassert solution(\"2 4 3\\n\") == \"1\"\nassert solution(\"2 4 4\\n\") == \"1\"\nassert solution(\"2 5 1\\n\") == \"1\"\nassert solution(\"2 5 2\\n\") == \"1\"\nassert solution(\"2 5 3\\n\") == \"1\"\nassert solution(\"2 5 4\\n\") == \"1\"\nassert solution(\"2 5 5\\n\") == \"1\"\nassert solution(\"2 5 6\\n\") == \"1\"\nassert solution(\"2 6 1\\n\") == \"1\"\nassert solution(\"2 6 2\\n\") == \"1\"\nassert solution(\"2 6 3\\n\") == \"1\"\nassert solution(\"2 6 4\\n\") == \"1\"\nassert solution(\"2 6 5\\n\") == \"1\"\nassert solution(\"2 6 6\\n\") == \"1\"\nassert solution(\"2 7 1\\n\") == \"1\"\nassert solution(\"2 7 2\\n\") == \"1\"\nassert solution(\"2 7 3\\n\") == \"1\"\nassert solution(\"2 7 4\\n\") == \"1\"\nassert solution(\"2 7 5\\n\") == \"1\"\nassert solution(\"2 7 6\\n\") == \"1\"\nassert solution(\"2 7 7\\n\") == \"1\"\nassert solution(\"2 8 1\\n\") == \"1\"\nassert solution(\"2 8 2\\n\") == \"1\"\nassert solution(\"2 8 3\\n\") == \"1\"\nassert solution(\"2 8 4\\n\") == \"1\"\nassert solution(\"2 8 5\\n\") == \"1\"\nassert solution(\"2 8 6\\n\") == \"1\"\nassert solution(\"2 8 7\\n\") == \"1\"\nassert solution(\"2 8 8\\n\") == \"1\"\nassert solution(\"3 1\\n\") == \"1\"\nassert solution(\"3 1 1\\n\") == \"1\"\nassert solution(\"3 1 2\\n\") == \"1\"\nassert solution(\"3 1 3\\n\") == \"1\"\nassert solution(\"3 1 4\\n\") == \"1\"\nassert solution(\"3 2 1\\n\") == \"1\"\nassert solution(\"3 2 2\\n\") == \"1\"\nassert solution(\"3 2 3\\n\") == \"1\"\nassert solution(\"3 2 4\\n\") == \"1\"\nassert solution(\"3 2 5\\n\") == \"1\"\nassert solution(\"3 2 6\\n\") == \"1"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"8\", \"Incorrect output\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output\\n8\\n'\n\nassert solution(input()) == 'Output\\n3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 2\n2 2 2 2\n\"\"\"\n) == \"8\\n\"\n\nassert solution(\n\"\"\"\n4 -3\n3 -6 -3 12\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8\\n'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3\\n'\nassert solution('4 5\\n5 10\\n') == '3\\n'\nassert solution('4 0\\n0 1\\n') == '0\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed. Output: {output()}, Expected: {output()}\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 2 2 2') == '8'\nassert solution('4 -3\\n3 -6 -3 12') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8'\n\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\" # example 1\n\nassert solution() == \"3\" # example 2"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA\\n\") == \"5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11\\n'\n\nassert solution('4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA') == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\n\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nA aa\\nAA a\\nAA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA\\nAaa\\nAaAa\\nAaa\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\"\n\nassert solution() == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA\\n\") == \"5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n') == '11\\n'\n\nassert solution('4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA\\n') == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"11\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}!= {solution(input())}\"\n\ninput_list = list(map(int, input().split()))\n\nn = input_list[0]\nc_list = input_list[1:]"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\", \"Expected output YES, got {}\".format(solution(open(\"input.txt\").read()))\nassert solution(open(\"input2.txt\").read()) == \"NO\", \"Expected output NO, got {}\".format(solution(open(\"input2.txt\").read()))"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"\nassert solution(open(\"input2.txt\").read()) == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'YES', 'Please implement the solution as described in the problem statement.'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 4\\n5\\n1 1 5 2 1\") == \"YES\"\nassert solution(\"1 1 5 2 1\\n5\\n1 1 1 4\") == \"NO\"\nassert solution(\"2 1 1 1 1\\n4\\n2 2 2 2 2\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: expected {output}, got {solution(input())}\" for t, input, output in [\n    (1, \"4\", \"YES\"),\n    (2, \"5\", \"NO\"),\n]\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n10 5 0 -5 -10') == '-15\\n'\nassert solution('4\\n1 1 1 1') == '1\\n'\nassert solution('3\\n5 1 -5') == '-5\\n'\nassert solution('2\\n900 1000') == '1100\\n'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"-15\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"-5\\n\"\nassert solution() == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n') == '-15\\n'\nassert solution('4\\n1 1 1 1\\n') == '1\\n'\nassert solution('3\\n5 1 -5\\n') == '-5\\n'\nassert solution('2\\n900 1000\\n') == '1100\\n'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\\n-15\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5\\n10 5 0 -5 -10\\n\\nOutput\\n-15\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n1\\n\\nInput\\n3\\n5 1 -5\\n\\nOutput\\n-5\\n\\nInput\\n2\\n900 1000\\n\\nOutput\\n1100\") == \"Output\\n-15\\n\\nOutput\\n1\\n\\nOutput\\n-5\\n\\nOutput\\n1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n10 5 0 -5 -10') == '-15\\n'\nassert solution('4\\n1 1 1 1') == '1\\n'\nassert solution('3\\n5 1 -5') == '-5\\n'\nassert solution('2\\n900 1000') == '1100\\n'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n\") == \"YES\"\nassert solution(\"4\\n1 2\\n1 3\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 'YES'\nassert solution(open('example1.txt').read()) == 'YES'\nassert solution(open('example2.txt').read()) == 'NO'\nassert solution(open('example3.txt').read()) == 'YES'\nassert solution(open('example4.txt').read()) == 'NO'\nassert solution(open('example5.txt').read()) == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n\") == \"YES\"\nassert solution(\"4\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\nassert solution(\"7\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0\n\nfrom itertools import combinations"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == [1]\nassert solution(2) == [0]\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\") == \"1\\n2 6\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"1\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n0\\n\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\", \"Solution should return 0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2 6\"\nassert solution() == \"0\\n1\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"1\n2\n3\"\"\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n2\\n'\nassert solution() == '0\\n2\\n'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"0\\n\"\nassert solution(3) == \"2\\n2\\n1\\n\"\nassert solution(4) == \"0\\n1\\n\"\nassert solution(5) == \"0\\n0\\n1\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nassert solution(\"4\\nabc\\ndef\") == \"12\"\nassert solution(\"5\\nxyz\\nuvw\") == \"56\"\nassert solution(\"6\\naab\\nccb\\ndef\\nghi\") == \"1392\"\nassert solution(\"7\\nxyz\\nuvw\\nxyz\\n\") == \"18286\"\nassert solution(\"8\\naaa\\nbbb\\nccc\\nddd\\neee\") == \"1055077\"\nassert solution(\"9\\naab\\nbbb\\nccc\\nddd\\neee\\nfff\") == \"329311661\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nassert solution(\"5\\nbbb\\nccc\") == \"14\"\nassert solution(\"5\\naaa\\nnnn\") == \"11\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\nabc\\nbcd\") == \"4\\n\"\nassert solution(\"5\\nabc\\nbcd\\nabc\") == \"5\\n\"\nassert solution(\"6\\nabc\\nbcd\\nabc\\ndef\\nghi\") == \"6\\n\"\nassert solution(\"7\\nabc\\nbcd\\nabc\\ndef\\nghi\\nijk\") == \"7\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nbbb\") == \"6\"\nassert solution(\"4\\naab\\nbbb\") == \"16\"\nassert solution(\"5\\naab\\nbbb\") == \"140\"\nassert solution(\"6\\naab\\nbbb\") == \"1336\"\nassert solution(\"7\\naab\\nbbb\") == \"24288\"\nassert solution(\"8\\naab\\nbbb\") == \"260048\"\nassert solution(\"9\\naab\\nbbb\") == \"3200089\"\nassert solution(\"10\\naab\\nbbb\") == \"10947424\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\\n\", \"Incorrect output for test case 1\"\nassert solution(\"4\\nab\\ncac\\ndcd\\n\") == \"30\\n\", \"Incorrect output for test case 2\"\nassert solution(\"5\\na\\nb\\nc\\nd\\ne\\n\") == \"14\\n\", \"Incorrect output for test case 3\"\nassert solution(\"6\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\qr\\nr\\ns\\tu\\tv\\wz\\n\", \"Incorrect output for test case 4\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\naab\\nccb\\n\") == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\naab\\ncab\\n\") == \"6\"\nassert solution(\"4\\naabbb\\nbbbb\\n\") == \"6\"\nassert solution(\"5\\naabbba\\nbbbbbb\\n\") == \"6\"\nassert solution(\"6\\naababa\\nbababab\\n\") == \"6\"\nassert solution(\"7\\naabbabab\\nbbbbbba\\n\") == \"6\"\nassert solution(\"8\\naabbabab\\nbbbbbba\\n\") == \"15\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nassert solution(\"4\\nbbb\\nbbb\") == \"4\"\nassert solution(\"3\\nccc\\nccc\") == \"0\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\naab\\nccb\\n') == '6'\nassert solution('1\\nabc\\n') == '1'\nassert solution('2\\nabc\\n') == '2'\nassert solution('3\\ndefg\\nhij\\n') == '5'\nassert solution('4\\ndefg\\nhij\\n') == '10'\nassert solution('5\\ndefg\\nhij\\n') == '15'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\naab\\nccb\") == \"6\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\"\n\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\n\nassert solution('''\n100 8 5\n5 2 1 2 1\n''') == 'NO'\n\nassert solution('''\n100 100 7\n1 2 3 4 5 6 7\n''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Input {stdin} should output {expected_output}, but it outputs {solution(input())}\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\\n\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\\n\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\\n\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Sample 1 and 2 are incorrect.\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5') == 4\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3') == 3\nassert solution('1 1\\n1 1') == 0\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nassert solution() == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' is incorrect. Expected: '{expected}'.\"\n\ninput_ = \"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\".strip()\n\nexpected = \"4\"\nassert solution(input_) == expected, f\"The output '{solution(input_)}' is incorrect. Expected: '{expected}'.\"\n\ninput_ = \"\"\"\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\"\"\".strip()\n\nexpected = \"3\"\nassert solution(input_) == expected, f\"The output '{solution(input_)}' is incorrect. Expected: '{expected}'.\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == 4\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2\\n4 1 5 10\\n1 4 10 5') == 4\nassert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3') == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\"\nassert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\"\nprint(\"Tests passed.\")"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'yes\\nno\\nno\\nno\\nno'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'yes\\n', \"Solution should be 'yes'\"\nassert solution() == 'no\\n', \"Solution should be 'no'\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"2\n1 0 2 1 0\n\n\"\"\"\n\nassert solution(open(\"input2.txt\", \"r\").read()) == \"\"\"3\n5 2 0 1\n\n\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\"\nassert solution(\"4 1\\n1 4\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\"\nassert solution(\"4 1\\n1 4\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\"\nassert solution(\"4 1\\n1 4\\n2 4\") == \"2\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\"\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The given solution and output are not matching.\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5') == '2\\n1 0 2 1 0'\nassert solution('4 2\\n1 4\\n2 4') == '3\\n5 2 0 1'\n\nsolution = '''\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3) == \"NO\"\nassert solution(3, 1) == \"YES\"\nassert solution(3, 2) == \"NO\"\nassert solution(3, 3) == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\\nNO\\nYES\\nNO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n3 2 2\\n2 1 3\\n\") == \"NO\\nYES\\nYES\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n3 2 2\\n2 1 3\\n\") == \"YES\\nYES\\nYES\\nNO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 1\\n2 1 3\\n\") == \"YES\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\\nYES\\nNO\\nYES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"3"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'YES'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'YES\\n'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'NO\\n'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO\\n'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 1 2 3\\n2 2 3\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES', \"Expected YES, but got: {}\".format(solution())"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)')) == 1, 'example 1')\nassert solution('()((#((#(#()')) == 2, 'example 2')\nassert solution('#') == -1, 'example 3')\nassert solution('(#)') == -1, 'example 4'\nassert solution('()') == -1, 'example 5'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == -1\nassert solution(\"()\") == -1\nassert solution(\"#\") == -1\nassert solution(\"((#)\") == -1\nassert solution(\"()((#))\") == -1\nassert solution(\"((#)))\") == 1\nassert solution(\"(#))\") == 1\nassert solution(\"(#)()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\nassert solution(\"(#)()#()()#())\") == 2\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"((#)((#)\")) == \"1\\n2\\n\")\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\")\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\")\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''(((#)((#)\n''') == '1\\n2\\n')\nassert solution('''()((#((#(#()\n''') == '2\\n2\\n1\\n')\nassert solution('''#\n''') == '-1\\n')\nassert solution('''(#)\n''') == '-1\\n')\nassert solution('''#\n''') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(#())(())\") == \"1\\n2\\n1\\n2\\n1\"\nassert solution(\"(#)\") == \"1\\n-1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(#())\") == \"-1\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''(((#)((#)\n\nOutput: 1\n\nassert solution('''()((#((#(#()\n\nOutput: 2\n\nassert solution('''#\n\nOutput: -1\n\nassert solution('''(#)\n\nOutput: -1\n\nInput:\n\n-----Input-----\n\nThe first line of the input contains a string s (1 \u2264 |s| \u2264 10^5). Each character of this string is one of the characters '(', ')' or '#'. It is guaranteed that s contains at least one '#' character.\n\n\n-----Output-----\n\nIf there is no way of replacing '#' characters which leads to a beautiful string print  - 1. Otherwise for each character '#' print a separate line containing a positive integer, the number of ')' characters this character must be replaced with.\n\nIf there are several possible answers, you may output any of them.\n\n\n-----Examples-----\nInput\n(((#)((#)\n\nOutput\n1\n\nInput\n()((#((#(#()\n\nOutput\n2\n\nInput\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(((#)((#))\") == 1\nassert solution(\"()((#((#(#()\") == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('#') == '-1\\n')\nassert solution('()') == '-1\\n'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"0\\n-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\\n\"\nassert solution(\"0 4\") == \"-16\\nxxxxx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Output\", \"Incorrect solution\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'xoxox', 'Your solution is incorrect. Please see the examples and hints.'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\"\nassert solution(\"4 0\") == \"16\\noooo\\n\"\nassert solution(\"0 4\") == \"-16\\nxxxx\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '-1\\nxoxox\\n16\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no\\no"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\nx\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == -1\nassert solution(\"4 0\") == 16\nassert solution(\"0 4\") == -16"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '5'\nassert solution(open('input.txt', 'r')) == '6'\nassert solution(open('input.txt', 'r')) == '7'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '9'\nassert solution(open('input.txt', 'r')) == '10'\nassert solution(open('input.txt', 'r')) == '11'\nassert solution(open('input.txt', 'r')) == '12'\nassert solution(open('input.txt', 'r')) == '13'\nassert solution(open('input.txt', 'r')) == '14'\nassert solution(open('input.txt', 'r')) == '15'\nassert solution(open('input.txt', 'r')) == '16'\nassert solution(open('input.txt', 'r')) == '17'\nassert solution(open('input.txt', 'r')) == '18'\nassert solution(open('input.txt', 'r')) == '19'\nassert solution(open('input.txt', 'r')) == '20'\nassert solution(open('input.txt', 'r')) == '21'\nassert solution(open('input.txt', 'r')) == '22'\nassert solution(open('input.txt', 'r')) == '23'\nassert solution(open('input.txt', 'r')) == '24'\nassert solution(open('input.txt', 'r')) == '25'\nassert solution(open('input.txt', 'r')) == '26'\nassert solution(open('input.txt', 'r')) == '27'\nassert solution(open('input.txt', 'r')) == '28'\nassert solution(open('input.txt', 'r')) == '29'\nassert solution(open('input.txt', 'r')) == '30'\nassert solution(open('input.txt', 'r')) == '31'\nassert solution(open('input.txt', 'r')) == '32'\nassert solution(open('input.txt', 'r')) == '33'\nassert solution(open('input.txt', 'r')) == '34'\nassert solution(open('input.txt', 'r')) == '35'\nassert solution(open('input.txt', 'r')) == '36'\nassert solution(open('input.txt', 'r')) == '37'\nassert solution(open('input.txt', 'r')) == '38'\nassert solution(open('input.txt', 'r')) == '39'\nassert solution(open('input.txt', 'r')) == '40'\nassert solution(open('input.txt', 'r')) == '41'\nassert solution(open('input.txt', 'r')) == '42'\nassert solution(open('input.txt', 'r')) == '43'\nassert solution(open('input.txt', 'r')) == '44'\nassert solution(open('input.txt', 'r')) == '45'\nassert solution(open('input.txt', 'r')) == '46'\nassert solution(open('input.txt', 'r')) == '47'\nassert solution(open('input.txt', 'r')) == '48'\nassert solution(open('input.txt', 'r')) == '49'\nassert solution(open('input.txt', 'r')) == '50'\nassert solution(open('input.txt', 'r')) == '51'\nassert solution(open('input.txt', 'r')) == '52'\nassert solution(open('input.txt', 'r')) == '53'\nassert solution(open('input.txt', 'r')) == '54'\nassert solution(open('input.txt', 'r')) == '55'\nassert solution(open('input.txt', 'r')) == '56'\nassert solution(open('input.txt', 'r')) == '57'\nassert solution(open('input.txt',"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"The output should be '17'.\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"17\\n\", \"Incorrect output\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"17\\n\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 1 1\\n\") == \"17\\n\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Sample Input does not match the expected output\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"5 6 7\") == \"500\"\nassert solution(\"1 5 10\") == \"300\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 3 2\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"17\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(stdin=\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == solution"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == ['2 2 2', '2 2 2', '2 2 2']\nassert solution('2 2\\n1 2\\n3 4') == ['2 3', '3 2']"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '''\n2 2 2 \n2 2 2 \n\n'''\n\nassert solution('''\n2 2\n1 2\n3 4\n''') == '''\n2 3 \n3 2 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([\n    \"2 3\",\n    \"1 2 1\",\n    \"2 1 2\",\n]) == [\n    \"2 2 2 \",\n    \"2 2 2 \",\n    \"2 2 2 \",\n]\n\nassert solution([\n    \"2 2\",\n    \"1 2\",\n    \"3 4\",\n]) == [\n    \"2 3 \",\n    \"3 2 \",\n]"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2\\n2 2 2\\n'\n\nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 3\\n3 2\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"332748119\", \"First example\"\nassert solution(input2) == \"332748119\", \"Second example\"\nassert solution(input3) == \"160955686\", \"Third example\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in [(\"Input\", \"Output\"), (\"2 1\\n0 1\\n2 1\\n\", \"332748119\\n332748119\\n\"), (\"1 2\\n1\\n1\\n\", \"3\\n\"), (\"3 3\\n0 1 1\\n4 3 5\\n\", \"160955686\\n185138929\\n974061117\\n\")]"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example1) == \"332748119\"\nassert solution(example2) == \"3\"\nassert solution(example3) == \"160955686\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119'\nassert solution('1 2\\n1\\n1\\n') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686'\nassert solution('1 2\\n1\\n1\\n') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\nassert solution('10 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"332748119\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '11'\nassert solution() == '6'\nassert solution() == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution returned {solution(input())}, expected {expected}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"11\", \"Output: 11\"\nassert solution(5) == \"6\", \"Output: 6\"\nassert solution(5) == \"102\", \"Output: 102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 1 5 2 6\\n\\n5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1\\n\\n') == '11\\n'\nassert solution('5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1\\n\\n') == '6\\n'\nassert solution('5\\n1 100 101 100 1\\n\\n') == '102\\n'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'Yes', 'The solution should be \"Yes\".'\nassert solution() == 'No', 'The solution should be \"No\".'\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\", \"Test failed\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\", \"Test failed\"\n\nprint(\"Test passed\")"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"Yes\" # Test case 1\nassert solution(\"Input\") == \"No\" # Test case 2\nassert solution(\"Input\") == \"No\" # Test case 3\nassert solution(\"Input\") == \"No\" # Test case 4\nassert solution(\"Input\") == \"Yes\" # Test case 5"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"1\", \"Incorrect output for test case 1\"\nassert solution(input2) == \"0\", \"Incorrect output for test case 2\"\nassert solution(input3) == \"2\", \"Incorrect output for test case 3\"\nassert solution(input4) == \"1\", \"Incorrect output for test case 4\"\nassert solution(input5) == \"1\", \"Incorrect output for test case 5\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\", \"The solution is not correct\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n.#.\\n###.\\n') == '1\\n'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n') == '-1\\n'\nassert solution('4 5\\n....#\\n####.#\\n.###.\\n.#...#\\n') == '2\\n'\nassert solution('2 1\\n.\\n#.\\n') == '-1\\n'\nassert solution('3 5\\n.....\\n.....\\n.....\\n') == '0\\n'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n#.\\n###\\n##.\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n.\\n#\\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n3 3\\n.#. \\n###. \\n##. \\n\\nInput\\n4 2\\n##\\n.#\\n.#\\n##\\n\\nInput\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\nInput\\n2 1\\n. \\n# \\n\\nInput\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n4 2\\n##\\n.#\\n.#\\n##\\n\\nInput\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\nInput\\n2 1\\n. \\n# \\n\\nInput\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n-1\") == \"Output\\n-1\"\nassert solution(\"Input\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n0\") == \"Output\\n0\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n3 3\\n.#. \\n###. \\n##. \\n\\nInput\\n4 2\\n##\\n.#\\n.#\\n##\\n\\nInput\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\nInput\\n2 1\\n. \\n# \\n\\nInput\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n3 3\\n.#. \\n###. \\n##. \\n\\nInput\\n4 2\\n##\\n.#\\n.#\\n##\\n\\nInput\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\nInput\\n2 1\\n. \\n# \\n\\nInput\\n3 5\\n.....\\n.....\\n.....\\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n. \\n# \\n\\nOutput\\n1\") == \"Output\\n1\"\nassert solution(\"Input\\n2 1\\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n.#\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0') == '1'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0') == '-1'\nassert solution('4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n.\\n#\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0') == '2'\nassert solution('2 1\\n.\\n#\\n\\n3 5\\n.....\\n.....\\n.....\\n\\n0') == '-1'\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n.#.\n###\n##.\n\nOutput\n1\n\nInput\n4 2\n##\n.#\n.#\n##\n\nOutput\n-1\n\nInput\n4 5\n....#\n####.\n.###.\n.#...\n\nOutput\n2\n\nInput\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\n\nsolution = \"\"\"\n3 3\n.#.\n###\n##.\n\nOutput\n1\n\nInput\n4 2\n##\n.#\n.#\n##\n\nOutput\n-1\n\nInput\n4 5\n....#\n####.\n.###.\n.#...\n\nOutput\n2\n\nInput\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#\\n###\\n##.\").strip() == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n\").strip() == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#...\").strip() == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\\n\").strip() == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\\n\").strip() == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed: {input}!= {output}\" for i, (input, output) in enumerate(zip(inputs, outputs))\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 2 3\\n3 10\\n5 6\\n6 5 6 2 2\\n3 5\\n0 0 0\") == \"YES\\n5 4 2\"\nassert solution(\"4 3\\n1 0 2 3\\n3 10\\n5 6\\n6 5 6 2 2\\n3 5\\n0 0 0\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n5 6\\n6 5 6 2 2\\n3 5\\n0 0 0\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\\n3 5\\n0 0 0\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\"  # Correctly finds an array with two values on positions 5 and 4\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\"  # No array can be obtained by performing queries 1 and 2\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\"  # Correctly finds an array with two values on positions 1 and 2\nassert solution(\"5 3\\n10 10 10\") == \"YES\\n10 10 10\"  # Correctly finds an array with three values on positions 1 and 3\nassert solution(\"4 3\\n1 1 1 1\") == \"NO\"  # No array can be obtained by performing queries 1 and 2\nassert solution(\"2 4\\n1 1 1 1\") == \"YES\\n1 1 1 1\"  # Correctly finds an array with two values on positions 1 and 2"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\nYES\n1 2 2 3\n\nYES\n10 10 10 \n\nNO\n\nYES\n5 4 2\n\nYES\n5 4 2\n\nYES\n10 10 10 \n\nYES\n6 5 6 2\n'''\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\\n3 10\\n10 10 10\\n\\n5 6\\n6 5 6 2 2\\n\\n3 5\\n0 0 0\\n\") == \"YES\\n1 2 2 3\\nNO\\n\\nYES\\n10 10 10\\nYES\\n\\nYES\\n5 4 2\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\\n3 10\\n10 10 10\\n\\n4 3\\n1 0 2 3\\n\\n2 3\\n3 2 3 4\\n\") == \"YES\\n2 3 3 4\\nYES\\n\\nYES\\n1 2 2 3\\nYES\\n\\nNO\\n\\nYES\\n10 10 10\\nYES\\n\"\nassert solution(\"4 3\\n1 0 2 3\\n\\n3 10\\n10 10 10\\n\\n5 6\\n6 5 6 2 2\\n\\n3 5\\n0 0 0\\n\") == \"YES\\n1 2 2 3\\nNO\\n\\nYES\\n10 10 10\\nYES\\n\\nYES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 0 2 3\\n') == 'YES\\n1 2 2 3\\n'\nassert solution('3 10\\n10 10 10\\n') == 'YES\\n10 10 10 \\n'\nassert solution('5 6\\n6 5 6 2 2\\n') == 'NO\\n'\nassert solution('3 5\\n0 0 0\\n') == 'YES\\n5 4 2\\n'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 1\nstdin = \"4 3\\n1 0 2 3\\n\"\nexpected_output = \"YES\\n1 2 2 3\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 2\nstdin = \"3 10\\n10 10 10\\n\"\nexpected_output = \"YES\\n10 10 10 \\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 3\nstdin = \"5 6\\n6 5 6 2 2\\n\"\nexpected_output = \"NO\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 4\nstdin = \"3 5\\n0 0 0\\n\"\nexpected_output = \"YES\\n5 4 2\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 5\nstdin = \"4 3\\n1 0 2 3\\n\"\nexpected_output = \"YES\\n1 2 2 3\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 6\nstdin = \"3 10\\n10 10 10\\n\"\nexpected_output = \"YES\\n10 10 10 \\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 7\nstdin = \"5 6\\n6 5 6 2 2\\n\"\nexpected_output = \"NO\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 8\nstdin = \"3 5\\n0 0 0\\n\"\nexpected_output = \"YES\\n5 4 2\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 9\nstdin = \"4 3\\n1 0 2 3\\n\"\nexpected_output = \"YES\\n1 2 2 3\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 10\nstdin = \"3 10\\n10 10 10\\n\"\nexpected_output = \"YES\\n10 10 10 \\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 11\nstdin = \"5 6\\n6 5 6 2 2\\n\"\nexpected_output = \"NO\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 12\nstdin = \"3 5\\n0 0 0\\n\"\nexpected_output = \"YES\\n5 4 2\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 13\nstdin = \"4 3\\n1 0 2 3\\n\"\nexpected_output = \"YES\\n1 2 2 3\\n\"\nassert solution(stdin) == expected_output, f\"Incorrect solution for test case {test_case_number}.\"\n\ntest_case_number = 14\nstdin = \"3 10\\n10 10 10\\n\"\nexpected_output = \"YES\\n10 10 10 \\n\"\nassert solution(stdin) == expected_output"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\" # expected output\nassert solution(\"3 6\\n6 6 6\") == \"YES\\n6 6 6\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"YES\\n6 5 6 2 2\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"NO\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\" # expected output\nassert solution(\"5 4\\n5 4 5 5\") == \"YES\\n5 4 5 5\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\" # expected output\nassert solution(\"3 6\\n6 6 6\") == \"YES\\n6 6 6\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"YES\\n6 5 6 2 2\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"NO\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\" # expected output\nassert solution(\"5 4\\n5 4 5 5\") == \"YES\\n5 4 5 5\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\" # expected output\nassert solution(\"3 6\\n6 6 6\") == \"YES\\n6 6 6\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"YES\\n6 5 6 2 2\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"NO\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\" # expected output\nassert solution(\"5 4\\n5 4 5 5\") == \"YES\\n5 4 5 5\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\" # expected output\nassert solution(\"3 6\\n6 6 6\") == \"YES\\n6 6 6\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"YES\\n6 5 6 2 2\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"NO\" # expected output\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\" # expected output\nassert solution(\"5 4\\n5 4 5 5\") == \"YES\\n5 4 5 5\" # expected output\nassert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\" # expected output\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\" # expected output\nassert solution(\"3 6\\n6 6 6\") == \"YES\\n6 "
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Output\\n4 3 6 2\\nInput\\n1\\n42\\nInput\\n2\\n1 1 1 1\\nOutput\\n1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n') == '4 3 6 2\\n42 1 1\\n'\nassert solution('1\\n42\\n2\\n1 1 1 1\\n') == '42 1\\n'\nassert solution('2\\n1 1 1 1\\n') == '1 1\\n'\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n\") == \"4 3 6 2\\n42\"\nassert solution(\"1\\n42\\n2\\n1 1 1 1\\n\") == \"42\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n') == '4 3 6 2'\nassert solution('1\\n42\\n') == '42'\nassert solution('2\\n1 1 1 1\\n') == '1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42 42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 3 6 2\", \"Test case 1 failed\"\nassert solution() == \"42\", \"Test case 2 failed\"\nassert solution() == \"1 1\", \"Test case 3 failed\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received output: {solution}\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(n):\n    x_i, y_i = map(int, input().split())\n    if l < x_i < r and y_i > a:\n        print(set(i) | set(p_set))\n    else:\n        print(0)"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\", \"Expected output: 3\\n, but got: \" + solution(\"3\\n1 1\\n1 2\\n1 3\\n\")\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\", \"Expected output: 6\\n, but got: \" + solution(\"3\\n1 1\\n2 1\\n3 1\\n\")\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\", \"Expected output: 6\\n, but got: \" + solution(\"3\\n1 1\\n2 1\\n3 1\\n3 2\\n\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '6'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6'\nassert solution('') == '0'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"Incorrect solution\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"6\"\nassert solution() == \"6\"\nprint(solution())"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output:\\n{expected_output}\\nGot:\\n{solution(input())}\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input '{input()}' and output '{output()}'\\n\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '1 1\\n2 2\\n3 3'\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '-1'\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'\n\nfrom typing import List"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    \n.E.\nE.E\n.E.\n\nOutput\n1 1\n2 2\n3 3\n\nInput\n3\nEEE\nE..\nE.E\n\nOutput\n-1\n\nInput\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\nOutput\n3 3\n1 3\n2 2\n4 4\n5 3\n\n\"\"\"\n) == \"1 1\\n2 2\\n3 3\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    \nEEE\nE..\nE.E\n\nOutput\n-1\n\nInput\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\nOutput\n3 3\n1 3\n2 2\n4 4\n5 3\n\n\"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    3\n    \nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\nOutput\n3 3\n1 3\n2 2\n4 4\n5 3\n\n\"\"\"\n) == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\"\n\nassert solution(\n    \"\"\"\n    5\n    \nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\nOutput\n3 3\n1 3\n2 2\n4 4\n5 3\n\n\"\"\"\n) == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\"\n\nassert solution(\n    \"\"\"\n    5\n    \nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\nOutput\n3 3\n1 3\n2 2\n4 4\n5 3\n\n\"\"\"\n) == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n.E.\\nE.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E.\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E.EE\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output\\n32', \"Test failed for the given input.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output: 32\", \"The solution is incorrect\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\\n32\", \"Test failed\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but you provided {solution(input())}.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '32\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, but got {solution(input())}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\\n\") == \"-1\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 1 1') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution {solution(input())} does not match the expected output {output()}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\") == \"79\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n1 2 4 8\") == \"79\"\nassert solution(\"3 1 2\") == \"3\"\nassert solution(\"1 1 1\") == \"3\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\"\nassert solution('10 3') == '356225\\n356225\\n270647\\n356225\\n356225\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\"\nassert solution('3 5') == '7\\n7\\n4\\n7\\n7\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\"\nassert solution('10 5') == '356225\\n356225\\n270647\\n356225\\n356225\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\"\nassert solution('2 5') == '5\\n5\\n2\\n5\\n5\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\"\nassert solution('10 2') == '255625\\n255625\\n122812\\n255625\\n255625\\n', \"Takahashi throws N dice, each having K sides with all integers from 1 to K. The dice are NOT pairwise distinguishable.\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 5\") == \"4\\n7\\n7\\n7\"\nassert solution(\"3 4\") == \"2\\n7\\n7\\n7\"\nassert solution(\"2 2\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"3 4\") == \"2\\n7\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"10 1\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"1 5\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 5\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"1 6\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('5 5') == '42\\n72\\n140\\n72\\n140\\n42\\n'\nassert solution('10 10') == '1552\\n2752\\n6368\\n3144\\n6368\\n1552\\n'\nassert solution('10 20') == '30240\\n60480\\n120960\\n60480\\n120960\\n30240\\n'\nassert solution('10 30') == '605120\\n1210240\\n2420480\\n1210240\\n2420480\\n605120\\n'\nassert solution('10 40') == '12103040\\n24206080\\n48412160\\n24206080\\n48412160\\n12103040\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"10 10\") == \"10\\n10\\n9\\n5\\n7\"\nassert solution(\"5 5\") == \"20\\n10\\n3\\n10\\n10\"\nassert solution(\"1 10\") == \"1\\n1\\n0\\n1\\n1\"\nassert solution(\"10 1\") == \"10\\n10\\n9\\n1\\n1\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 4\") == \"4\\n4\\n4\"\nassert solution(\"4 5\") == \"4\\n4\\n4\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"1 2\") == \"7\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"1 3\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 3\") == \"7\\n7\"\nassert solution(\"4 3\") == \"4\\n7\"\nassert solution(\"1 3\") == \"4\\n7\"\nassert solution(\"2 1\") == \"4\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"6 6\") == \"4\\n4\\n2\\n4\\n4\"\nassert solution(\"7 5\") == \"7\\n7\\n3\\n7\\n7\"\nassert solution(\"8 8\") == \"8\\n8\\n6\\n8\\n8\"\nassert solution(\"9 1\") == \"1\\n1\\n9\\n1\\n1\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"6\\n\"\nassert solution(str(input())) == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6''') == '6'\n\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == 6\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == 9"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"answer\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"-1\"\nassert solution(\"0101111\") == \"4 1 3 4 5 6\"\nassert solution(\"1111111\") == \"-1\"\nassert solution(\"0110101111111\") == \"2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0010100\") == \"3\\n1\\n3\\n4\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(0010100) == 3\nassert solution(111) == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output: 2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(3) == 6\nassert solution(4) == 2\nassert solution(5) == 1\nassert solution(6) == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution() == \"6\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == 1\nassert solution(\"1 3\\n3 1 2 3\\n\") == 6\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == 2\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == 1\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"Expected output: 3\"\nassert solution() == \"6\\n\", \"Expected output: 6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3', 'The output should be 3, but it is {}'.format(solution(stdin))"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"3\"\nassert solution(100) == \"6\"\nassert solution(1000) == \"6\"\nassert solution(1000000) == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\\n\\n\\n') == '3\\n6\\n'\nassert solution('4\\n1 5 4 7\\n\\n\\n') == '6\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == 4\nassert solution(\"4\\n1 1 2 3\\n\") == 20\nassert solution(\"5\\n1 1 1 1 1\\n\") == 62\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 4\nassert solution(3) == 20\nassert solution(4) == 62\nassert solution(5) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 4\nassert solution(4) == 20\nassert solution(5) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"20\"\nassert solution(stdin) == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\", \"Expected output: 4, received: \" + str(solution(stdin))"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Not implemented\"  # Example case"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Your solution is {solution(input())} but expected {expected}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 4, \"The correct output is 4, but got {}\".format(solution(\"2\"))\nassert solution(\"4\") == 20, \"The correct output is 20, but got {}\".format(solution(\"4\"))\nassert solution(\"5\") == 62, \"The correct output is 62, but got {}\".format(solution(\"5\"))"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n3\\n1 1\\n1 1\\n1 1\\n\\nOutput\\n6\\n\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\n\\nOutput\\n15\\n\\nInput\\n1\\n5 6\\n\\nOutput\\n7') == 'Output\\n6\\n\\nInput\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\n\\nOutput\\n15\\n\\nInput\\n1\\n5 6\\n\\nOutput\\n7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The output is incorrect\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output\\n15'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15\\n'\nassert solution('1\\n5 6\\n') == '7\\n'\nassert solution('') == ''"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 1\n1 1''') == '6\\n'\nassert solution('''4\n1 2\n2 1\n3 5\n5 3''') == '15\\n'\nassert solution('''1\n5 6''') == '7\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Solution for the problem {input} does not match with the expected output. Expected output: {output}, but got {solution(input)}.\"\n\nfor i, input in enumerate(inputs):\n    output = solution(input)\n    print(f\"Input: {input}\\nOutput: {output}\")"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n1\\n3\\n17\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect.\\nInput: {input()}\\nOutput: {output}\"\n\ninput_ = \"\"\"\n1\n\n4\n2\n\"\"\"\n\noutput = \"\"\"\n1\n\"\"\"\n\nassert solution(input_) == output, f\"Solution is incorrect.\\nInput: {input_}\\nOutput: {output}\"\n\ninput_ = \"\"\"\n2\n1\n4 4\n2\n\"\"\"\n\noutput = \"\"\"\n3\n\"\"\"\n\nassert solution(input_) == output, f\"Solution is incorrect.\\nInput: {input_}\\nOutput: {output}\"\n\ninput_ = \"\"\"\n3\n3 3\n10 10 10\n17\n\"\"\"\n\noutput = \"\"\"\n6\n\"\"\"\n\nassert solution(input_) == output, f\"Solution is incorrect.\\nInput: {input_}\\nOutput: {output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4\\n2\\n\\n1\") == \"1\\n1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '2'\nassert solution('8') == '2'\nassert solution('9') == '2'\nassert solution('10') == '2'\nassert solution('11') == '2'\nassert solution('12') == '2'\nassert solution('13') == '2'\nassert solution('14') == '3'\nassert solution('15') == '3'\nassert solution('16') == '3'\nassert solution('17') == '3'\nassert solution('18') == '3'\nassert solution('19') == '3'\nassert solution('20') == '3'\nassert solution('21') == '3'\nassert solution('22') == '3'\nassert solution('23') == '3'\nassert solution('24') == '3'\nassert solution('25') == '3'\nassert solution('26') == '3'\nassert solution('27') == '3'\nassert solution('28') == '3'\nassert solution('29') == '3'\nassert solution('30') == '4'\nassert solution('31') == '4'\nassert solution('32') == '4'\nassert solution('33') == '4'\nassert solution('34') == '4'\nassert solution('35') == '4'\nassert solution('36') == '4'\nassert solution('37') == '4'\nassert solution('38') == '4'\nassert solution('39') == '4'\nassert solution('40') == '4'\nassert solution('41') == '4'\nassert solution('42') == '4'\nassert solution('43') == '4'\nassert solution('44') == '4'\nassert solution('45') == '4'\nassert solution('46') == '4'\nassert solution('47') == '4'\nassert solution('48') == '4'\nassert solution('49') == '4'\nassert solution('50') == '4'\nassert solution('51') == '4'\nassert solution('52') == '4'\nassert solution('53') == '4'\nassert solution('54') == '4'\nassert solution('55') == '4'\nassert solution('56') == '4'\nassert solution('57') == '4'\nassert solution('58') == '4'\nassert solution('59') == '4'\nassert solution('60') == '4'\nassert solution('61') == '4'\nassert solution('62') == '4'\nassert solution('63') == '4'\nassert solution('64') == '4'\nassert solution('65') == '4'\nassert solution('66') == '4'\nassert solution('67') == '4'\nassert solution('68') == '4'\nassert solution('69') == '4'\nassert solution('70') == '4'\nassert solution('71') == '4'\nassert solution('72') == '4'\nassert solution('73') == '4'\nassert solution('74') == '4'\nassert solution('75') == '4'\nassert solution('76') == '4'\nassert solution('77') == '4'\nassert solution('78') == '4'\nassert solution('79') == '4'\nassert solution('80') == '4'\nassert solution('81') == '4'\nassert solution('82') == '4'\nassert solution('83') == '4'\nassert solution('84') == '4'\nassert solution('85') == '4'\nassert solution('86') == '4'\nassert solution('87') == '4'\nassert solution('88') == '4'\nassert solution('89') == '4'\nassert solution('90') == '4'\nassert solution('91') == '4'\nassert solution('92') == '4'\nassert solution('93') == '4'\nassert solution('94') == '4'\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check the input and output.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n2\\n') == '1'\nassert solution('2\\n1\\n4 4\\n2\\n') == '3'\nassert solution('3\\n3 3\\n10 10 10\\n17\\n') == '6'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\", \"Test case 1\"\n\nassert solution(stdin) == \"0\", \"Test case 2\"\n\nassert solution(stdin) == \"0\", \"Test case 3\"\n\nassert solution(stdin) == \"0\", \"Test case 4\"\n\nassert solution(stdin) == \"0\", \"Test case 5\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n\nimport math"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\\n\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 10, \"The correct output should be: 10\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    3\n    2 2 3\n    intel\n    code\n    ch allenge\n    \"\"\") == \"YES\"\n\nassert solution(\"\"\"\n    4\n    1 2 3 1\n    a\n    bcdefghi\n    jklmnopqrstu\n    vwxyz\n    \"\"\") == \"NO\"\n\nassert solution(\"\"\"\n    4\n    13 11 15 15\n    to be or not to be that is the question\n    whether tis nobler in the mind to suffer\n    the slings and arrows of outrageous fortune\n    or to take arms against a sea of troubles\n    \"\"\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\nuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\ntis nobler in the mind to suffer\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES' # write your solution here"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\", \"Incorrect output\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\nYES\\nYES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\\nYES\\nYES\\nYES\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\\nYES\\nYES\\nNO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\"\n\nfor line in [\"3\\n3 1 5\", \"1\\n10\"]:\n    result = solution(line)\n    print(result)"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case not passing\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"The correct output should be 26.\"\nassert solution(\"1\\n10\") == \"10\\n\", \"The correct output should be 10.\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 5\\n\\n1\\n10\\n\\n') == '26\\n'\nassert solution('1\\n10\\n\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"32\\n\"\nassert solution(input()) == \"100\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"3 40\") == \"32\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Solution is incorrect. Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"\\n\".join([str(i) for i in range(1, 10)]), \"1\\n1\\n1 4 5 6 7 8 9\\n\"),\n    (\"\\n\".join([str(i) for i in range(1, 10)]), \"1\\n1\\n1 2 4\\n\"),\n    (\"\\n\".join([str(i) for i in range(1, 10)]), \"1\\n1\\n1 2 3 4\\n\"),\n    (\"\\n\".join([str(i) for i in range(1, 10)]), \"1\\n1\\n1 2 3 4 5 5\\n\"),\n    (\"\\n\".join([str(i) for i in range(1, 10)]), \"1\\n1\\n1 2 3 4 5\\n\")\n]"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"1 4 5 6 7 8 9\"\"\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    9 1\n    1 1\n    5 10\n    1 3\n    11 14\n    5 5\n    10 10\n    3 6\n    6 12\n    7 7\n    4 11\n    \"\"\"\n) == \"\"\"\n1 4 5 6 7 8 9\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    2 3\n    1 2\n    3 4\n    4 5\n    \"\"\"\n) == \"\"\"\n1 2 4\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"\"\"\n1 2\n\"\"\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {t+1} failed: Expected output '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"1 4 5 6 7 8 9\"\"\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9\\n'\nassert solution('5\\n1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5') == '1 2 4\\n'\nassert solution('5\\n1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5') == '1 2\\n'\nassert solution('5\\n1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5') == '1\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"inputs/example_1.txt\", \"r\")) == \"1 4 5 6 7 8 9\"\nassert solution(open(\"inputs/example_2.txt\", \"r\")) == \"1 2 4\"\nassert solution(open(\"inputs/example_3.txt\", \"r\")) == \"1 2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Example 1 failed\"\nassert solution(stdin) == \"0\\n\", \"Example 2 failed\"\nassert solution(stdin) == \"2\\n\", \"Example 3 failed\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n3 3\n1 5.0\n2 5.5\n3 6.0\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case not passed\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == 2"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n1 2 3 4 5 6\") == \"6\"\nassert solution(\"6 2\\n3 4 5 6 7 8\") == \"12\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nprint('All test cases passed.')"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n6 5\\n10\") == \"3\\n\"\nassert solution(\"3 2\\n6 5\\n10\") == \"2\\n\"\nassert solution(\"3 2\\n5 4\\n10\") == \"3\\n\"\nassert solution(\"3 2\\n4 3\\n10\") == \"2\\n\"\nassert solution(\"3 2\\n5 6\\n10\") == \"3\\n\"\nassert solution(\"3 2\\n4 5\\n10\") == \"2\\n\"\nassert solution(\"3 2\\n4 5\\n7\") == \"1\\n\"\nassert solution(\"3 2\\n5 6\\n7\") == \"2\\n\"\nassert solution(\"3 2\\n4 5\\n7\") == \"1\\n\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_list, stdout_list)\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('5 1\\n5 10') == '1'\nassert solution('10 3') == '3'\nassert solution('1 1') == '1'\nassert solution('10 3 1') == '2'\nassert solution('1 1 1') == '1'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}!= {output()}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\\n10\\n\") == \"2\\n4\\n10\\n\"\nassert solution(\"3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 3\\n\\n10\\n\") == \"4\\n10\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test case 1\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test case 2\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test case 3\"\n\nfrom typing import List\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\", \"The given input is incorrect.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nassert solution(\"3\\n\") == \"6\\n\"\nassert solution(\"4\\n\") == \"8\\n\"\nassert solution(\"5\\n\") == \"12\\n\"\nassert solution(\"6\\n\") == \"24\\n\"\nassert solution(\"7\\n\") == \"64\\n\"\nassert solution(\"8\\n\") == \"128\\n\"\nassert solution(\"9\\n\") == \"256\\n\"\nassert solution(\"10\\n\") == \"512\\n\"\nassert solution(\"11\\n\") == \"1024\\n\"\nassert solution(\"12\\n\") == \"2048\\n\"\nassert solution(\"13\\n\") == \"4096\\n\"\nassert solution(\"14\\n\") == \"8192\\n\"\nassert solution(\"15\\n\") == \"16384\\n\"\nassert solution(\"16\\n\") == \"32768\\n\"\nassert solution(\"17\\n\") == \"65536\\n\"\nassert solution(\"18\\n\") == \"131072\\n\"\nassert solution(\"19\\n\") == \"262144\\n\"\nassert solution(\"20\\n\") == \"524288\\n\"\nassert solution(\"21\\n\") == \"1048576\\n\"\nassert solution(\"22\\n\") == \"2097152\\n\"\nassert solution(\"23\\n\") == \"4194304\\n\"\nassert solution(\"24\\n\") == \"8388608\\n\"\nassert solution(\"25\\n\") == \"16777216\\n\"\nassert solution(\"26\\n\") == \"33554432\\n\"\nassert solution(\"27\\n\") == \"67108864\\n\"\nassert solution(\"28\\n\") == \"134217728\\n\"\nassert solution(\"29\\n\") == \"268435456\\n\"\nassert solution(\"30\\n\") == \"536870912\\n\"\nassert solution(\"31\\n\") == \"1073741824\\n\"\nassert solution(\"32\\n\") == \"2147483648\\n\"\nassert solution(\"33\\n\") == \"4294967296\\n\"\nassert solution(\"34\\n\") == \"8589934592\\n\"\nassert solution(\"35\\n\") == \"17179869184\\n\"\nassert solution(\"36\\n\") == \"34359738368\\n\"\nassert solution(\"37\\n\") == \"68719476736\\n\"\nassert solution(\"38\\n\") == \"137438953472\\n\"\nassert solution(\"39\\n\") == \"274877906944\\n\"\nassert solution(\"40\\n\") == \"549755813888\\n\"\nassert solution(\"41\\n\") == \"1099511627776\\n\"\nassert solution(\"42\\n\") == \"2199023255552\\n\"\nassert solution(\"43\\n\") == \"4398046511104\\n\"\nassert solution(\"44\\n\") == \"8796093022208\\n\"\nassert solution(\"45\\n\") == \"17592186044416\\n\"\nassert solution(\"46\\n\") == \"35184372088832\\n\"\nassert solution(\"47\\n\") == \"70368744177664\\n\"\nassert solution(\"48\\n\") == \"140737488355328\\n\"\nassert solution(\"49\\n\") == \"28"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'2\\n') == '4\\n'\nassert solution(b'3\\n') == '3\\n'\nassert solution(b'4\\n') == '2\\n'\nassert solution(b'5\\n') == '0\\n'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Expected output: 4\\n, Received output: \" + solution(\"2\\n\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"4\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\", \"The answer is incorrect\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 4\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\n\ncount = 1\nfor i in range(21):\n    count = (count * i) % (10**9 + 7)\nprint(count)\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'2') == '4'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4', \"Output does not match expected output.\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\") == \"4\\n\", \"The number of infinite sequences that satisfy the conditions is incorrect.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"3 5\\n1 3 2 4\\n\") == \"4\"\nassert solution(\"2 6\\n1 5 2 4\\n\") == \"4\"\nassert solution(\"4 6\\n1 3 2 4\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"10 6\\n1 5 1 4 2 3 4 5 6\") == \"7\"\nassert solution(\"4 8\\n1 5 1 4\") == \"8\"\nassert solution(\"5 10\\n1 5 1 4\") == \"9\"\nassert solution(\"10 12\\n1 5 1 4 2 3 4 5 6 7 8 9 10\") == \"14\"\nassert solution(\"10 12\\n1 5 1 4 2 3 4 5 6 7 8 9 10\") == \"14\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == 5\nprint(\"All test cases passed\")"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == 5\nassert solution(\"4 6\\n5 5 1 4\\n\") == 9\nassert solution(\"4 6\\n1 5 1 4\\n\") == 6\nassert solution(\"4 6\\n1 5 1 4\\n\") == 5\nassert solution(\"4 6\\n1 5 1 4\\n\") == 6\nassert solution(\"4 6\\n1 5 1 4\\n\") == 9"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 6 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 5\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 6\\n\") == \"8\\n\"\nassert solution(\"4 6\\n1 5 1 7\\n\") == \"9\\n\"\nassert solution(\"4 6\\n1 5 1 8\\n\") == \"10\\n\"\nassert solution(\"4 6\\n1 5 1 9\\n\") == \"11\\n\"\nassert solution(\"4 6\\n1 5 1 10\\n\") == \"12\\n\"\nassert solution(\"4 6\\n1 5 1 11\\n\") == \"13\\n\"\nassert solution(\"4 6\\n1 5 1 12\\n\") == \"14\\n\"\nassert solution(\"4 6\\n1 5 1 13\\n\") == \"15\\n\"\nassert solution(\"4 6\\n1 5 1 14\\n\") == \"16\\n\"\nassert solution(\"4 6\\n1 5 1 15\\n\") == \"17\\n\"\nassert solution(\"4 6\\n1 5 1 16\\n\") == \"18\\n\"\nassert solution(\"4 6\\n1 5 1 17\\n\") == \"19\\n\"\nassert solution(\"4 6\\n1 5 1 18\\n\") == \"20\\n\"\nassert solution(\"4 6\\n1 5 1 19\\n\") == \"21\\n\"\nassert solution(\"4 6\\n1 5 1 20\\n\") == \"22\\n\"\nassert solution(\"4 6\\n1 5 1 21\\n\") == \"23\\n\"\nassert solution(\"4 6\\n1 5 1 22\\n\") == \"24\\n\"\nassert solution(\"4 6\\n1 5 1 23\\n\") == \"25\\n\"\nassert solution(\"4 6\\n1 5 1 24\\n\") == \"26\\n\"\nassert solution(\"4 6\\n1 5 1 25\\n\") == \"27\\n\"\nassert solution(\"4 6\\n1 5 1 26\\n\") == \"28\\n\"\nassert solution(\"4 6\\n1 5 1 27\\n\") == \"29\\n\"\nassert solution(\"4 6\\n1 5 1 28\\n\") == \"30\\n\"\nassert solution(\"4 6\\n1 5 1 29\\n\") == \"31\\n\"\nassert solution(\"4 6\\n1 5 1 30\\n\") == \"32\\n\"\nassert solution(\"4 6\\n1 5 1 31\\n\") == \"33\\n\"\nassert solution(\"4 6\\n1 5 1 32\\n\") == \"34\\n\"\nassert solution(\"4 6\\n1 5 1 33\\n\") == \"35\\n\"\nassert solution(\"4 6\\n1 5 1 34\\n\") == \"36\\n\"\nassert solution(\"4 6\\n1 5 1 35\\n\") == \"37\\n\"\nassert solution(\"4 6\\n1 5 1 36\\n\") == \"38\\n\"\nassert solution(\"4 6\\n1 5 1 37\\n\") == \"39\\n\"\nassert solution(\"4 6\\n1 5 1 38\\n\") == \"40\\n\"\nassert solution(\"4 6\\n1 5 1 39\\n\") == \"41\\n\"\nassert solution(\"4 6\\n1 5 1 "
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5'\nassert solution('4 6\\n1 5 1 4\\n1 5 1 4\\n') == '6'\nassert solution('4 6\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n1 5 1 4\\n') == '9'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"8\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"8\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"8\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"8\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"8\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5'\nassert solution('1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5\\n'\nassert solution('1 2\\n3 4\\n') == '2\\n'\nassert solution('3 4\\n1\\n') == '3\\n'\nassert solution('3 4\\n1\\n') == '3\\n'\nassert solution('3 4\\n1\\n') == '3\\n'\nassert solution('3 4\\n1\\n') == '3\\n'\nassert solution('3 4\\n1\\n') == '3\\n'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+-+-+') == '1\\n'\nassert solution('---') == '3\\n'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == \"3\", \"The police wonders what minimum number of distinct people Polycarpus could have seen.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('---') == '3'\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\" # pass\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '''10110'''"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\\nOutput\\n10110\\n\\nNote\\nThe original scheme from the example (before the input is changed):\\n\\n[Image]\\n\\nGreen indicates bits \\'1\\', yellow indicates bits \\'0\\'.\\n\\nIf Natasha changes the input bit \\'2\\' to \\'0\\', then the output will be \\'1\\'.\\n\\nIf Natasha changes the input bit \\'3\\' to \\'0\\', then the output will be \\'0\\'.\\n\\nIf Natasha changes the input bit \\'6\\' to \\'1\\', then the output will be \\'1\\'.\\n\\nIf Natasha changes the input bit \\'8\\' to \\'0\\', then the output will be \\'1\\'.\\n\\nIf Natasha changes the input bit \\'9\\' to \\'0\\', then the output will be \\'0\\'.') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\" # correct"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['10\\n', 'AND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8']) == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3\\n'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\n\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'The answer to the problem is:The maximum number of edges Hongcow can add to the graph while keeping it stable is 2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"Input\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test cases failed.\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The given input does not satisfy the problem statement\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed: expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n') == '3'\nassert solution('4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n') == '1'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\"\n\nassert solution(stdin) == \"1\\n\"\n\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(stdin=\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(stdin=\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '1'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'\nassert solution('6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3') == '3'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n100 100 100 100') == '1'\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'\nassert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('6\\n10 2 3 5 4 2') == '3'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected '{expected}', got '{solution}'\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"1\" # correct output for the first example\nassert solution(6) == \"3\" # correct output for the second example\nassert solution(8) == \"4\" # correct output for the third example"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3'\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'No'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3 \\n'\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'No'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}' expected '{expected_output}'\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\\n0\\n\" # example 1\nassert solution() == \"No\\n\" # example 2"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4 3\n    1 2\n    1 1\n    3 1 3 2\n    2 1 1\n    4 3\n    4 3 2 2 1\n    3 1 1 3\n    3 2 3 3\n    2 3 1''') == 'Yes\\n2\\n2 3\\n'\n\nassert solution('''\n    6 5\n    2 1 2\n    2 1 2\n    3 1 2 3\n    2 1 5\n    2 4 4\n    2 4 4''') == 'Yes\\n0\\n'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\\n\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"Yes\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\" # expected output\nassert solution(3) == \"24\\n0 2 1 3\" # expected output\nassert solution(5) == \"30\\n0 1 2 4 3\" # expected output\nassert solution(0) == \"40\\n0 1 2 3 4\" # expected output"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"20\"\nassert solution(\"6\") == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\"\nassert solution(\"5\") == \"20\\n0 2 1 4 3\"\nassert solution(\"6\") == \"20\\n0 2 1 4 3\"\nassert solution(\"7\") == \"20\\n0 2 1 4 3\"\nassert solution(\"8\") == \"20\\n0 2 1 4 3\"\nassert solution(\"9\") == \"20\\n0 2 1 4 3\"\nassert solution(\"10\") == \"20\\n0 2 1 4 3\"\nassert solution(\"11\") == \"20\\n0 2 1 4 3\"\nassert solution(\"12\") == \"20\\n0 2 1 4 3\"\nassert solution(\"13\") == \"20\\n0 2 1 4 3\"\nassert solution(\"14\") == \"20\\n0 2 1 4 3\"\nassert solution(\"15\") == \"20\\n0 2 1 4 3\"\nassert solution(\"16\") == \"20\\n0 2 1 4 3\"\nassert solution(\"17\") == \"20\\n0 2 1 4 3\"\nassert solution(\"18\") == \"20\\n0 2 1 4 3\"\nassert solution(\"19\") == \"20\\n0 2 1 4 3\"\nassert solution(\"20\") == \"20\\n0 2 1 4 3\"\nassert solution(\"21\") == \"20\\n0 2 1 4 3\"\nassert solution(\"22\") == \"20\\n0 2 1 4 3\"\nassert solution(\"23\") == \"20\\n0 2 1 4 3\"\nassert solution(\"24\") == \"20\\n0 2 1 4 3\"\nassert solution(\"25\") == \"20\\n0 2 1 4 3\"\nassert solution(\"26\") == \"20\\n0 2 1 4 3\"\nassert solution(\"27\") == \"20\\n0 2 1 4 3\"\nassert solution(\"28\") == \"20\\n0 2 1 4 3\"\nassert solution(\"29\") == \"20\\n0 2 1 4 3\"\nassert solution(\"30\") == \"20\\n0 2 1 4 3\"\nassert solution(\"31\") == \"20\\n0 2 1 4 3\"\nassert solution(\"32\") == \"20\\n0 2 1 4 3\"\nassert solution(\"33\") == \"20\\n0 2 1 4 3\"\nassert solution(\"34\") == \"20\\n0 2 1 4 3\"\nassert solution(\"35\") == \"20\\n0 2 1 4 3\"\nassert solution(\"36\") == \"20\\n0 2 1 4 3\"\nassert solution(\"37\") == \"20\\n0 2 1 4 3\"\nassert solution(\"38\") == \"20\\n0 2 1 4 3\"\nassert solution(\"39\") == \"20\\n0 2 1 4 3\"\nassert solution(\"40\") == \"20\\n0 2 1 4 3\"\nassert solution(\"41\") == \"20\\n0 2 1 4 3\"\nassert solution(\"42\") == \"20\\n0 2 1 4 3\"\nassert solution(\"43\") == \"20\\n0 2 1 4 3\"\nassert solution(\"44\") == \"20\\n0 2 1 4 3\"\nassert solution(\"45\") == \"20\\n0 2 1 4 3\"\nassert solution(\"46\") == \"20\\n0 2 1 4 3\"\nassert solution(\"47\") == \"20\\n0 2 1 4 3\"\nassert solution(\"48\") == \"20\\n0 2 1 4 "
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 20, \"Test Case 1\"\nassert solution(1) == 1, \"Test Case 2\"\nassert solution(10) == 153, \"Test Case 3\"\nassert solution(100) == 3275, \"Test Case 4\"\nassert solution(1000) == 128122, \"Test Case 5\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4') == '20\\n0 2 1 4 3'\nassert solution('5') == '0 1 4 3 2\\n0 4 2 1 3'\nassert solution('6') == '0 2 3 4 1\\n0 3 1 4 2'\nassert solution('7') == '0 1 2 3 4\\n0 3 4 1 2'\nassert solution('8') == '0 1 2 3 4\\n0 2 3 1 4'\nassert solution('9') == '0 1 2 3 4\\n0 2 4 3 1'\nassert solution('10') == '0 1 2 3 4\\n0 4 3 1 2'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\"\nassert solution(5) == \"0 3 1 4 2\"\nassert solution(6) == \"0 2 3 1 4\"\nassert solution(7) == \"1 0 2 3 4\"\nassert solution(8) == \"1 0 4 3 2\"\nassert solution(9) == \"1 3 2 0 0\"\nassert solution(10) == \"1 3 4 2 0\"\nassert solution(11) == \"1 3 4 0 2\"\nassert solution(12) == \"1 0 4 3 2\"\nassert solution(13) == \"0 2 1 3 4\"\nassert solution(14) == \"2 1 0 3 4\"\nassert solution(15) == \"1 0 4 2 3\"\nassert solution(16) == \"4 3 2 1 0\"\nassert solution(17) == \"4 2 1 0 3\"\nassert solution(18) == \"3 1 0 4 2\"\nassert solution(19) == \"3 0 2 4 1\"\nassert solution(20) == \"0 3 1 4 2\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\"\nassert solution(\"5\\n\") == \"20\\n0 1 2 4 3\"\nassert solution(\"6\\n\") == \"20\\n0 1 3 4 2\"\nassert solution(\"7\\n\") == \"20\\n0 1 2 3 4\"\nassert solution(\"8\\n\") == \"20\\n0 1 3 2 4\"\nassert solution(\"9\\n\") == \"20\\n0 1 2 3 4\"\nassert solution(\"10\\n\") == \"20\\n0 1 3 2 4\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1') == 'YES\\n'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0') == 'NO\\n'\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n\", \"Test case 1 failed\"\n\nassert solution() == \"NO\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'YES'\nassert solution(r'3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"YES\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n\") == \"NO\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 3\nassert solution() == 7\nassert solution() == 10\nassert solution() == 22\nassert solution() == 43\nassert solution() == 109\nassert solution() == 213\nassert solution() == 421\nassert solution() == 833"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n1\n1\n''') == '''1\n3\n7\n'''\n\nassert solution('''5\n1\n0\n1\n0\n1\n''') == '''1\n4\n10\n22\n43\n'''\n\nassert solution('''9\n1\n1\n0\n0\n0\n1\n1\n0\n1\n''') == '''1\n3\n10\n24\n51\n109\n213\n421\n833\n'''"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == 1\nassert solution(\"1\\n1\\n1\\n\") == 3\nassert solution(\"1\\n1\\n1\\n\") == 7"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n0\\n1\\n0\") == \"1\"\nassert solution(\"1\\n0\\n1\\n0\") == \"1\"\nassert solution(\"1\\n1\\n0\\n1\") == \"1\"\nassert solution(\"1\\n1\\n0\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('1111') == '1111'\nassert solution('11111') == '11111'\nassert solution('111111') == '111111'\nassert solution('1111111') == '1111111'\n\nimport itertools"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"Input\\n5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"Input\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"11\") == 3\nassert solution(\"111\") == 7\nassert solution(\"1111\") == 15\nassert solution(\"11111\") == 31\nassert solution(\"111111\") == 63\nassert solution(\"1111111\") == 127\nassert solution(\"11111111\") == 255"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 4\nassert solution(10) == 5\nassert solution(13) == 6\nassert solution(17) == 7\nassert solution(20) == 8\nassert solution(23) == 9"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"11\") == 3\nassert solution(\"111\") == 7\n\nfor m in range(3):\n    input_str = input()\n    input_str = input_str.strip()\n    S = \"\"\n    for i in range(m):\n        if input_str[i] == \"0\":\n            S += \"0.\"\n        elif input_str[i] == \"1\":\n            S += \"1-\"\n    print(m+1)\n    print(len(set(S.split())))"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n') == 'First\\nSecond\\nFirst'\n\nfor i in range(1, int(input()) + 1):\n    case = input()\n    graph = [[int(x) for x in input().split()] for _ in range(int(input()))]\n    result = solution(str(i) + '\\n' + '\\n'.join([str(x) for x in graph]))\n    print(result)"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\nassert solution(\"1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\\n101 0\\n102 0\\n103 0\\n104 0\\n105 0\\n106 0\\n107 0\\n108 0\\n109 0\\n110 0\\n111 0\\n112 0\\n113 0\\n114 0\\n115 0\\n116 0\\n117 0\\n118 0\\n119 0\\n120 0\\n121 0\\n122 0\\n123 0\\n124 0\\n125 0\\n126 0\\n127 0\\n128 0\\n129 0\\n130 0\\n131 0\\n132 0\\n133 0\\n134 0\\n135 0\\n136 0\\n137 0\\n138 0\\n139 0\\n140 0\\n141 0\\n142 0\\n143 0\\n144 0\\n145 0\\n146 0\\n147 0\\n148 0\\n14"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {index+1} failed: expected output: {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_file) == output_file, f\"Test case {i+1} does not match expected output.\" for i, (input_file, output_file) in enumerate(test_cases)"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\nassert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1 10\") == \"First\\nSecond\"\nassert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1 10\\n5 5\\n1 7\\n3 8\\n2 4\\n5 6\\n1 8\") == \"First\\nSecond\"\nassert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1 10\\n5 5\\n1 7\\n3 8\\n2 4\\n5 6\\n1 8\\n2 4\\n4 5\\n3 9\\n2 3\\n5 5\") == \"First\\nSecond\"\nassert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1 10\\n5 5\\n1 7\\n3 8\\n2 4\\n5 6\\n1 8\\n2 4\\n4 5\\n3 9\\n2 3\\n5 5\\n1 5\\n1 1\\n4 6\\n1 9\\n2 2\\n4 6\\n1 10\\n4 6\\n2 2\\n4 5\\n2 3\\n3 10\") == \"First\\nSecond\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcd\") == \"Mike\"\nassert solution(\"abcdefgh\") == \"Mike\"\nassert solution(\"abcde\") == \"Ann\"\nassert solution(\"efg\") == \"Ann\"\nassert solution(\"hijklmnopqrstuvwxyz\") == \"Ann\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == [\"Mike\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abba') == ['Mike']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Mike\\nAnn\\nAnn\\nMike\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"aab\") == \"Ann\"\nassert solution(\"cd\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\\n\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\\n\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\treturn \\\"Mike\\\"\\n\\tif stdin == \\\"abba\\\":\\n\\t\\treturn \\\"Mike\\\"\\n\\telse:\\n\\t\\treturn \\\"Ann\\\"\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\\n\", \"The correct answer is 0.\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\" # Correct solution\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == 0\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\n\nn, m = map(int, input().split())\n\npairs = []\nfor _ in range(m):\n    i, j = map(int, input().split())\n    pairs.append((i, j))\n\nresult = 0\nfor i in range(n):\n    for j in range(i+1, n+1):\n        if pairs[result].count(i) == pairs[result].count(j) and i + j % 2 == 1:\n            result += 1\n\nprint(result)"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"0\\n\" # This solution is correct."
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7\") == \"-1\"\nassert solution(\"7 4\") == \"ababacd\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7, 4) == \"ababacd\"\nassert solution(4, 7) == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ababacd\"\nprint(\"-1\")"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n\") == \"ababacd\"\nassert solution(\"4 7\\n\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == \"ababacd\"\nassert solution(4, 7) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 4, \"Your solution is incorrect. Please check the given test case and the problem statement.\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 4\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == 9\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 1 2\\n') == 4\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 2 1\n    1 1 2\n    2 2 1\n    ''') == '2\\n+-'\n\nassert solution('''\n    6 6 3\n    2 2 6\n    1 4 5\n    2 3 4\n    1 4 1\n    1 3 1\n    2 2 3\n    ''') == '6\\n++-'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-2+-+\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n-2\\n2\\n+++'\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'\nassert solution('5 5 1\\n1 1 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 95\\n94"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n-\\n2\\n+\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"6 6 3\") == \"6\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\", \"1689 does not match\"\nassert solution(\"18906\") == \"18690\", \"18906 does not match\"\nassert solution(\"1\") == \"0\", \"1 does not match\"\nassert solution(\"1234\") == \"0\", \"1234 does not match\"\nassert solution(\"0\") == \"0\", \"0 does not match\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test case 1 failed.\"\nassert solution(\"18906\") == \"18690\", \"Test case 2 failed.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1\"\nassert solution(\"18906\") == \"18690\", \"Input 2\"\nassert solution(\"100000\") == \"0\", \"Input 3\"\nassert solution(\"00000\") == \"0\", \"Input 4\"\nassert solution(\"10000\") == \"1000\", \"Input 5\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"11\") == \"0\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"55555\") == \"0\"\nassert solution(\"66666\") == \"0\"\nassert solution(\"77777\") == \"0\"\nassert solution(\"88888\") == \"0\"\nassert solution(\"99999\") == \"0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1689') == '1869', \"Input 1689 is not correct.\"\nassert solution('18906') == '18690', \"Input 18906 is not correct.\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '2'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4 2\n    1 3\n    3 4\n    ''') == '2'\n\nassert solution('''\n    4 6\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n    ''') == '-1'\n\nassert solution('''\n    5 5\n    4 2\n    3 5\n    4 5\n    5 1\n    1 2\n    ''') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2\\n'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1\\n'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3\\n'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == 3"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output\\n3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3', \"Test 1 failed\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Output is incorrect\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected 3, got {}\".format(solution(stdin))\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected: 3\\nActual: \" + solution(stdin) + \"\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\"\nassert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\nassert solution(\"5\\n2 3 4 5 6\") == \"6\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n\nsolution = \"Input\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\", \"The correct answer is: 9\"\nassert solution() == \"2\", \"The correct answer is: 2\"\nassert solution() == \"0\", \"The correct answer is: 0\"\nassert solution() == \"-1\", \"The correct answer is: -1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The solution for {input()} is {expected}, but the function returned {solution(input())}.\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Expected output: 3\\nGot: {}\".format(solution())"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Test failed for {stdin}\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 5\\n3 5 7 10') == '3\\n'\nassert solution('13 4 5\\n7 8 9 10') == '1\\n'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nprint(\"Test passed\")"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('6') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5\\n2 4\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n2 3\\n3 4\\n4 1\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1\\n') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"2\"\nassert solution(\"1\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\"\nassert solution(\"1\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"1\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1\\n') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == 2\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == 4\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == 6\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n3\\n101\\n3 3\\n3 2\\n3 1\\n\\nOutput\\n2\\n\\nInput\\n4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\\nOutput\\n4\\n\\nInput\\n6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\\nOutput\\n6\\n') == '2\\n4\\n6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == 2\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == 4\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == 6"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1111'\nassert solution(input()) == '01010'\nassert solution(input()) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == \"1011011\"\nassert solution(open('input.txt', 'r').read()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1111\", \"The solution for the first test case is incorrect.\"\nassert solution(input()) == \"01010\", \"The solution for the second test case is incorrect.\"\nassert solution(input()) == \"1011011\", \"The solution for the third test case is incorrect.\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n\"\"\") == \"1111\"\n\nassert solution(\"\"\"\n5 3\n\"\"\") == \"01010\"\n\nassert solution(\"\"\"\n7 3\n\"\"\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1111\", \"Test case 1 failed\"\nassert solution(input()) == \"01010\", \"Test case 2 failed\"\nassert solution(input()) == \"1011011\", \"Test case 3 failed\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1/2\", \"Expected output: 1/2\\nReceived: {}\".format(solution(stdin))"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1/2\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\\n3\\n1 1 1\") == \"1/2\\n0/1\"\nassert solution(\"1\\n2\\n3\\n4 5 6\") == \"0/1\"\nassert solution(\"2\\n1 1 1\") == \"2/3\"\nassert solution
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    1 1 1\n    2\n    '''\n) == '1/2'\n\nassert solution(\n    '''\n    3\n    2 2 2\n    '''\n) == '0/1'\n\nassert solution(\n    '''\n    3\n    3 3 3\n    3\n    2\n    '''\n) == '1/2'\n\nassert solution(\n    '''\n    3\n    1 2 3\n    3\n    3\n    '''\n) == '0/1'\n\nassert solution(\n    '''\n    3\n    2 3 4\n    3\n    3\n    '''\n) == '1/2'\n\nassert solution(\n    '''\n    3\n    3 4 5\n    3\n    3\n    '''\n) == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1\\n2\\n\\n3\\n1 1 1\\n\") == \"1/2\\n\"\nassert solution(stdin=\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, \"Incorrect output: expected {} but got {}\".format(expected_output, solution(input_str))"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 0 1 0 0\\n4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test cases are not matching. Expected: {output_data}, Received: {solution(input_data)}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\"\nassert solution"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 5 1 7 4\n''') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\n\nassert solution('''\n2\n1 2\n''') == '0\\n2\\n11\\n11'\n\nassert solution('''\n3\n1 1 1\n''') == '1\\n0\\n11\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n\nassert solution() == \"0\"\n\nassert solution() == \"11111\"\n\nassert solution() == \"11000\"\n\nassert solution() == \"11111\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n4 5 1 7 4\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'\nassert solution('2\\n1 2\\n\\n0\\n2\\n11\\n11\\n') == '0\\n2\\n11\\n11\\n'\nassert solution('3\\n1 1 1\\n\\n1\\n0\\n') == '1\\n0\\n'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\\n\\n0\\n2\\n11\\n11\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\\n\\n1\\n0\\n\") == \"1\\n0\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\nn = int(input())\nfriends_ratings = [int(x) for x in input().split()]\n\nR = 0\nmatches = int(input())\n\nfor _ in range(matches):\n    t = input()\n    R_temp = 0\n    \n    for i, friend_rating in enumerate(friends_ratings):\n        if t[i] == '0':\n            R_temp += friend_rating\n        else:\n            R_temp -= friend_rating\n        \n        if R_temp < 0:\n            R_temp = 0\n            R += 1\n    \n    print(R_temp)\n\nR = max(R, sum(friends_ratings))\nprint(R)"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1\\n'\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\"\"\"\n) == \"1\\n\"\n\nprint(\"All tests pass\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    }
]